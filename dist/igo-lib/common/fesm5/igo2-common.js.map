{"version":3,"file":"igo2-common.js.map","sources":["ng://@igo2/common/lib/entity/shared/entity.enums.ts","ng://@igo2/common/lib/entity/shared/entity.utils.ts","ng://@igo2/common/lib/entity/shared/state.ts","ng://@igo2/common/lib/entity/shared/view.ts","ng://@igo2/common/lib/entity/shared/store.ts","ng://@igo2/common/lib/entity/shared/watcher.ts","ng://@igo2/common/lib/entity/shared/transaction.ts","ng://@igo2/common/lib/entity/entity-selector/entity-selector.component.ts","ng://@igo2/common/lib/entity/entity-table/entity-table.component.ts","ng://@igo2/common/lib/action/shared/action.enums.ts","ng://@igo2/common/lib/action/shared/store.ts","ng://@igo2/common/lib/action/actionbar/actionbar.component.ts","ng://@igo2/common/lib/action/actionbar/actionbar-item.component.ts","ng://@igo2/common/lib/action/actionbar/actionbar.module.ts","ng://@igo2/common/lib/action/action.module.ts","ng://@igo2/common/lib/backdrop/backdrop.component.ts","ng://@igo2/common/lib/backdrop/backdrop.module.ts","ng://@igo2/common/lib/clickout/clickout.directive.ts","ng://@igo2/common/lib/clickout/clickout.module.ts","ng://@igo2/common/lib/clone/clone.pipe.ts","ng://@igo2/common/lib/clone/clone.module.ts","ng://@igo2/common/lib/collapsible/collapse.directive.ts","ng://@igo2/common/lib/collapsible/collapsible.component.ts","ng://@igo2/common/lib/collapsible/collapsible.module.ts","ng://@igo2/common/lib/confirm-dialog/confirm-dialog.component.ts","ng://@igo2/common/lib/confirm-dialog/confirm-dialog.service.ts","ng://@igo2/common/lib/confirm-dialog/confirm-dialog.module.ts","ng://@igo2/common/lib/context-menu/context-menu.directive.ts","ng://@igo2/common/lib/context-menu/context-menu.module.ts","ng://@igo2/common/lib/custom-html/custom-html.component.ts","ng://@igo2/common/lib/custom-html/custom-html.pipe.ts","ng://@igo2/common/lib/custom-html/custom-html.module.ts","ng://@igo2/common/lib/drag-drop/drag-drop.directive.ts","ng://@igo2/common/lib/drag-drop/drag-drop.module.ts","ng://@igo2/common/lib/dynamic-component/shared/dynamic-component.ts","ng://@igo2/common/lib/dynamic-component/shared/dynamic-component.service.ts","ng://@igo2/common/lib/dynamic-component/dynamic-outlet/dynamic-outlet.component.ts","ng://@igo2/common/lib/dynamic-component/dynamic-outlet/dynamic-outlet.module.ts","ng://@igo2/common/lib/dynamic-component/dynamic-component.module.ts","ng://@igo2/common/lib/flexible/flexible.component.ts","ng://@igo2/common/lib/flexible/flexible.module.ts","ng://@igo2/common/lib/form/shared/form.utils.ts","ng://@igo2/common/lib/form/form/form.component.ts","ng://@igo2/common/lib/form/form/form.module.ts","ng://@igo2/common/lib/form/shared/form-field.service.ts","ng://@igo2/common/lib/form/shared/form.service.ts","ng://@igo2/common/lib/form/shared/form-field-component.ts","ng://@igo2/common/lib/form/form-field/form-field.component.ts","ng://@igo2/common/lib/form/form-field/form-field-select.component.ts","ng://@igo2/common/lib/form/form-field/form-field-text.component.ts","ng://@igo2/common/lib/form/form-field/form-field-textarea.component.ts","ng://@igo2/common/lib/form/form-field/form-field.module.ts","ng://@igo2/common/lib/form/form-group/form-group.component.ts","ng://@igo2/common/lib/form/form-group/form-group.module.ts","ng://@igo2/common/lib/form/form.module.ts","ng://@igo2/common/lib/entity/entity-selector/entity-selector.module.ts","ng://@igo2/common/lib/stop-propagation/stop-drop-propagation.directive.ts","ng://@igo2/common/lib/stop-propagation/stop-propagation.directive.ts","ng://@igo2/common/lib/stop-propagation/stop-propagation.module.ts","ng://@igo2/common/lib/entity/entity-table/entity-table-row.directive.ts","ng://@igo2/common/lib/entity/entity-table/entity-table.module.ts","ng://@igo2/common/lib/entity/entity.module.ts","ng://@igo2/common/lib/image/secure-image.pipe.ts","ng://@igo2/common/lib/image/image.module.ts","ng://@igo2/common/lib/keyvalue/keyvalue.pipe.ts","ng://@igo2/common/lib/keyvalue/keyvalue.module.ts","ng://@igo2/common/lib/json-dialog/json-dialog.component.ts","ng://@igo2/common/lib/json-dialog/json-dialog.service.ts","ng://@igo2/common/lib/json-dialog/json-dialog.module.ts","ng://@igo2/common/lib/list/list-item.directive.ts","ng://@igo2/common/lib/list/list.component.ts","ng://@igo2/common/lib/list/list.module.ts","ng://@igo2/common/lib/panel/panel.component.ts","ng://@igo2/common/lib/panel/panel.module.ts","ng://@igo2/common/lib/sidenav/sidenav-shim.directive.ts","ng://@igo2/common/lib/sidenav/sidenav.module.ts","ng://@igo2/common/lib/spinner/spinner.component.ts","ng://@igo2/common/lib/spinner/spinner-activity.directive.ts","ng://@igo2/common/lib/spinner/spinner.module.ts","ng://@igo2/common/lib/table/table-database.ts","ng://@igo2/common/lib/table/table-datasource.ts","ng://@igo2/common/lib/table/table-action-color.enum.ts","ng://@igo2/common/lib/table/table.component.ts","ng://@igo2/common/lib/table/table.module.ts","ng://@igo2/common/lib/tool/shared/tool.service.ts","ng://@igo2/common/lib/tool/shared/toolbox.ts","ng://@igo2/common/lib/tool/toolbox/toolbox.animation.ts","ng://@igo2/common/lib/tool/toolbox/toolbox.component.ts","ng://@igo2/common/lib/tool/toolbox/toolbox.module.ts","ng://@igo2/common/lib/tool/tool.module.ts","ng://@igo2/common/lib/widget/widget-outlet/widget-outlet.component.ts","ng://@igo2/common/lib/widget/widget-outlet/widget-outlet.module.ts","ng://@igo2/common/lib/widget/shared/widget.service.ts","ng://@igo2/common/lib/widget/widget.module.ts","ng://@igo2/common/lib/workspace/shared/store.ts","ng://@igo2/common/lib/workspace/workspace-selector/workspace-selector.component.ts","ng://@igo2/common/lib/workspace/workspace-selector/workspace-selector.module.ts","ng://@igo2/common/lib/workspace/shared/workspace.ts","ng://@igo2/common/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.component.ts","ng://@igo2/common/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.module.ts","ng://@igo2/common/lib/workspace/workspace.module.ts","ng://@igo2/common/lib/tool/shared/tool-component.ts","ng://@igo2/common/lib/widget/shared/widget.ts"],"sourcesContent":["export enum EntityOperationType {\r\n  Insert = 'Insert',\r\n  Update = 'Update',\r\n  Delete = 'Delete'\r\n}\r\n\r\nexport enum EntityTableColumnRenderer {\r\n  Default = 'Default',\r\n  HTML = 'HTML',\r\n  UnsanitizedHTML = 'UnsanitizedHTML',\r\n  Icon = 'Icon',\r\n  ButtonGroup = 'ButtonGroup'\r\n}\r\n\r\nexport enum EntityTableScrollBehavior {\r\n  Auto = 'auto',\r\n  Instant = 'instant',\r\n  Smooth = 'smooth'\r\n}\r\n\r\nexport enum EntityTableSelectionState {\r\n  None = 'None',\r\n  All = 'All',\r\n  Some = 'Some'\r\n}\r\n","import t from 'typy';\r\n\r\nimport { EntityKey } from './entity.interfaces';\r\n\r\n/**\r\n * Get an entity's named property. Nested properties are supported\r\n * with the dotted notation. (i.e 'author.name')\r\n *\r\n * Note: this method is a 'best attempt' at getting an entity's property.\r\n * It fits the most common cases but you might need to explicitely define\r\n * a property getter when using an EntityStore, for example.\r\n * @param entity Entity\r\n * @param property Property name\r\n * @returns Property value\r\n */\r\nexport function getEntityProperty(entity: object, property: string): any {\r\n  return t(entity, property).safeObject;\r\n}\r\n\r\n/**\r\n * Get an entity's id. An entity's id can be one of:\r\n * 'entity.meta.id', 'entity.meta.idProperty' or 'entity.id'.\r\n *\r\n * Note: See the note in the 'getEntityProperty' documentation.\r\n * @param entity Entity\r\n * @returns Entity id\r\n */\r\nexport function getEntityId(entity: object): EntityKey {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.id ? meta.id : getEntityProperty(entity, meta.idProperty || 'id');\r\n}\r\n\r\n/**\r\n * Get an entity's title. An entity's title can be one of:\r\n * 'entity.meta.title', 'entity.meta.titleProperty' or 'entity.title'.\r\n * @param entity Entity\r\n * @returns Entity title\r\n */\r\nexport function getEntityTitle(entity: object): string {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.title ? meta.title : getEntityProperty(entity, meta.titleProperty || 'title');\r\n}\r\n\r\n/**\r\n * Get an entity's HTML title. An entity's HTML title can be one of:\r\n * 'entity.meta.titleHtml', 'entity.meta.titleHtmlProperty' or 'entity.titleHtml'.\r\n * @param entity Entity\r\n * @returns Entity HTML title\r\n */\r\nexport function getEntityTitleHtml(entity: object): string {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.titleHtml ? meta.titleHtml : getEntityProperty(entity, meta.titleHtmlProperty || 'titleHtml');\r\n}\r\n\r\n/**\r\n * Get an entity's icon. An entity's icon can be one of:\r\n * 'entity.meta.icon', 'entity.meta.iconProperty' or 'entity.icon'.\r\n * @param entity Entity\r\n * @returns Entity icon\r\n */\r\nexport function getEntityIcon(entity: object): string {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.icon ? meta.icon : getEntityProperty(entity, meta.iconProperty || 'icon');\r\n}\r\n\r\n/**\r\n * Get an entity's revision.\r\n * @param entity Entity\r\n * @returns Entity revision\r\n */\r\nexport function getEntityRevision(entity: object): number {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.revision || 0;\r\n}\r\n","import { ReplaySubject } from 'rxjs';\r\n\r\nimport { EntityKey, EntityState, EntityStateManagerOptions } from './entity.interfaces';\r\nimport { getEntityId } from './entity.utils';\r\nimport { EntityStore } from './store';\r\n\r\n/**\r\n * This class is used to track a store's entities state\r\n */\r\nexport class EntityStateManager<E extends object, S extends EntityState = EntityState> {\r\n\r\n  /**\r\n   * State index\r\n   */\r\n  readonly index = new Map<EntityKey, S>();\r\n\r\n  /**\r\n   * Change emitter\r\n   */\r\n  readonly change$ = new ReplaySubject<void>(1);\r\n\r\n  /**\r\n   * Method to get an entity's id\r\n   */\r\n  readonly getKey: (E) => EntityKey;\r\n\r\n  private store: EntityStore<object> | undefined;\r\n\r\n  constructor(options: EntityStateManagerOptions = {}) {\r\n    this.store = options.store ? options.store : undefined;\r\n    this.getKey = options.getKey\r\n      ? options.getKey\r\n      : (this.store ? this.store.getKey : getEntityId);\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Clear state\r\n   */\r\n  clear() {\r\n    if (this.index.size > 0) {\r\n      this.index.clear();\r\n      this.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an entity's state\r\n   * @param entity Entity\r\n   * @returns State\r\n   */\r\n  get(entity: E): S {\r\n    return (this.index.get(this.getKey(entity)) || {}) as S;\r\n  }\r\n\r\n  /**\r\n   * Set an entity's state\r\n   * @param entity Entity\r\n   * @param state State\r\n   */\r\n  set(entity: E, state: S) {\r\n    this.setMany([entity], state);\r\n  }\r\n\r\n  /**\r\n   * Set many entitie's state\r\n   * @param entitie Entities\r\n   * @param state State\r\n   */\r\n  setMany(entities: E[], state: S) {\r\n    entities.forEach((entity: E) => {\r\n      this.index.set(this.getKey(entity), Object.assign({}, state));\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Set state of all entities that already have a state. This is not\r\n   * the same as setting the state of all the store's entities.\r\n   * @param state State\r\n   */\r\n  setAll(state: S) {\r\n    Array.from(this.index.keys()).forEach((key: EntityKey) => {\r\n      this.index.set(key, Object.assign({}, state));\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Update an entity's state\r\n   * @param entity Entity\r\n   * @param changes State changes\r\n   */\r\n  update(entity: E, changes: Partial<S>, exclusive = false) {\r\n    this.updateMany([entity], changes, exclusive);\r\n  }\r\n\r\n  /**\r\n   * Update many entitie's state\r\n   * @param entitie Entities\r\n   * @param changes State changes\r\n   */\r\n  updateMany(entities: E[], changes: Partial<S>, exclusive = false) {\r\n    if (exclusive === true) {\r\n      return this.updateManyExclusive(entities, changes);\r\n    }\r\n\r\n    entities.forEach((entity: E) => {\r\n      const state = Object.assign({}, this.get(entity), changes);\r\n      this.index.set(this.getKey(entity), state);\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Reversee an entity's state\r\n   * @param entity Entity\r\n   * @param keys State keys to reverse\r\n   */\r\n  reverse(entity: E, keys: string[]) {\r\n    this.reverseMany([entity], keys);\r\n  }\r\n\r\n  /**\r\n   * Reverse many entitie's state\r\n   * @param entitie Entities\r\n   * @param keys State keys to reverse\r\n   */\r\n  reverseMany(entities: E[], keys: string[]) {\r\n    entities.forEach((entity: E) => {\r\n      const currentState = this.get(entity);\r\n      const changes = keys.reduce((acc: {[key: string]: boolean}, key: string) => {\r\n        acc[key] = currentState[key] || false;\r\n        return acc;\r\n      }, {});\r\n      const reversedChanges = this.reverseChanges(changes);\r\n      const state = Object.assign({}, currentState, reversedChanges);\r\n      this.index.set(this.getKey(entity), state);\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Update state of all entities that already have a state. This is not\r\n   * the same as updating the state of all the store's entities.\r\n   * @param changes State\r\n   */\r\n  updateAll(changes: Partial<S>) {\r\n    const allKeys = this.getAllKeys();\r\n    Array.from(allKeys).forEach((key: EntityKey) => {\r\n      const state = Object.assign({}, this.index.get(key), changes);\r\n      this.index.set(key, state);\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * When some state changes are flagged as 'exclusive', reverse\r\n   * the state of all other entities. Changes are reversable when\r\n   * they are boolean.\r\n   * @param entitie Entities\r\n   * @param changes State changes\r\n   */\r\n  private updateManyExclusive(entities: E[], changes: Partial<S>) {\r\n    const reverseChanges = this.reverseChanges(changes);\r\n\r\n    const keys = entities.map((entity: E) => this.getKey(entity));\r\n    const allKeys = new Set(keys.concat(Array.from(this.getAllKeys())));\r\n    allKeys.forEach((key: EntityKey) => {\r\n      const state = this.index.get(key) || {} as S;\r\n      if (keys.indexOf(key) >= 0) {\r\n        this.index.set(key, Object.assign({}, state, changes));\r\n      } else {\r\n        this.index.set(key, Object.assign({}, state, reverseChanges));\r\n      }\r\n    });\r\n\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Compute a 'reversed' version of some state changes.\r\n   * Changes are reversable when they are boolean.\r\n   * @param changes State changes\r\n   * @returns Reversed state changes\r\n   */\r\n  private reverseChanges(changes: Partial<S>): Partial<S> {\r\n    return Object.entries(changes).reduce((reverseChanges: Partial<S>, bunch: [string, any]) => {\r\n      const [changeKey, value] = bunch;\r\n      if (typeof value === typeof true) {\r\n        reverseChanges[changeKey] = !value;\r\n      }\r\n      return reverseChanges;\r\n    }, {});\r\n  }\r\n\r\n  /**\r\n   * Return all the keys in that state and in the store it's bound to, if any.\r\n   * @returns Set of keys\r\n   */\r\n  private getAllKeys(): Set<EntityKey> {\r\n    const storeKeys = this.store ? Array.from(this.store.index.keys()) : [];\r\n    return new Set(Array.from(this.index.keys()).concat(storeKeys));\r\n  }\r\n\r\n  /**\r\n   * Emit 'change' event\r\n   */\r\n  private next() {\r\n    this.change$.next();\r\n  }\r\n\r\n}\r\n","import { BehaviorSubject, Observable, Subscription, combineLatest } from 'rxjs';\r\nimport { debounceTime, map, skip } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport {\r\n  EntityFilterClause,\r\n  EntitySortClause,\r\n  EntityJoinClause\r\n} from './entity.interfaces';\r\n\r\n/**\r\n * An entity view streams entities from an observable source. These entities\r\n * can be filtered or sorted without affecting the source. A view can also\r\n * combine data from multiple sources, joined together.\r\n */\r\nexport class EntityView<E extends object, V extends object = E> {\r\n\r\n  /**\r\n   * Observable stream of values\r\n   */\r\n  readonly values$ = new BehaviorSubject<V[]>([]);\r\n\r\n  /**\r\n   * Whether this view has been lifted\r\n   */\r\n  private lifted = false;\r\n\r\n  /**\r\n   * Join clauses\r\n   */\r\n  private joins: EntityJoinClause[] = [];\r\n\r\n  /**\r\n   * Observable of a filter clause\r\n   */\r\n  private filter$ = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Observable of a sort clause\r\n   */\r\n  private sort$ = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Subscription to the source (and joined sources) values\r\n   */\r\n  private values$$: Subscription;\r\n\r\n  /**\r\n   * Number of entities\r\n   */\r\n  readonly count$ = new BehaviorSubject<number>(0);\r\n  get count(): number { return this.count$.value; }\r\n\r\n  /**\r\n   * Whether the store is empty\r\n   */\r\n  readonly empty$ = new BehaviorSubject<boolean>(true);\r\n  get empty(): boolean { return this.empty$.value; }\r\n\r\n  constructor(private source$: BehaviorSubject<E[]>) {}\r\n\r\n  /**\r\n   * Get all the values\r\n   * @returns Array of values\r\n   */\r\n  all(): V[] {\r\n    return this.values$.value;\r\n  }\r\n\r\n  /**\r\n   * Observe all the values\r\n   * @returns Observable of values\r\n   */\r\n  all$(): BehaviorSubject<V[]> {\r\n    return this.values$;\r\n  }\r\n\r\n  /**\r\n   * Get the first value that respects a criteria\r\n   * @returns A value\r\n   */\r\n  firstBy(clause: EntityFilterClause<V>): V {\r\n    return this.values$.value.find(clause);\r\n  }\r\n\r\n  /**\r\n   * Observe the first value that respects a criteria\r\n   * @returns Observable of a value\r\n   */\r\n  firstBy$(clause: EntityFilterClause<V>): Observable<V> {\r\n    return this.values$.pipe(map((values: V[]) => values.find(clause)));\r\n  }\r\n\r\n  /**\r\n   * Get all the values that respect a criteria\r\n   * @returns Array of values\r\n   */\r\n  manyBy(clause: EntityFilterClause<V>): V[] {\r\n    return this.values$.value.filter(clause);\r\n  }\r\n\r\n  /**\r\n   * Observe all the values that respect a criteria\r\n   * @returns Observable of values\r\n   */\r\n  manyBy$(clause: EntityFilterClause<V>): Observable<V[]> {\r\n    return this.values$.pipe(map((values: V[]) => values.filter(clause)));\r\n  }\r\n\r\n  /**\r\n   * Clear the filter and sort and unsubscribe from the source\r\n   */\r\n  clear() {\r\n    this.filter(undefined);\r\n    this.sort(undefined);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.values$$ !== undefined) {\r\n      this.values$$.unsubscribe();\r\n    }\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * Join another source to the stream (chainable)\r\n   * @param clause Join clause\r\n   * @returns The view\r\n   */\r\n  join(clause: EntityJoinClause): EntityView<E, V> {\r\n    if (this.lifted === true) {\r\n      throw new Error('This view has already been lifted, therefore, no join is allowed.');\r\n    }\r\n    this.joins.push(clause);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Filter values (chainable)\r\n   * @param clause Filter clause\r\n   * @returns The view\r\n   */\r\n  filter(clause: EntityFilterClause<V>): EntityView<E, V> {\r\n    this.filter$.next(clause);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sort values (chainable)\r\n   * @param clauseSort clause\r\n   * @returns The view\r\n   */\r\n  sort(clause: EntitySortClause<V>): EntityView<E, V> {\r\n    this.sort$.next(clause);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create the final observable\r\n   * @returns Observable\r\n   */\r\n  lift() {\r\n    this.lifted = true;\r\n    const source$ = this.joins.length > 0 ? this.liftJoinedSource() : this.liftSource();\r\n    this.values$$ = combineLatest(source$, this.filter$, this.sort$)\r\n      .pipe(skip(1), debounceTime(25))\r\n      .subscribe((bunch: [V[], EntityFilterClause, EntitySortClause]) => {\r\n        const [_values, filter, sort] = bunch;\r\n        const values = this.processValues(_values, filter, sort);\r\n        this.setValues(values);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Create the source observable when no joins are defined\r\n   * @returns Observable\r\n   */\r\n  private liftSource(): Observable<V[]> {\r\n    return this.source$ as any as Observable<V[]>;\r\n  }\r\n\r\n  /**\r\n   * Create the source observable when joins are defined\r\n   * @returns Observable\r\n   */\r\n  private liftJoinedSource(): Observable<V[]> {\r\n    const sources$ = [this.source$, combineLatest(\r\n      ...this.joins.map((join: EntityJoinClause) => join.source)\r\n    )];\r\n\r\n    return combineLatest(...sources$)\r\n      .pipe(\r\n        map((bunch: [E[], any[]]) => {\r\n          const [entities, joinData] = bunch;\r\n          return entities.reduce((values: V[], entity: E) => {\r\n            const value = this.computeJoinedValue(entity, joinData);\r\n            if (value !== undefined) {\r\n              values.push(value);\r\n            }\r\n            return values;\r\n          }, []);\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Apply joins to a source's entity and return the final value\r\n   * @returns Final value\r\n   */\r\n  private computeJoinedValue(entity: E, joinData: any[]): V | undefined {\r\n    let value = entity as Partial<V>;\r\n    let joinIndex = 0;\r\n    while (value !== undefined && joinIndex < this.joins.length) {\r\n      value = this.joins[joinIndex].reduce(value, joinData[joinIndex]);\r\n      joinIndex += 1;\r\n    }\r\n    return value as V;\r\n  }\r\n\r\n  /**\r\n   * Filter and sort values before streaming them\r\n   * @param values Values\r\n   * @param filter Filter clause\r\n   * @param sort Sort clause\r\n   * @returns Filtered and sorted values\r\n   */\r\n  private processValues(values: V[], filter: EntityFilterClause, sort: EntitySortClause): V[] {\r\n    values = values.slice(0);\r\n    values = this.filterValues(values, filter);\r\n    values = this.sortValues(values, sort);\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Filter values\r\n   * @param values Values\r\n   * @param filter Filter clause\r\n   * @returns Filtered values\r\n   */\r\n  private filterValues(values: V[], clause: EntityFilterClause): V[] {\r\n    if (clause === undefined) { return values; }\r\n    return values.filter((value: V) => clause(value));\r\n  }\r\n\r\n  /**\r\n   * Sort values\r\n   * @param values Values\r\n   * @param sort Sort clause\r\n   * @returns Sorted values\r\n   */\r\n  private sortValues(values: V[], clause: EntitySortClause): V[] {\r\n    if (clause === undefined) { return values; }\r\n    return values.sort((v1: V, v2: V) => {\r\n      return ObjectUtils.naturalCompare(\r\n        clause.valueAccessor(v1),\r\n        clause.valueAccessor(v2),\r\n        clause.direction\r\n      );\r\n    });\r\n  }\r\n\r\n  private setValues(values: V[]) {\r\n    this.values$.next(values);\r\n    const count = values.length;\r\n    const empty = count === 0;\r\n    this.count$.next(count);\r\n    this.empty$.next(empty);\r\n  }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nimport { EntityStateManager } from './state';\r\nimport { EntityView } from './view';\r\nimport { EntityKey, EntityState, EntityRecord, EntityStoreOptions } from './entity.interfaces';\r\nimport { getEntityId, getEntityProperty } from './entity.utils';\r\n\r\n/**\r\n * An entity store class holds any number of entities\r\n * as well as their state. It can be observed, filtered and sorted and\r\n * provides methods to insert, update or delete entities.\r\n */\r\nexport class EntityStore<E extends object, S extends EntityState = EntityState> {\r\n\r\n  /**\r\n   * Observable of the raw entities\r\n   */\r\n  readonly entities$ = new BehaviorSubject<E[]>([]);\r\n\r\n  /**\r\n   * Number of entities\r\n   */\r\n  readonly count$ = new BehaviorSubject<number>(0);\r\n  get count(): number { return this.count$.value; }\r\n\r\n  /**\r\n   * Whether the store is empty\r\n   */\r\n  readonly empty$ = new BehaviorSubject<boolean>(true);\r\n  get empty(): boolean { return this.empty$.value; }\r\n\r\n  /**\r\n   * Entity store state\r\n   */\r\n  readonly state: EntityStateManager<E, S>;\r\n\r\n  /**\r\n   * View of all the entities\r\n   */\r\n  readonly view: EntityView<E>;\r\n\r\n  /**\r\n   * View of all the entities and their state\r\n   */\r\n  readonly stateView: EntityView<E, EntityRecord<E, S>>;\r\n\r\n  /**\r\n   * Method to get an entity's id\r\n   */\r\n  readonly getKey: (E) => EntityKey;\r\n\r\n  /**\r\n   * Method to get an entity's named property\r\n   */\r\n  readonly getProperty: (E, prop: string) => any;\r\n\r\n  /**\r\n   * Store index\r\n   */\r\n  get index(): Map<EntityKey, E> { return this._index; }\r\n  private _index: Map<EntityKey, E>;\r\n\r\n  /**\r\n   * Store index\r\n   */\r\n  get pristine(): boolean { return this._pristine; }\r\n  private _pristine: boolean = true;\r\n\r\n  constructor(entities: E[], options: EntityStoreOptions = {}) {\r\n    this.getKey = options.getKey ? options.getKey : getEntityId;\r\n    this.getProperty = options.getProperty ? options.getProperty : getEntityProperty;\r\n\r\n    this.state = new EntityStateManager<E, S>({store: this});\r\n    this.view = new EntityView<E>(this.entities$);\r\n    this.stateView = new EntityView<E, EntityRecord<E, S>>(this.view.all$()).join({\r\n      source: this.state.change$,\r\n      reduce: (entity: E): EntityRecord<E, S> => {\r\n        return {entity, state: this.state.get(entity)};\r\n      }\r\n    });\r\n\r\n    this.view.lift();\r\n    this.stateView.lift();\r\n\r\n    if (entities.length > 0) {\r\n      this.load(entities);\r\n    } else {\r\n      this._index = this.generateIndex(entities);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an entity from the store by key\r\n   * @param key Key\r\n   * @returns Entity\r\n   */\r\n  get(key: EntityKey): E {\r\n    return this.index.get(key);\r\n  }\r\n\r\n  /**\r\n   * Get all entities in the store\r\n   * @returns Array of entities\r\n   */\r\n  all(): E[] {\r\n    return this.entities$.value;\r\n  }\r\n\r\n  /**\r\n   * Set this store's entities\r\n   * @param entities Entities\r\n   */\r\n  load(entities: E[], pristine: boolean = true) {\r\n    this._index = this.generateIndex(entities);\r\n    this._pristine = pristine;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Clear the store's entities but keep the state and views intact.\r\n   * Views won't return any data but future data will be subject to the\r\n   * current views filter and sort\r\n   */\r\n  softClear() {\r\n    if (this.index && this.index.size > 0) {\r\n      this.index.clear();\r\n      this._pristine = true;\r\n      this.next();\r\n    } else if (this.index) {\r\n      this.updateCount();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the store's entities, state and views\r\n   */\r\n  clear() {\r\n    this.stateView.clear();\r\n    this.view.clear();\r\n    this.state.clear();\r\n    this.softClear();\r\n  }\r\n\r\n  destroy() {\r\n    this.stateView.destroy();\r\n    this.view.destroy();\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * Insert an entity into the store\r\n   * @param entity Entity\r\n   */\r\n  insert(entity: E) {\r\n    this.insertMany([entity]);\r\n  }\r\n\r\n  /**\r\n   * Insert many entities into the store\r\n   * @param entities Entities\r\n   */\r\n  insertMany(entities: E[]) {\r\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\r\n    this._pristine = false;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Update or insert an entity into the store\r\n   * @param entity Entity\r\n   */\r\n  update(entity: E) {\r\n    this.updateMany([entity]);\r\n  }\r\n\r\n  /**\r\n   * Update or insert many entities into the store\r\n   * @param entities Entities\r\n   */\r\n  updateMany(entities: E[]) {\r\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\r\n    this._pristine = false;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Delete an entity from the store\r\n   * @param entity Entity\r\n   */\r\n  delete(entity: E) {\r\n    this.deleteMany([entity]);\r\n  }\r\n\r\n  /**\r\n   * Delete many entities from the store\r\n   * @param entities Entities\r\n   */\r\n  deleteMany(entities: E[]) {\r\n    entities.forEach((entity: E) => this.index.delete(this.getKey(entity)));\r\n    this._pristine = false;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Generate a complete index of all the entities\r\n   * @param entities Entities\r\n   * @returns Index\r\n   */\r\n  private generateIndex(entities: E[]): Map<EntityKey, E> {\r\n    const entries = entities.map((entity: E) => [this.getKey(entity), entity]);\r\n    return new Map(entries as [EntityKey, E][]);\r\n  }\r\n\r\n  /**\r\n   * Push the index's entities into the entities$ observable\r\n   */\r\n  private next() {\r\n    this.entities$.next(Array.from(this.index.values()));\r\n    this.updateCount();\r\n  }\r\n\r\n  /**\r\n   * Update the store's count and empty\r\n   */\r\n  private updateCount() {\r\n    const count = this.index.size;\r\n    const empty = count === 0;\r\n    this.count$.next(count);\r\n    this.empty$.next(empty);\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { skip } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { EntityKey } from './entity.interfaces';\r\n\r\nimport { EntityStore } from './store';\r\n\r\n/**\r\n * This class is used to synchronize a component's changes\r\n * detection with an EntityStore changes. For example, it is frequent\r\n * to have a component subscribe to a store's selected entity and, at the same time,\r\n * this component provides a way to select an entity with, let's say, a click.\r\n *\r\n * This class automatically handles those case and triggers the compoent's\r\n * change detection when needed.\r\n *\r\n * Note: If the component observes the store's stateView, a workspace is\r\n * probably not required because the stateView catches any changes to the\r\n * entities and their state.\r\n */\r\nexport class EntityStoreWatcher<E extends object> {\r\n\r\n  /**\r\n   * Component change detector\r\n   */\r\n  private cdRef: ChangeDetectorRef;\r\n\r\n  /**\r\n   * Entity store\r\n   */\r\n  private store: EntityStore<E>;\r\n\r\n  /**\r\n   * Component inner state\r\n   */\r\n  private innerStateIndex = new Map<EntityKey, {[key: string]: any}>();\r\n\r\n  /**\r\n   * Subscription to the store's entities\r\n   */\r\n  private entities$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to the store's state\r\n   */\r\n  private state$$: Subscription;\r\n\r\n  constructor(store?: EntityStore<E>, cdRef?: ChangeDetectorRef) {\r\n    this.setChangeDetector(cdRef);\r\n    this.setStore(store);\r\n  }\r\n\r\n  destroy() {\r\n    this.setChangeDetector(undefined);\r\n    this.setStore(undefined);\r\n  }\r\n\r\n  /**\r\n   * Bind this workspace to a store and start watching for changes\r\n   * @param store Entity store\r\n   */\r\n  setStore(store?: EntityStore<E>) {\r\n    if (store === undefined) {\r\n      this.teardownObservers();\r\n      this.innerStateIndex.clear();\r\n      this.store = undefined;\r\n      return;\r\n    }\r\n\r\n    this.setStore(undefined);\r\n    this.store = store;\r\n    this.setupObservers();\r\n    this.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Bind this workspace to a component's change detector\r\n   * @param cdRef Change detector\r\n   */\r\n  setChangeDetector(cdRef?: ChangeDetectorRef) {\r\n    this.cdRef = cdRef;\r\n  }\r\n\r\n  /**\r\n   * Set up observers on a store's entities and their state\r\n   * @param store Entity store\r\n   */\r\n  private setupObservers() {\r\n    this.teardownObservers();\r\n\r\n    this.entities$$ = this.store.entities$\r\n      .subscribe((entities: E[]) => this.onEntitiesChange(entities));\r\n\r\n    this.state$$ = this.store.state.change$\r\n      .pipe(skip(1))\r\n      .subscribe(() => this.onStateChange());\r\n  }\r\n\r\n  /**\r\n   * Teardown store observers\r\n   */\r\n  private teardownObservers() {\r\n    if (this.entities$$ !== undefined) {\r\n      this.entities$$.unsubscribe();\r\n    }\r\n    if (this.state$$ !== undefined) {\r\n      this.state$$.unsubscribe();\r\n    }\r\n    this.entities$$ = undefined;\r\n    this.state$$ = undefined;\r\n  }\r\n\r\n  /**\r\n   * When the entities change, always trigger the changes detection\r\n   */\r\n  private onEntitiesChange(entities: E[]) {\r\n    this.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * When the entities state change, trigger the change detection\r\n   * only if the component has not handled these changes yet. For example,\r\n   * the component might have initiated thoses changes itself.\r\n   */\r\n  private onStateChange() {\r\n    let changesDetected = false;\r\n    const storeIndex = this.store.state.index;\r\n    const innerIndex = this.innerStateIndex;\r\n\r\n    if (storeIndex.size !== innerIndex.size) {\r\n      changesDetected = this.detectChanges();\r\n    }\r\n\r\n    const storeKeys = Array.from(storeIndex.keys());\r\n    for (const key of storeKeys) {\r\n      const storeValue = storeIndex.get(key);\r\n      const innerValue = innerIndex.get(key);\r\n      if (changesDetected === false) {\r\n        if (innerValue === undefined) {\r\n          changesDetected = this.detectChanges();\r\n        } else if (!ObjectUtils.objectsAreEquivalent(storeValue, innerValue)) {\r\n          changesDetected = this.detectChanges();\r\n        }\r\n      }\r\n\r\n      this.innerStateIndex.set(key, Object.assign({}, storeValue));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger the change detection of the workspace is bound to a change detector\r\n   */\r\n  private detectChanges() {\r\n    if (this.cdRef !== undefined) {\r\n      this.cdRef.detectChanges();\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport {\r\n  EntityKey,\r\n  EntityTransactionOptions,\r\n  EntityOperation,\r\n  EntityOperationState\r\n} from './entity.interfaces';\r\nimport { EntityStore } from './store';\r\nimport { EntityOperationType } from './entity.enums';\r\nimport { getEntityId } from './entity.utils';\r\n\r\nexport type EntityTransactionCommitHandler = (\r\n  transaction: EntityTransaction,\r\n  operations: EntityOperation[]\r\n) => Observable<any>;\r\n\r\n/**\r\n * This class holds a reference to the insert, update and delete\r\n * operations performed on a store. This is useful to commit\r\n * these operations in a single pass or to cancel them.\r\n */\r\nexport class EntityTransaction {\r\n\r\n  /**\r\n   * Store holding the operations on another store\r\n   */\r\n  readonly operations: EntityStore<EntityOperation, EntityOperationState>;\r\n\r\n  /**\r\n   * Method to get an entity's id\r\n   */\r\n  readonly getKey: (E) => EntityKey;\r\n\r\n  /**\r\n   * Whether there are pending operations\r\n   */\r\n  get empty(): boolean { return this.operations.entities$.value.length === 0; }\r\n\r\n  /**\r\n   * Whether thise store is in commit phase\r\n   */\r\n  get inCommitPhase(): boolean { return this._inCommitPhase; }\r\n  private _inCommitPhase = false;\r\n\r\n  constructor(options: EntityTransactionOptions = {}) {\r\n    this.getKey = options.getKey ? options.getKey : getEntityId;\r\n    this.operations = new EntityStore<EntityOperation, EntityOperationState>([], {\r\n      getKey: (operation: EntityOperation) => operation.key\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.operations.destroy();\r\n  }\r\n\r\n  /**\r\n   * Insert an entity into a store. If no store is specified, an insert\r\n   * operation is still created but the transaction won't add the new\r\n   * entity to the store.\r\n   * @param current The entity to insert\r\n   * @param store Optional: The store to insert the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  insert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    const existingOperation = this.getOperationByEntity(current);\r\n    if (existingOperation !== undefined) {\r\n      this.removeOperation(existingOperation);\r\n    }\r\n\r\n    this.doInsert(current, store, meta);\r\n  }\r\n\r\n  /**\r\n   * Update an entity in a store. If no store is specified, an update\r\n   * operation is still created but the transaction won't update the\r\n   * entity into the store.\r\n   * @param previous The entity before update\r\n   * @param current The entity after update\r\n   * @param store Optional: The store to update the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  update(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    const existingOperation = this.getOperationByEntity(current);\r\n    if (existingOperation !== undefined) {\r\n      this.removeOperation(existingOperation);\r\n      if (existingOperation.type === EntityOperationType.Insert) {\r\n        this.doInsert(current, store, meta);\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.doUpdate(previous, current, store, meta);\r\n  }\r\n\r\n  /**\r\n   * Delete an entity from a store. If no store is specified, a delete\r\n   * operation is still created but the transaction won't remove the\r\n   * entity from the store.\r\n   * @param previous The entity before delete\r\n   * @param store Optional: The store to delete the entity from\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  delete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    const existingOperation = this.getOperationByEntity(previous);\r\n    if (existingOperation !== undefined) {\r\n      this.removeOperation(existingOperation);\r\n      if (existingOperation.type === EntityOperationType.Insert) {\r\n        if (store !== undefined) {\r\n          store.delete(previous);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.doDelete(previous, store, meta);\r\n  }\r\n\r\n  /**\r\n   * Commit operations the transaction. This method doesn't do much\r\n   * in itself. The handler it receives does the hard work and it's\r\n   * implementation is left to the caller. This method simply wraps\r\n   * the handler into an error catching mechanism to update\r\n   * the transaction afterward. The caller needs to subscribe to this\r\n   * method's output (observable) for the commit to be performed.\r\n   * @param operations Operations to commit\r\n   * @param handler Function that handles the commit operation\r\n   * @returns The handler output (observable)\r\n   */\r\n  commit(operations: EntityOperation[], handler: EntityTransactionCommitHandler): Observable<any> {\r\n    this._inCommitPhase = true;\r\n\r\n    return handler(this, operations)\r\n      .pipe(\r\n        catchError(() => of(new Error())),\r\n        tap((result: any) => {\r\n          if (result instanceof Error) {\r\n            this.onCommitError(operations);\r\n          } else {\r\n            this.onCommitSuccess(operations);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Commit all the operations of the transaction.\r\n   * @param handler Function that handles the commit operation\r\n   * @returns The handler output (observable)\r\n   */\r\n  commitAll(handler: EntityTransactionCommitHandler): Observable<any> {\r\n    const operations = this.getOperationsInCommit();\r\n    return this.commit(operations, handler);\r\n  }\r\n\r\n  /**\r\n   * Rollback this transaction\r\n   */\r\n  rollback() {\r\n    this.rollbackOperations(this.operations.all());\r\n  }\r\n\r\n  /**\r\n   * Rollback specific operations\r\n   */\r\n  rollbackOperations(operations: EntityOperation[]) {\r\n    this.checkInCommitPhase();\r\n\r\n    const operationsFactory = () => new Map([\r\n      [EntityOperationType.Delete, []],\r\n      [EntityOperationType.Update, []],\r\n      [EntityOperationType.Insert, []]\r\n    ]);\r\n    const storesOperations = new Map();\r\n\r\n    // Group operations by store and by operation type.\r\n    // Grouping operations allows us to revert them in bacth, thus, triggering\r\n    // observables only one per operation type.\r\n    for (const operation of operations) {\r\n      const store = operation.store;\r\n      if (operation.store === undefined) { continue; }\r\n\r\n      let storeOperations = storesOperations.get(store);\r\n      if (storeOperations === undefined) {\r\n        storeOperations = operationsFactory();\r\n        storesOperations.set(store, storeOperations);\r\n      }\r\n      storeOperations.get(operation.type).push(operation);\r\n    }\r\n\r\n    Array.from(storesOperations.keys()).forEach((store: EntityStore<object>) => {\r\n      const storeOperations = storesOperations.get(store);\r\n\r\n      const deletes = storeOperations.get(EntityOperationType.Delete);\r\n      store.insertMany(deletes.map((_delete: EntityOperation) => _delete.previous));\r\n\r\n      const updates = storeOperations.get(EntityOperationType.Update);\r\n      store.updateMany(updates.map((_update: EntityOperation) => _update.previous));\r\n\r\n      const inserts = storeOperations.get(EntityOperationType.Insert);\r\n      store.deleteMany(inserts.map((_insert: EntityOperation) => _insert.current));\r\n    });\r\n\r\n    this.operations.deleteMany(operations);\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * Clear this transaction\r\n   * @todo Raise event and synchronize stores?\r\n   */\r\n  clear() {\r\n    this.operations.clear();\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * Merge another transaction in this one\r\n   * @param transaction Another transaction\r\n   */\r\n  mergeTransaction(transaction: EntityTransaction) {\r\n    this.checkInCommitPhase();\r\n\r\n    const operations = transaction.operations.all();\r\n    operations.forEach((operation: EntityOperation) => {\r\n      this.addOperation(operation);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create an insert operation and add an entity to the store\r\n   * @param current The entity to insert\r\n   * @param store Optional: The store to insert the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  private doInsert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    this.addOperation({\r\n      key: this.getKey(current),\r\n      type: EntityOperationType.Insert,\r\n      previous: undefined,\r\n      current,\r\n      store,\r\n      meta\r\n    });\r\n\r\n    if (store !== undefined) {\r\n      store.insert(current);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an update operation and update an entity into the store\r\n   * @param previous The entity before update\r\n   * @param current The entity after update\r\n   * @param store Optional: The store to update the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  private doUpdate(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    this.addOperation({\r\n      key: this.getKey(current),\r\n      type: EntityOperationType.Update,\r\n      previous,\r\n      current,\r\n      store,\r\n      meta\r\n    });\r\n\r\n    if (store !== undefined) {\r\n      store.update(current);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a delete operation and delete an entity from the store\r\n   * @param previous The entity before delete\r\n   * @param store Optional: The store to delete the entity from\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  private doDelete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    this.addOperation({\r\n      key: this.getKey(previous),\r\n      type: EntityOperationType.Delete,\r\n      previous,\r\n      current: undefined,\r\n      store,\r\n      meta\r\n    });\r\n\r\n    if (store !== undefined) {\r\n      store.delete(previous);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove committed operations from store\r\n   * @param operations Commited operations\r\n   * @todo Raise event and synchronize stores?\r\n   */\r\n  private resolveOperations(operations: EntityOperation[]) {\r\n    this.operations.deleteMany(operations);\r\n  }\r\n\r\n  /**\r\n   * On commit success, resolve commited operations and exit commit phase\r\n   * @param operations Commited operations\r\n   */\r\n  private onCommitSuccess(operations: EntityOperation[]) {\r\n    this.resolveOperations(operations);\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * On commit error, abort transaction\r\n   * @param operations Commited operations\r\n   */\r\n  private onCommitError(operations: EntityOperation[]) {\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * Add an operation to the operations store\r\n   * @param operation Operation to add\r\n   */\r\n  private addOperation(operation: EntityOperation) {\r\n    this.checkInCommitPhase();\r\n\r\n    this.operations.insert(operation);\r\n    this.operations.state.update(operation, {added: true});\r\n  }\r\n\r\n  /**\r\n   * Remove an operation from the operations store\r\n   * @param operation Operation to remove\r\n   */\r\n  private removeOperation(operation: EntityOperation) {\r\n    this.checkInCommitPhase();\r\n\r\n    this.operations.delete(operation);\r\n    this.operations.state.update(operation, {added: false});\r\n  }\r\n\r\n  /**\r\n   * Get the any existing operation an entity\r\n   * @param entity Entity\r\n   * @returns Either an insert, update or delete operation\r\n   */\r\n  private getOperationByEntity(entity: object): EntityOperation {\r\n    return this.operations.get(this.getKey(entity));\r\n  }\r\n\r\n  /**\r\n   * Get all the operations to commit\r\n   * @returns Operations to commit\r\n   */\r\n  private getOperationsInCommit(): EntityOperation[] {\r\n    return this.operations.stateView\r\n      .manyBy((value: {entity: EntityOperation, state: EntityOperationState}) => {\r\n        return value.state.added === true;\r\n      })\r\n      .map((value: {entity: EntityOperation, state: EntityOperationState}) => value.entity);\r\n  }\r\n\r\n  /**\r\n   * Check if the transaction is in the commit phase and throw an error if it is\r\n   */\r\n  private checkInCommitPhase() {\r\n    if (this.inCommitPhase === true) {\r\n      throw new Error('This transaction is in the commit phase. Cannot complete this operation.');\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport { EntityRecord } from '../shared/entity.interfaces';\r\nimport { EntityStore } from '../shared/store';\r\nimport { EntityStoreWatcher } from '../shared/watcher';\r\nimport { getEntityTitle } from '../shared/entity.utils';\r\n\r\n@Component({\r\n  selector: 'igo-entity-selector',\r\n  templateUrl: './entity-selector.component.html',\r\n  styleUrls: ['./entity-selector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntitySelectorComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * The selected entity\r\n   * @internal\r\n   */\r\n  selected$ = new BehaviorSubject<object>(undefined);\r\n\r\n  /**\r\n   * The current multi select option text\r\n   * @internal\r\n   */\r\n  multiText$ = new BehaviorSubject<string>(undefined);\r\n\r\n  readonly multiSelectValue = {id: 'IGO_MULTI_SELECT'};\r\n\r\n  /**\r\n   * Subscription to the selected entity\r\n   */\r\n  private selected$$: Subscription;\r\n\r\n  /**\r\n   * Store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<object>;\r\n\r\n  /**\r\n   * Entity store\r\n   */\r\n  @Input() store: EntityStore<object>;\r\n\r\n  /**\r\n   * Title accessor\r\n   */\r\n  @Input() titleAccessor: (object) => string = getEntityTitle;\r\n\r\n  /**\r\n   * Text to display when nothing is selected\r\n   */\r\n  @Input() emptyText: string = undefined;\r\n\r\n  /**\r\n   * Wheter selecting many entities is allowed\r\n   */\r\n  @Input() multi: boolean = false;\r\n\r\n  /**\r\n   * Text to display for the select all option\r\n   */\r\n  @Input() multiAllText: string = 'All';\r\n\r\n  /**\r\n   * Text to display for the select none option\r\n   */\r\n  @Input() multiNoneText: string = 'None';\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Event emitted when the selection changes\r\n   */\r\n  @Output() selectedChange = new EventEmitter<{\r\n    selected: boolean;\r\n    value: object | object[];\r\n  }>();\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Create a store watcher and subscribe to the selected entity\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n\r\n    this.selected$$ = this.store.stateView\r\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\r\n      .subscribe((records: EntityRecord<object>[]) => {\r\n        const entities = records.map((record: EntityRecord<object>) => record.entity);\r\n        this.onSelectFromStore(entities);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the selected entity and destroy the store watcher\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n    this.selected$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * On selection change, update the store's state and emit an event\r\n   * @internal\r\n   */\r\n  onSelectionChange(event: {value: object | undefined}) {\r\n    const values = event.value instanceof Array ? event.value : [event.value];\r\n\r\n    const multiSelect = values.find((_value: object) => _value === this.multiSelectValue);\r\n    let entities = values.filter((_value: object) => _value !== this.multiSelectValue);\r\n    if (multiSelect !== undefined) {\r\n      if (entities.length === this.store.count) {\r\n        entities = [];\r\n      } else if (entities.length < this.store.count) {\r\n        entities = this.store.all();\r\n      }\r\n    }\r\n\r\n    if (entities.length === 0) {\r\n      this.store.state.updateAll({selected: false});\r\n    } else {\r\n      this.store.state.updateMany(entities, {selected: true}, true);\r\n    }\r\n\r\n    const value = this.multi ? entities : event.value;\r\n    this.selectedChange.emit({selected: true, value});\r\n  }\r\n\r\n  private onSelectFromStore(entities: object[]) {\r\n    if (this.multi === true) {\r\n      this.selected$.next(entities);\r\n    } else {\r\n      const entity = entities.length > 0 ? entities[0] : undefined;\r\n      this.selected$.next(entity);\r\n    }\r\n\r\n    this.updateMultiToggleWithEntities(entities);\r\n  }\r\n\r\n  private updateMultiToggleWithEntities(entities: object[]) {\r\n    if (entities.length === this.store.count && this.multiText$.value !== this.multiNoneText) {\r\n      this.multiText$.next(this.multiNoneText);\r\n    } else if (entities.length < this.store.count && this.multiText$.value !== this.multiAllText) {\r\n      this.multiText$.next(this.multiAllText);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  SimpleChanges,\r\n  OnInit,\r\n  OnDestroy,\r\n  OnChanges\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport {\r\n  EntityRecord,\r\n  EntityStore,\r\n  EntityStoreWatcher,\r\n  EntityTableTemplate,\r\n  EntityTableColumn,\r\n  EntityTableColumnRenderer,\r\n  EntityTableSelectionState,\r\n  EntityTableScrollBehavior\r\n} from '../shared';\r\n\r\n@Component({\r\n  selector: 'igo-entity-table',\r\n  templateUrl: './entity-table.component.html',\r\n  styleUrls: ['./entity-table.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntityTableComponent implements OnInit, OnDestroy, OnChanges  {\r\n\r\n  /**\r\n   * Reference to the column renderer types\r\n   * @internal\r\n   */\r\n  entityTableColumnRenderer = EntityTableColumnRenderer;\r\n\r\n  /**\r\n   * Reference to the selection states\r\n   * @internal\r\n   */\r\n  entityTableSelectionState = EntityTableSelectionState;\r\n\r\n  /**\r\n   * Observable of the selection,s state\r\n   * @internal\r\n   */\r\n  selectionState$: BehaviorSubject<EntityTableSelectionState> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Entity store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<object>;\r\n\r\n  /**\r\n   * Subscription to the store's selection\r\n   */\r\n  private selection$$: Subscription;\r\n\r\n  /**\r\n   * Entity store\r\n   */\r\n  @Input() store: EntityStore<object>;\r\n\r\n  /**\r\n   * Table template\r\n   */\r\n  @Input() template: EntityTableTemplate;\r\n\r\n  /**\r\n   * Scroll behavior on selection\r\n   */\r\n  @Input()\r\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\r\n\r\n  /**\r\n   * Event emitted when an entity (row) is clicked\r\n   */\r\n  @Output() entityClick = new EventEmitter<object>();\r\n\r\n  /**\r\n   * Event emitted when an entity (row) is selected\r\n   */\r\n  @Output() entitySelectChange = new EventEmitter<{\r\n    added: object[];\r\n  }>();\r\n\r\n  /**\r\n   * Table headers\r\n   * @internal\r\n   */\r\n  get headers(): string[] {\r\n    let columns = this.template.columns\r\n      .filter((column: EntityTableColumn) => column.visible !== false)\r\n      .map((column: EntityTableColumn) => column.name);\r\n\r\n    if (this.selectionCheckbox === true) {\r\n      columns = ['selectionCheckbox'].concat(columns);\r\n    }\r\n\r\n    return columns;\r\n  }\r\n\r\n  /**\r\n   * Data source consumable by the underlying material table\r\n   * @internal\r\n   */\r\n  get dataSource(): BehaviorSubject<object[]> { return this.store.view.all$(); }\r\n\r\n  /**\r\n   * Whether selection is supported\r\n   * @internal\r\n   */\r\n  get selection(): boolean { return this.template.selection || false; }\r\n\r\n  /**\r\n   * Whether a selection checkbox should be displayed\r\n   * @internal\r\n   */\r\n  get selectionCheckbox(): boolean { return this.template.selectionCheckbox || false; }\r\n\r\n  /**\r\n   * Whether selection many entities should eb supported\r\n   * @internal\r\n   */\r\n  get selectMany(): boolean { return this.template.selectMany || false; }\r\n\r\n  /**\r\n   * Whether selection many entities should eb supported\r\n   * @internal\r\n   */\r\n  get fixedHeader(): boolean { return this.template.fixedHeader === undefined ? true : this.template.fixedHeader; }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Track the selection state to properly display the selection checkboxes\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.selection$$ = this.store.stateView\r\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\r\n      .subscribe((records: EntityRecord<object>[]) => {\r\n        this.selectionState$.next(this.computeSelectionState(records));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * When the store change, create a new watcher\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const store = changes.store;\r\n    if (store && store.currentValue !== store.previousValue) {\r\n      if (this.watcher !== undefined) {\r\n        this.watcher.destroy();\r\n      }\r\n      this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind the store watcher\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.watcher !== undefined) {\r\n      this.watcher.destroy();\r\n    }\r\n    this.selection$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Trigger a refresh of thre table. This can be useful when\r\n   * the data source doesn't emit a new value but for some reason\r\n   * the records need an update.\r\n   * @internal\r\n   */\r\n  refresh() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * On sort, sort the store\r\n   * @param event Sort event\r\n   * @internal\r\n   */\r\n  onSort(event: {active: string, direction: string}) {\r\n    const direction = event.direction;\r\n    const column = this.template.columns\r\n      .find((c: EntityTableColumn) => c.name === event.active);\r\n\r\n    if (direction === 'asc' || direction === 'desc') {\r\n      this.store.view.sort({\r\n        valueAccessor: (entity: object) => this.getValue(entity, column),\r\n        direction\r\n      });\r\n    } else {\r\n      this.store.view.sort(undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When an entity is clicked, emit an event\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onRowClick(entity: object) {\r\n    this.entityClick.emit(entity);\r\n  }\r\n\r\n  /**\r\n   * When an entity is selected, select it in the store and emit an event. Even if\r\n   * \"many\" is set to true, this method always select a single, exclusive row. Selecting\r\n   * multiple rows should be achieved by using the checkboxes.\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onRowSelect(entity: object) {\r\n    if (this.selection === false) { return; }\r\n\r\n    // Selecting a\r\n    this.store.state.update(entity, {selected: true}, true);\r\n    this.entitySelectChange.emit({added: [entity]});\r\n  }\r\n\r\n  /**\r\n   * Select or unselect all rows at once. On select, emit an event.\r\n   * @param toggle Select or unselect\r\n   * @internal\r\n   */\r\n  onToggleRows(toggle: boolean) {\r\n    if (this.selection === false) { return; }\r\n\r\n    this.store.state.updateAll({selected: toggle});\r\n    if (toggle === true) {\r\n      this.entitySelectChange.emit({added: [this.store.view.all()]});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When an entity is toggled, select or unselect it in the store. On select,\r\n   * emit an event.\r\n   * @param toggle Select or unselect\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onToggleRow(toggle: boolean, entity: object) {\r\n    if (this.selection === false) { return; }\r\n\r\n    const exclusive = toggle === true && !this.selectMany;\r\n    this.store.state.update(entity, {selected: toggle}, exclusive);\r\n    if (toggle === true) {\r\n      this.entitySelectChange.emit({added: [entity]});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compute the selection state\r\n   * @returns Whether all, some or no rows are selected\r\n   * @internal\r\n   */\r\n  private computeSelectionState(selectedRecords: EntityRecord<object>[]): EntityTableSelectionState {\r\n    const states = EntityTableSelectionState;\r\n    const selectionCount = selectedRecords.length;\r\n    return selectionCount === 0 ?\r\n      states.None :\r\n      (selectionCount === this.store.view.count ? states.All : states.Some);\r\n  }\r\n\r\n  /**\r\n   * Whether a column is sortable\r\n   * @param column Column\r\n   * @returns True if a column is sortable\r\n   * @internal\r\n   */\r\n  columnIsSortable(column: EntityTableColumn): boolean {\r\n    let sortable = column.sort;\r\n    if (sortable === undefined) {\r\n      sortable = this.template.sort === undefined ? false : this.template.sort;\r\n    }\r\n    return sortable;\r\n  }\r\n\r\n  /**\r\n   * Whether a row is should be selected based on the underlying entity state\r\n   * @param entity Entity\r\n   * @returns True if a row should be selected\r\n   * @internal\r\n   */\r\n  rowIsSelected(entity: object): boolean {\r\n    const state = this.store.state.get(entity);\r\n    return state.selected ? state.selected : false;\r\n  }\r\n\r\n  /**\r\n   * Method to access an entity's values\r\n   * @param entity Entity\r\n   * @param column Column\r\n   * @returns Any value\r\n   * @internal\r\n   */\r\n  getValue(entity: object, column: EntityTableColumn): any {\r\n    if (column.valueAccessor !== undefined) {\r\n      return column.valueAccessor(entity);\r\n    }\r\n    if (this.template.valueAccessor !== undefined) {\r\n      return this.template.valueAccessor(entity, column.name);\r\n    }\r\n    return this.store.getProperty(entity, column.name);\r\n  }\r\n\r\n  /**\r\n   * Return the type of renderer of a column\r\n   * @param column Column\r\n   * @returns Renderer type\r\n   * @internal\r\n   */\r\n  getColumnRenderer(column: EntityTableColumn): EntityTableColumnRenderer {\r\n    if (column.renderer !== undefined) {\r\n      return column.renderer;\r\n    }\r\n    return EntityTableColumnRenderer.Default;\r\n  }\r\n\r\n  /**\r\n   * Return the table ngClass\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getTableClass(): {[key: string]: boolean} {\r\n    return {\r\n      'igo-entity-table-with-selection': this.selection\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return a header ngClass\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getHeaderClass(): {[key: string]: boolean} {\r\n    const func = this.template.headerClassFunc;\r\n    if (func instanceof Function) {\r\n      return func();\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Return a row ngClass\r\n   * @param entity Entity\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getRowClass(entity: object): {[key: string]: boolean} {\r\n    const func = this.template.rowClassFunc;\r\n    if (func instanceof Function) {\r\n      return func(entity);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Return a row ngClass\r\n   * @param entity Entity\r\n   * @param column Column\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getCellClass(entity: object, column: EntityTableColumn): {[key: string]: boolean} {\r\n    const cls = {};\r\n\r\n    const tableFunc = this.template.cellClassFunc;\r\n    if (tableFunc instanceof Function) {\r\n      Object.assign(cls, tableFunc(entity, column));\r\n    }\r\n\r\n    const columnFunc = column.cellClassFunc;\r\n    if (columnFunc instanceof Function) {\r\n      Object.assign(cls, columnFunc(entity));\r\n    }\r\n\r\n    return cls;\r\n  }\r\n\r\n  /**\r\n   * When a button is clicked\r\n   * @param func Function\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onButtonClick(clickFunc: (entity: object) => void, entity: object) {\r\n    if (typeof clickFunc === 'function') {\r\n      clickFunc(entity);\r\n    }\r\n  }\r\n\r\n}\r\n","export enum ActionbarMode {\r\n  Dock = 'dock',\r\n  Overlay = 'overlay',\r\n  Context = 'context'\r\n}\r\n","import { EntityStore } from '../../entity';\r\nimport { Action } from './action.interfaces';\r\n\r\n/**\r\n * The class is a specialized version of an EntityStore that stores\r\n * actions.\r\n */\r\nexport class ActionStore extends EntityStore<Action> {\r\n\r\n  /**\r\n   * Update actions availability. That means disabling or enabling some\r\n   * actions based on the conditions they define.\r\n   */\r\n  updateActionsAvailability() {\r\n    const availables = [];\r\n    const unavailables = [];\r\n\r\n    this.entities$.value.forEach((action: Action) => {\r\n      const conditions = action.conditions || [];\r\n      const args = action.conditionArgs || [];\r\n      const available = conditions.every((condition: (...args: any[]) => boolean) => {\r\n        return condition(...args);\r\n      });\r\n      available ? availables.push(action) : unavailables.push(action);\r\n    });\r\n\r\n    if (unavailables.length > 0) {\r\n      this.state.updateMany(unavailables, {\r\n        disabled: true,\r\n        active: false\r\n      });\r\n    }\r\n\r\n    if (availables.length > 0) {\r\n      this.state.updateMany(availables, {\r\n        disabled: false\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  HostBinding,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { EntityStoreWatcher } from '../../entity';\r\nimport { Action } from '../shared/action.interfaces';\r\nimport { ActionbarMode } from '../shared/action.enums';\r\nimport { ActionStore } from '../shared/store';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\n\r\n/**\r\n * A list of action buttons.\r\n * This component can be displayed in one of two way: 'dock' or 'overlay'\r\n */\r\n@Component({\r\n  selector: 'igo-actionbar',\r\n  templateUrl: './actionbar.component.html',\r\n  styleUrls: ['./actionbar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionbarComponent implements OnDestroy, OnChanges {\r\n  /**\r\n   * Reference to the ActionbarMode enum for use in the template\r\n   * @internal\r\n   */\r\n  actionbarMode = ActionbarMode;\r\n\r\n  /**\r\n   * Whether the actionbar is collapsed (Dock mode)\r\n   * @internal\r\n   */\r\n  collapsed = false;\r\n\r\n  /**\r\n   * Toggle collapse action (Dock)\r\n   * @internal\r\n   */\r\n  toggleCollapseAction = {\r\n    id: 'actionbar_toggle',\r\n    icon: 'dots-vertical',\r\n    handler: () => {\r\n      this.collapsed = !this.collapsed;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Action store watcher\r\n   * @internal\r\n   */\r\n  private watcher: EntityStoreWatcher<Action>;\r\n\r\n  /**\r\n   * Action store\r\n   */\r\n  @Input() store: ActionStore;\r\n\r\n  /**\r\n   * Actionbar mode\r\n   */\r\n  @Input() mode: ActionbarMode = ActionbarMode.Dock;\r\n\r\n  /**\r\n   * Whether a toggle button should be displayed (Dock mode)\r\n   */\r\n  @Input() withToggleButton = false;\r\n\r\n  /**\r\n   * Whether a the actionbar should display buttons horizontally\r\n   */\r\n  @Input() horizontal = false;\r\n\r\n  /**\r\n   * Color\r\n   */\r\n  @Input() color = 'default';\r\n\r\n  /**\r\n   * Whether action titles are displayed\r\n   */\r\n  @Input() withTitle = true;\r\n\r\n  /**\r\n   * Whether action icons are displayed\r\n   */\r\n  @Input() withIcon = true;\r\n\r\n  /**\r\n   * Overlay X position\r\n   */\r\n  @Input() xPosition = 'before';\r\n\r\n  /**\r\n   * Overlay X position\r\n   */\r\n  @Input() yPosition = 'above';\r\n\r\n  /**\r\n   * Class to add to the actionbar overlay\r\n   */\r\n  @Input()\r\n  set overlayClass(value: string) {\r\n    this._overlayClass = value;\r\n  }\r\n  get overlayClass(): string {\r\n    return [this._overlayClass, 'igo-actionbar-overlay'].join(' ');\r\n  }\r\n  private _overlayClass = '';\r\n\r\n  /**\r\n   * Function to add class to item actionbar\r\n   */\r\n  @Input() itemClassFunc: (action: Action) => { [key: string]: boolean } =\r\n    ActionbarComponent.defaultItemClassFunc;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  @HostBinding('class.with-title')\r\n  get withTitleClass() {\r\n    return this.withTitle;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  @HostBinding('class.with-icon')\r\n  get withIconClass() {\r\n    return this.withIcon;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  @HostBinding('class.horizontal')\r\n  get horizontalClass() {\r\n    return this.horizontal;\r\n  }\r\n\r\n  static defaultItemClassFunc(action: Action) {\r\n    return {};\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, public overlay: Overlay) {}\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const store = changes.store;\r\n    if (store && store.currentValue !== store.previousValue) {\r\n      if (this.watcher !== undefined) {\r\n        this.watcher.destroy();\r\n      }\r\n      this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n  }\r\n\r\n  /**\r\n   * Invoke the action handler\r\n   * @internal\r\n   */\r\n  onTriggerAction(action: Action) {\r\n    const args = action.args || [];\r\n    action.handler(...args);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { Action } from '../shared/action.interfaces';\r\n\r\n /**\r\n  * An action button\r\n  */\r\n@Component({\r\n  selector: 'igo-actionbar-item',\r\n  templateUrl: './actionbar-item.component.html',\r\n  styleUrls: ['./actionbar-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionbarItemComponent {\r\n\r\n  /**\r\n   * Action\r\n   */\r\n  @Input() action: Action;\r\n\r\n  /**\r\n   * Color\r\n   */\r\n  @Input() color = 'default';\r\n\r\n  /**\r\n   * Whether the action title is displayed\r\n   */\r\n  @Input() withTitle = true;\r\n\r\n  /**\r\n   * Whether the action icon is displayed\r\n   */\r\n  @Input() withIcon = true;\r\n\r\n  /**\r\n   * Whether the action is disabled\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * Event emitted when the action button is clicked\r\n   */\r\n  @Output() trigger: EventEmitter<Action> = new EventEmitter();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string { return this.action.title; }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get tooltip(): string { return this.action.tooltip || this.title; }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get icon(): string { return this.action.icon; }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * When the action button is clicked, emit the 'trigger' event but don't\r\n   * invoke the action handler. This is handled by the parent component.\r\n   * @internal\r\n   */\r\n  onClick() {\r\n    if (this.disabled === true) {\r\n      return;\r\n    }\r\n    this.trigger.emit(this.action);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatCardModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ActionbarComponent } from './actionbar.component';\r\nimport { ActionbarItemComponent } from './actionbar-item.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    MatCardModule\r\n  ],\r\n  exports: [ActionbarComponent],\r\n  declarations: [ActionbarComponent, ActionbarItemComponent]\r\n})\r\nexport class IgoActionbarModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoActionbarModule } from './actionbar/actionbar.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoActionbarModule\r\n  ],\r\n  exports: [\r\n    IgoActionbarModule\r\n  ],\r\n  declarations: [],\r\n  providers: []\r\n})\r\nexport class IgoActionModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-backdrop',\r\n  templateUrl: './backdrop.component.html',\r\n  styleUrls: ['./backdrop.component.scss']\r\n})\r\nexport class BackdropComponent {\r\n  @Input()\r\n  get shown(): boolean {\r\n    return this._shown;\r\n  }\r\n  set shown(value: boolean) {\r\n    this._shown = value;\r\n  }\r\n  private _shown: boolean;\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BackdropComponent } from './backdrop.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [BackdropComponent],\r\n  exports: [BackdropComponent]\r\n})\r\nexport class IgoBackdropModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoBackdropModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Output\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoClickout]'\r\n})\r\nexport class ClickoutDirective {\r\n  @Output() clickout = new EventEmitter<MouseEvent>();\r\n\r\n  @HostListener('document:click', ['$event', '$event.target'])\r\n  handleMouseClick(event: MouseEvent, target: HTMLElement) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    if (!this.el.nativeElement.contains(target)) {\r\n      this.clickout.emit(event);\r\n    }\r\n  }\r\n\r\n  constructor(private el: ElementRef) {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ClickoutDirective } from './clickout.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [ClickoutDirective],\r\n  exports: [ClickoutDirective]\r\n})\r\nexport class IgoClickoutModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoClickoutModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'clone'\r\n})\r\nexport class ClonePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (value === undefined) {\r\n      return value;\r\n    }\r\n\r\n    if (value instanceof Array) {\r\n      return value.map(obj => Object.assign(Object.create(obj), obj));\r\n    } else {\r\n      return Object.assign(Object.create(value), value);\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ClonePipe } from './clone.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [ClonePipe],\r\n  exports: [ClonePipe]\r\n})\r\nexport class IgoCloneModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoCloneModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoCollapse]'\r\n})\r\nexport class CollapseDirective {\r\n  @Input()\r\n  get target() {\r\n    return this._target;\r\n  }\r\n  set target(value: Element) {\r\n    this._target = value;\r\n  }\r\n  private _target: Element;\r\n\r\n  @Input()\r\n  get collapsed(): boolean {\r\n    return this._collapsed;\r\n  }\r\n  set collapsed(collapsed: boolean) {\r\n    collapsed ? this.collapseTarget() : this.expandTarget();\r\n    this._collapsed = collapsed;\r\n    this.toggle.emit(collapsed);\r\n  }\r\n  private _collapsed = false;\r\n\r\n  @Output() toggle: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @HostListener('click')\r\n  click() {\r\n    this.collapsed = !this.collapsed;\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\r\n\r\n  private collapseTarget() {\r\n    this.renderer.addClass(this.target, 'igo-collapsed');\r\n    this.renderer.addClass(this.el.nativeElement, 'collapsed');\r\n  }\r\n\r\n  private expandTarget() {\r\n    this.renderer.removeClass(this.target, 'igo-collapsed');\r\n    this.renderer.removeClass(this.el.nativeElement, 'collapsed');\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-collapsible',\r\n  templateUrl: './collapsible.component.html',\r\n  styleUrls: ['./collapsible.component.scss']\r\n})\r\nexport class CollapsibleComponent {\r\n  @Input()\r\n  get title() {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    this._title = value;\r\n  }\r\n  private _title = '';\r\n\r\n  @Input()\r\n  get collapsed() {\r\n    return this._collapsed;\r\n  }\r\n  set collapsed(value: boolean) {\r\n    this._collapsed = value;\r\n  }\r\n  private _collapsed = false;\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatIconModule, MatListModule } from '@angular/material';\r\n\r\nimport { CollapseDirective } from './collapse.directive';\r\nimport { CollapsibleComponent } from './collapsible.component';\r\n\r\n@NgModule({\r\n  imports: [MatIconModule, MatListModule],\r\n  declarations: [CollapsibleComponent, CollapseDirective],\r\n  exports: [CollapsibleComponent, CollapseDirective]\r\n})\r\nexport class IgoCollapsibleModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoCollapsibleModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  public confirmMessage: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\r\n\r\n@Injectable()\r\nexport class ConfirmDialogService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  public open(message: string): Observable<any> {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    dialogRef.componentInstance.confirmMessage = message;\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\r\nimport { ConfirmDialogService } from './confirm-dialog.service';\r\n\r\n@NgModule({\r\n  imports: [MatButtonModule, MatDialogModule, IgoLanguageModule],\r\n  declarations: [ConfirmDialogComponent],\r\n  exports: [ConfirmDialogComponent],\r\n  providers: [ConfirmDialogService],\r\n  entryComponents: [ConfirmDialogComponent]\r\n})\r\nexport class IgoConfirmDialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoConfirmDialogModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\n\r\n@Directive({\r\n  selector: '[igoContextMenu]'\r\n})\r\nexport class ContextMenuDirective {\r\n  overlayRef: OverlayRef | null;\r\n  sub: Subscription;\r\n\r\n  @Input('igoContextMenu') menuContext: TemplateRef<any>;\r\n  @Output() menuPosition = new EventEmitter<{ x: number; y: number }>();\r\n\r\n  constructor(\r\n    public overlay: Overlay,\r\n    public viewContainerRef: ViewContainerRef,\r\n    private elementRef: ElementRef\r\n  ) {}\r\n\r\n  @HostListener('contextmenu', ['$event'])\r\n  public onContextMenu({ x, y }: MouseEvent): void {\r\n    this.close();\r\n    event.preventDefault();\r\n    this.menuPosition.emit({ x, y });\r\n    this.overlayRef = null;\r\n    const positionStrategy = this.overlay\r\n      .position()\r\n      .flexibleConnectedTo({ x, y })\r\n      .withPositions([\r\n        {\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }\r\n      ]);\r\n    this.overlayRef = this.overlay.create({\r\n      positionStrategy,\r\n      scrollStrategy: this.overlay.scrollStrategies.close()\r\n    });\r\n    this.overlayRef.attach(\r\n      new TemplatePortal(this.menuContext, this.viewContainerRef, {\r\n        $implicit: undefined\r\n      })\r\n    );\r\n\r\n    this.sub = fromEvent<MouseEvent>(document, 'click')\r\n      .pipe(\r\n        filter(event => {\r\n          const clickTarget = event.target as HTMLElement;\r\n          this.close();\r\n          return (\r\n            !!this.overlayRef &&\r\n            !this.overlayRef.overlayElement.contains(clickTarget)\r\n          );\r\n        }),\r\n        take(1)\r\n      )\r\n      .subscribe(() => this.close());\r\n\r\n    this.sub = fromEvent<MouseEvent>(document, 'contextmenu')\r\n      .pipe(\r\n        filter(event => {\r\n          const clickTarget = event.target as HTMLElement;\r\n          if (\r\n            clickTarget &&\r\n            !this.elementRef.nativeElement.contains(clickTarget) &&\r\n            !this.overlayRef.overlayElement.contains(clickTarget)\r\n          ) {\r\n            return true;\r\n          } else {\r\n            event.preventDefault();\r\n          }\r\n        }),\r\n        take(1)\r\n      )\r\n      .subscribe(() => this.close());\r\n  }\r\n  close() {\r\n    if (this.overlayRef) {\r\n      this.overlayRef.dispose();\r\n      this.overlayRef = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ContextMenuDirective } from './context-menu.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [ContextMenuDirective],\r\n  exports: [ContextMenuDirective]\r\n})\r\nexport class IgoContextMenuModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextMenuModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-custom-html',\r\n  templateUrl: './custom-html.component.html',\r\n  styleUrls: ['./custom-html.component.scss']\r\n})\r\nexport class CustomHtmlComponent {\r\n  @Input()\r\n  get html(): string {\r\n    return this._html;\r\n  }\r\n  set html(value: string) {\r\n    this._html = value;\r\n  }\r\n  private _html = '';\r\n\r\n  constructor() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'sanitizeHtml' })\r\nexport class SanitizeHtmlPipe implements PipeTransform {\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n  transform(v: string): SafeHtml {\r\n    return this._sanitizer.bypassSecurityTrustHtml(v);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { CustomHtmlComponent } from './custom-html.component';\r\nimport { SanitizeHtmlPipe } from './custom-html.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [SanitizeHtmlPipe, CustomHtmlComponent],\r\n  declarations: [SanitizeHtmlPipe, CustomHtmlComponent]\r\n})\r\nexport class IgoCustomHtmlModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoCustomHtmlModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostListener,\r\n  HostBinding,\r\n  EventEmitter,\r\n  Output,\r\n  Input\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoDragAndDrop]'\r\n})\r\nexport class DragAndDropDirective {\r\n\r\n  @Input() allowedExtensions: Array<string> = [];\r\n\r\n  @Output() protected filesDropped: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @Output() protected filesInvalid: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @HostBinding('style.background') private background = 'inherit';\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = '#999';\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = 'inherit';\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = 'inherit';\r\n    const filesObj = this.validExtensions(evt);\r\n    if (filesObj.valid.length) {\r\n      this.filesDropped.emit(filesObj.valid);\r\n    }\r\n    if (filesObj.invalid.length) {\r\n      this.filesInvalid.emit(filesObj.invalid);\r\n    }\r\n  }\r\n\r\n  private validExtensions(evt) {\r\n    const files = evt.dataTransfer.files;\r\n    const filesObj = {\r\n      valid: [],\r\n      invalid: []\r\n    };\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const ext = file.name.split('.')[file.name.split('.').length - 1];\r\n        if (\r\n          this.allowedExtensions.length === 0 ||\r\n          (\r\n            this.allowedExtensions.lastIndexOf(ext) !== -1 &&\r\n            file.size !== 0\r\n          )\r\n        ) {\r\n          filesObj.valid.push(file);\r\n        } else {\r\n          filesObj.invalid.push(file);\r\n        }\r\n      }\r\n    }\r\n\r\n    return filesObj;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { DragAndDropDirective } from './drag-drop.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [DragAndDropDirective],\r\n  exports: [DragAndDropDirective]\r\n})\r\nexport class IgoDrapDropModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoDrapDropModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  ComponentFactory,\r\n  ComponentRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * This class is used in the DynamicComponentOutlet component. It holds\r\n * a reference to a component factory and can render that component\r\n * in a target element on demand. It's also possible to set inputs\r\n * and to subscribe to outputs.\r\n */\r\nexport class DynamicComponent<C> {\r\n\r\n  /**\r\n   * Component reference\r\n   */\r\n  private componentRef: ComponentRef<C>;\r\n\r\n  /**\r\n   * Subscriptions to the component's outputs. Those need\r\n   * to be unsubscribed when the component is destroyed.\r\n   */\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  /**\r\n   * Component target element\r\n   */\r\n  private target: ViewContainerRef;\r\n\r\n  /**\r\n   * Component inputs\r\n   */\r\n  private inputs: {[key: string]: any} = {};\r\n\r\n  /**\r\n   * Subscribers to the component's outputs\r\n   */\r\n  private subscribers: {[key: string]: (event: any) => void} = {};\r\n\r\n  constructor(private componentFactory: ComponentFactory<C>) {}\r\n\r\n  /**\r\n   * Render the component to a target element.\r\n   * Set it's inputs and subscribe to it's outputs.\r\n   * @param target Target element\r\n   */\r\n  setTarget(target: ViewContainerRef) {\r\n    this.target = target;\r\n    this.componentRef = target.createComponent(this.componentFactory);\r\n    this.updateInputs(this.inputs);\r\n    this.updateSubscribers(this.subscribers);\r\n  }\r\n\r\n  /**\r\n   * Destroy this component. That means, removing from it's target\r\n   * element and unsubscribing to it's outputs.\r\n   */\r\n  destroy() {\r\n    if (this.target !== undefined) {\r\n      this.target.clear();\r\n    }\r\n    if (this.componentRef !== undefined) {\r\n      this.componentRef.destroy();\r\n      this.componentRef = undefined;\r\n    }\r\n    this.unsubscribeAll();\r\n  }\r\n\r\n  /**\r\n   * Update the component inputs. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   */\r\n  updateInputs(inputs: {[key: string]: any}) {\r\n    this.inputs = inputs;\r\n    if (this.componentRef === undefined) {\r\n      return;\r\n    }\r\n\r\n    const instance = this.componentRef.instance;\r\n    const allowedInputs = this.componentFactory.inputs;\r\n    allowedInputs.forEach((value: {propName: string; templateName: string; }) => {\r\n      const key = value.propName;\r\n      if (inputs.hasOwnProperty(key)) {\r\n        instance[key] = inputs[key];\r\n      }\r\n    });\r\n\r\n    if (typeof (instance as any).onUpdateInputs === 'function') {\r\n      (instance as any).onUpdateInputs();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the component subscribers. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   */\r\n  updateSubscribers(subscribers: {[key: string]: (event: any) => void}) {\r\n    this.subscribers = subscribers;\r\n    if (this.componentRef === undefined) {\r\n      return;\r\n    }\r\n\r\n    const instance = this.componentRef.instance;\r\n    const allowedSubscribers = this.componentFactory.outputs;\r\n    allowedSubscribers.forEach((value: {propName: string; templateName: string; }) => {\r\n      const key = value.propName;\r\n      if (subscribers.hasOwnProperty(key)) {\r\n        const emitter = instance[key];\r\n        const subscriber = subscribers[key];\r\n        if (Array.isArray(subscriber)) {\r\n          subscriber.forEach((_subscriber) => {\r\n            this.subscriptions.push(emitter.subscribe(_subscriber));\r\n          });\r\n        } else {\r\n          this.subscriptions.push(emitter.subscribe(subscriber));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to all outputs.\r\n   */\r\n  private unsubscribeAll() {\r\n    this.subscriptions.forEach((s: Subscription) => s.unsubscribe());\r\n    this.subscriptions = [];\r\n  }\r\n\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Injectable\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponent } from './dynamic-component';\r\n\r\n/**\r\n * Service to creates DynamicComponent instances from base component classes\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicComponentService {\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {}\r\n\r\n  /**\r\n   * Creates a DynamicComponent instance from a base component class\r\n   * @param componentCls The component class\r\n   * @returns DynamicComponent instance\r\n   */\r\n  create(componentCls: any): DynamicComponent<any> {\r\n    const factory = this.resolver.resolveComponentFactory(componentCls as any);\r\n    return new DynamicComponent<typeof componentCls>(factory);\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewContainerRef,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { DynamicComponent } from '../shared/dynamic-component';\r\nimport { DynamicComponentService } from '../shared/dynamic-component.service';\r\n\r\n@Component({\r\n  selector: 'igo-dynamic-outlet',\r\n  templateUrl: 'dynamic-outlet.component.html',\r\n  styleUrls: ['dynamic-outlet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicOutletComponent implements OnChanges, OnDestroy {\r\n  /**\r\n   * The dynamic component base class or the dynamic component itself\r\n   */\r\n  @Input() component: DynamicComponent<any> | any;\r\n\r\n  /**\r\n   * The dynamic component inputs\r\n   */\r\n  @Input() inputs: { [key: string]: any } = {};\r\n\r\n  /**\r\n   * The subscribers to the dynamic component outputs\r\n   */\r\n  @Input() subscribers: { [key: string]: (event: any) => void } = {};\r\n\r\n  /**\r\n   * The dynamic component\r\n   */\r\n  private dynamicComponent: DynamicComponent<any>;\r\n\r\n  /**\r\n   * The view element to render the component to\r\n   * @ignore\r\n   */\r\n  @ViewChild('target', { read: ViewContainerRef })\r\n  private target: ViewContainerRef;\r\n\r\n  constructor(\r\n    private dynamicComponentService: DynamicComponentService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * If the dynamic component changes, create it.\r\n   * If the inputs or subscribers change, update the current component's\r\n   * inputs or subscribers.\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const component = changes.component;\r\n    const inputs = changes.inputs;\r\n    const subscribers = changes.subscribers;\r\n    const eq = ObjectUtils.objectsAreEquivalent;\r\n\r\n    if (component && component.currentValue !== component.previousValue) {\r\n      this.createComponent(component.currentValue);\r\n    } else {\r\n      const inputsAreEquivalents =\r\n        inputs && eq(inputs.currentValue || {}, inputs.previousValue || {});\r\n      const subscribersAreEquivalents =\r\n        subscribers &&\r\n        eq(subscribers.currentValue || {}, subscribers.previousValue || {});\r\n\r\n      if (inputsAreEquivalents === false) {\r\n        this.updateInputs();\r\n      }\r\n\r\n      if (subscribersAreEquivalents === false) {\r\n        this.updateSubscribers();\r\n      }\r\n    }\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Destroy the dynamic component and all it's subscribers\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.dynamicComponent) {\r\n      this.dynamicComponent.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a  DynamicComponent out of the component class and render it.\r\n   * @internal\r\n   */\r\n  private createComponent(component: DynamicComponent<any> | any) {\r\n    if (this.dynamicComponent !== undefined) {\r\n      this.dynamicComponent.destroy();\r\n    }\r\n    this.dynamicComponent =\r\n      component instanceof DynamicComponent\r\n        ? component\r\n        : this.dynamicComponentService.create(component);\r\n    this.renderComponent();\r\n  }\r\n\r\n  /**\r\n   * Create and render the dynamic component. Set it's inputs and subscribers\r\n   * @internal\r\n   */\r\n  private renderComponent() {\r\n    this.updateInputs();\r\n    this.updateSubscribers();\r\n    this.dynamicComponent.setTarget(this.target);\r\n  }\r\n\r\n  /**\r\n   * Update the dynamic component inputs. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   * @internal\r\n   */\r\n  private updateInputs() {\r\n    this.dynamicComponent.updateInputs(this.inputs);\r\n  }\r\n\r\n  /**\r\n   * Update the dynamic component subscribers. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   * @internal\r\n   */\r\n  private updateSubscribers() {\r\n    this.dynamicComponent.updateSubscribers(this.subscribers);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DynamicOutletComponent } from './dynamic-outlet.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    DynamicOutletComponent\r\n  ],\r\n  declarations: [\r\n    DynamicOutletComponent\r\n  ]\r\n})\r\nexport class IgoDynamicOutletModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoDynamicOutletModule } from './dynamic-outlet/dynamic-outlet.module';\r\nimport { DynamicComponentService } from './shared/dynamic-component.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoDynamicOutletModule\r\n  ],\r\n  exports: [\r\n    IgoDynamicOutletModule\r\n  ],\r\n  providers: [\r\n    DynamicComponentService\r\n  ]\r\n})\r\nexport class IgoDynamicComponentModule {}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { Media, MediaService } from '@igo2/core';\r\n\r\nimport { FlexibleState, FlexibleDirection } from './flexible.type';\r\n\r\n@Component({\r\n  selector: 'igo-flexible',\r\n  templateUrl: './flexible.component.html',\r\n  styleUrls: ['./flexible.component.scss']\r\n})\r\nexport class FlexibleComponent implements OnInit {\r\n  static transitionTime = 250;\r\n\r\n  @ViewChild('flexibleMain') main;\r\n\r\n  @Input()\r\n  get initial(): string {\r\n    return this._initial;\r\n  }\r\n  set initial(value: string) {\r\n    this._initial = value;\r\n  }\r\n  private _initial = '0';\r\n\r\n  @Input()\r\n  get collapsed(): string {\r\n    return this._collapsed;\r\n  }\r\n  set collapsed(value: string) {\r\n    this._collapsed = value;\r\n  }\r\n  private _collapsed = '0';\r\n\r\n  @Input()\r\n  get expanded(): string {\r\n    return this._expanded;\r\n  }\r\n  set expanded(value: string) {\r\n    this._expanded = value;\r\n  }\r\n  private _expanded = '100%';\r\n\r\n  @Input()\r\n  get initialMobile(): string {\r\n    return this._initialMobile;\r\n  }\r\n  set initialMobile(value: string) {\r\n    this._initialMobile = value;\r\n  }\r\n  private _initialMobile: string = this.expanded;\r\n\r\n  @Input()\r\n  get collapsedMobile(): string {\r\n    return this._collapsedMobile;\r\n  }\r\n  set collapsedMobile(value: string) {\r\n    this._collapsedMobile = value;\r\n  }\r\n  private _collapsedMobile: string = this.collapsed;\r\n\r\n  @Input()\r\n  get expandedMobile(): string {\r\n    return this._expandedMobile;\r\n  }\r\n  set expandedMobile(value: string) {\r\n    this._expandedMobile = value;\r\n  }\r\n  private _expandedMobile: string = this.expanded;\r\n\r\n  @Input()\r\n  get direction(): FlexibleDirection {\r\n    return this._direction;\r\n  }\r\n  set direction(value: FlexibleDirection) {\r\n    this._direction = value;\r\n  }\r\n  private _direction: FlexibleDirection = 'column';\r\n\r\n  @Input()\r\n  get state(): FlexibleState {\r\n    return this._state;\r\n  }\r\n  set state(value: FlexibleState) {\r\n    const sizes = {\r\n      initial: this.initial,\r\n      collapsed: this.collapsed,\r\n      expanded: this.expanded\r\n    };\r\n\r\n    const media = this.mediaService.media$.value;\r\n    if (media === 'mobile') {\r\n      Object.assign(sizes, {\r\n        initial: this.initialMobile,\r\n        collapsed: this.collapsedMobile,\r\n        expanded: this.expandedMobile\r\n      });\r\n    }\r\n\r\n    const size = sizes[value];\r\n    if (size !== undefined) {\r\n      this.setSize(size);\r\n      setTimeout(() => {\r\n        this._state = value;\r\n      }, FlexibleComponent.transitionTime);\r\n    }\r\n  }\r\n  private _state: FlexibleState = 'initial';\r\n\r\n  constructor(private el: ElementRef, private mediaService: MediaService) {}\r\n\r\n  ngOnInit() {\r\n    this.el.nativeElement.className += this.direction;\r\n\r\n    // Since this component supports different sizes\r\n    // on mobile, force a redraw when the media changes\r\n    this.mediaService.media$.subscribe(\r\n      (media: Media) => (this.state = this.state)\r\n    );\r\n  }\r\n\r\n  private setSize(size: string) {\r\n    this._state = 'transition';\r\n\r\n    if (this.direction === 'column') {\r\n      this.main.nativeElement.style.height = size;\r\n    } else if (this.direction === 'row') {\r\n      this.main.nativeElement.style.width = size;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FlexibleComponent } from './flexible.component';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [FlexibleComponent],\r\n  exports: [FlexibleComponent]\r\n})\r\nexport class IgoFlexibleModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoFlexibleModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nimport { Form, FormField, FormFieldGroup } from './form.interfaces';\r\n\r\nexport function formControlIsRequired(control: AbstractControl): boolean {\r\n  if (control.validator) {\r\n    const validator = control.validator({} as AbstractControl);\r\n    if (validator && validator.required) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  if ((control as any).controls) {\r\n    const requiredControl = Object.keys((control as any).controls).find((key: string) => {\r\n      return formControlIsRequired((control as any).controls[key]);\r\n    });\r\n    return requiredControl !== undefined;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function getDefaultErrorMessages(): {[key: string]: string} {\r\n  return {\r\n    required: 'igo.common.form.errors.required'\r\n  };\r\n}\r\n\r\nexport function getControlErrorMessage(control: AbstractControl, messages: {[key: string]: string}): string {\r\n  const errors = control.errors || {};\r\n  const errorKeys = Object.keys(errors);\r\n  const errorMessages = errorKeys\r\n    .map((key: string) => messages[key])\r\n    .filter((message: string) => message !== undefined);\r\n  return errorMessages.length > 0 ? errorMessages[0] : '';\r\n}\r\n\r\nexport function getAllFormFields(form: Form): FormField[] {\r\n  return form.groups.reduce((acc: FormField[], group: FormFieldGroup) => {\r\n    return acc.concat(group.fields);\r\n  }, [].concat(form.fields));\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nimport t from 'typy';\r\n\r\nimport { Form, FormField, FormFieldGroup } from '../shared/form.interfaces';\r\nimport { getAllFormFields } from '../shared/form.utils';\r\n\r\n/**\r\n * A configurable form\r\n */\r\n@Component({\r\n  selector: 'igo-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormComponent implements OnChanges {\r\n\r\n  /**\r\n   * Form\r\n   */\r\n  @Input() form: Form;\r\n\r\n  /**\r\n   * Input data\r\n   */\r\n  @Input() formData: { [key: string]: any};\r\n\r\n  /**\r\n   * Event emitted when the form is submitted\r\n   */\r\n  @Output() submitForm = new EventEmitter<{[key: string]: any}>();\r\n\r\n  @ViewChild('buttons') buttons: ElementRef;\r\n\r\n  get hasButtons(): boolean {\r\n    return this.buttons.nativeElement.children.length !== 0;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Is the entity or the template change, recreate the form or repopulate it.\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const formData = changes.formData;\r\n    if (formData && formData.currentValue !== formData.previousValue) {\r\n      if (formData.currentValue === undefined) {\r\n        this.clear();\r\n      } else {\r\n        this.setData(formData.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform the form data to a feature and emit an event\r\n   * @param event Form submit event\r\n   * @internal\r\n   */\r\n  onSubmit() {\r\n    this.submitForm.emit(this.getData());\r\n  }\r\n\r\n  private setData(data: {[key: string]: any}) {\r\n    this.form.fields.forEach((field: FormField) => {\r\n      field.control.setValue(t(data, field.name).safeObject);\r\n    });\r\n\r\n    this.form.groups.forEach((group: FormFieldGroup) => {\r\n      group.fields.forEach((field: FormField) => {\r\n        field.control.setValue(t(data, field.name).safeObject);\r\n      });\r\n    });\r\n  }\r\n\r\n  private getData(): { [key: string]: any} {\r\n    const data = {};\r\n    getAllFormFields(this.form).forEach((field: FormField) => {\r\n      this.updateDataWithFormField(data, field);\r\n    });\r\n    return data;\r\n  }\r\n\r\n  private updateDataWithFormField(data: { [key: string]: any}, field: FormField) {\r\n    const control = field.control;\r\n    if (!control.disabled) {\r\n      data[field.name] = control.value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear form\r\n   */\r\n  private clear() {\r\n    this.form.control.reset();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { FormComponent } from './form.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    FormComponent,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    FormComponent\r\n  ]\r\n})\r\nexport class IgoFormFormModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Service where all available form fields are registered.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormFieldService {\r\n\r\n  static fields: {[key: string]: any} = {};\r\n\r\n  static register(type: string, component: any) {\r\n    FormFieldService.fields[type] = component;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Return field component by type\r\n   * @param type Field type\r\n   * @returns Field component\r\n   */\r\n  getFieldByType(type: string): any {\r\n    return FormFieldService.fields[type];\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport {\r\n  Form,\r\n  FormField,\r\n  FormFieldConfig,\r\n  FormFieldGroup,\r\n  FormFieldGroupConfig\r\n} from './form.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormService {\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  form(fields: FormField[], groups: FormFieldGroup[]): Form {\r\n    const control = this.formBuilder.group({});\r\n    fields.forEach((field: FormField) => {\r\n      control.addControl(field.name, field.control);\r\n    });\r\n    groups.forEach((group: FormFieldGroup) => {\r\n      control.addControl(group.name, group.control);\r\n    });\r\n\r\n    return {fields, groups, control};\r\n  }\r\n\r\n  group(config: FormFieldGroupConfig, fields: FormField[]): FormFieldGroup {\r\n    const options = config.options || {};\r\n    const control = this.formBuilder.group({});\r\n    fields.forEach((field: FormField) => {\r\n      control.addControl(field.name, field.control);\r\n    });\r\n    control.setValidators(options.validator);\r\n\r\n    return Object.assign({}, config, {fields, control}) as FormFieldGroup;\r\n  }\r\n\r\n  field(config: FormFieldConfig): FormField {\r\n    const options = config.options || {};\r\n    const state = Object.assign({value: ''}, {\r\n      disabled: options.disabled\r\n    });\r\n    const control = this.formBuilder.control(state);\r\n    control.setValidators(options.validator);\r\n\r\n    return Object.assign({type: 'text'}, config, {control}) as FormField;\r\n  }\r\n\r\n  extendFieldConfig(config: FormFieldConfig, partial: Partial<FormFieldConfig>): FormFieldConfig {\r\n    const options = Object.assign({}, config.options || {}, partial.options || {});\r\n    const inputs = Object.assign({}, config.inputs || {}, partial.inputs || {});\r\n    const subscribers = Object.assign({}, config.subscribers || {}, partial.subscribers || {});\r\n    return Object.assign({}, config, {options, inputs, subscribers});\r\n  }\r\n\r\n}\r\n","import { FormFieldService } from './form-field.service';\r\n\r\nexport function FormFieldComponent(type: string): (cls: any) => any {\r\n  return (compType: any) => {\r\n    FormFieldService.register(type, compType);\r\n  };\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { FormField, FormFieldInputs, FormFieldOptions } from '../shared/form.interfaces';\r\nimport { FormFieldService } from '../shared/form-field.service';\r\nimport { getDefaultErrorMessages } from '../shared';\r\n\r\n/**\r\n * This component renders the proper form input based on\r\n * the field configuration it receives.\r\n */\r\n@Component({\r\n  selector: 'igo-form-field',\r\n  templateUrl: './form-field.component.html',\r\n  styleUrls: ['./form-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldComponent {\r\n\r\n  /**\r\n   * Field configuration\r\n   */\r\n  @Input() field: FormField;\r\n\r\n  get fieldOptions(): FormFieldOptions {\r\n    return this.field.options || {};\r\n  }\r\n\r\n  constructor(private formFieldService: FormFieldService) {}\r\n\r\n  getFieldComponent(): any {\r\n    return this.formFieldService.getFieldByType(this.field.type || 'text');\r\n  }\r\n\r\n  getFieldInputs(): FormFieldInputs {\r\n    const errors = this.fieldOptions.errors || {};\r\n    return Object.assign(\r\n      {\r\n        placeholder: this.field.title,\r\n        disableSwitch: this.fieldOptions.disableSwitch || false\r\n      },\r\n      Object.assign({}, this.field.inputs || {}),\r\n      {\r\n        formControl: this.field.control,\r\n        errors: Object.assign({}, getDefaultErrorMessages(), errors)\r\n      }\r\n    );\r\n  }\r\n\r\n  getFieldSubscribers(): {[key: string]: ({field: FormField, control: FormControl}) => void } {\r\n    return Object.assign({}, this.field.subscribers || {});\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\n\r\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\r\nimport { FormFieldSelectChoice } from '../shared/form.interfaces';\r\nimport { FormFieldComponent } from '../shared/form-field-component';\r\n\r\n/**\r\n * This component renders a select field\r\n */\r\n@FormFieldComponent('select')\r\n@Component({\r\n  selector: 'igo-form-field-select',\r\n  templateUrl: './form-field-select.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldSelectComponent implements OnInit {\r\n\r\n  choices$: Observable<FormFieldSelectChoice[]>;\r\n\r\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Select input choices\r\n   */\r\n  @Input()\r\n  set choices(value: Observable<FormFieldSelectChoice[]> | FormFieldSelectChoice[]) {\r\n    if (value instanceof Observable) {\r\n      this.choices$ = value;\r\n    } else {\r\n      this.choices$ = of(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Wheter a disable switch should be available\r\n   */\r\n  @Input() disableSwitch: boolean = false;\r\n\r\n  /**\r\n   * Whether the field is required\r\n   */\r\n  get required(): boolean {\r\n    return formControlIsRequired(this.formControl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabled$.next(this.formControl.disabled);\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    return getControlErrorMessage(this.formControl, this.errors);\r\n  }\r\n\r\n  onDisableSwitchClick() {\r\n    this.toggleDisabled();\r\n  }\r\n\r\n  private toggleDisabled() {\r\n    const disabled = !this.disabled$.value;\r\n    if (disabled === true) {\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n    this.disabled$.next(disabled);\r\n  }\r\n\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport {\r\n  formControlIsRequired,\r\n  getControlErrorMessage\r\n} from '../shared/form.utils';\r\nimport { FormFieldComponent } from '../shared/form-field-component';\r\n\r\n/**\r\n * This component renders a text field\r\n */\r\n@FormFieldComponent('text')\r\n@Component({\r\n  selector: 'igo-form-field-text',\r\n  templateUrl: './form-field-text.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldTextComponent implements OnInit {\r\n\r\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Wheter a disable switch should be available\r\n   */\r\n  @Input() disableSwitch: boolean = false;\r\n\r\n  /**\r\n   * Whether the field is required\r\n   */\r\n  get required(): boolean {\r\n    return formControlIsRequired(this.formControl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabled$.next(this.formControl.disabled);\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    return getControlErrorMessage(this.formControl, this.errors);\r\n  }\r\n\r\n  onDisableSwitchClick() {\r\n    this.toggleDisabled();\r\n  }\r\n\r\n  private toggleDisabled() {\r\n    const disabled = !this.disabled$.value;\r\n    if (disabled === true) {\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n    this.disabled$.next(disabled);\r\n  }\r\n\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\r\nimport { FormFieldComponent } from '../shared/form-field-component';\r\n\r\n/**\r\n * This component renders a textarea field\r\n */\r\n@FormFieldComponent('textarea')\r\n@Component({\r\n  selector: 'igo-form-field-textarea',\r\n  templateUrl: './form-field-textarea.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldTextareaComponent implements OnInit {\r\n\r\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Wheter a disable switch should be available\r\n   */\r\n  @Input() disableSwitch: boolean = false;\r\n\r\n  /**\r\n   * Whether the field is required\r\n   */\r\n  get required(): boolean {\r\n    return formControlIsRequired(this.formControl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabled$.next(this.formControl.disabled);\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    return getControlErrorMessage(this.formControl, this.errors);\r\n  }\r\n\r\n  onDisableSwitchClick() {\r\n    this.toggleDisabled();\r\n  }\r\n\r\n  private toggleDisabled() {\r\n    const disabled = !this.disabled$.value;\r\n    if (disabled === true) {\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n    this.disabled$.next(disabled);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoDynamicOutletModule } from '../../dynamic-component/dynamic-outlet/dynamic-outlet.module';\r\n\r\nimport { FormFieldComponent } from './form-field.component';\r\nimport { FormFieldSelectComponent } from './form-field-select.component';\r\nimport { FormFieldTextComponent } from './form-field-text.component';\r\nimport { FormFieldTextareaComponent } from './form-field-textarea.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    IgoLanguageModule,\r\n    IgoDynamicOutletModule\r\n  ],\r\n  exports: [\r\n    FormFieldComponent,\r\n    FormFieldSelectComponent,\r\n    FormFieldTextComponent,\r\n    FormFieldTextareaComponent\r\n  ],\r\n  declarations: [\r\n    FormFieldComponent,\r\n    FormFieldSelectComponent,\r\n    FormFieldTextComponent,\r\n    FormFieldTextareaComponent\r\n  ]\r\n})\r\nexport class IgoFormFieldModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { getControlErrorMessage } from '../shared/form.utils';\r\nimport { FormField, FormFieldGroup } from '../shared/form.interfaces';\r\n\r\n/**\r\n * A configurable form, optionnally bound to an entity\r\n * (for example in case of un update). Submitting that form\r\n * emits an event with the form data but no other operation is performed.\r\n */\r\n@Component({\r\n  selector: 'igo-form-group',\r\n  templateUrl: './form-group.component.html',\r\n  styleUrls: ['./form-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormGroupComponent {\r\n\r\n  /**\r\n   * Form field group\r\n   */\r\n  @Input() group: FormFieldGroup;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Form group control\r\n   */\r\n  get formControl(): FormGroup { return this.group.control; }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Return the number of columns a field should occupy.\r\n   * The maximum allowed is 2, even if the field config says more.\r\n   * @param field Field\r\n   * @returns Number of columns\r\n   * @internal\r\n   */\r\n  getFieldColSpan(field: FormField): number {\r\n    let colSpan = 2;\r\n    const options = field.options || {};\r\n    if (options.cols && options.cols > 0) {\r\n      colSpan = Math.min(options.cols, 2);\r\n    }\r\n\r\n    return colSpan;\r\n  }\r\n\r\n  /**\r\n   * Return the number of columns a field should occupy.\r\n   * The maximum allowed is 2, even if the field config says more.\r\n   * @param field Field\r\n   * @returns Number of columns\r\n   * @internal\r\n   */\r\n  getFieldNgClass(field: FormField): {[key: string]: boolean} {\r\n    const colspan = this.getFieldColSpan(field);\r\n    return {[`igo-form-field-colspan-${colspan}`]: true};\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    const options = this.group.options || {};\r\n    return getControlErrorMessage(this.formControl, options.errors || {});\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatFormFieldModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { IgoFormFieldModule } from '../form-field/form-field.module';\r\nimport { FormGroupComponent } from './form-group.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    IgoLanguageModule,\r\n    IgoFormFieldModule\r\n  ],\r\n  exports: [\r\n    FormGroupComponent\r\n  ],\r\n  declarations: [\r\n    FormGroupComponent\r\n  ]\r\n})\r\nexport class IgoFormGroupModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoFormFormModule } from './form/form.module';\r\nimport { IgoFormGroupModule } from './form-group/form-group.module';\r\nimport { IgoFormFieldModule } from './form-field/form-field.module';\r\nimport { FormFieldSelectComponent } from './form-field/form-field-select.component';\r\nimport { FormFieldTextComponent } from './form-field/form-field-text.component';\r\nimport { FormFieldTextareaComponent } from './form-field/form-field-textarea.component';\r\nimport { FormService } from './shared/form.service';\r\nimport { FormFieldService } from './shared/form-field.service';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoFormGroupModule,\r\n    IgoFormFieldModule\r\n  ],\r\n  exports: [\r\n    IgoFormFormModule,\r\n    IgoFormGroupModule,\r\n    IgoFormFieldModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    FormService,\r\n    FormFieldService\r\n  ],\r\n  entryComponents: [\r\n    FormFieldSelectComponent,\r\n    FormFieldTextComponent,\r\n    FormFieldTextareaComponent\r\n  ]\r\n})\r\nexport class IgoFormModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatSelectModule } from '@angular/material';\r\n\r\nimport { EntitySelectorComponent } from './entity-selector.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatSelectModule\r\n  ],\r\n  exports: [EntitySelectorComponent],\r\n  declarations: [EntitySelectorComponent]\r\n})\r\nexport class IgoEntitySelectorModule {}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoStopDropPropagation]'\r\n})\r\nexport class StopDropPropagationDirective {\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(event: any): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoStopPropagation]'\r\n})\r\nexport class StopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  public onClick(event: any): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { StopDropPropagationDirective } from './stop-drop-propagation.directive';\r\nimport { StopPropagationDirective } from './stop-propagation.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [StopDropPropagationDirective, StopPropagationDirective],\r\n  exports: [StopDropPropagationDirective, StopPropagationDirective]\r\n})\r\nexport class IgoStopPropagationModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoStopPropagationModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2,\r\n  EventEmitter,\r\n  Output,\r\n  HostListener\r\n} from '@angular/core';\r\n\r\nimport { EntityTableScrollBehavior } from '../shared/entity.enums';\r\n\r\n/**\r\n * Directive that handles an entity table row click and selection.\r\n */\r\n@Directive({\r\n  selector: '[igoEntityTableRow]'\r\n})\r\nexport class EntityTableRowDirective {\r\n\r\n  /**\r\n   * Class added to a selected row\r\n   */\r\n  static selectedCls = 'igo-entity-table-row-selected';\r\n\r\n  /**\r\n   * Class added to a highlighted row\r\n   */\r\n  static highlightedCls = 'igo-entity-table-row-highlighted';\r\n\r\n  /**\r\n   * Whether a row supports selection\r\n   */\r\n  @Input() selection = false;\r\n\r\n  /**\r\n   * Whether clicking a row should select it (if selection is true)\r\n   */\r\n  @Input() selectOnClick: boolean = true;\r\n\r\n  /**\r\n   * Whether the selected row should be highlighted\r\n   */\r\n  @Input()\r\n  highlightSelection: boolean = true;\r\n\r\n  /**\r\n   * Whether a row is selected\r\n   */\r\n  @Input()\r\n  set selected(value: boolean) {\r\n    if (this.selection === false) { return; }\r\n    if (value === this._selected) { return; }\r\n\r\n    this.toggleSelected(value);\r\n    this.scroll();\r\n  }\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n  private _selected = false;\r\n\r\n  /**\r\n   * Scroll behavior on selection\r\n   */\r\n  @Input()\r\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\r\n\r\n  /**\r\n   * Event emitted when a row is selected\r\n   */\r\n  @Output() select = new EventEmitter<EntityTableRowDirective>();\r\n\r\n  /**\r\n   * When a row is clicked, select it if it's supported\r\n   * @ignore\r\n   */\r\n  @HostListener('click')\r\n  onClick() {\r\n    if (this.selection === false || this.selectOnClick === false) {\r\n      return;\r\n    }\r\n\r\n    this.toggleSelected(true);\r\n    this.select.emit(this);\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\r\n\r\n  /**\r\n   * Select a row and add or remove the selected class from it\r\n   * @param selected Whether the row should be selected\r\n   */\r\n  private toggleSelected(selected: boolean) {\r\n    this._selected = selected;\r\n    if (selected === true) {\r\n      this.addCls(EntityTableRowDirective.selectedCls);\r\n      if (this.highlightSelection === true) {\r\n        this.addCls(EntityTableRowDirective.highlightedCls);\r\n      }\r\n    } else {\r\n      this.removeCls(EntityTableRowDirective.selectedCls);\r\n      this.removeCls(EntityTableRowDirective.highlightedCls);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll to the selected row\r\n   */\r\n  private scroll() {\r\n    if (this._selected === true) {\r\n      this.el.nativeElement.scrollIntoView({\r\n        behavior: this.scrollBehavior,\r\n        block: 'center',\r\n        inline: 'center'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the selected CSS class\r\n   */\r\n  private addCls(cls: string) {\r\n    this.renderer.addClass(this.el.nativeElement, cls);\r\n  }\r\n\r\n  /**\r\n   * Remove the selected CSS class\r\n   */\r\n  private removeCls(cls: string) {\r\n    this.renderer.removeClass(this.el.nativeElement, cls);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule\r\n} from '@angular/material';\r\n\r\nimport { IgoStopPropagationModule } from '../../stop-propagation/stop-propagation.module';\r\nimport { IgoCustomHtmlModule } from '../../custom-html/custom-html.module';\r\nimport { EntityTableRowDirective } from './entity-table-row.directive';\r\nimport { EntityTableComponent } from './entity-table.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    IgoStopPropagationModule,\r\n    IgoCustomHtmlModule\r\n  ],\r\n  exports: [\r\n    EntityTableComponent\r\n  ],\r\n  declarations: [\r\n    EntityTableComponent,\r\n    EntityTableRowDirective\r\n  ]\r\n})\r\nexport class IgoEntityTableModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoEntitySelectorModule } from './entity-selector/entity-selector.module';\r\nimport { IgoEntityTableModule } from './entity-table/entity-table.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoEntitySelectorModule,\r\n    IgoEntityTableModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoEntityModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Pipe({\r\n  name: 'secureImage'\r\n})\r\nexport class SecureImagePipe implements PipeTransform {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  transform(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          activityInterceptor: 'false'\r\n        },\r\n        responseType: 'blob'\r\n      })\r\n      .pipe(\r\n        switchMap(blob => {\r\n          return new Observable(observer => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onloadend = () => {\r\n              observer.next(reader.result);\r\n            };\r\n          });\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { SecureImagePipe } from './secure-image.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [SecureImagePipe],\r\n  exports: [SecureImagePipe]\r\n})\r\nexport class IgoImageModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoImageModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keyvalue'\r\n})\r\nexport class KeyValuePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    const keyValues = [];\r\n    Object.getOwnPropertyNames(value).forEach((key: string) =>\r\n      keyValues.push({ key, value: value[key] })\r\n    );\r\n\r\n    return keyValues;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { KeyValuePipe } from './keyvalue.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [KeyValuePipe],\r\n  exports: [KeyValuePipe]\r\n})\r\nexport class IgoKeyValueModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoKeyValueModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-json-dialog',\r\n  templateUrl: './json-dialog.component.html'\r\n})\r\nexport class JsonDialogComponent {\r\n  public title: string;\r\n  public data: any;\r\n  public ignoreKeys: string[];\r\n\r\n  constructor(public dialogRef: MatDialogRef<JsonDialogComponent>) {}\r\n\r\n  isObject(val) {\r\n    return typeof val === 'object' && !Array.isArray(val);\r\n  }\r\n\r\n  getKey(baseKey, key) {\r\n    return (baseKey ? baseKey + '.' : '') + key;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { JsonDialogComponent } from './json-dialog.component';\r\n\r\n@Injectable()\r\nexport class JsonDialogService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  public open(title: any, data, ignoreKeys?: string[]): Observable<any> {\r\n    const dialogRef = this.dialog.open(JsonDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    dialogRef.componentInstance.data = data;\r\n    dialogRef.componentInstance.title = title;\r\n    dialogRef.componentInstance.ignoreKeys = ignoreKeys;\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\nimport { IgoKeyValueModule } from '../keyvalue/keyvalue.module';\r\n\r\nimport { JsonDialogComponent } from './json-dialog.component';\r\nimport { JsonDialogService } from './json-dialog.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatDialogModule, IgoKeyValueModule],\r\n  exports: [JsonDialogComponent],\r\n  declarations: [JsonDialogComponent],\r\n  entryComponents: [JsonDialogComponent],\r\n  providers: [JsonDialogService]\r\n})\r\nexport class IgoJsonDialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoJsonDialogModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  ElementRef,\r\n  Renderer2,\r\n  HostListener,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoListItem]'\r\n})\r\nexport class ListItemDirective {\r\n\r\n  static selectedCls = 'igo-list-item-selected';\r\n  static disabledCls = 'igo-list-item-disabled';\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  @Input()\r\n  get focused() {\r\n    return this._focused;\r\n  }\r\n  set focused(value: boolean) {\r\n    if (value === this._focused) {\r\n      return;\r\n    }\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    value ? this.beforeFocus.emit(this) : this.beforeUnfocus.emit(this);\r\n\r\n    this._focused = value;\r\n    this.toggleSelectedClass();\r\n\r\n    value ? this.focus.emit(this) : this.unfocus.emit(this);\r\n  }\r\n  private _focused = false;\r\n\r\n  @Input()\r\n  get selected() {\r\n    return this._selected;\r\n  }\r\n  set selected(value: boolean) {\r\n    if (value === this._selected) {\r\n      return;\r\n    }\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    value ? this.beforeSelect.emit(this) : this.beforeUnselect.emit(this);\r\n\r\n    this._selected = value;\r\n    this._focused = value;\r\n    this.toggleSelectedClass();\r\n\r\n    value ? this.select.emit(this) : this.unselect.emit(this);\r\n  }\r\n  private _selected = false;\r\n\r\n  @Input()\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    if (value === this._disabled) {\r\n      return;\r\n    }\r\n\r\n    if (value === true) {\r\n      this.selected = false;\r\n    }\r\n\r\n    value ? this.beforeDisable.emit(this) : this.beforeEnable.emit(this);\r\n\r\n    this._disabled = value;\r\n    this.toggleDisabledClass();\r\n\r\n    value ? this.disable.emit(this) : this.enable.emit(this);\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Output() beforeSelect = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeFocus = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeUnselect = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeUnfocus = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeDisable = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeEnable = new EventEmitter<ListItemDirective>();\r\n  @Output() focus = new EventEmitter<ListItemDirective>();\r\n  @Output() unfocus = new EventEmitter<ListItemDirective>();\r\n  @Output() select = new EventEmitter<ListItemDirective>();\r\n  @Output() unselect = new EventEmitter<ListItemDirective>();\r\n  @Output() disable = new EventEmitter<ListItemDirective>();\r\n  @Output() enable = new EventEmitter<ListItemDirective>();\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.selected = true;\r\n  }\r\n\r\n  constructor(public renderer: Renderer2, private el: ElementRef) {}\r\n\r\n  getOffsetTop(): number {\r\n    const padding = 5;\r\n\r\n    return this.el.nativeElement.offsetTop - padding;\r\n  }\r\n\r\n  private toggleSelectedClass() {\r\n    if (this.focused || this.selected) {\r\n      this.addCls(ListItemDirective.selectedCls);\r\n    } else {\r\n      this.removeCls(ListItemDirective.selectedCls);\r\n    }\r\n  }\r\n\r\n  private toggleDisabledClass() {\r\n    if (this.disabled) {\r\n      this.addCls(ListItemDirective.disabledCls);\r\n    } else {\r\n      this.removeCls(ListItemDirective.disabledCls);\r\n    }\r\n  }\r\n\r\n  private addCls(cls: string) {\r\n    this.renderer.addClass(this.el.nativeElement, cls);\r\n  }\r\n\r\n  private removeCls(cls: string) {\r\n    this.renderer.removeClass(this.el.nativeElement, cls);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  OnInit,\r\n  OnDestroy,\r\n  QueryList,\r\n  Input,\r\n  ContentChildren,\r\n  HostListener,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ListItemDirective } from './list-item.directive';\r\n\r\n@Component({\r\n  selector: 'igo-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  @Input()\r\n  get navigation() {\r\n    return this._navigation;\r\n  }\r\n  set navigation(value: boolean) {\r\n    this._navigation = value;\r\n  }\r\n  private _navigation = true;\r\n\r\n  @Input()\r\n  get selection() {\r\n    return this._selection;\r\n  }\r\n  set selection(value: boolean) {\r\n    this._selection = value;\r\n  }\r\n  private _selection = true;\r\n\r\n  get selectedItem() {\r\n    return this._selectedItem;\r\n  }\r\n  set selectedItem(value: ListItemDirective) {\r\n    this.focusedItem = value;\r\n    this._selectedItem = value;\r\n  }\r\n  private _selectedItem: ListItemDirective;\r\n\r\n  get focusedItem() {\r\n    return this._focusedItem;\r\n  }\r\n  set focusedItem(value: ListItemDirective) {\r\n    this._focusedItem = value;\r\n  }\r\n  private _focusedItem: ListItemDirective;\r\n\r\n  private navigationEnabled: boolean;\r\n  private listItems$$: Subscription;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  @ContentChildren(ListItemDirective, { descendants: true })\r\n  listItems: QueryList<ListItemDirective>;\r\n\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    // It would be nice to be able to unsubscribe to the event\r\n    // completely but until ES7 this won't be possible because\r\n    // document events are not observables\r\n    if (this.navigationEnabled) {\r\n      if (event.keyCode === 38 || event.keyCode === 40) {\r\n        event.preventDefault();\r\n        this.navigate(event.keyCode);\r\n      } else if (event.keyCode === 13) {\r\n        this.select(this.focusedItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.enableNavigation();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.listItems.length) {\r\n      this.init();\r\n    }\r\n\r\n    this.listItems$$ = this.listItems.changes.subscribe(\r\n      (items: ListItemDirective[]) => this.init()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.listItems$$.unsubscribe();\r\n  }\r\n\r\n  focus(item?: ListItemDirective) {\r\n    if (!this.selection) {\r\n      return;\r\n    }\r\n\r\n    this.unfocus();\r\n\r\n    // We need to make this check because dynamic\r\n    // lists such as in the search results list may fail\r\n    if (item !== undefined) {\r\n      item.focused = true;\r\n    }\r\n  }\r\n\r\n  unfocus() {\r\n    if (this.focusedItem !== undefined) {\r\n      this.focusedItem.focused = false;\r\n    }\r\n\r\n    this.focusedItem = undefined;\r\n  }\r\n\r\n  focusNext() {\r\n    const items = this.listItems.toArray();\r\n    let item;\r\n    let disabled = true;\r\n    let index = this.getFocusedIndex();\r\n    if (index === undefined) {\r\n      index = -1;\r\n    }\r\n\r\n    while (disabled && index < items.length - 1) {\r\n      index += 1;\r\n      item = items[index];\r\n      disabled = item.disabled;\r\n    }\r\n\r\n    if (item !== undefined) {\r\n      this.focus(item);\r\n    }\r\n  }\r\n\r\n  focusPrevious() {\r\n    const items = this.listItems.toArray();\r\n    let item;\r\n    let disabled = true;\r\n    let index = this.getFocusedIndex();\r\n\r\n    while (disabled && index > 0) {\r\n      index -= 1;\r\n      item = items[index];\r\n      disabled = item.disabled;\r\n    }\r\n\r\n    if (item !== undefined) {\r\n      this.focus(item);\r\n    }\r\n  }\r\n\r\n  select(item?: ListItemDirective) {\r\n    if (!this.selection) {\r\n      return;\r\n    }\r\n\r\n    this.unselect();\r\n\r\n    if (item !== undefined) {\r\n      item.selected = true;\r\n    }\r\n  }\r\n\r\n  unselect() {\r\n    this.unfocus();\r\n\r\n    if (this.selectedItem !== undefined) {\r\n      this.selectedItem.selected = false;\r\n    }\r\n\r\n    this.selectedItem = undefined;\r\n  }\r\n\r\n  enableNavigation() {\r\n    if (this.navigation) {\r\n      this.navigationEnabled = true;\r\n    }\r\n  }\r\n\r\n  disableNavigation() {\r\n    this.navigationEnabled = false;\r\n  }\r\n\r\n  scrollToItem(item: ListItemDirective) {\r\n    this.el.nativeElement.scrollTop = item.getOffsetTop();\r\n  }\r\n\r\n  private init() {\r\n    this.subscribe();\r\n\r\n    this.selectedItem = this.findSelectedItem();\r\n    this.focusedItem = this.findFocusedItem();\r\n\r\n    this.enableNavigation();\r\n  }\r\n\r\n  private subscribe() {\r\n    this.unsubscribe();\r\n\r\n    this.listItems.toArray().forEach(item => {\r\n      this.subscriptions.push(\r\n        item.beforeSelect.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemBeforeSelect(item2)\r\n        )\r\n      );\r\n\r\n      this.subscriptions.push(\r\n        item.select.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemSelect(item2)\r\n        )\r\n      );\r\n\r\n      this.subscriptions.push(\r\n        item.beforeFocus.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemBeforeFocus(item2)\r\n        )\r\n      );\r\n\r\n      this.subscriptions.push(\r\n        item.focus.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemFocus(item2)\r\n        )\r\n      );\r\n    }, this);\r\n  }\r\n\r\n  private unsubscribe() {\r\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\r\n    this.subscriptions = [];\r\n  }\r\n\r\n  private handleItemBeforeFocus(item: ListItemDirective) {\r\n    if (item !== this.focusedItem) {\r\n      this.unselect();\r\n    }\r\n  }\r\n\r\n  private handleItemFocus(item: ListItemDirective) {\r\n    this.focusedItem = item;\r\n  }\r\n\r\n  private handleItemBeforeSelect(item: ListItemDirective) {\r\n    if (item !== this.focusedItem) {\r\n      this.unselect();\r\n    }\r\n  }\r\n\r\n  private handleItemSelect(item: ListItemDirective) {\r\n    this.selectedItem = item;\r\n  }\r\n\r\n  private findSelectedItem() {\r\n    return this.listItems.toArray().find(item => item.selected);\r\n  }\r\n\r\n  private findFocusedItem() {\r\n    return this.listItems.toArray().find(item => item.focused);\r\n  }\r\n\r\n  private getFocusedIndex() {\r\n    return this.listItems\r\n      .toArray()\r\n      .findIndex(item => item === this.focusedItem);\r\n  }\r\n\r\n  private navigate(key: number) {\r\n    switch (key) {\r\n      case 38:\r\n        this.focusPrevious();\r\n        break;\r\n      case 40:\r\n        this.focusNext();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule, MatListModule } from '@angular/material';\r\n\r\nimport { IgoClickoutModule } from '../clickout/clickout.module';\r\n\r\nimport { ListItemDirective } from './list-item.directive';\r\nimport { ListComponent } from './list.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatIconModule, MatListModule, IgoClickoutModule],\r\n  declarations: [ListItemDirective, ListComponent],\r\n  exports: [ListItemDirective, ListComponent]\r\n})\r\nexport class IgoListModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoListModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PanelComponent {\r\n\r\n  @Input()\r\n  get title() {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    this._title = value;\r\n  }\r\n  private _title: string;\r\n\r\n  @Input()\r\n  @HostBinding('class.igo-panel-with-header')\r\n  get withHeader(): boolean {\r\n    return this._withHeader;\r\n  }\r\n  set withHeader(value: boolean) {\r\n    this._withHeader = value;\r\n  }\r\n  private _withHeader = true;\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PanelComponent } from './panel.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    PanelComponent\r\n  ],\r\n  declarations: [\r\n    PanelComponent\r\n  ]\r\n})\r\nexport class IgoPanelModule {}\r\n","import { Directive, Self, HostListener, Renderer2 } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material';\r\n\r\n/**\r\n * <igoSidenavShim> directive.\r\n *\r\n * This directive prevents a material sidenav with mode=\"side\"\r\n * from focusing an element after it's closed\r\n */\r\n@Directive({\r\n  selector: '[igoSidenavShim]'\r\n})\r\nexport class SidenavShimDirective {\r\n  private focusedElement: HTMLElement;\r\n  private blurElement: HTMLElement;\r\n\r\n  @HostListener('open', ['$event'])\r\n  onOpen() {\r\n    this.focusedElement = document.activeElement as HTMLElement;\r\n  }\r\n\r\n  @HostListener('close-start', ['$event'])\r\n  onCloseStart() {\r\n    const focusedElement = document.activeElement as HTMLElement;\r\n    if (focusedElement !== this.focusedElement) {\r\n      this.blurElement = this.focusedElement;\r\n    } else {\r\n      this.blurElement = undefined;\r\n    }\r\n  }\r\n\r\n  @HostListener('close', ['$event'])\r\n  onClose() {\r\n    if (this.blurElement) {\r\n      this.renderer.selectRootElement(this.blurElement).blur();\r\n    }\r\n\r\n    this.blurElement = undefined;\r\n    this.focusedElement = undefined;\r\n  }\r\n\r\n  constructor(@Self() component: MatSidenav, private renderer: Renderer2) {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { SidenavShimDirective } from './sidenav-shim.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [SidenavShimDirective],\r\n  exports: [SidenavShimDirective]\r\n})\r\nexport class IgoSidenavModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSidenavModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'igo-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent {\r\n\r\n  public shown$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  @Input()\r\n  set shown(value: boolean) { this.shown$.next(value); }\r\n  get shown(): boolean { return this.shown$.value; }\r\n\r\n  constructor() {}\r\n\r\n  show() {\r\n    this.shown = true;\r\n  }\r\n\r\n  hide() {\r\n    this.shown = false;\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { ActivityService } from '@igo2/core';\r\nimport { SpinnerComponent } from './spinner.component';\r\n\r\n/**\r\n * A directive to bind a SpinnerComponent to the activity service.\r\n * The activity service tracks any HTTP request and this directive\r\n * will display the spinner it's attached to when the activity counter\r\n * is greater than 0.\r\n */\r\n@Directive({\r\n  selector: '[igoSpinnerActivity]',\r\n  providers: [SpinnerComponent]\r\n})\r\nexport class SpinnerActivityDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Subscription to the activity service counter\r\n   */\r\n  private counter$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() private spinner: SpinnerComponent,\r\n    private activityService: ActivityService\r\n  ) {}\r\n\r\n  /**\r\n   * Subscribe to the activity service counter and display the spinner\r\n   * when it's is greater than 0.\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.counter$$ = this.activityService.counter$\r\n      .pipe(debounceTime(50))\r\n      .subscribe((count: number) => {\r\n        count > 0 ? this.spinner.show() : this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubcribe to the activity service counter.\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.counter$$.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatProgressSpinnerModule } from '@angular/material';\r\n\r\nimport { SpinnerActivityDirective } from './spinner-activity.directive';\r\nimport { SpinnerComponent } from './spinner.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatProgressSpinnerModule],\r\n  declarations: [SpinnerActivityDirective, SpinnerComponent],\r\n  exports: [SpinnerActivityDirective, SpinnerComponent]\r\n})\r\nexport class IgoSpinnerModule {}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport class TableDatabase {\r\n  /** Stream that emits whenever the data has been modified. */\r\n  dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  get data(): any[] {\r\n    return this.dataChange.value;\r\n  }\r\n\r\n  constructor(data?) {\r\n    if (data) {\r\n      this.dataChange.next(data);\r\n    }\r\n  }\r\n\r\n  set(data) {\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  add(item) {\r\n    const copiedData = this.data.slice();\r\n    copiedData.push(item);\r\n    this.set(copiedData);\r\n  }\r\n\r\n  remove(item) {\r\n    const copiedData = this.data.slice();\r\n    const index = copiedData.indexOf(item);\r\n    copiedData.splice(index, 1);\r\n    this.set(copiedData);\r\n  }\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { MatSort } from '@angular/material';\r\n\r\nimport { Observable, BehaviorSubject, merge } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { TableDatabase, TableModel } from './index';\r\n\r\nexport class TableDataSource extends DataSource<any> {\r\n  get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  private _filterChange = new BehaviorSubject('');\r\n\r\n  constructor(\r\n    private _database: TableDatabase,\r\n    private _model: TableModel,\r\n    private _sort: MatSort\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  // Connect function called by the table to retrieve one stream containing\r\n  // the data to render.\r\n  connect(): Observable<any[]> {\r\n    if (!this._database) {\r\n      return merge([]);\r\n    }\r\n    const displayDataChanges = [\r\n      this._database.dataChange,\r\n      this._filterChange,\r\n      this._sort.sortChange\r\n    ];\r\n\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        return this.getFilteredData(this._database.data);\r\n      }),\r\n      map(data => {\r\n        return this.getSortedData(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getFilteredData(data): any[] {\r\n    if (!this.filter) {\r\n      return data;\r\n    }\r\n    return data.slice().filter((item: any) => {\r\n      const searchStr: string = this._model.columns\r\n        .filter(c => c.filterable)\r\n        .map(c => ObjectUtils.resolve(item, c.name))\r\n        .join(' ')\r\n        .toLowerCase();\r\n\r\n      return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n    });\r\n  }\r\n\r\n  getSortedData(data): any[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const propertyA: number | string = ObjectUtils.resolve(\r\n        a,\r\n        this._sort.active\r\n      );\r\n      const propertyB: number | string = ObjectUtils.resolve(\r\n        b,\r\n        this._sort.active\r\n      );\r\n\r\n      return ObjectUtils.naturalCompare(\r\n        propertyB,\r\n        propertyA,\r\n        this._sort.direction\r\n      );\r\n    });\r\n  }\r\n}\r\n","export enum TableActionColor {\r\n  primary,\r\n  accent,\r\n  warn\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  OnInit,\r\n  AfterViewInit,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { MatSort } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { fromEvent } from 'rxjs';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { TableModel } from './table-model.interface';\r\nimport { TableDatabase } from './table-database';\r\nimport { TableDataSource } from './table-datasource';\r\nimport { TableActionColor } from './table-action-color.enum';\r\n\r\n@Component({\r\n  selector: 'igo-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnChanges, OnInit, AfterViewInit {\r\n  @Input()\r\n  get database(): TableDatabase {\r\n    return this._database;\r\n  }\r\n  set database(value: TableDatabase) {\r\n    this._database = value;\r\n  }\r\n  private _database: TableDatabase;\r\n\r\n  @Input()\r\n  get model(): TableModel {\r\n    return this._model;\r\n  }\r\n  set model(value: TableModel) {\r\n    this._model = value;\r\n  }\r\n  private _model: TableModel;\r\n\r\n  @Input()\r\n  get hasFilterInput(): boolean {\r\n    return this._hasFIlterInput;\r\n  }\r\n  set hasFilterInput(value: boolean) {\r\n    this._hasFIlterInput = value;\r\n  }\r\n  private _hasFIlterInput = true;\r\n\r\n  public displayedColumns;\r\n  public dataSource: TableDataSource | null;\r\n  public selection = new SelectionModel<any>(true, []);\r\n\r\n  @Output()\r\n  select = new EventEmitter<{\r\n    added: any[];\r\n    removed: any[];\r\n    source: SelectionModel<any>;\r\n  }>();\r\n\r\n  @ViewChild('filter') filter: ElementRef;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new TableDataSource(this.database, this.model, this.sort);\r\n\r\n    if (this.model) {\r\n      this.displayedColumns = this.model.columns\r\n        .filter(c => c.displayed !== false)\r\n        .map(c => c.name);\r\n\r\n      if (this.model.selectionCheckbox) {\r\n        this.displayedColumns.unshift('selectionCheckbox');\r\n      }\r\n      if (this.model.actions && this.model.actions.length) {\r\n        this.displayedColumns.push('action');\r\n      }\r\n    }\r\n\r\n    this.selection.changed.subscribe(e => this.select.emit(e));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.filter) {\r\n      fromEvent(this.filter.nativeElement, 'keyup')\r\n        .pipe(\r\n          debounceTime(150),\r\n          distinctUntilChanged()\r\n        )\r\n        .subscribe(() => {\r\n          if (!this.dataSource) {\r\n            return;\r\n          }\r\n          this.dataSource.filter = this.filter.nativeElement.value;\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnChanges(change) {\r\n    if (change.database) {\r\n      this.dataSource = new TableDataSource(\r\n        this.database,\r\n        this.model,\r\n        this.sort\r\n      );\r\n      this.selection.clear();\r\n    }\r\n  }\r\n\r\n  getActionColor(colorId: number): string {\r\n    return TableActionColor[colorId];\r\n  }\r\n\r\n  getValue(row, key) {\r\n    return ObjectUtils.resolve(row, key);\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.database.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.database.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  handleClickAction(event, action, row) {\r\n    event.stopPropagation();\r\n    action.click(row);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTableModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSortModule,\r\n  MatCheckboxModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { TableComponent } from './table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CdkTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    IgoLanguageModule\r\n  ],\r\n  declarations: [TableComponent],\r\n  exports: [TableComponent]\r\n})\r\nexport class IgoTableModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoTableModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Tool } from './tool.interface';\r\n\r\n/**\r\n * Service where runtime tool configurations are registered\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolService {\r\n\r\n  static tools: {[key: string]: Tool} = {};\r\n\r\n  static register(tool: Tool) {\r\n    ToolService.tools[tool.name] = tool;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Return a tool\r\n   * @param name Tool name\r\n   * @returns tool Tool\r\n   */\r\n  getTool(name: string): Tool {\r\n    return ToolService.tools[name];\r\n  }\r\n\r\n  /**\r\n   * Return all tools\r\n   * @returns tTols\r\n   */\r\n  getTools(): Tool[] {\r\n    return Object.values(ToolService.tools);\r\n  }\r\n\r\n}\r\n","import { EntityRecord, EntityStore } from '../../entity';\r\nimport { Tool, ToolboxOptions } from './tool.interface';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\n/**\r\n * Service where all available tools and their component are registered.\r\n */\r\nexport class Toolbox {\r\n  /**\r\n   * Observable of the active tool\r\n   */\r\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Ordered list of tool names to display in a toolbar\r\n   */\r\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * Observable of the active tool\r\n   */\r\n  private activeTool$$: Subscription;\r\n\r\n  /**\r\n   * Active tool history. Useful for activating the previous tool.\r\n   */\r\n  private activeToolHistory: string[] = [];\r\n\r\n  /**\r\n   * Tool store\r\n   */\r\n  private store = new EntityStore<Tool>([], {\r\n    getKey: (tool: Tool) => tool.name\r\n  });\r\n\r\n  get tools$(): BehaviorSubject<Tool[]> {\r\n    return this.store.entities$;\r\n  }\r\n\r\n  constructor(private options: ToolboxOptions = {}) {\r\n    this.setToolbar(options.toolbar);\r\n    this.initStore();\r\n  }\r\n\r\n  /**\r\n   * Destroy the toolbox\r\n   */\r\n  destroy() {\r\n    this.activeTool$$.unsubscribe();\r\n    this.store.destroy();\r\n  }\r\n\r\n  /**\r\n   * Return a tool\r\n   * @param name Tool name\r\n   * @returns tool Tool\r\n   */\r\n  getTool(name: string): Tool {\r\n    return this.store.get(name);\r\n  }\r\n\r\n  /**\r\n   * Return all tools\r\n   * @returns Array of tools\r\n   */\r\n  getTools(): Tool[] {\r\n    return this.store.all();\r\n  }\r\n\r\n  /**\r\n   * Set tool configurations\r\n   * @param tools Tools\r\n   */\r\n  setTools(tools: Tool[]) {\r\n    this.store.load(tools);\r\n  }\r\n\r\n  /**\r\n   * Set toolbar\r\n   * @param toolbar A list of tool names\r\n   */\r\n  setToolbar(toolbar: string[]) {\r\n    this.toolbar$.next(toolbar || []);\r\n  }\r\n\r\n  /**\r\n   * Activate a tool (and deactivate other tools)\r\n   * @param name Tool name\r\n   * @param options Tool options\r\n   */\r\n  activateTool(name: string, options: { [key: string]: any } = {}) {\r\n    const tool = this.getTool(name);\r\n    if (tool === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.store.state.update(tool, { active: true, options }, true);\r\n  }\r\n\r\n  /**\r\n   * Activate the previous tool, if any\r\n   */\r\n  activatePreviousTool() {\r\n    if (this.activeToolHistory.length <= 1) {\r\n      this.deactivateTool();\r\n      return;\r\n    }\r\n    const [previous, current] = this.activeToolHistory.splice(-2, 2);\r\n    this.activateTool(previous);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active tool\r\n   */\r\n  deactivateTool() {\r\n    this.clearActiveToolHistory();\r\n    this.store.state.updateAll({ active: false });\r\n  }\r\n\r\n  /**\r\n   * Initialize the tool store and start observing the active tool\r\n   */\r\n  private initStore() {\r\n    this.store = new EntityStore<Tool>([], {\r\n      getKey: (entity: Tool) => entity.name\r\n    });\r\n\r\n    this.activeTool$$ = this.store.stateView\r\n      .firstBy$((record: EntityRecord<Tool>) => record.state.active === true)\r\n      .subscribe((record: EntityRecord<Tool>) => {\r\n        if (record === undefined) {\r\n          this.setActiveTool(undefined);\r\n          return;\r\n        }\r\n\r\n        const tool = record.entity;\r\n        const options = Object.assign(\r\n          {},\r\n          tool.options || {},\r\n          record.state.options || {}\r\n        );\r\n        this.setActiveTool(Object.assign({}, tool, { options }));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Set the active tool and update the tool history\r\n   * @param tool Tool\r\n   */\r\n  private setActiveTool(tool: Tool | undefined) {\r\n    this.activeTool$.next(tool);\r\n    if (tool === undefined) {\r\n      this.clearActiveToolHistory();\r\n    } else {\r\n      this.activeToolHistory = this.activeToolHistory\r\n        .filter((name: string) => name !== tool.name)\r\n        .concat([tool.name]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the tool history\r\n   */\r\n  private clearActiveToolHistory() {\r\n    this.activeToolHistory = [];\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function toolSlideInOut(\r\n  speed = '300ms',\r\n  type = 'ease-in-out'\r\n): AnimationTriggerMetadata {\r\n  return trigger('toolSlideInOut', [\r\n    state(\r\n      'enter',\r\n      style({\r\n        transform: 'translate3d(0, 0, 0)'\r\n      })\r\n    ),\r\n    transition('void => enter', animate(speed + ' ' + type))\r\n  ]);\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\n\r\nimport { Action, ActionStore } from '../../action';\r\nimport { Tool } from '../shared/tool.interface';\r\nimport { Toolbox } from '../shared/toolbox';\r\nimport { toolSlideInOut } from './toolbox.animation';\r\n\r\n@Component({\r\n  selector: 'igo-toolbox',\r\n  templateUrl: 'toolbox.component.html',\r\n  styleUrls: ['toolbox.component.scss'],\r\n  animations: [toolSlideInOut()],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ToolboxComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Observable of the active tool\r\n   */\r\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Store of actions that toggle tools\r\n   */\r\n  actionStore: ActionStore = new ActionStore([]);\r\n\r\n  /**\r\n   * Observable of he anmation state\r\n   */\r\n  animation$: BehaviorSubject<string> = new BehaviorSubject('none');\r\n\r\n  /**\r\n   * Observable of the toolbar\r\n   */\r\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * Subscription to the active tool\r\n   */\r\n  private activeTool$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to the toolbar\r\n   */\r\n  private toolbar$$: Subscription;\r\n\r\n  /**\r\n   * Observable of the ongoing animation. This is useful when\r\n   * multiple animations are triggered at once i.e. when the user clicks\r\n   * too fast on different actions\r\n   */\r\n  private animating$ = new BehaviorSubject<boolean>(false);\r\n\r\n  /**\r\n   * Subscription to the ongoing animation\r\n   */\r\n  private animating$$: Subscription;\r\n\r\n  /**\r\n   * Toolbox\r\n   */\r\n  @Input() toolbox: Toolbox;\r\n\r\n  /**\r\n   * Whether the toolbox should animate the first tool entering\r\n   */\r\n  @Input() animate: boolean = false;\r\n\r\n  /**\r\n   * Whether the Toolbar should display actions' titles\r\n   */\r\n  get toolbarWithTitle(): boolean {\r\n    return this.activeTool$.value === undefined;\r\n  }\r\n\r\n  /**\r\n   * Initialize the toolbar and subscribe to the active tool\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.toolbar$$ = this.toolbox.toolbar$.subscribe((toolbar: string[]) =>\r\n      this.onToolbarChange(toolbar)\r\n    );\r\n    this.activeTool$$ = this.toolbox.activeTool$.subscribe((tool: Tool) =>\r\n      this.onActiveToolChange(tool)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the active tool and destroy the action store\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.toolbar$$.unsubscribe();\r\n    this.activeTool$$.unsubscribe();\r\n    this.actionStore.destroy();\r\n  }\r\n\r\n  /**\r\n   * Track the starting animation\r\n   * @internal\r\n   */\r\n  onAnimationStart() {\r\n    this.animating$.next(true);\r\n  }\r\n\r\n  /**\r\n   * Untrack the completed animation\r\n   * @internal\r\n   */\r\n  onAnimationComplete() {\r\n    this.animating$.next(false);\r\n  }\r\n\r\n  /**\r\n   * Return a tool's inputs\r\n   * @param tool Tool\r\n   * @returns Tool inputs\r\n   * @internal\r\n   */\r\n  getToolInputs(tool: Tool): { [key: string]: any } {\r\n    return tool.options || {};\r\n  }\r\n\r\n  /**\r\n   * Get Action bar item class function\r\n   * @internal\r\n   */\r\n  get actionBarItemClassFunc() {\r\n    return (tool: Tool) => {\r\n      if (!this.toolbox.activeTool$.value) {\r\n        return;\r\n      }\r\n      return { 'tool-actived': tool.id === this.toolbox.activeTool$.value.name };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize an action store\r\n   * @param toolbar Toolbar\r\n   */\r\n  private onToolbarChange(toolbar: string[]) {\r\n    this.setToolbar(toolbar);\r\n  }\r\n\r\n  /**\r\n   * Activate a tool and trigger an animation or not\r\n   * @param tool Tool to activate\r\n   */\r\n  private onActiveToolChange(tool: Tool) {\r\n    if (!this.animate) {\r\n      this.setActiveTool(tool);\r\n      return;\r\n    }\r\n    this.onAnimate(() => this.setActiveTool(tool));\r\n  }\r\n\r\n  /**\r\n   * Set the active tool\r\n   * @param tool Tool to activate\r\n   */\r\n  private setActiveTool(tool: Tool | undefined) {\r\n    if (tool === undefined) {\r\n      this.actionStore.state.updateAll({ active: false });\r\n    } else {\r\n      const action = this.actionStore.get(tool.name);\r\n      if (action !== undefined) {\r\n        this.actionStore.state.update(action, { active: true }, true);\r\n      }\r\n    }\r\n\r\n    this.activeTool$.next(tool);\r\n    if (this.animate) {\r\n      this.animation$.next('enter');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the toolbar\r\n   */\r\n  private setToolbar(toolbar: string[]) {\r\n    const actions = toolbar.reduce((acc: Action[], toolName: string) => {\r\n      const tool = this.toolbox.getTool(toolName);\r\n      if (tool === undefined) {\r\n        return acc;\r\n      }\r\n\r\n      acc.push({\r\n        id: tool.name,\r\n        title: tool.title,\r\n        icon: tool.icon,\r\n        // iconImage: tool.iconImage,\r\n        tooltip: tool.tooltip,\r\n        args: [tool, this.toolbox],\r\n        handler: (_tool: Tool, _toolbox: Toolbox) => {\r\n          _toolbox.activateTool(_tool.name);\r\n        }\r\n      });\r\n      return acc;\r\n    }, []);\r\n    this.actionStore.load(actions);\r\n    this.toolbar$.next(toolbar);\r\n  }\r\n\r\n  /**\r\n   * Observe the ongoing animation and ignore any incoming animation\r\n   * while one is still ongoing.\r\n   * @param callback Callback to execute when the animation completes\r\n   */\r\n  private onAnimate(callback: () => void) {\r\n    this.unAnimate();\r\n    this.animating$$ = this.animating$.subscribe((animation: boolean) => {\r\n      if (!animation) {\r\n        callback.call(this);\r\n        this.unAnimate();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stop observing an animation when it's complete\r\n   */\r\n  private unAnimate() {\r\n    if (this.animating$$) {\r\n      this.animating$$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoActionModule } from '../../action/action.module';\r\nimport {\r\n    IgoDynamicComponentModule\r\n} from '../../dynamic-component/dynamic-component.module';\r\n\r\nimport { ToolboxComponent } from './toolbox.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoActionModule,\r\n    IgoDynamicComponentModule\r\n  ],\r\n  exports: [\r\n    ToolboxComponent\r\n  ],\r\n  declarations: [\r\n    ToolboxComponent\r\n  ]\r\n})\r\nexport class IgoToolboxModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ToolService } from './shared/tool.service';\r\nimport { IgoToolboxModule } from './toolbox/toolbox.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoToolboxModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoToolModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoToolModule,\r\n      providers: [\r\n        ToolService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponent } from '../../dynamic-component';\r\n\r\nimport { WidgetComponent } from '../shared/widget.interfaces';\r\n\r\n/**\r\n * This component dynamically renders a widget. It also subscribes\r\n * to the widget's 'cancel' and 'complete' events and destroys it\r\n * when any of those event is emitted.\r\n */\r\n@Component({\r\n  selector: 'igo-widget-outlet',\r\n  templateUrl: './widget-outlet.component.html',\r\n  styleUrls: ['./widget-outlet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class WidgetOutletComponent implements OnDestroy {\r\n\r\n  /**\r\n   * Widget subscribers to 'cancel' and 'complete'\r\n   * @internal\r\n   */\r\n  private baseSubscribers = {\r\n    cancel: (event: any) => this.onCancel(event),\r\n    complete: (event: any) => this.onComplete(event)\r\n  };\r\n\r\n  /**\r\n   * Widget\r\n   */\r\n  @Input() widget: DynamicComponent<WidgetComponent>;\r\n\r\n  /**\r\n   * Widget inputs\r\n   */\r\n  @Input() inputs: {[key: string]: any};\r\n\r\n  /**\r\n   * Widget subscribers\r\n   */\r\n  @Input() subscribers: {[key: string]: (event: any) => void} = {};\r\n\r\n  /**\r\n   * Event emitted when the widget emits 'complete'\r\n   */\r\n  @Output() complete = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Event emitted when the widget emits 'cancel'\r\n   */\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Destroy the current widget and all it's inner subscriptions\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.destroyWidget();\r\n  }\r\n\r\n  /**\r\n   * Get the effective subscribers. That means a combination of the base\r\n   * subscribers and any subscriber given as input.\r\n   * @returns Combined subscribers\r\n   * @internal\r\n   */\r\n  getEffectiveSubscribers(): {[key: string]: (event: any) => void} {\r\n    const subscribers = Object.assign({}, this.subscribers);\r\n\r\n    // Base subscribers\r\n    Object.keys(this.baseSubscribers).forEach((key: string) => {\r\n      const subscriber = subscribers[key];\r\n      const baseSubscriber = this.baseSubscribers[key];\r\n      if (subscriber !== undefined) {\r\n        subscribers[key] = (event: any) => {\r\n          subscriber(event);\r\n          baseSubscriber(event);\r\n        };\r\n      } else {\r\n        subscribers[key] = baseSubscriber;\r\n      }\r\n    });\r\n\r\n    return subscribers;\r\n  }\r\n\r\n  /**\r\n   * When the widget emits 'cancel', propagate that event and destroy\r\n   * the widget\r\n   */\r\n  private onCancel(event: any) {\r\n    this.cancel.emit(event);\r\n    this.destroyWidget();\r\n  }\r\n\r\n  /**\r\n   * When the widget emits 'complete', propagate that event and destroy\r\n   * the widget\r\n   */\r\n  private onComplete(event: any) {\r\n    this.complete.emit(event);\r\n    this.destroyWidget();\r\n  }\r\n\r\n  /**\r\n   * Destroy the current widget\r\n   */\r\n  private destroyWidget() {\r\n    if (this.widget !== undefined) {\r\n      this.widget.destroy();\r\n    }\r\n    this.widget = undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  IgoDynamicComponentModule\r\n} from '../../dynamic-component/dynamic-component.module';\r\n\r\nimport { WidgetOutletComponent } from './widget-outlet.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoDynamicComponentModule\r\n  ],\r\n  exports: [\r\n    WidgetOutletComponent\r\n  ],\r\n  declarations: [\r\n    WidgetOutletComponent\r\n  ]\r\n})\r\nexport class IgoWidgetOutletModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { DynamicComponentService } from '../../dynamic-component/shared/dynamic-component.service';\r\n\r\nimport { Widget } from './widget';\r\nimport { WidgetComponent } from './widget.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n\r\n  constructor(private dynamicComponentService: DynamicComponentService) {}\r\n\r\n  create(widgetCls: any): Widget {\r\n    return this.dynamicComponentService.create(widgetCls as WidgetComponent);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoWidgetOutletModule } from './widget-outlet/widget-outlet.module';\r\nimport { WidgetService } from './shared/widget.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoWidgetOutletModule\r\n  ],\r\n  exports: [\r\n    IgoWidgetOutletModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    WidgetService\r\n  ]\r\n})\r\nexport class IgoWidgetModule {}\r\n","import { EntityStore } from '../../entity';\r\nimport { Workspace } from './workspace';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * The class is a specialized version of an EntityStore that stores\r\n * workspaces.\r\n */\r\nexport class WorkspaceStore extends EntityStore<Workspace> {\r\n\r\n  activeWorkspace$: BehaviorSubject<Workspace> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Activate the an workspace workspace and deactivate the one currently active\r\n   * @param workspace Workspace\r\n   */\r\n  activateWorkspace(workspace: Workspace) {\r\n    const active = this.activeWorkspace$.value;\r\n    if (active !== undefined) {\r\n      active.deactivate();\r\n    }\r\n\r\n    this.deactivateWorkspace();\r\n    if (workspace !== undefined) {\r\n      this.state.update(workspace, {active: true, selected: true}, true);\r\n      this.activeWorkspace$.next(workspace);\r\n      workspace.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the current workspace\r\n   * @param workspace Workspace\r\n   */\r\n  deactivateWorkspace() {\r\n    const active = this.activeWorkspace$.value;\r\n    if (active !== undefined) {\r\n      active.deactivate();\r\n      this.activeWorkspace$.next(undefined);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { getEntityTitle } from '../../entity';\r\nimport { Workspace } from '../shared/workspace';\r\nimport { WorkspaceStore } from '../shared/store';\r\n\r\n/**\r\n * Drop list that activates the selected workspace emit an event.\r\n */\r\n@Component({\r\n  selector: 'igo-workspace-selector',\r\n  templateUrl: './workspace-selector.component.html',\r\n  styleUrls: ['./workspace-selector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class WorkspaceSelectorComponent {\r\n\r\n  /**\r\n   * Store that holds the available workspaces.\r\n   */\r\n  @Input() store: WorkspaceStore;\r\n\r\n  /**\r\n   * Event emitted when an workspace is selected or unselected\r\n   */\r\n  @Output() selectedChange = new EventEmitter<{\r\n    selected: boolean;\r\n    value: Workspace;\r\n  }>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  getWorkspaceTitle(workspace: Workspace): string {\r\n    return getEntityTitle(workspace);\r\n  }\r\n\r\n  /**\r\n   * When an workspace is manually selected, select it into the\r\n   * store and emit an event.\r\n   * @internal\r\n   * @param event The selection change event\r\n   */\r\n  onSelectedChange(event: {value: Workspace}) {\r\n    const workspace = event.value;\r\n    this.store.activateWorkspace(workspace);\r\n    this.selectedChange.emit({selected: true, value: workspace});\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoEntitySelectorModule } from '../../entity/entity-selector/entity-selector.module';\r\nimport { WorkspaceSelectorComponent } from './workspace-selector.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoEntitySelectorModule\r\n  ],\r\n  exports: [\r\n    WorkspaceSelectorComponent\r\n  ],\r\n  declarations: [\r\n    WorkspaceSelectorComponent\r\n  ]\r\n})\r\nexport class IgoWorkspaceSelectorModule {}\r\n","import { Subscription, BehaviorSubject, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { ActionStore } from '../../action';\r\nimport { Widget } from '../../widget';\r\nimport { EntityRecord, EntityStore } from '../../entity';\r\n\r\nimport { WorkspaceOptions } from './workspace.interfaces';\r\n\r\n/**\r\n * This class is responsible of managing the relations between\r\n * entities and the actions that consume them. It also defines an\r\n * entity table template that may be used by an entity table component.\r\n */\r\nexport class Workspace<E extends object = object> {\r\n\r\n  /**\r\n   * Observable of the selected widget\r\n   */\r\n  readonly widget$ = new BehaviorSubject<Widget>(undefined);\r\n\r\n  /**\r\n   * Observable of the selected widget's inputs\r\n   */\r\n  readonly widgetInputs$ = new BehaviorSubject<{[key: string]: any}>({});\r\n\r\n  /**\r\n   * Observable of the selected widget's subscribers\r\n   */\r\n  readonly widgetSubscribers$ = new BehaviorSubject<{[key: string]: (event: any) => void}>({});\r\n\r\n  /**\r\n   * Subscription to the selected entity\r\n   */\r\n  private entities$$: Subscription;\r\n\r\n  /**\r\n   * Whether this workspace is active\r\n   */\r\n  private active: boolean = false;\r\n\r\n  /**\r\n   * State change that trigger an update of the actions availability\r\n   */\r\n  private change: Subject<void> = new Subject();\r\n\r\n  /**\r\n   * Subscription to state changes\r\n   */\r\n  private change$: Subscription;\r\n\r\n  /**\r\n   * Workspace id\r\n   */\r\n  get id(): string { return this.options.id; }\r\n\r\n  /**\r\n   * Workspace title\r\n   */\r\n  get title(): string { return this.options.title; }\r\n\r\n  /**\r\n   * Workspace title\r\n   */\r\n  get meta(): {[key: string]: any} { return this.options.meta || {}; }\r\n\r\n  /**\r\n   * Entities store\r\n   */\r\n  get entityStore(): EntityStore<E> { return this.options.entityStore as EntityStore<E>; }\r\n\r\n  /**\r\n   * Actions store (some actions activate a widget)\r\n   */\r\n  get actionStore(): ActionStore { return this.options.actionStore; }\r\n\r\n  /**\r\n   * Selected widget\r\n   */\r\n  get widget(): Widget { return this.widget$.value; }\r\n\r\n  /**\r\n   * Whether a widget is selected\r\n   */\r\n  get hasWidget(): boolean { return this.widget !== undefined; }\r\n\r\n  constructor(protected options: WorkspaceOptions) {}\r\n\r\n  /**\r\n   * Whether this workspace is active\r\n   */\r\n  isActive(): boolean { return this.active; }\r\n\r\n  /**\r\n   * Activate the workspace. By doing that, the workspace will observe\r\n   * the selected entity (from the store) and update the actions availability.\r\n   * For example, some actions require an entity to be selected.\r\n   */\r\n  activate() {\r\n    if (this.active === true) {\r\n      this.deactivate();\r\n    }\r\n    this.active = true;\r\n\r\n    if (this.entityStore !== undefined) {\r\n      this.entities$$ = this.entityStore.stateView.all$()\r\n        .subscribe(() => this.onStateChange());\r\n    }\r\n\r\n    if (this.actionStore !== undefined) {\r\n      this.change$ = this.change\r\n        .pipe(debounceTime(35))\r\n        .subscribe(() => this.actionStore.updateActionsAvailability());\r\n    }\r\n\r\n    this.change.next();\r\n  }\r\n\r\n  /**\r\n   * Deactivate the workspace. Unsubcribe to the selected entity.\r\n   */\r\n  deactivate() {\r\n    this.active = false;\r\n    this.deactivateWidget();\r\n\r\n    if (this.entities$$ !== undefined) {\r\n      this.entities$$.unsubscribe();\r\n    }\r\n    if (this.change$ !== undefined) {\r\n      this.change$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate a widget. In itself, activating a widget doesn't render it but,\r\n   * if an WorkspaceWidgetOutlet component is bound to this workspace, the widget will\r\n   * show up.\r\n   * @param widget Widget\r\n   * @param inputs Inputs the widget will receive\r\n   */\r\n  activateWidget(\r\n    widget: Widget,\r\n    inputs: {[key: string]: any} = {},\r\n    subscribers: {[key: string]: (event: any) => void} = {}\r\n  ) {\r\n    this.widget$.next(widget);\r\n    this.widgetInputs$.next(inputs);\r\n    this.widgetSubscribers$.next(subscribers);\r\n    this.change.next();\r\n  }\r\n\r\n  /**\r\n   * Deactivate a widget.\r\n   */\r\n  deactivateWidget() {\r\n    this.widget$.next(undefined);\r\n    this.change.next();\r\n  }\r\n\r\n  /**\r\n   * When the state changes, update the actions availability.\r\n   */\r\n  private onStateChange() {\r\n    this.change.next();\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { Widget } from '../../widget';\r\nimport { Workspace } from '../shared/workspace';\r\n\r\n/**\r\n * This component dynamically render an Workspace's active widget.\r\n * It also deactivate that widget whenever the widget's component\r\n * emit the 'cancel' or 'complete' event.\r\n */\r\n@Component({\r\n  selector: 'igo-workspace-widget-outlet',\r\n  templateUrl: './workspace-widget-outlet.component.html',\r\n  styleUrls: ['./workspace-widget-outlet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class WorkspaceWidgetOutletComponent {\r\n\r\n  /**\r\n   * Workspace\r\n   */\r\n  @Input() workspace: Workspace;\r\n\r\n  /**\r\n   * Event emitted when a widget is deactivate which happens\r\n   * when the widget's component emits the 'cancel' or 'complete' event.\r\n   */\r\n  @Output() deactivateWidget = new EventEmitter<Widget>();\r\n\r\n  /**\r\n   * Observable of the workspace's active widget\r\n   * @internal\r\n   */\r\n  get widget$(): BehaviorSubject<Widget> { return this.workspace.widget$; }\r\n\r\n  /**\r\n   * Observable of the workspace's widget inputs\r\n   * @internal\r\n   */\r\n  get widgetInputs$(): BehaviorSubject<{[key: string]: any}> {\r\n    return this.workspace.widgetInputs$;\r\n  }\r\n\r\n  /**\r\n   * Observable of the workspace's widget inputs\r\n   * @internal\r\n   */\r\n  get widgetSubscribers$(): BehaviorSubject<{[key: string]: (event: any) => void}> {\r\n    return this.workspace.widgetSubscribers$;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * When a widget's component emit the 'cancel' event,\r\n   * deactivate that widget and emit the 'deactivateWidget' event.\r\n   * @param widget Widget\r\n   * @internal\r\n   */\r\n  onWidgetCancel(widget: Widget) {\r\n    this.workspace.deactivateWidget();\r\n    this.deactivateWidget.emit(widget);\r\n  }\r\n\r\n  /**\r\n   * When a widget's component emit the 'cancel' event,\r\n   * deactivate that widget and emit the 'deactivateWidget' event.\r\n   * @param widget Widget\r\n   * @internal\r\n   */\r\n  onWidgetComplete(widget: Widget) {\r\n    this.workspace.deactivateWidget();\r\n    this.deactivateWidget.emit(widget);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoWidgetOutletModule } from '../../widget/widget-outlet/widget-outlet.module';\r\n\r\nimport { WorkspaceWidgetOutletComponent } from './workspace-widget-outlet.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoWidgetOutletModule\r\n  ],\r\n  exports: [\r\n    WorkspaceWidgetOutletComponent\r\n  ],\r\n  declarations: [\r\n    WorkspaceWidgetOutletComponent\r\n  ]\r\n})\r\nexport class IgoWorkspaceWidgetOutletModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoWorkspaceSelectorModule } from './workspace-selector/workspace-selector.module';\r\nimport { IgoWorkspaceWidgetOutletModule } from './workspace-widget-outlet/workspace-widget-outlet.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoWorkspaceSelectorModule,\r\n    IgoWorkspaceWidgetOutletModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoWorkspaceModule {}\r\n","import { Tool } from './tool.interface';\r\nimport { ToolService } from './tool.service';\r\n\r\nexport function ToolComponent(tool: Partial<Tool>): (cls: any) => any {\r\n  return (compType: any) => {\r\n    ToolService.register(Object.assign({}, tool, {\r\n      component: compType\r\n    } as Tool));\r\n  };\r\n}\r\n","import { DynamicComponent } from '../../dynamic-component/shared/dynamic-component';\r\nimport { WidgetComponent } from './widget.interfaces';\r\n\r\nexport class Widget extends DynamicComponent<WidgetComponent> {}\r\n"],"names":["state","filter","tslib_1.__values","tslib_1.__extends","FormFieldComponent"],"mappings":"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"}
