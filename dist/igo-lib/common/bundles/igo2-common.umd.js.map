{"version":3,"file":"igo2-common.umd.js.map","sources":["node_modules/tslib/tslib.es6.js","ng://@igo2/common/lib/entity/shared/entity.enums.ts","ng://@igo2/common/lib/entity/shared/entity.utils.ts","ng://@igo2/common/lib/entity/shared/state.ts","ng://@igo2/common/lib/entity/shared/view.ts","ng://@igo2/common/lib/entity/shared/store.ts","ng://@igo2/common/lib/entity/shared/watcher.ts","ng://@igo2/common/lib/entity/shared/transaction.ts","ng://@igo2/common/lib/entity/entity-selector/entity-selector.component.ts","ng://@igo2/common/lib/entity/entity-table/entity-table.component.ts","ng://@igo2/common/lib/action/shared/action.enums.ts","ng://@igo2/common/lib/action/actionbar/actionbar.component.ts","ng://@igo2/common/lib/action/actionbar/actionbar-item.component.ts","ng://@igo2/common/lib/action/actionbar/actionbar.module.ts","ng://@igo2/common/lib/action/action.module.ts","ng://@igo2/common/lib/backdrop/backdrop.component.ts","ng://@igo2/common/lib/backdrop/backdrop.module.ts","ng://@igo2/common/lib/clickout/clickout.directive.ts","ng://@igo2/common/lib/clickout/clickout.module.ts","ng://@igo2/common/lib/clone/clone.pipe.ts","ng://@igo2/common/lib/clone/clone.module.ts","ng://@igo2/common/lib/collapsible/collapse.directive.ts","ng://@igo2/common/lib/collapsible/collapsible.component.ts","ng://@igo2/common/lib/collapsible/collapsible.module.ts","ng://@igo2/common/lib/confirm-dialog/confirm-dialog.component.ts","ng://@igo2/common/lib/confirm-dialog/confirm-dialog.service.ts","ng://@igo2/common/lib/confirm-dialog/confirm-dialog.module.ts","ng://@igo2/common/lib/context-menu/context-menu.directive.ts","ng://@igo2/common/lib/context-menu/context-menu.module.ts","ng://@igo2/common/lib/custom-html/custom-html.component.ts","ng://@igo2/common/lib/custom-html/custom-html.pipe.ts","ng://@igo2/common/lib/custom-html/custom-html.module.ts","ng://@igo2/common/lib/drag-drop/drag-drop.directive.ts","ng://@igo2/common/lib/drag-drop/drag-drop.module.ts","ng://@igo2/common/lib/dynamic-component/shared/dynamic-component.ts","ng://@igo2/common/lib/dynamic-component/shared/dynamic-component.service.ts","ng://@igo2/common/lib/dynamic-component/dynamic-outlet/dynamic-outlet.component.ts","ng://@igo2/common/lib/dynamic-component/dynamic-outlet/dynamic-outlet.module.ts","ng://@igo2/common/lib/dynamic-component/dynamic-component.module.ts","ng://@igo2/common/lib/flexible/flexible.component.ts","ng://@igo2/common/lib/flexible/flexible.module.ts","ng://@igo2/common/lib/form/shared/form.utils.ts","ng://@igo2/common/lib/form/form/form.component.ts","ng://@igo2/common/lib/form/form/form.module.ts","ng://@igo2/common/lib/form/shared/form-field.service.ts","ng://@igo2/common/lib/form/shared/form.service.ts","ng://@igo2/common/lib/form/shared/form-field-component.ts","ng://@igo2/common/lib/form/form-field/form-field.component.ts","ng://@igo2/common/lib/form/form-field/form-field-select.component.ts","ng://@igo2/common/lib/form/form-field/form-field-text.component.ts","ng://@igo2/common/lib/form/form-field/form-field-textarea.component.ts","ng://@igo2/common/lib/form/form-field/form-field.module.ts","ng://@igo2/common/lib/form/form-group/form-group.component.ts","ng://@igo2/common/lib/form/form-group/form-group.module.ts","ng://@igo2/common/lib/form/form.module.ts","ng://@igo2/common/lib/entity/entity-selector/entity-selector.module.ts","ng://@igo2/common/lib/stop-propagation/stop-drop-propagation.directive.ts","ng://@igo2/common/lib/stop-propagation/stop-propagation.directive.ts","ng://@igo2/common/lib/stop-propagation/stop-propagation.module.ts","ng://@igo2/common/lib/entity/entity-table/entity-table-row.directive.ts","ng://@igo2/common/lib/entity/entity-table/entity-table.module.ts","ng://@igo2/common/lib/entity/entity.module.ts","ng://@igo2/common/lib/image/secure-image.pipe.ts","ng://@igo2/common/lib/image/image.module.ts","ng://@igo2/common/lib/keyvalue/keyvalue.pipe.ts","ng://@igo2/common/lib/keyvalue/keyvalue.module.ts","ng://@igo2/common/lib/json-dialog/json-dialog.component.ts","ng://@igo2/common/lib/json-dialog/json-dialog.service.ts","ng://@igo2/common/lib/json-dialog/json-dialog.module.ts","ng://@igo2/common/lib/list/list-item.directive.ts","ng://@igo2/common/lib/list/list.component.ts","ng://@igo2/common/lib/list/list.module.ts","ng://@igo2/common/lib/panel/panel.component.ts","ng://@igo2/common/lib/panel/panel.module.ts","ng://@igo2/common/lib/sidenav/sidenav-shim.directive.ts","ng://@igo2/common/lib/sidenav/sidenav.module.ts","ng://@igo2/common/lib/spinner/spinner.component.ts","ng://@igo2/common/lib/spinner/spinner-activity.directive.ts","ng://@igo2/common/lib/spinner/spinner.module.ts","ng://@igo2/common/lib/table/table-datasource.ts","ng://@igo2/common/lib/table/table-action-color.enum.ts","ng://@igo2/common/lib/table/table.component.ts","ng://@igo2/common/lib/table/table.module.ts","ng://@igo2/common/lib/tool/shared/tool.service.ts","ng://@igo2/common/lib/action/shared/store.ts","ng://@igo2/common/lib/tool/toolbox/toolbox.animation.ts","ng://@igo2/common/lib/tool/toolbox/toolbox.component.ts","ng://@igo2/common/lib/tool/toolbox/toolbox.module.ts","ng://@igo2/common/lib/tool/tool.module.ts","ng://@igo2/common/lib/widget/widget-outlet/widget-outlet.component.ts","ng://@igo2/common/lib/widget/widget-outlet/widget-outlet.module.ts","ng://@igo2/common/lib/widget/shared/widget.service.ts","ng://@igo2/common/lib/widget/widget.module.ts","ng://@igo2/common/lib/workspace/workspace-selector/workspace-selector.component.ts","ng://@igo2/common/lib/workspace/workspace-selector/workspace-selector.module.ts","ng://@igo2/common/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.component.ts","ng://@igo2/common/lib/workspace/workspace-widget-outlet/workspace-widget-outlet.module.ts","ng://@igo2/common/lib/workspace/workspace.module.ts","ng://@igo2/common/lib/table/table-database.ts","ng://@igo2/common/lib/tool/shared/tool-component.ts","ng://@igo2/common/lib/tool/shared/toolbox.ts","ng://@igo2/common/lib/widget/shared/widget.ts","ng://@igo2/common/lib/workspace/shared/store.ts","ng://@igo2/common/lib/workspace/shared/workspace.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum EntityOperationType {\r\n  Insert = 'Insert',\r\n  Update = 'Update',\r\n  Delete = 'Delete'\r\n}\r\n\r\nexport enum EntityTableColumnRenderer {\r\n  Default = 'Default',\r\n  HTML = 'HTML',\r\n  UnsanitizedHTML = 'UnsanitizedHTML',\r\n  Icon = 'Icon',\r\n  ButtonGroup = 'ButtonGroup'\r\n}\r\n\r\nexport enum EntityTableScrollBehavior {\r\n  Auto = 'auto',\r\n  Instant = 'instant',\r\n  Smooth = 'smooth'\r\n}\r\n\r\nexport enum EntityTableSelectionState {\r\n  None = 'None',\r\n  All = 'All',\r\n  Some = 'Some'\r\n}\r\n","import t from 'typy';\r\n\r\nimport { EntityKey } from './entity.interfaces';\r\n\r\n/**\r\n * Get an entity's named property. Nested properties are supported\r\n * with the dotted notation. (i.e 'author.name')\r\n *\r\n * Note: this method is a 'best attempt' at getting an entity's property.\r\n * It fits the most common cases but you might need to explicitely define\r\n * a property getter when using an EntityStore, for example.\r\n * @param entity Entity\r\n * @param property Property name\r\n * @returns Property value\r\n */\r\nexport function getEntityProperty(entity: object, property: string): any {\r\n  return t(entity, property).safeObject;\r\n}\r\n\r\n/**\r\n * Get an entity's id. An entity's id can be one of:\r\n * 'entity.meta.id', 'entity.meta.idProperty' or 'entity.id'.\r\n *\r\n * Note: See the note in the 'getEntityProperty' documentation.\r\n * @param entity Entity\r\n * @returns Entity id\r\n */\r\nexport function getEntityId(entity: object): EntityKey {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.id ? meta.id : getEntityProperty(entity, meta.idProperty || 'id');\r\n}\r\n\r\n/**\r\n * Get an entity's title. An entity's title can be one of:\r\n * 'entity.meta.title', 'entity.meta.titleProperty' or 'entity.title'.\r\n * @param entity Entity\r\n * @returns Entity title\r\n */\r\nexport function getEntityTitle(entity: object): string {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.title ? meta.title : getEntityProperty(entity, meta.titleProperty || 'title');\r\n}\r\n\r\n/**\r\n * Get an entity's HTML title. An entity's HTML title can be one of:\r\n * 'entity.meta.titleHtml', 'entity.meta.titleHtmlProperty' or 'entity.titleHtml'.\r\n * @param entity Entity\r\n * @returns Entity HTML title\r\n */\r\nexport function getEntityTitleHtml(entity: object): string {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.titleHtml ? meta.titleHtml : getEntityProperty(entity, meta.titleHtmlProperty || 'titleHtml');\r\n}\r\n\r\n/**\r\n * Get an entity's icon. An entity's icon can be one of:\r\n * 'entity.meta.icon', 'entity.meta.iconProperty' or 'entity.icon'.\r\n * @param entity Entity\r\n * @returns Entity icon\r\n */\r\nexport function getEntityIcon(entity: object): string {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.icon ? meta.icon : getEntityProperty(entity, meta.iconProperty || 'icon');\r\n}\r\n\r\n/**\r\n * Get an entity's revision.\r\n * @param entity Entity\r\n * @returns Entity revision\r\n */\r\nexport function getEntityRevision(entity: object): number {\r\n  const meta = (entity as any).meta || {};\r\n  return meta.revision || 0;\r\n}\r\n","import { ReplaySubject } from 'rxjs';\r\n\r\nimport { EntityKey, EntityState, EntityStateManagerOptions } from './entity.interfaces';\r\nimport { getEntityId } from './entity.utils';\r\nimport { EntityStore } from './store';\r\n\r\n/**\r\n * This class is used to track a store's entities state\r\n */\r\nexport class EntityStateManager<E extends object, S extends EntityState = EntityState> {\r\n\r\n  /**\r\n   * State index\r\n   */\r\n  readonly index = new Map<EntityKey, S>();\r\n\r\n  /**\r\n   * Change emitter\r\n   */\r\n  readonly change$ = new ReplaySubject<void>(1);\r\n\r\n  /**\r\n   * Method to get an entity's id\r\n   */\r\n  readonly getKey: (E) => EntityKey;\r\n\r\n  private store: EntityStore<object> | undefined;\r\n\r\n  constructor(options: EntityStateManagerOptions = {}) {\r\n    this.store = options.store ? options.store : undefined;\r\n    this.getKey = options.getKey\r\n      ? options.getKey\r\n      : (this.store ? this.store.getKey : getEntityId);\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Clear state\r\n   */\r\n  clear() {\r\n    if (this.index.size > 0) {\r\n      this.index.clear();\r\n      this.next();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an entity's state\r\n   * @param entity Entity\r\n   * @returns State\r\n   */\r\n  get(entity: E): S {\r\n    return (this.index.get(this.getKey(entity)) || {}) as S;\r\n  }\r\n\r\n  /**\r\n   * Set an entity's state\r\n   * @param entity Entity\r\n   * @param state State\r\n   */\r\n  set(entity: E, state: S) {\r\n    this.setMany([entity], state);\r\n  }\r\n\r\n  /**\r\n   * Set many entitie's state\r\n   * @param entitie Entities\r\n   * @param state State\r\n   */\r\n  setMany(entities: E[], state: S) {\r\n    entities.forEach((entity: E) => {\r\n      this.index.set(this.getKey(entity), Object.assign({}, state));\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Set state of all entities that already have a state. This is not\r\n   * the same as setting the state of all the store's entities.\r\n   * @param state State\r\n   */\r\n  setAll(state: S) {\r\n    Array.from(this.index.keys()).forEach((key: EntityKey) => {\r\n      this.index.set(key, Object.assign({}, state));\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Update an entity's state\r\n   * @param entity Entity\r\n   * @param changes State changes\r\n   */\r\n  update(entity: E, changes: Partial<S>, exclusive = false) {\r\n    this.updateMany([entity], changes, exclusive);\r\n  }\r\n\r\n  /**\r\n   * Update many entitie's state\r\n   * @param entitie Entities\r\n   * @param changes State changes\r\n   */\r\n  updateMany(entities: E[], changes: Partial<S>, exclusive = false) {\r\n    if (exclusive === true) {\r\n      return this.updateManyExclusive(entities, changes);\r\n    }\r\n\r\n    entities.forEach((entity: E) => {\r\n      const state = Object.assign({}, this.get(entity), changes);\r\n      this.index.set(this.getKey(entity), state);\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Reversee an entity's state\r\n   * @param entity Entity\r\n   * @param keys State keys to reverse\r\n   */\r\n  reverse(entity: E, keys: string[]) {\r\n    this.reverseMany([entity], keys);\r\n  }\r\n\r\n  /**\r\n   * Reverse many entitie's state\r\n   * @param entitie Entities\r\n   * @param keys State keys to reverse\r\n   */\r\n  reverseMany(entities: E[], keys: string[]) {\r\n    entities.forEach((entity: E) => {\r\n      const currentState = this.get(entity);\r\n      const changes = keys.reduce((acc: {[key: string]: boolean}, key: string) => {\r\n        acc[key] = currentState[key] || false;\r\n        return acc;\r\n      }, {});\r\n      const reversedChanges = this.reverseChanges(changes);\r\n      const state = Object.assign({}, currentState, reversedChanges);\r\n      this.index.set(this.getKey(entity), state);\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Update state of all entities that already have a state. This is not\r\n   * the same as updating the state of all the store's entities.\r\n   * @param changes State\r\n   */\r\n  updateAll(changes: Partial<S>) {\r\n    const allKeys = this.getAllKeys();\r\n    Array.from(allKeys).forEach((key: EntityKey) => {\r\n      const state = Object.assign({}, this.index.get(key), changes);\r\n      this.index.set(key, state);\r\n    });\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * When some state changes are flagged as 'exclusive', reverse\r\n   * the state of all other entities. Changes are reversable when\r\n   * they are boolean.\r\n   * @param entitie Entities\r\n   * @param changes State changes\r\n   */\r\n  private updateManyExclusive(entities: E[], changes: Partial<S>) {\r\n    const reverseChanges = this.reverseChanges(changes);\r\n\r\n    const keys = entities.map((entity: E) => this.getKey(entity));\r\n    const allKeys = new Set(keys.concat(Array.from(this.getAllKeys())));\r\n    allKeys.forEach((key: EntityKey) => {\r\n      const state = this.index.get(key) || {} as S;\r\n      if (keys.indexOf(key) >= 0) {\r\n        this.index.set(key, Object.assign({}, state, changes));\r\n      } else {\r\n        this.index.set(key, Object.assign({}, state, reverseChanges));\r\n      }\r\n    });\r\n\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Compute a 'reversed' version of some state changes.\r\n   * Changes are reversable when they are boolean.\r\n   * @param changes State changes\r\n   * @returns Reversed state changes\r\n   */\r\n  private reverseChanges(changes: Partial<S>): Partial<S> {\r\n    return Object.entries(changes).reduce((reverseChanges: Partial<S>, bunch: [string, any]) => {\r\n      const [changeKey, value] = bunch;\r\n      if (typeof value === typeof true) {\r\n        reverseChanges[changeKey] = !value;\r\n      }\r\n      return reverseChanges;\r\n    }, {});\r\n  }\r\n\r\n  /**\r\n   * Return all the keys in that state and in the store it's bound to, if any.\r\n   * @returns Set of keys\r\n   */\r\n  private getAllKeys(): Set<EntityKey> {\r\n    const storeKeys = this.store ? Array.from(this.store.index.keys()) : [];\r\n    return new Set(Array.from(this.index.keys()).concat(storeKeys));\r\n  }\r\n\r\n  /**\r\n   * Emit 'change' event\r\n   */\r\n  private next() {\r\n    this.change$.next();\r\n  }\r\n\r\n}\r\n","import { BehaviorSubject, Observable, Subscription, combineLatest } from 'rxjs';\r\nimport { debounceTime, map, skip } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport {\r\n  EntityFilterClause,\r\n  EntitySortClause,\r\n  EntityJoinClause\r\n} from './entity.interfaces';\r\n\r\n/**\r\n * An entity view streams entities from an observable source. These entities\r\n * can be filtered or sorted without affecting the source. A view can also\r\n * combine data from multiple sources, joined together.\r\n */\r\nexport class EntityView<E extends object, V extends object = E> {\r\n\r\n  /**\r\n   * Observable stream of values\r\n   */\r\n  readonly values$ = new BehaviorSubject<V[]>([]);\r\n\r\n  /**\r\n   * Whether this view has been lifted\r\n   */\r\n  private lifted = false;\r\n\r\n  /**\r\n   * Join clauses\r\n   */\r\n  private joins: EntityJoinClause[] = [];\r\n\r\n  /**\r\n   * Observable of a filter clause\r\n   */\r\n  private filter$ = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Observable of a sort clause\r\n   */\r\n  private sort$ = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Subscription to the source (and joined sources) values\r\n   */\r\n  private values$$: Subscription;\r\n\r\n  /**\r\n   * Number of entities\r\n   */\r\n  readonly count$ = new BehaviorSubject<number>(0);\r\n  get count(): number { return this.count$.value; }\r\n\r\n  /**\r\n   * Whether the store is empty\r\n   */\r\n  readonly empty$ = new BehaviorSubject<boolean>(true);\r\n  get empty(): boolean { return this.empty$.value; }\r\n\r\n  constructor(private source$: BehaviorSubject<E[]>) {}\r\n\r\n  /**\r\n   * Get all the values\r\n   * @returns Array of values\r\n   */\r\n  all(): V[] {\r\n    return this.values$.value;\r\n  }\r\n\r\n  /**\r\n   * Observe all the values\r\n   * @returns Observable of values\r\n   */\r\n  all$(): BehaviorSubject<V[]> {\r\n    return this.values$;\r\n  }\r\n\r\n  /**\r\n   * Get the first value that respects a criteria\r\n   * @returns A value\r\n   */\r\n  firstBy(clause: EntityFilterClause<V>): V {\r\n    return this.values$.value.find(clause);\r\n  }\r\n\r\n  /**\r\n   * Observe the first value that respects a criteria\r\n   * @returns Observable of a value\r\n   */\r\n  firstBy$(clause: EntityFilterClause<V>): Observable<V> {\r\n    return this.values$.pipe(map((values: V[]) => values.find(clause)));\r\n  }\r\n\r\n  /**\r\n   * Get all the values that respect a criteria\r\n   * @returns Array of values\r\n   */\r\n  manyBy(clause: EntityFilterClause<V>): V[] {\r\n    return this.values$.value.filter(clause);\r\n  }\r\n\r\n  /**\r\n   * Observe all the values that respect a criteria\r\n   * @returns Observable of values\r\n   */\r\n  manyBy$(clause: EntityFilterClause<V>): Observable<V[]> {\r\n    return this.values$.pipe(map((values: V[]) => values.filter(clause)));\r\n  }\r\n\r\n  /**\r\n   * Clear the filter and sort and unsubscribe from the source\r\n   */\r\n  clear() {\r\n    this.filter(undefined);\r\n    this.sort(undefined);\r\n  }\r\n\r\n  destroy() {\r\n    if (this.values$$ !== undefined) {\r\n      this.values$$.unsubscribe();\r\n    }\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * Join another source to the stream (chainable)\r\n   * @param clause Join clause\r\n   * @returns The view\r\n   */\r\n  join(clause: EntityJoinClause): EntityView<E, V> {\r\n    if (this.lifted === true) {\r\n      throw new Error('This view has already been lifted, therefore, no join is allowed.');\r\n    }\r\n    this.joins.push(clause);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Filter values (chainable)\r\n   * @param clause Filter clause\r\n   * @returns The view\r\n   */\r\n  filter(clause: EntityFilterClause<V>): EntityView<E, V> {\r\n    this.filter$.next(clause);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sort values (chainable)\r\n   * @param clauseSort clause\r\n   * @returns The view\r\n   */\r\n  sort(clause: EntitySortClause<V>): EntityView<E, V> {\r\n    this.sort$.next(clause);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create the final observable\r\n   * @returns Observable\r\n   */\r\n  lift() {\r\n    this.lifted = true;\r\n    const source$ = this.joins.length > 0 ? this.liftJoinedSource() : this.liftSource();\r\n    this.values$$ = combineLatest(source$, this.filter$, this.sort$)\r\n      .pipe(skip(1), debounceTime(25))\r\n      .subscribe((bunch: [V[], EntityFilterClause, EntitySortClause]) => {\r\n        const [_values, filter, sort] = bunch;\r\n        const values = this.processValues(_values, filter, sort);\r\n        this.setValues(values);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Create the source observable when no joins are defined\r\n   * @returns Observable\r\n   */\r\n  private liftSource(): Observable<V[]> {\r\n    return this.source$ as any as Observable<V[]>;\r\n  }\r\n\r\n  /**\r\n   * Create the source observable when joins are defined\r\n   * @returns Observable\r\n   */\r\n  private liftJoinedSource(): Observable<V[]> {\r\n    const sources$ = [this.source$, combineLatest(\r\n      ...this.joins.map((join: EntityJoinClause) => join.source)\r\n    )];\r\n\r\n    return combineLatest(...sources$)\r\n      .pipe(\r\n        map((bunch: [E[], any[]]) => {\r\n          const [entities, joinData] = bunch;\r\n          return entities.reduce((values: V[], entity: E) => {\r\n            const value = this.computeJoinedValue(entity, joinData);\r\n            if (value !== undefined) {\r\n              values.push(value);\r\n            }\r\n            return values;\r\n          }, []);\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Apply joins to a source's entity and return the final value\r\n   * @returns Final value\r\n   */\r\n  private computeJoinedValue(entity: E, joinData: any[]): V | undefined {\r\n    let value = entity as Partial<V>;\r\n    let joinIndex = 0;\r\n    while (value !== undefined && joinIndex < this.joins.length) {\r\n      value = this.joins[joinIndex].reduce(value, joinData[joinIndex]);\r\n      joinIndex += 1;\r\n    }\r\n    return value as V;\r\n  }\r\n\r\n  /**\r\n   * Filter and sort values before streaming them\r\n   * @param values Values\r\n   * @param filter Filter clause\r\n   * @param sort Sort clause\r\n   * @returns Filtered and sorted values\r\n   */\r\n  private processValues(values: V[], filter: EntityFilterClause, sort: EntitySortClause): V[] {\r\n    values = values.slice(0);\r\n    values = this.filterValues(values, filter);\r\n    values = this.sortValues(values, sort);\r\n    return values;\r\n  }\r\n\r\n  /**\r\n   * Filter values\r\n   * @param values Values\r\n   * @param filter Filter clause\r\n   * @returns Filtered values\r\n   */\r\n  private filterValues(values: V[], clause: EntityFilterClause): V[] {\r\n    if (clause === undefined) { return values; }\r\n    return values.filter((value: V) => clause(value));\r\n  }\r\n\r\n  /**\r\n   * Sort values\r\n   * @param values Values\r\n   * @param sort Sort clause\r\n   * @returns Sorted values\r\n   */\r\n  private sortValues(values: V[], clause: EntitySortClause): V[] {\r\n    if (clause === undefined) { return values; }\r\n    return values.sort((v1: V, v2: V) => {\r\n      return ObjectUtils.naturalCompare(\r\n        clause.valueAccessor(v1),\r\n        clause.valueAccessor(v2),\r\n        clause.direction\r\n      );\r\n    });\r\n  }\r\n\r\n  private setValues(values: V[]) {\r\n    this.values$.next(values);\r\n    const count = values.length;\r\n    const empty = count === 0;\r\n    this.count$.next(count);\r\n    this.empty$.next(empty);\r\n  }\r\n}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nimport { EntityStateManager } from './state';\r\nimport { EntityView } from './view';\r\nimport { EntityKey, EntityState, EntityRecord, EntityStoreOptions } from './entity.interfaces';\r\nimport { getEntityId, getEntityProperty } from './entity.utils';\r\n\r\n/**\r\n * An entity store class holds any number of entities\r\n * as well as their state. It can be observed, filtered and sorted and\r\n * provides methods to insert, update or delete entities.\r\n */\r\nexport class EntityStore<E extends object, S extends EntityState = EntityState> {\r\n\r\n  /**\r\n   * Observable of the raw entities\r\n   */\r\n  readonly entities$ = new BehaviorSubject<E[]>([]);\r\n\r\n  /**\r\n   * Number of entities\r\n   */\r\n  readonly count$ = new BehaviorSubject<number>(0);\r\n  get count(): number { return this.count$.value; }\r\n\r\n  /**\r\n   * Whether the store is empty\r\n   */\r\n  readonly empty$ = new BehaviorSubject<boolean>(true);\r\n  get empty(): boolean { return this.empty$.value; }\r\n\r\n  /**\r\n   * Entity store state\r\n   */\r\n  readonly state: EntityStateManager<E, S>;\r\n\r\n  /**\r\n   * View of all the entities\r\n   */\r\n  readonly view: EntityView<E>;\r\n\r\n  /**\r\n   * View of all the entities and their state\r\n   */\r\n  readonly stateView: EntityView<E, EntityRecord<E, S>>;\r\n\r\n  /**\r\n   * Method to get an entity's id\r\n   */\r\n  readonly getKey: (E) => EntityKey;\r\n\r\n  /**\r\n   * Method to get an entity's named property\r\n   */\r\n  readonly getProperty: (E, prop: string) => any;\r\n\r\n  /**\r\n   * Store index\r\n   */\r\n  get index(): Map<EntityKey, E> { return this._index; }\r\n  private _index: Map<EntityKey, E>;\r\n\r\n  /**\r\n   * Store index\r\n   */\r\n  get pristine(): boolean { return this._pristine; }\r\n  private _pristine: boolean = true;\r\n\r\n  constructor(entities: E[], options: EntityStoreOptions = {}) {\r\n    this.getKey = options.getKey ? options.getKey : getEntityId;\r\n    this.getProperty = options.getProperty ? options.getProperty : getEntityProperty;\r\n\r\n    this.state = new EntityStateManager<E, S>({store: this});\r\n    this.view = new EntityView<E>(this.entities$);\r\n    this.stateView = new EntityView<E, EntityRecord<E, S>>(this.view.all$()).join({\r\n      source: this.state.change$,\r\n      reduce: (entity: E): EntityRecord<E, S> => {\r\n        return {entity, state: this.state.get(entity)};\r\n      }\r\n    });\r\n\r\n    this.view.lift();\r\n    this.stateView.lift();\r\n\r\n    if (entities.length > 0) {\r\n      this.load(entities);\r\n    } else {\r\n      this._index = this.generateIndex(entities);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get an entity from the store by key\r\n   * @param key Key\r\n   * @returns Entity\r\n   */\r\n  get(key: EntityKey): E {\r\n    return this.index.get(key);\r\n  }\r\n\r\n  /**\r\n   * Get all entities in the store\r\n   * @returns Array of entities\r\n   */\r\n  all(): E[] {\r\n    return this.entities$.value;\r\n  }\r\n\r\n  /**\r\n   * Set this store's entities\r\n   * @param entities Entities\r\n   */\r\n  load(entities: E[], pristine: boolean = true) {\r\n    this._index = this.generateIndex(entities);\r\n    this._pristine = pristine;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Clear the store's entities but keep the state and views intact.\r\n   * Views won't return any data but future data will be subject to the\r\n   * current views filter and sort\r\n   */\r\n  softClear() {\r\n    if (this.index && this.index.size > 0) {\r\n      this.index.clear();\r\n      this._pristine = true;\r\n      this.next();\r\n    } else if (this.index) {\r\n      this.updateCount();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the store's entities, state and views\r\n   */\r\n  clear() {\r\n    this.stateView.clear();\r\n    this.view.clear();\r\n    this.state.clear();\r\n    this.softClear();\r\n  }\r\n\r\n  destroy() {\r\n    this.stateView.destroy();\r\n    this.view.destroy();\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * Insert an entity into the store\r\n   * @param entity Entity\r\n   */\r\n  insert(entity: E) {\r\n    this.insertMany([entity]);\r\n  }\r\n\r\n  /**\r\n   * Insert many entities into the store\r\n   * @param entities Entities\r\n   */\r\n  insertMany(entities: E[]) {\r\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\r\n    this._pristine = false;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Update or insert an entity into the store\r\n   * @param entity Entity\r\n   */\r\n  update(entity: E) {\r\n    this.updateMany([entity]);\r\n  }\r\n\r\n  /**\r\n   * Update or insert many entities into the store\r\n   * @param entities Entities\r\n   */\r\n  updateMany(entities: E[]) {\r\n    entities.forEach((entity: E) => this.index.set(this.getKey(entity), entity));\r\n    this._pristine = false;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Delete an entity from the store\r\n   * @param entity Entity\r\n   */\r\n  delete(entity: E) {\r\n    this.deleteMany([entity]);\r\n  }\r\n\r\n  /**\r\n   * Delete many entities from the store\r\n   * @param entities Entities\r\n   */\r\n  deleteMany(entities: E[]) {\r\n    entities.forEach((entity: E) => this.index.delete(this.getKey(entity)));\r\n    this._pristine = false;\r\n    this.next();\r\n  }\r\n\r\n  /**\r\n   * Generate a complete index of all the entities\r\n   * @param entities Entities\r\n   * @returns Index\r\n   */\r\n  private generateIndex(entities: E[]): Map<EntityKey, E> {\r\n    const entries = entities.map((entity: E) => [this.getKey(entity), entity]);\r\n    return new Map(entries as [EntityKey, E][]);\r\n  }\r\n\r\n  /**\r\n   * Push the index's entities into the entities$ observable\r\n   */\r\n  private next() {\r\n    this.entities$.next(Array.from(this.index.values()));\r\n    this.updateCount();\r\n  }\r\n\r\n  /**\r\n   * Update the store's count and empty\r\n   */\r\n  private updateCount() {\r\n    const count = this.index.size;\r\n    const empty = count === 0;\r\n    this.count$.next(count);\r\n    this.empty$.next(empty);\r\n  }\r\n\r\n}\r\n","import { ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { skip } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { EntityKey } from './entity.interfaces';\r\n\r\nimport { EntityStore } from './store';\r\n\r\n/**\r\n * This class is used to synchronize a component's changes\r\n * detection with an EntityStore changes. For example, it is frequent\r\n * to have a component subscribe to a store's selected entity and, at the same time,\r\n * this component provides a way to select an entity with, let's say, a click.\r\n *\r\n * This class automatically handles those case and triggers the compoent's\r\n * change detection when needed.\r\n *\r\n * Note: If the component observes the store's stateView, a workspace is\r\n * probably not required because the stateView catches any changes to the\r\n * entities and their state.\r\n */\r\nexport class EntityStoreWatcher<E extends object> {\r\n\r\n  /**\r\n   * Component change detector\r\n   */\r\n  private cdRef: ChangeDetectorRef;\r\n\r\n  /**\r\n   * Entity store\r\n   */\r\n  private store: EntityStore<E>;\r\n\r\n  /**\r\n   * Component inner state\r\n   */\r\n  private innerStateIndex = new Map<EntityKey, {[key: string]: any}>();\r\n\r\n  /**\r\n   * Subscription to the store's entities\r\n   */\r\n  private entities$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to the store's state\r\n   */\r\n  private state$$: Subscription;\r\n\r\n  constructor(store?: EntityStore<E>, cdRef?: ChangeDetectorRef) {\r\n    this.setChangeDetector(cdRef);\r\n    this.setStore(store);\r\n  }\r\n\r\n  destroy() {\r\n    this.setChangeDetector(undefined);\r\n    this.setStore(undefined);\r\n  }\r\n\r\n  /**\r\n   * Bind this workspace to a store and start watching for changes\r\n   * @param store Entity store\r\n   */\r\n  setStore(store?: EntityStore<E>) {\r\n    if (store === undefined) {\r\n      this.teardownObservers();\r\n      this.innerStateIndex.clear();\r\n      this.store = undefined;\r\n      return;\r\n    }\r\n\r\n    this.setStore(undefined);\r\n    this.store = store;\r\n    this.setupObservers();\r\n    this.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Bind this workspace to a component's change detector\r\n   * @param cdRef Change detector\r\n   */\r\n  setChangeDetector(cdRef?: ChangeDetectorRef) {\r\n    this.cdRef = cdRef;\r\n  }\r\n\r\n  /**\r\n   * Set up observers on a store's entities and their state\r\n   * @param store Entity store\r\n   */\r\n  private setupObservers() {\r\n    this.teardownObservers();\r\n\r\n    this.entities$$ = this.store.entities$\r\n      .subscribe((entities: E[]) => this.onEntitiesChange(entities));\r\n\r\n    this.state$$ = this.store.state.change$\r\n      .pipe(skip(1))\r\n      .subscribe(() => this.onStateChange());\r\n  }\r\n\r\n  /**\r\n   * Teardown store observers\r\n   */\r\n  private teardownObservers() {\r\n    if (this.entities$$ !== undefined) {\r\n      this.entities$$.unsubscribe();\r\n    }\r\n    if (this.state$$ !== undefined) {\r\n      this.state$$.unsubscribe();\r\n    }\r\n    this.entities$$ = undefined;\r\n    this.state$$ = undefined;\r\n  }\r\n\r\n  /**\r\n   * When the entities change, always trigger the changes detection\r\n   */\r\n  private onEntitiesChange(entities: E[]) {\r\n    this.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * When the entities state change, trigger the change detection\r\n   * only if the component has not handled these changes yet. For example,\r\n   * the component might have initiated thoses changes itself.\r\n   */\r\n  private onStateChange() {\r\n    let changesDetected = false;\r\n    const storeIndex = this.store.state.index;\r\n    const innerIndex = this.innerStateIndex;\r\n\r\n    if (storeIndex.size !== innerIndex.size) {\r\n      changesDetected = this.detectChanges();\r\n    }\r\n\r\n    const storeKeys = Array.from(storeIndex.keys());\r\n    for (const key of storeKeys) {\r\n      const storeValue = storeIndex.get(key);\r\n      const innerValue = innerIndex.get(key);\r\n      if (changesDetected === false) {\r\n        if (innerValue === undefined) {\r\n          changesDetected = this.detectChanges();\r\n        } else if (!ObjectUtils.objectsAreEquivalent(storeValue, innerValue)) {\r\n          changesDetected = this.detectChanges();\r\n        }\r\n      }\r\n\r\n      this.innerStateIndex.set(key, Object.assign({}, storeValue));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Trigger the change detection of the workspace is bound to a change detector\r\n   */\r\n  private detectChanges() {\r\n    if (this.cdRef !== undefined) {\r\n      this.cdRef.detectChanges();\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","import { Observable, of } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\n\r\nimport {\r\n  EntityKey,\r\n  EntityTransactionOptions,\r\n  EntityOperation,\r\n  EntityOperationState\r\n} from './entity.interfaces';\r\nimport { EntityStore } from './store';\r\nimport { EntityOperationType } from './entity.enums';\r\nimport { getEntityId } from './entity.utils';\r\n\r\nexport type EntityTransactionCommitHandler = (\r\n  transaction: EntityTransaction,\r\n  operations: EntityOperation[]\r\n) => Observable<any>;\r\n\r\n/**\r\n * This class holds a reference to the insert, update and delete\r\n * operations performed on a store. This is useful to commit\r\n * these operations in a single pass or to cancel them.\r\n */\r\nexport class EntityTransaction {\r\n\r\n  /**\r\n   * Store holding the operations on another store\r\n   */\r\n  readonly operations: EntityStore<EntityOperation, EntityOperationState>;\r\n\r\n  /**\r\n   * Method to get an entity's id\r\n   */\r\n  readonly getKey: (E) => EntityKey;\r\n\r\n  /**\r\n   * Whether there are pending operations\r\n   */\r\n  get empty(): boolean { return this.operations.entities$.value.length === 0; }\r\n\r\n  /**\r\n   * Whether thise store is in commit phase\r\n   */\r\n  get inCommitPhase(): boolean { return this._inCommitPhase; }\r\n  private _inCommitPhase = false;\r\n\r\n  constructor(options: EntityTransactionOptions = {}) {\r\n    this.getKey = options.getKey ? options.getKey : getEntityId;\r\n    this.operations = new EntityStore<EntityOperation, EntityOperationState>([], {\r\n      getKey: (operation: EntityOperation) => operation.key\r\n    });\r\n  }\r\n\r\n  destroy() {\r\n    this.operations.destroy();\r\n  }\r\n\r\n  /**\r\n   * Insert an entity into a store. If no store is specified, an insert\r\n   * operation is still created but the transaction won't add the new\r\n   * entity to the store.\r\n   * @param current The entity to insert\r\n   * @param store Optional: The store to insert the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  insert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    const existingOperation = this.getOperationByEntity(current);\r\n    if (existingOperation !== undefined) {\r\n      this.removeOperation(existingOperation);\r\n    }\r\n\r\n    this.doInsert(current, store, meta);\r\n  }\r\n\r\n  /**\r\n   * Update an entity in a store. If no store is specified, an update\r\n   * operation is still created but the transaction won't update the\r\n   * entity into the store.\r\n   * @param previous The entity before update\r\n   * @param current The entity after update\r\n   * @param store Optional: The store to update the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  update(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    const existingOperation = this.getOperationByEntity(current);\r\n    if (existingOperation !== undefined) {\r\n      this.removeOperation(existingOperation);\r\n      if (existingOperation.type === EntityOperationType.Insert) {\r\n        this.doInsert(current, store, meta);\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.doUpdate(previous, current, store, meta);\r\n  }\r\n\r\n  /**\r\n   * Delete an entity from a store. If no store is specified, a delete\r\n   * operation is still created but the transaction won't remove the\r\n   * entity from the store.\r\n   * @param previous The entity before delete\r\n   * @param store Optional: The store to delete the entity from\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  delete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    const existingOperation = this.getOperationByEntity(previous);\r\n    if (existingOperation !== undefined) {\r\n      this.removeOperation(existingOperation);\r\n      if (existingOperation.type === EntityOperationType.Insert) {\r\n        if (store !== undefined) {\r\n          store.delete(previous);\r\n        }\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.doDelete(previous, store, meta);\r\n  }\r\n\r\n  /**\r\n   * Commit operations the transaction. This method doesn't do much\r\n   * in itself. The handler it receives does the hard work and it's\r\n   * implementation is left to the caller. This method simply wraps\r\n   * the handler into an error catching mechanism to update\r\n   * the transaction afterward. The caller needs to subscribe to this\r\n   * method's output (observable) for the commit to be performed.\r\n   * @param operations Operations to commit\r\n   * @param handler Function that handles the commit operation\r\n   * @returns The handler output (observable)\r\n   */\r\n  commit(operations: EntityOperation[], handler: EntityTransactionCommitHandler): Observable<any> {\r\n    this._inCommitPhase = true;\r\n\r\n    return handler(this, operations)\r\n      .pipe(\r\n        catchError(() => of(new Error())),\r\n        tap((result: any) => {\r\n          if (result instanceof Error) {\r\n            this.onCommitError(operations);\r\n          } else {\r\n            this.onCommitSuccess(operations);\r\n          }\r\n        })\r\n      );\r\n  }\r\n\r\n  /**\r\n   * Commit all the operations of the transaction.\r\n   * @param handler Function that handles the commit operation\r\n   * @returns The handler output (observable)\r\n   */\r\n  commitAll(handler: EntityTransactionCommitHandler): Observable<any> {\r\n    const operations = this.getOperationsInCommit();\r\n    return this.commit(operations, handler);\r\n  }\r\n\r\n  /**\r\n   * Rollback this transaction\r\n   */\r\n  rollback() {\r\n    this.rollbackOperations(this.operations.all());\r\n  }\r\n\r\n  /**\r\n   * Rollback specific operations\r\n   */\r\n  rollbackOperations(operations: EntityOperation[]) {\r\n    this.checkInCommitPhase();\r\n\r\n    const operationsFactory = () => new Map([\r\n      [EntityOperationType.Delete, []],\r\n      [EntityOperationType.Update, []],\r\n      [EntityOperationType.Insert, []]\r\n    ]);\r\n    const storesOperations = new Map();\r\n\r\n    // Group operations by store and by operation type.\r\n    // Grouping operations allows us to revert them in bacth, thus, triggering\r\n    // observables only one per operation type.\r\n    for (const operation of operations) {\r\n      const store = operation.store;\r\n      if (operation.store === undefined) { continue; }\r\n\r\n      let storeOperations = storesOperations.get(store);\r\n      if (storeOperations === undefined) {\r\n        storeOperations = operationsFactory();\r\n        storesOperations.set(store, storeOperations);\r\n      }\r\n      storeOperations.get(operation.type).push(operation);\r\n    }\r\n\r\n    Array.from(storesOperations.keys()).forEach((store: EntityStore<object>) => {\r\n      const storeOperations = storesOperations.get(store);\r\n\r\n      const deletes = storeOperations.get(EntityOperationType.Delete);\r\n      store.insertMany(deletes.map((_delete: EntityOperation) => _delete.previous));\r\n\r\n      const updates = storeOperations.get(EntityOperationType.Update);\r\n      store.updateMany(updates.map((_update: EntityOperation) => _update.previous));\r\n\r\n      const inserts = storeOperations.get(EntityOperationType.Insert);\r\n      store.deleteMany(inserts.map((_insert: EntityOperation) => _insert.current));\r\n    });\r\n\r\n    this.operations.deleteMany(operations);\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * Clear this transaction\r\n   * @todo Raise event and synchronize stores?\r\n   */\r\n  clear() {\r\n    this.operations.clear();\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * Merge another transaction in this one\r\n   * @param transaction Another transaction\r\n   */\r\n  mergeTransaction(transaction: EntityTransaction) {\r\n    this.checkInCommitPhase();\r\n\r\n    const operations = transaction.operations.all();\r\n    operations.forEach((operation: EntityOperation) => {\r\n      this.addOperation(operation);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create an insert operation and add an entity to the store\r\n   * @param current The entity to insert\r\n   * @param store Optional: The store to insert the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  private doInsert(current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    this.addOperation({\r\n      key: this.getKey(current),\r\n      type: EntityOperationType.Insert,\r\n      previous: undefined,\r\n      current,\r\n      store,\r\n      meta\r\n    });\r\n\r\n    if (store !== undefined) {\r\n      store.insert(current);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an update operation and update an entity into the store\r\n   * @param previous The entity before update\r\n   * @param current The entity after update\r\n   * @param store Optional: The store to update the entity into\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  private doUpdate(previous: object, current: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    this.addOperation({\r\n      key: this.getKey(current),\r\n      type: EntityOperationType.Update,\r\n      previous,\r\n      current,\r\n      store,\r\n      meta\r\n    });\r\n\r\n    if (store !== undefined) {\r\n      store.update(current);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a delete operation and delete an entity from the store\r\n   * @param previous The entity before delete\r\n   * @param store Optional: The store to delete the entity from\r\n   * @param meta Optional: Any metadata on the operation\r\n   */\r\n  private doDelete(previous: object, store?: EntityStore<object>, meta?: {[key: string]: any}) {\r\n    this.addOperation({\r\n      key: this.getKey(previous),\r\n      type: EntityOperationType.Delete,\r\n      previous,\r\n      current: undefined,\r\n      store,\r\n      meta\r\n    });\r\n\r\n    if (store !== undefined) {\r\n      store.delete(previous);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove committed operations from store\r\n   * @param operations Commited operations\r\n   * @todo Raise event and synchronize stores?\r\n   */\r\n  private resolveOperations(operations: EntityOperation[]) {\r\n    this.operations.deleteMany(operations);\r\n  }\r\n\r\n  /**\r\n   * On commit success, resolve commited operations and exit commit phase\r\n   * @param operations Commited operations\r\n   */\r\n  private onCommitSuccess(operations: EntityOperation[]) {\r\n    this.resolveOperations(operations);\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * On commit error, abort transaction\r\n   * @param operations Commited operations\r\n   */\r\n  private onCommitError(operations: EntityOperation[]) {\r\n    this._inCommitPhase = false;\r\n  }\r\n\r\n  /**\r\n   * Add an operation to the operations store\r\n   * @param operation Operation to add\r\n   */\r\n  private addOperation(operation: EntityOperation) {\r\n    this.checkInCommitPhase();\r\n\r\n    this.operations.insert(operation);\r\n    this.operations.state.update(operation, {added: true});\r\n  }\r\n\r\n  /**\r\n   * Remove an operation from the operations store\r\n   * @param operation Operation to remove\r\n   */\r\n  private removeOperation(operation: EntityOperation) {\r\n    this.checkInCommitPhase();\r\n\r\n    this.operations.delete(operation);\r\n    this.operations.state.update(operation, {added: false});\r\n  }\r\n\r\n  /**\r\n   * Get the any existing operation an entity\r\n   * @param entity Entity\r\n   * @returns Either an insert, update or delete operation\r\n   */\r\n  private getOperationByEntity(entity: object): EntityOperation {\r\n    return this.operations.get(this.getKey(entity));\r\n  }\r\n\r\n  /**\r\n   * Get all the operations to commit\r\n   * @returns Operations to commit\r\n   */\r\n  private getOperationsInCommit(): EntityOperation[] {\r\n    return this.operations.stateView\r\n      .manyBy((value: {entity: EntityOperation, state: EntityOperationState}) => {\r\n        return value.state.added === true;\r\n      })\r\n      .map((value: {entity: EntityOperation, state: EntityOperationState}) => value.entity);\r\n  }\r\n\r\n  /**\r\n   * Check if the transaction is in the commit phase and throw an error if it is\r\n   */\r\n  private checkInCommitPhase() {\r\n    if (this.inCommitPhase === true) {\r\n      throw new Error('This transaction is in the commit phase. Cannot complete this operation.');\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport { EntityRecord } from '../shared/entity.interfaces';\r\nimport { EntityStore } from '../shared/store';\r\nimport { EntityStoreWatcher } from '../shared/watcher';\r\nimport { getEntityTitle } from '../shared/entity.utils';\r\n\r\n@Component({\r\n  selector: 'igo-entity-selector',\r\n  templateUrl: './entity-selector.component.html',\r\n  styleUrls: ['./entity-selector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntitySelectorComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * The selected entity\r\n   * @internal\r\n   */\r\n  selected$ = new BehaviorSubject<object>(undefined);\r\n\r\n  /**\r\n   * The current multi select option text\r\n   * @internal\r\n   */\r\n  multiText$ = new BehaviorSubject<string>(undefined);\r\n\r\n  readonly multiSelectValue = {id: 'IGO_MULTI_SELECT'};\r\n\r\n  /**\r\n   * Subscription to the selected entity\r\n   */\r\n  private selected$$: Subscription;\r\n\r\n  /**\r\n   * Store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<object>;\r\n\r\n  /**\r\n   * Entity store\r\n   */\r\n  @Input() store: EntityStore<object>;\r\n\r\n  /**\r\n   * Title accessor\r\n   */\r\n  @Input() titleAccessor: (object) => string = getEntityTitle;\r\n\r\n  /**\r\n   * Text to display when nothing is selected\r\n   */\r\n  @Input() emptyText: string = undefined;\r\n\r\n  /**\r\n   * Wheter selecting many entities is allowed\r\n   */\r\n  @Input() multi: boolean = false;\r\n\r\n  /**\r\n   * Text to display for the select all option\r\n   */\r\n  @Input() multiAllText: string = 'All';\r\n\r\n  /**\r\n   * Text to display for the select none option\r\n   */\r\n  @Input() multiNoneText: string = 'None';\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Event emitted when the selection changes\r\n   */\r\n  @Output() selectedChange = new EventEmitter<{\r\n    selected: boolean;\r\n    value: object | object[];\r\n  }>();\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Create a store watcher and subscribe to the selected entity\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n\r\n    this.selected$$ = this.store.stateView\r\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\r\n      .subscribe((records: EntityRecord<object>[]) => {\r\n        const entities = records.map((record: EntityRecord<object>) => record.entity);\r\n        this.onSelectFromStore(entities);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the selected entity and destroy the store watcher\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n    this.selected$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * On selection change, update the store's state and emit an event\r\n   * @internal\r\n   */\r\n  onSelectionChange(event: {value: object | undefined}) {\r\n    const values = event.value instanceof Array ? event.value : [event.value];\r\n\r\n    const multiSelect = values.find((_value: object) => _value === this.multiSelectValue);\r\n    let entities = values.filter((_value: object) => _value !== this.multiSelectValue);\r\n    if (multiSelect !== undefined) {\r\n      if (entities.length === this.store.count) {\r\n        entities = [];\r\n      } else if (entities.length < this.store.count) {\r\n        entities = this.store.all();\r\n      }\r\n    }\r\n\r\n    if (entities.length === 0) {\r\n      this.store.state.updateAll({selected: false});\r\n    } else {\r\n      this.store.state.updateMany(entities, {selected: true}, true);\r\n    }\r\n\r\n    const value = this.multi ? entities : event.value;\r\n    this.selectedChange.emit({selected: true, value});\r\n  }\r\n\r\n  private onSelectFromStore(entities: object[]) {\r\n    if (this.multi === true) {\r\n      this.selected$.next(entities);\r\n    } else {\r\n      const entity = entities.length > 0 ? entities[0] : undefined;\r\n      this.selected$.next(entity);\r\n    }\r\n\r\n    this.updateMultiToggleWithEntities(entities);\r\n  }\r\n\r\n  private updateMultiToggleWithEntities(entities: object[]) {\r\n    if (entities.length === this.store.count && this.multiText$.value !== this.multiNoneText) {\r\n      this.multiText$.next(this.multiNoneText);\r\n    } else if (entities.length < this.store.count && this.multiText$.value !== this.multiAllText) {\r\n      this.multiText$.next(this.multiAllText);\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  SimpleChanges,\r\n  OnInit,\r\n  OnDestroy,\r\n  OnChanges\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport {\r\n  EntityRecord,\r\n  EntityStore,\r\n  EntityStoreWatcher,\r\n  EntityTableTemplate,\r\n  EntityTableColumn,\r\n  EntityTableColumnRenderer,\r\n  EntityTableSelectionState,\r\n  EntityTableScrollBehavior\r\n} from '../shared';\r\n\r\n@Component({\r\n  selector: 'igo-entity-table',\r\n  templateUrl: './entity-table.component.html',\r\n  styleUrls: ['./entity-table.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class EntityTableComponent implements OnInit, OnDestroy, OnChanges  {\r\n\r\n  /**\r\n   * Reference to the column renderer types\r\n   * @internal\r\n   */\r\n  entityTableColumnRenderer = EntityTableColumnRenderer;\r\n\r\n  /**\r\n   * Reference to the selection states\r\n   * @internal\r\n   */\r\n  entityTableSelectionState = EntityTableSelectionState;\r\n\r\n  /**\r\n   * Observable of the selection,s state\r\n   * @internal\r\n   */\r\n  selectionState$: BehaviorSubject<EntityTableSelectionState> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Entity store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<object>;\r\n\r\n  /**\r\n   * Subscription to the store's selection\r\n   */\r\n  private selection$$: Subscription;\r\n\r\n  /**\r\n   * Entity store\r\n   */\r\n  @Input() store: EntityStore<object>;\r\n\r\n  /**\r\n   * Table template\r\n   */\r\n  @Input() template: EntityTableTemplate;\r\n\r\n  /**\r\n   * Scroll behavior on selection\r\n   */\r\n  @Input()\r\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\r\n\r\n  /**\r\n   * Event emitted when an entity (row) is clicked\r\n   */\r\n  @Output() entityClick = new EventEmitter<object>();\r\n\r\n  /**\r\n   * Event emitted when an entity (row) is selected\r\n   */\r\n  @Output() entitySelectChange = new EventEmitter<{\r\n    added: object[];\r\n  }>();\r\n\r\n  /**\r\n   * Table headers\r\n   * @internal\r\n   */\r\n  get headers(): string[] {\r\n    let columns = this.template.columns\r\n      .filter((column: EntityTableColumn) => column.visible !== false)\r\n      .map((column: EntityTableColumn) => column.name);\r\n\r\n    if (this.selectionCheckbox === true) {\r\n      columns = ['selectionCheckbox'].concat(columns);\r\n    }\r\n\r\n    return columns;\r\n  }\r\n\r\n  /**\r\n   * Data source consumable by the underlying material table\r\n   * @internal\r\n   */\r\n  get dataSource(): BehaviorSubject<object[]> { return this.store.view.all$(); }\r\n\r\n  /**\r\n   * Whether selection is supported\r\n   * @internal\r\n   */\r\n  get selection(): boolean { return this.template.selection || false; }\r\n\r\n  /**\r\n   * Whether a selection checkbox should be displayed\r\n   * @internal\r\n   */\r\n  get selectionCheckbox(): boolean { return this.template.selectionCheckbox || false; }\r\n\r\n  /**\r\n   * Whether selection many entities should eb supported\r\n   * @internal\r\n   */\r\n  get selectMany(): boolean { return this.template.selectMany || false; }\r\n\r\n  /**\r\n   * Whether selection many entities should eb supported\r\n   * @internal\r\n   */\r\n  get fixedHeader(): boolean { return this.template.fixedHeader === undefined ? true : this.template.fixedHeader; }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Track the selection state to properly display the selection checkboxes\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.selection$$ = this.store.stateView\r\n      .manyBy$((record: EntityRecord<object>) => record.state.selected === true)\r\n      .subscribe((records: EntityRecord<object>[]) => {\r\n        this.selectionState$.next(this.computeSelectionState(records));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * When the store change, create a new watcher\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const store = changes.store;\r\n    if (store && store.currentValue !== store.previousValue) {\r\n      if (this.watcher !== undefined) {\r\n        this.watcher.destroy();\r\n      }\r\n      this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind the store watcher\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.watcher !== undefined) {\r\n      this.watcher.destroy();\r\n    }\r\n    this.selection$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Trigger a refresh of thre table. This can be useful when\r\n   * the data source doesn't emit a new value but for some reason\r\n   * the records need an update.\r\n   * @internal\r\n   */\r\n  refresh() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * On sort, sort the store\r\n   * @param event Sort event\r\n   * @internal\r\n   */\r\n  onSort(event: {active: string, direction: string}) {\r\n    const direction = event.direction;\r\n    const column = this.template.columns\r\n      .find((c: EntityTableColumn) => c.name === event.active);\r\n\r\n    if (direction === 'asc' || direction === 'desc') {\r\n      this.store.view.sort({\r\n        valueAccessor: (entity: object) => this.getValue(entity, column),\r\n        direction\r\n      });\r\n    } else {\r\n      this.store.view.sort(undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When an entity is clicked, emit an event\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onRowClick(entity: object) {\r\n    this.entityClick.emit(entity);\r\n  }\r\n\r\n  /**\r\n   * When an entity is selected, select it in the store and emit an event. Even if\r\n   * \"many\" is set to true, this method always select a single, exclusive row. Selecting\r\n   * multiple rows should be achieved by using the checkboxes.\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onRowSelect(entity: object) {\r\n    if (this.selection === false) { return; }\r\n\r\n    // Selecting a\r\n    this.store.state.update(entity, {selected: true}, true);\r\n    this.entitySelectChange.emit({added: [entity]});\r\n  }\r\n\r\n  /**\r\n   * Select or unselect all rows at once. On select, emit an event.\r\n   * @param toggle Select or unselect\r\n   * @internal\r\n   */\r\n  onToggleRows(toggle: boolean) {\r\n    if (this.selection === false) { return; }\r\n\r\n    this.store.state.updateAll({selected: toggle});\r\n    if (toggle === true) {\r\n      this.entitySelectChange.emit({added: [this.store.view.all()]});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When an entity is toggled, select or unselect it in the store. On select,\r\n   * emit an event.\r\n   * @param toggle Select or unselect\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onToggleRow(toggle: boolean, entity: object) {\r\n    if (this.selection === false) { return; }\r\n\r\n    const exclusive = toggle === true && !this.selectMany;\r\n    this.store.state.update(entity, {selected: toggle}, exclusive);\r\n    if (toggle === true) {\r\n      this.entitySelectChange.emit({added: [entity]});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compute the selection state\r\n   * @returns Whether all, some or no rows are selected\r\n   * @internal\r\n   */\r\n  private computeSelectionState(selectedRecords: EntityRecord<object>[]): EntityTableSelectionState {\r\n    const states = EntityTableSelectionState;\r\n    const selectionCount = selectedRecords.length;\r\n    return selectionCount === 0 ?\r\n      states.None :\r\n      (selectionCount === this.store.view.count ? states.All : states.Some);\r\n  }\r\n\r\n  /**\r\n   * Whether a column is sortable\r\n   * @param column Column\r\n   * @returns True if a column is sortable\r\n   * @internal\r\n   */\r\n  columnIsSortable(column: EntityTableColumn): boolean {\r\n    let sortable = column.sort;\r\n    if (sortable === undefined) {\r\n      sortable = this.template.sort === undefined ? false : this.template.sort;\r\n    }\r\n    return sortable;\r\n  }\r\n\r\n  /**\r\n   * Whether a row is should be selected based on the underlying entity state\r\n   * @param entity Entity\r\n   * @returns True if a row should be selected\r\n   * @internal\r\n   */\r\n  rowIsSelected(entity: object): boolean {\r\n    const state = this.store.state.get(entity);\r\n    return state.selected ? state.selected : false;\r\n  }\r\n\r\n  /**\r\n   * Method to access an entity's values\r\n   * @param entity Entity\r\n   * @param column Column\r\n   * @returns Any value\r\n   * @internal\r\n   */\r\n  getValue(entity: object, column: EntityTableColumn): any {\r\n    if (column.valueAccessor !== undefined) {\r\n      return column.valueAccessor(entity);\r\n    }\r\n    if (this.template.valueAccessor !== undefined) {\r\n      return this.template.valueAccessor(entity, column.name);\r\n    }\r\n    return this.store.getProperty(entity, column.name);\r\n  }\r\n\r\n  /**\r\n   * Return the type of renderer of a column\r\n   * @param column Column\r\n   * @returns Renderer type\r\n   * @internal\r\n   */\r\n  getColumnRenderer(column: EntityTableColumn): EntityTableColumnRenderer {\r\n    if (column.renderer !== undefined) {\r\n      return column.renderer;\r\n    }\r\n    return EntityTableColumnRenderer.Default;\r\n  }\r\n\r\n  /**\r\n   * Return the table ngClass\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getTableClass(): {[key: string]: boolean} {\r\n    return {\r\n      'igo-entity-table-with-selection': this.selection\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Return a header ngClass\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getHeaderClass(): {[key: string]: boolean} {\r\n    const func = this.template.headerClassFunc;\r\n    if (func instanceof Function) {\r\n      return func();\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Return a row ngClass\r\n   * @param entity Entity\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getRowClass(entity: object): {[key: string]: boolean} {\r\n    const func = this.template.rowClassFunc;\r\n    if (func instanceof Function) {\r\n      return func(entity);\r\n    }\r\n    return {};\r\n  }\r\n\r\n  /**\r\n   * Return a row ngClass\r\n   * @param entity Entity\r\n   * @param column Column\r\n   * @returns ngClass\r\n   * @internal\r\n   */\r\n  getCellClass(entity: object, column: EntityTableColumn): {[key: string]: boolean} {\r\n    const cls = {};\r\n\r\n    const tableFunc = this.template.cellClassFunc;\r\n    if (tableFunc instanceof Function) {\r\n      Object.assign(cls, tableFunc(entity, column));\r\n    }\r\n\r\n    const columnFunc = column.cellClassFunc;\r\n    if (columnFunc instanceof Function) {\r\n      Object.assign(cls, columnFunc(entity));\r\n    }\r\n\r\n    return cls;\r\n  }\r\n\r\n  /**\r\n   * When a button is clicked\r\n   * @param func Function\r\n   * @param entity Entity\r\n   * @internal\r\n   */\r\n  onButtonClick(clickFunc: (entity: object) => void, entity: object) {\r\n    if (typeof clickFunc === 'function') {\r\n      clickFunc(entity);\r\n    }\r\n  }\r\n\r\n}\r\n","export enum ActionbarMode {\r\n  Dock = 'dock',\r\n  Overlay = 'overlay',\r\n  Context = 'context'\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  HostBinding,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { EntityStoreWatcher } from '../../entity';\r\nimport { Action } from '../shared/action.interfaces';\r\nimport { ActionbarMode } from '../shared/action.enums';\r\nimport { ActionStore } from '../shared/store';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\n\r\n/**\r\n * A list of action buttons.\r\n * This component can be displayed in one of two way: 'dock' or 'overlay'\r\n */\r\n@Component({\r\n  selector: 'igo-actionbar',\r\n  templateUrl: './actionbar.component.html',\r\n  styleUrls: ['./actionbar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionbarComponent implements OnDestroy, OnChanges {\r\n  /**\r\n   * Reference to the ActionbarMode enum for use in the template\r\n   * @internal\r\n   */\r\n  actionbarMode = ActionbarMode;\r\n\r\n  /**\r\n   * Whether the actionbar is collapsed (Dock mode)\r\n   * @internal\r\n   */\r\n  collapsed = false;\r\n\r\n  /**\r\n   * Toggle collapse action (Dock)\r\n   * @internal\r\n   */\r\n  toggleCollapseAction = {\r\n    id: 'actionbar_toggle',\r\n    icon: 'dots-vertical',\r\n    handler: () => {\r\n      this.collapsed = !this.collapsed;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Action store watcher\r\n   * @internal\r\n   */\r\n  private watcher: EntityStoreWatcher<Action>;\r\n\r\n  /**\r\n   * Action store\r\n   */\r\n  @Input() store: ActionStore;\r\n\r\n  /**\r\n   * Actionbar mode\r\n   */\r\n  @Input() mode: ActionbarMode = ActionbarMode.Dock;\r\n\r\n  /**\r\n   * Whether a toggle button should be displayed (Dock mode)\r\n   */\r\n  @Input() withToggleButton = false;\r\n\r\n  /**\r\n   * Whether a the actionbar should display buttons horizontally\r\n   */\r\n  @Input() horizontal = false;\r\n\r\n  /**\r\n   * Color\r\n   */\r\n  @Input() color = 'default';\r\n\r\n  /**\r\n   * Whether action titles are displayed\r\n   */\r\n  @Input() withTitle = true;\r\n\r\n  /**\r\n   * Whether action icons are displayed\r\n   */\r\n  @Input() withIcon = true;\r\n\r\n  /**\r\n   * Overlay X position\r\n   */\r\n  @Input() xPosition = 'before';\r\n\r\n  /**\r\n   * Overlay X position\r\n   */\r\n  @Input() yPosition = 'above';\r\n\r\n  /**\r\n   * Class to add to the actionbar overlay\r\n   */\r\n  @Input()\r\n  set overlayClass(value: string) {\r\n    this._overlayClass = value;\r\n  }\r\n  get overlayClass(): string {\r\n    return [this._overlayClass, 'igo-actionbar-overlay'].join(' ');\r\n  }\r\n  private _overlayClass = '';\r\n\r\n  /**\r\n   * Function to add class to item actionbar\r\n   */\r\n  @Input() itemClassFunc: (action: Action) => { [key: string]: boolean } =\r\n    ActionbarComponent.defaultItemClassFunc;\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  @HostBinding('class.with-title')\r\n  get withTitleClass() {\r\n    return this.withTitle;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  @HostBinding('class.with-icon')\r\n  get withIconClass() {\r\n    return this.withIcon;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  @HostBinding('class.horizontal')\r\n  get horizontalClass() {\r\n    return this.horizontal;\r\n  }\r\n\r\n  static defaultItemClassFunc(action: Action) {\r\n    return {};\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, public overlay: Overlay) {}\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const store = changes.store;\r\n    if (store && store.currentValue !== store.previousValue) {\r\n      if (this.watcher !== undefined) {\r\n        this.watcher.destroy();\r\n      }\r\n      this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n  }\r\n\r\n  /**\r\n   * Invoke the action handler\r\n   * @internal\r\n   */\r\n  onTriggerAction(action: Action) {\r\n    const args = action.args || [];\r\n    action.handler(...args);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { Action } from '../shared/action.interfaces';\r\n\r\n /**\r\n  * An action button\r\n  */\r\n@Component({\r\n  selector: 'igo-actionbar-item',\r\n  templateUrl: './actionbar-item.component.html',\r\n  styleUrls: ['./actionbar-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ActionbarItemComponent {\r\n\r\n  /**\r\n   * Action\r\n   */\r\n  @Input() action: Action;\r\n\r\n  /**\r\n   * Color\r\n   */\r\n  @Input() color = 'default';\r\n\r\n  /**\r\n   * Whether the action title is displayed\r\n   */\r\n  @Input() withTitle = true;\r\n\r\n  /**\r\n   * Whether the action icon is displayed\r\n   */\r\n  @Input() withIcon = true;\r\n\r\n  /**\r\n   * Whether the action is disabled\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * Event emitted when the action button is clicked\r\n   */\r\n  @Output() trigger: EventEmitter<Action> = new EventEmitter();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string { return this.action.title; }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get tooltip(): string { return this.action.tooltip || this.title; }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get icon(): string { return this.action.icon; }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * When the action button is clicked, emit the 'trigger' event but don't\r\n   * invoke the action handler. This is handled by the parent component.\r\n   * @internal\r\n   */\r\n  onClick() {\r\n    if (this.disabled === true) {\r\n      return;\r\n    }\r\n    this.trigger.emit(this.action);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatMenuModule,\r\n  MatCardModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ActionbarComponent } from './actionbar.component';\r\nimport { ActionbarItemComponent } from './actionbar-item.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatMenuModule,\r\n    MatListModule,\r\n    MatCardModule\r\n  ],\r\n  exports: [ActionbarComponent],\r\n  declarations: [ActionbarComponent, ActionbarItemComponent]\r\n})\r\nexport class IgoActionbarModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoActionbarModule } from './actionbar/actionbar.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoActionbarModule\r\n  ],\r\n  exports: [\r\n    IgoActionbarModule\r\n  ],\r\n  declarations: [],\r\n  providers: []\r\n})\r\nexport class IgoActionModule {}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-backdrop',\r\n  templateUrl: './backdrop.component.html',\r\n  styleUrls: ['./backdrop.component.scss']\r\n})\r\nexport class BackdropComponent {\r\n  @Input()\r\n  get shown(): boolean {\r\n    return this._shown;\r\n  }\r\n  set shown(value: boolean) {\r\n    this._shown = value;\r\n  }\r\n  private _shown: boolean;\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { BackdropComponent } from './backdrop.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  declarations: [BackdropComponent],\r\n  exports: [BackdropComponent]\r\n})\r\nexport class IgoBackdropModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoBackdropModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Output\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoClickout]'\r\n})\r\nexport class ClickoutDirective {\r\n  @Output() clickout = new EventEmitter<MouseEvent>();\r\n\r\n  @HostListener('document:click', ['$event', '$event.target'])\r\n  handleMouseClick(event: MouseEvent, target: HTMLElement) {\r\n    if (!target) {\r\n      return;\r\n    }\r\n\r\n    if (!this.el.nativeElement.contains(target)) {\r\n      this.clickout.emit(event);\r\n    }\r\n  }\r\n\r\n  constructor(private el: ElementRef) {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ClickoutDirective } from './clickout.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [ClickoutDirective],\r\n  exports: [ClickoutDirective]\r\n})\r\nexport class IgoClickoutModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoClickoutModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'clone'\r\n})\r\nexport class ClonePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    if (value === undefined) {\r\n      return value;\r\n    }\r\n\r\n    if (value instanceof Array) {\r\n      return value.map(obj => Object.assign(Object.create(obj), obj));\r\n    } else {\r\n      return Object.assign(Object.create(value), value);\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ClonePipe } from './clone.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [ClonePipe],\r\n  exports: [ClonePipe]\r\n})\r\nexport class IgoCloneModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoCloneModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoCollapse]'\r\n})\r\nexport class CollapseDirective {\r\n  @Input()\r\n  get target() {\r\n    return this._target;\r\n  }\r\n  set target(value: Element) {\r\n    this._target = value;\r\n  }\r\n  private _target: Element;\r\n\r\n  @Input()\r\n  get collapsed(): boolean {\r\n    return this._collapsed;\r\n  }\r\n  set collapsed(collapsed: boolean) {\r\n    collapsed ? this.collapseTarget() : this.expandTarget();\r\n    this._collapsed = collapsed;\r\n    this.toggle.emit(collapsed);\r\n  }\r\n  private _collapsed = false;\r\n\r\n  @Output() toggle: EventEmitter<boolean> = new EventEmitter();\r\n\r\n  @HostListener('click')\r\n  click() {\r\n    this.collapsed = !this.collapsed;\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\r\n\r\n  private collapseTarget() {\r\n    this.renderer.addClass(this.target, 'igo-collapsed');\r\n    this.renderer.addClass(this.el.nativeElement, 'collapsed');\r\n  }\r\n\r\n  private expandTarget() {\r\n    this.renderer.removeClass(this.target, 'igo-collapsed');\r\n    this.renderer.removeClass(this.el.nativeElement, 'collapsed');\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-collapsible',\r\n  templateUrl: './collapsible.component.html',\r\n  styleUrls: ['./collapsible.component.scss']\r\n})\r\nexport class CollapsibleComponent {\r\n  @Input()\r\n  get title() {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    this._title = value;\r\n  }\r\n  private _title = '';\r\n\r\n  @Input()\r\n  get collapsed() {\r\n    return this._collapsed;\r\n  }\r\n  set collapsed(value: boolean) {\r\n    this._collapsed = value;\r\n  }\r\n  private _collapsed = false;\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatIconModule, MatListModule } from '@angular/material';\r\n\r\nimport { CollapseDirective } from './collapse.directive';\r\nimport { CollapsibleComponent } from './collapsible.component';\r\n\r\n@NgModule({\r\n  imports: [MatIconModule, MatListModule],\r\n  declarations: [CollapsibleComponent, CollapseDirective],\r\n  exports: [CollapsibleComponent, CollapseDirective]\r\n})\r\nexport class IgoCollapsibleModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoCollapsibleModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-confirm-dialog',\r\n  templateUrl: './confirm-dialog.component.html',\r\n  styleUrls: ['./confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  public confirmMessage: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<ConfirmDialogComponent>) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\r\n\r\n@Injectable()\r\nexport class ConfirmDialogService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  public open(message: string): Observable<any> {\r\n    const dialogRef = this.dialog.open(ConfirmDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    dialogRef.componentInstance.confirmMessage = message;\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ConfirmDialogComponent } from './confirm-dialog.component';\r\nimport { ConfirmDialogService } from './confirm-dialog.service';\r\n\r\n@NgModule({\r\n  imports: [MatButtonModule, MatDialogModule, IgoLanguageModule],\r\n  declarations: [ConfirmDialogComponent],\r\n  exports: [ConfirmDialogComponent],\r\n  providers: [ConfirmDialogService],\r\n  entryComponents: [ConfirmDialogComponent]\r\n})\r\nexport class IgoConfirmDialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoConfirmDialogModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  Output,\r\n  TemplateRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { TemplatePortal } from '@angular/cdk/portal';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\nimport { Overlay, OverlayRef } from '@angular/cdk/overlay';\r\n\r\n@Directive({\r\n  selector: '[igoContextMenu]'\r\n})\r\nexport class ContextMenuDirective {\r\n  overlayRef: OverlayRef | null;\r\n  sub: Subscription;\r\n\r\n  @Input('igoContextMenu') menuContext: TemplateRef<any>;\r\n  @Output() menuPosition = new EventEmitter<{ x: number; y: number }>();\r\n\r\n  constructor(\r\n    public overlay: Overlay,\r\n    public viewContainerRef: ViewContainerRef,\r\n    private elementRef: ElementRef\r\n  ) {}\r\n\r\n  @HostListener('contextmenu', ['$event'])\r\n  public onContextMenu({ x, y }: MouseEvent): void {\r\n    this.close();\r\n    event.preventDefault();\r\n    this.menuPosition.emit({ x, y });\r\n    this.overlayRef = null;\r\n    const positionStrategy = this.overlay\r\n      .position()\r\n      .flexibleConnectedTo({ x, y })\r\n      .withPositions([\r\n        {\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }\r\n      ]);\r\n    this.overlayRef = this.overlay.create({\r\n      positionStrategy,\r\n      scrollStrategy: this.overlay.scrollStrategies.close()\r\n    });\r\n    this.overlayRef.attach(\r\n      new TemplatePortal(this.menuContext, this.viewContainerRef, {\r\n        $implicit: undefined\r\n      })\r\n    );\r\n\r\n    this.sub = fromEvent<MouseEvent>(document, 'click')\r\n      .pipe(\r\n        filter(event => {\r\n          const clickTarget = event.target as HTMLElement;\r\n          this.close();\r\n          return (\r\n            !!this.overlayRef &&\r\n            !this.overlayRef.overlayElement.contains(clickTarget)\r\n          );\r\n        }),\r\n        take(1)\r\n      )\r\n      .subscribe(() => this.close());\r\n\r\n    this.sub = fromEvent<MouseEvent>(document, 'contextmenu')\r\n      .pipe(\r\n        filter(event => {\r\n          const clickTarget = event.target as HTMLElement;\r\n          if (\r\n            clickTarget &&\r\n            !this.elementRef.nativeElement.contains(clickTarget) &&\r\n            !this.overlayRef.overlayElement.contains(clickTarget)\r\n          ) {\r\n            return true;\r\n          } else {\r\n            event.preventDefault();\r\n          }\r\n        }),\r\n        take(1)\r\n      )\r\n      .subscribe(() => this.close());\r\n  }\r\n  close() {\r\n    if (this.overlayRef) {\r\n      this.overlayRef.dispose();\r\n      this.overlayRef = null;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ContextMenuDirective } from './context-menu.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [ContextMenuDirective],\r\n  exports: [ContextMenuDirective]\r\n})\r\nexport class IgoContextMenuModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextMenuModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-custom-html',\r\n  templateUrl: './custom-html.component.html',\r\n  styleUrls: ['./custom-html.component.scss']\r\n})\r\nexport class CustomHtmlComponent {\r\n  @Input()\r\n  get html(): string {\r\n    return this._html;\r\n  }\r\n  set html(value: string) {\r\n    this._html = value;\r\n  }\r\n  private _html = '';\r\n\r\n  constructor() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\n@Pipe({ name: 'sanitizeHtml' })\r\nexport class SanitizeHtmlPipe implements PipeTransform {\r\n  constructor(private _sanitizer: DomSanitizer) {\r\n  }\r\n  transform(v: string): SafeHtml {\r\n    return this._sanitizer.bypassSecurityTrustHtml(v);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { CustomHtmlComponent } from './custom-html.component';\r\nimport { SanitizeHtmlPipe } from './custom-html.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [SanitizeHtmlPipe, CustomHtmlComponent],\r\n  declarations: [SanitizeHtmlPipe, CustomHtmlComponent]\r\n})\r\nexport class IgoCustomHtmlModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoCustomHtmlModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  HostListener,\r\n  HostBinding,\r\n  EventEmitter,\r\n  Output,\r\n  Input\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoDragAndDrop]'\r\n})\r\nexport class DragAndDropDirective {\r\n\r\n  @Input() allowedExtensions: Array<string> = [];\r\n\r\n  @Output() protected filesDropped: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @Output() protected filesInvalid: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  @HostBinding('style.background') private background = 'inherit';\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = '#999';\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  public onDragLeave(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = 'inherit';\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(evt) {\r\n    evt.preventDefault();\r\n    evt.stopPropagation();\r\n    this.background = 'inherit';\r\n    const filesObj = this.validExtensions(evt);\r\n    if (filesObj.valid.length) {\r\n      this.filesDropped.emit(filesObj.valid);\r\n    }\r\n    if (filesObj.invalid.length) {\r\n      this.filesInvalid.emit(filesObj.invalid);\r\n    }\r\n  }\r\n\r\n  private validExtensions(evt) {\r\n    const files = evt.dataTransfer.files;\r\n    const filesObj = {\r\n      valid: [],\r\n      invalid: []\r\n    };\r\n    if (files.length > 0) {\r\n      for (const file of files) {\r\n        const ext = file.name.split('.')[file.name.split('.').length - 1];\r\n        if (\r\n          this.allowedExtensions.length === 0 ||\r\n          (\r\n            this.allowedExtensions.lastIndexOf(ext) !== -1 &&\r\n            file.size !== 0\r\n          )\r\n        ) {\r\n          filesObj.valid.push(file);\r\n        } else {\r\n          filesObj.invalid.push(file);\r\n        }\r\n      }\r\n    }\r\n\r\n    return filesObj;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { DragAndDropDirective } from './drag-drop.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [DragAndDropDirective],\r\n  exports: [DragAndDropDirective]\r\n})\r\nexport class IgoDrapDropModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoDrapDropModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  ComponentFactory,\r\n  ComponentRef,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\n/**\r\n * This class is used in the DynamicComponentOutlet component. It holds\r\n * a reference to a component factory and can render that component\r\n * in a target element on demand. It's also possible to set inputs\r\n * and to subscribe to outputs.\r\n */\r\nexport class DynamicComponent<C> {\r\n\r\n  /**\r\n   * Component reference\r\n   */\r\n  private componentRef: ComponentRef<C>;\r\n\r\n  /**\r\n   * Subscriptions to the component's outputs. Those need\r\n   * to be unsubscribed when the component is destroyed.\r\n   */\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  /**\r\n   * Component target element\r\n   */\r\n  private target: ViewContainerRef;\r\n\r\n  /**\r\n   * Component inputs\r\n   */\r\n  private inputs: {[key: string]: any} = {};\r\n\r\n  /**\r\n   * Subscribers to the component's outputs\r\n   */\r\n  private subscribers: {[key: string]: (event: any) => void} = {};\r\n\r\n  constructor(private componentFactory: ComponentFactory<C>) {}\r\n\r\n  /**\r\n   * Render the component to a target element.\r\n   * Set it's inputs and subscribe to it's outputs.\r\n   * @param target Target element\r\n   */\r\n  setTarget(target: ViewContainerRef) {\r\n    this.target = target;\r\n    this.componentRef = target.createComponent(this.componentFactory);\r\n    this.updateInputs(this.inputs);\r\n    this.updateSubscribers(this.subscribers);\r\n  }\r\n\r\n  /**\r\n   * Destroy this component. That means, removing from it's target\r\n   * element and unsubscribing to it's outputs.\r\n   */\r\n  destroy() {\r\n    if (this.target !== undefined) {\r\n      this.target.clear();\r\n    }\r\n    if (this.componentRef !== undefined) {\r\n      this.componentRef.destroy();\r\n      this.componentRef = undefined;\r\n    }\r\n    this.unsubscribeAll();\r\n  }\r\n\r\n  /**\r\n   * Update the component inputs. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   */\r\n  updateInputs(inputs: {[key: string]: any}) {\r\n    this.inputs = inputs;\r\n    if (this.componentRef === undefined) {\r\n      return;\r\n    }\r\n\r\n    const instance = this.componentRef.instance;\r\n    const allowedInputs = this.componentFactory.inputs;\r\n    allowedInputs.forEach((value: {propName: string; templateName: string; }) => {\r\n      const key = value.propName;\r\n      if (inputs.hasOwnProperty(key)) {\r\n        instance[key] = inputs[key];\r\n      }\r\n    });\r\n\r\n    if (typeof (instance as any).onUpdateInputs === 'function') {\r\n      (instance as any).onUpdateInputs();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the component subscribers. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   */\r\n  updateSubscribers(subscribers: {[key: string]: (event: any) => void}) {\r\n    this.subscribers = subscribers;\r\n    if (this.componentRef === undefined) {\r\n      return;\r\n    }\r\n\r\n    const instance = this.componentRef.instance;\r\n    const allowedSubscribers = this.componentFactory.outputs;\r\n    allowedSubscribers.forEach((value: {propName: string; templateName: string; }) => {\r\n      const key = value.propName;\r\n      if (subscribers.hasOwnProperty(key)) {\r\n        const emitter = instance[key];\r\n        const subscriber = subscribers[key];\r\n        if (Array.isArray(subscriber)) {\r\n          subscriber.forEach((_subscriber) => {\r\n            this.subscriptions.push(emitter.subscribe(_subscriber));\r\n          });\r\n        } else {\r\n          this.subscriptions.push(emitter.subscribe(subscriber));\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to all outputs.\r\n   */\r\n  private unsubscribeAll() {\r\n    this.subscriptions.forEach((s: Subscription) => s.unsubscribe());\r\n    this.subscriptions = [];\r\n  }\r\n\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Injectable\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponent } from './dynamic-component';\r\n\r\n/**\r\n * Service to creates DynamicComponent instances from base component classes\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DynamicComponentService {\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {}\r\n\r\n  /**\r\n   * Creates a DynamicComponent instance from a base component class\r\n   * @param componentCls The component class\r\n   * @returns DynamicComponent instance\r\n   */\r\n  create(componentCls: any): DynamicComponent<any> {\r\n    const factory = this.resolver.resolveComponentFactory(componentCls as any);\r\n    return new DynamicComponent<typeof componentCls>(factory);\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewContainerRef,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { DynamicComponent } from '../shared/dynamic-component';\r\nimport { DynamicComponentService } from '../shared/dynamic-component.service';\r\n\r\n@Component({\r\n  selector: 'igo-dynamic-outlet',\r\n  templateUrl: 'dynamic-outlet.component.html',\r\n  styleUrls: ['dynamic-outlet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DynamicOutletComponent implements OnChanges, OnDestroy {\r\n  /**\r\n   * The dynamic component base class or the dynamic component itself\r\n   */\r\n  @Input() component: DynamicComponent<any> | any;\r\n\r\n  /**\r\n   * The dynamic component inputs\r\n   */\r\n  @Input() inputs: { [key: string]: any } = {};\r\n\r\n  /**\r\n   * The subscribers to the dynamic component outputs\r\n   */\r\n  @Input() subscribers: { [key: string]: (event: any) => void } = {};\r\n\r\n  /**\r\n   * The dynamic component\r\n   */\r\n  private dynamicComponent: DynamicComponent<any>;\r\n\r\n  /**\r\n   * The view element to render the component to\r\n   * @ignore\r\n   */\r\n  @ViewChild('target', { read: ViewContainerRef })\r\n  private target: ViewContainerRef;\r\n\r\n  constructor(\r\n    private dynamicComponentService: DynamicComponentService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * If the dynamic component changes, create it.\r\n   * If the inputs or subscribers change, update the current component's\r\n   * inputs or subscribers.\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const component = changes.component;\r\n    const inputs = changes.inputs;\r\n    const subscribers = changes.subscribers;\r\n    const eq = ObjectUtils.objectsAreEquivalent;\r\n\r\n    if (component && component.currentValue !== component.previousValue) {\r\n      this.createComponent(component.currentValue);\r\n    } else {\r\n      const inputsAreEquivalents =\r\n        inputs && eq(inputs.currentValue || {}, inputs.previousValue || {});\r\n      const subscribersAreEquivalents =\r\n        subscribers &&\r\n        eq(subscribers.currentValue || {}, subscribers.previousValue || {});\r\n\r\n      if (inputsAreEquivalents === false) {\r\n        this.updateInputs();\r\n      }\r\n\r\n      if (subscribersAreEquivalents === false) {\r\n        this.updateSubscribers();\r\n      }\r\n    }\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * Destroy the dynamic component and all it's subscribers\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.dynamicComponent) {\r\n      this.dynamicComponent.destroy();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a  DynamicComponent out of the component class and render it.\r\n   * @internal\r\n   */\r\n  private createComponent(component: DynamicComponent<any> | any) {\r\n    if (this.dynamicComponent !== undefined) {\r\n      this.dynamicComponent.destroy();\r\n    }\r\n    this.dynamicComponent =\r\n      component instanceof DynamicComponent\r\n        ? component\r\n        : this.dynamicComponentService.create(component);\r\n    this.renderComponent();\r\n  }\r\n\r\n  /**\r\n   * Create and render the dynamic component. Set it's inputs and subscribers\r\n   * @internal\r\n   */\r\n  private renderComponent() {\r\n    this.updateInputs();\r\n    this.updateSubscribers();\r\n    this.dynamicComponent.setTarget(this.target);\r\n  }\r\n\r\n  /**\r\n   * Update the dynamic component inputs. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   * @internal\r\n   */\r\n  private updateInputs() {\r\n    this.dynamicComponent.updateInputs(this.inputs);\r\n  }\r\n\r\n  /**\r\n   * Update the dynamic component subscribers. This is an update so any\r\n   * key not defined won't be overwritten.\r\n   * @internal\r\n   */\r\n  private updateSubscribers() {\r\n    this.dynamicComponent.updateSubscribers(this.subscribers);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { DynamicOutletComponent } from './dynamic-outlet.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    DynamicOutletComponent\r\n  ],\r\n  declarations: [\r\n    DynamicOutletComponent\r\n  ]\r\n})\r\nexport class IgoDynamicOutletModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoDynamicOutletModule } from './dynamic-outlet/dynamic-outlet.module';\r\nimport { DynamicComponentService } from './shared/dynamic-component.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoDynamicOutletModule\r\n  ],\r\n  exports: [\r\n    IgoDynamicOutletModule\r\n  ],\r\n  providers: [\r\n    DynamicComponentService\r\n  ]\r\n})\r\nexport class IgoDynamicComponentModule {}\r\n","import { Component, OnInit, Input, ViewChild, ElementRef } from '@angular/core';\r\n\r\nimport { Media, MediaService } from '@igo2/core';\r\n\r\nimport { FlexibleState, FlexibleDirection } from './flexible.type';\r\n\r\n@Component({\r\n  selector: 'igo-flexible',\r\n  templateUrl: './flexible.component.html',\r\n  styleUrls: ['./flexible.component.scss']\r\n})\r\nexport class FlexibleComponent implements OnInit {\r\n  static transitionTime = 250;\r\n\r\n  @ViewChild('flexibleMain') main;\r\n\r\n  @Input()\r\n  get initial(): string {\r\n    return this._initial;\r\n  }\r\n  set initial(value: string) {\r\n    this._initial = value;\r\n  }\r\n  private _initial = '0';\r\n\r\n  @Input()\r\n  get collapsed(): string {\r\n    return this._collapsed;\r\n  }\r\n  set collapsed(value: string) {\r\n    this._collapsed = value;\r\n  }\r\n  private _collapsed = '0';\r\n\r\n  @Input()\r\n  get expanded(): string {\r\n    return this._expanded;\r\n  }\r\n  set expanded(value: string) {\r\n    this._expanded = value;\r\n  }\r\n  private _expanded = '100%';\r\n\r\n  @Input()\r\n  get initialMobile(): string {\r\n    return this._initialMobile;\r\n  }\r\n  set initialMobile(value: string) {\r\n    this._initialMobile = value;\r\n  }\r\n  private _initialMobile: string = this.expanded;\r\n\r\n  @Input()\r\n  get collapsedMobile(): string {\r\n    return this._collapsedMobile;\r\n  }\r\n  set collapsedMobile(value: string) {\r\n    this._collapsedMobile = value;\r\n  }\r\n  private _collapsedMobile: string = this.collapsed;\r\n\r\n  @Input()\r\n  get expandedMobile(): string {\r\n    return this._expandedMobile;\r\n  }\r\n  set expandedMobile(value: string) {\r\n    this._expandedMobile = value;\r\n  }\r\n  private _expandedMobile: string = this.expanded;\r\n\r\n  @Input()\r\n  get direction(): FlexibleDirection {\r\n    return this._direction;\r\n  }\r\n  set direction(value: FlexibleDirection) {\r\n    this._direction = value;\r\n  }\r\n  private _direction: FlexibleDirection = 'column';\r\n\r\n  @Input()\r\n  get state(): FlexibleState {\r\n    return this._state;\r\n  }\r\n  set state(value: FlexibleState) {\r\n    const sizes = {\r\n      initial: this.initial,\r\n      collapsed: this.collapsed,\r\n      expanded: this.expanded\r\n    };\r\n\r\n    const media = this.mediaService.media$.value;\r\n    if (media === 'mobile') {\r\n      Object.assign(sizes, {\r\n        initial: this.initialMobile,\r\n        collapsed: this.collapsedMobile,\r\n        expanded: this.expandedMobile\r\n      });\r\n    }\r\n\r\n    const size = sizes[value];\r\n    if (size !== undefined) {\r\n      this.setSize(size);\r\n      setTimeout(() => {\r\n        this._state = value;\r\n      }, FlexibleComponent.transitionTime);\r\n    }\r\n  }\r\n  private _state: FlexibleState = 'initial';\r\n\r\n  constructor(private el: ElementRef, private mediaService: MediaService) {}\r\n\r\n  ngOnInit() {\r\n    this.el.nativeElement.className += this.direction;\r\n\r\n    // Since this component supports different sizes\r\n    // on mobile, force a redraw when the media changes\r\n    this.mediaService.media$.subscribe(\r\n      (media: Media) => (this.state = this.state)\r\n    );\r\n  }\r\n\r\n  private setSize(size: string) {\r\n    this._state = 'transition';\r\n\r\n    if (this.direction === 'column') {\r\n      this.main.nativeElement.style.height = size;\r\n    } else if (this.direction === 'row') {\r\n      this.main.nativeElement.style.width = size;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FlexibleComponent } from './flexible.component';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [FlexibleComponent],\r\n  exports: [FlexibleComponent]\r\n})\r\nexport class IgoFlexibleModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoFlexibleModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { AbstractControl } from '@angular/forms';\r\n\r\nimport { Form, FormField, FormFieldGroup } from './form.interfaces';\r\n\r\nexport function formControlIsRequired(control: AbstractControl): boolean {\r\n  if (control.validator) {\r\n    const validator = control.validator({} as AbstractControl);\r\n    if (validator && validator.required) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  if ((control as any).controls) {\r\n    const requiredControl = Object.keys((control as any).controls).find((key: string) => {\r\n      return formControlIsRequired((control as any).controls[key]);\r\n    });\r\n    return requiredControl !== undefined;\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function getDefaultErrorMessages(): {[key: string]: string} {\r\n  return {\r\n    required: 'igo.common.form.errors.required'\r\n  };\r\n}\r\n\r\nexport function getControlErrorMessage(control: AbstractControl, messages: {[key: string]: string}): string {\r\n  const errors = control.errors || {};\r\n  const errorKeys = Object.keys(errors);\r\n  const errorMessages = errorKeys\r\n    .map((key: string) => messages[key])\r\n    .filter((message: string) => message !== undefined);\r\n  return errorMessages.length > 0 ? errorMessages[0] : '';\r\n}\r\n\r\nexport function getAllFormFields(form: Form): FormField[] {\r\n  return form.groups.reduce((acc: FormField[], group: FormFieldGroup) => {\r\n    return acc.concat(group.fields);\r\n  }, [].concat(form.fields));\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\n\r\nimport t from 'typy';\r\n\r\nimport { Form, FormField, FormFieldGroup } from '../shared/form.interfaces';\r\nimport { getAllFormFields } from '../shared/form.utils';\r\n\r\n/**\r\n * A configurable form\r\n */\r\n@Component({\r\n  selector: 'igo-form',\r\n  templateUrl: './form.component.html',\r\n  styleUrls: ['./form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormComponent implements OnChanges {\r\n\r\n  /**\r\n   * Form\r\n   */\r\n  @Input() form: Form;\r\n\r\n  /**\r\n   * Input data\r\n   */\r\n  @Input() formData: { [key: string]: any};\r\n\r\n  /**\r\n   * Event emitted when the form is submitted\r\n   */\r\n  @Output() submitForm = new EventEmitter<{[key: string]: any}>();\r\n\r\n  @ViewChild('buttons') buttons: ElementRef;\r\n\r\n  get hasButtons(): boolean {\r\n    return this.buttons.nativeElement.children.length !== 0;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Is the entity or the template change, recreate the form or repopulate it.\r\n   * @internal\r\n   */\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const formData = changes.formData;\r\n    if (formData && formData.currentValue !== formData.previousValue) {\r\n      if (formData.currentValue === undefined) {\r\n        this.clear();\r\n      } else {\r\n        this.setData(formData.currentValue);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Transform the form data to a feature and emit an event\r\n   * @param event Form submit event\r\n   * @internal\r\n   */\r\n  onSubmit() {\r\n    this.submitForm.emit(this.getData());\r\n  }\r\n\r\n  private setData(data: {[key: string]: any}) {\r\n    this.form.fields.forEach((field: FormField) => {\r\n      field.control.setValue(t(data, field.name).safeObject);\r\n    });\r\n\r\n    this.form.groups.forEach((group: FormFieldGroup) => {\r\n      group.fields.forEach((field: FormField) => {\r\n        field.control.setValue(t(data, field.name).safeObject);\r\n      });\r\n    });\r\n  }\r\n\r\n  private getData(): { [key: string]: any} {\r\n    const data = {};\r\n    getAllFormFields(this.form).forEach((field: FormField) => {\r\n      this.updateDataWithFormField(data, field);\r\n    });\r\n    return data;\r\n  }\r\n\r\n  private updateDataWithFormField(data: { [key: string]: any}, field: FormField) {\r\n    const control = field.control;\r\n    if (!control.disabled) {\r\n      data[field.name] = control.value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear form\r\n   */\r\n  private clear() {\r\n    this.form.control.reset();\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { FormComponent } from './form.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  exports: [\r\n    FormComponent,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [\r\n    FormComponent\r\n  ]\r\n})\r\nexport class IgoFormFormModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\n/**\r\n * Service where all available form fields are registered.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormFieldService {\r\n\r\n  static fields: {[key: string]: any} = {};\r\n\r\n  static register(type: string, component: any) {\r\n    FormFieldService.fields[type] = component;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Return field component by type\r\n   * @param type Field type\r\n   * @returns Field component\r\n   */\r\n  getFieldByType(type: string): any {\r\n    return FormFieldService.fields[type];\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\n\r\nimport {\r\n  Form,\r\n  FormField,\r\n  FormFieldConfig,\r\n  FormFieldGroup,\r\n  FormFieldGroupConfig\r\n} from './form.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FormService {\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  form(fields: FormField[], groups: FormFieldGroup[]): Form {\r\n    const control = this.formBuilder.group({});\r\n    fields.forEach((field: FormField) => {\r\n      control.addControl(field.name, field.control);\r\n    });\r\n    groups.forEach((group: FormFieldGroup) => {\r\n      control.addControl(group.name, group.control);\r\n    });\r\n\r\n    return {fields, groups, control};\r\n  }\r\n\r\n  group(config: FormFieldGroupConfig, fields: FormField[]): FormFieldGroup {\r\n    const options = config.options || {};\r\n    const control = this.formBuilder.group({});\r\n    fields.forEach((field: FormField) => {\r\n      control.addControl(field.name, field.control);\r\n    });\r\n    control.setValidators(options.validator);\r\n\r\n    return Object.assign({}, config, {fields, control}) as FormFieldGroup;\r\n  }\r\n\r\n  field(config: FormFieldConfig): FormField {\r\n    const options = config.options || {};\r\n    const state = Object.assign({value: ''}, {\r\n      disabled: options.disabled\r\n    });\r\n    const control = this.formBuilder.control(state);\r\n    control.setValidators(options.validator);\r\n\r\n    return Object.assign({type: 'text'}, config, {control}) as FormField;\r\n  }\r\n\r\n  extendFieldConfig(config: FormFieldConfig, partial: Partial<FormFieldConfig>): FormFieldConfig {\r\n    const options = Object.assign({}, config.options || {}, partial.options || {});\r\n    const inputs = Object.assign({}, config.inputs || {}, partial.inputs || {});\r\n    const subscribers = Object.assign({}, config.subscribers || {}, partial.subscribers || {});\r\n    return Object.assign({}, config, {options, inputs, subscribers});\r\n  }\r\n\r\n}\r\n","import { FormFieldService } from './form-field.service';\r\n\r\nexport function FormFieldComponent(type: string): (cls: any) => any {\r\n  return (compType: any) => {\r\n    FormFieldService.register(type, compType);\r\n  };\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { FormField, FormFieldInputs, FormFieldOptions } from '../shared/form.interfaces';\r\nimport { FormFieldService } from '../shared/form-field.service';\r\nimport { getDefaultErrorMessages } from '../shared';\r\n\r\n/**\r\n * This component renders the proper form input based on\r\n * the field configuration it receives.\r\n */\r\n@Component({\r\n  selector: 'igo-form-field',\r\n  templateUrl: './form-field.component.html',\r\n  styleUrls: ['./form-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldComponent {\r\n\r\n  /**\r\n   * Field configuration\r\n   */\r\n  @Input() field: FormField;\r\n\r\n  get fieldOptions(): FormFieldOptions {\r\n    return this.field.options || {};\r\n  }\r\n\r\n  constructor(private formFieldService: FormFieldService) {}\r\n\r\n  getFieldComponent(): any {\r\n    return this.formFieldService.getFieldByType(this.field.type || 'text');\r\n  }\r\n\r\n  getFieldInputs(): FormFieldInputs {\r\n    const errors = this.fieldOptions.errors || {};\r\n    return Object.assign(\r\n      {\r\n        placeholder: this.field.title,\r\n        disableSwitch: this.fieldOptions.disableSwitch || false\r\n      },\r\n      Object.assign({}, this.field.inputs || {}),\r\n      {\r\n        formControl: this.field.control,\r\n        errors: Object.assign({}, getDefaultErrorMessages(), errors)\r\n      }\r\n    );\r\n  }\r\n\r\n  getFieldSubscribers(): {[key: string]: ({field: FormField, control: FormControl}) => void } {\r\n    return Object.assign({}, this.field.subscribers || {});\r\n  }\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\n\r\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\r\nimport { FormFieldSelectChoice } from '../shared/form.interfaces';\r\nimport { FormFieldComponent } from '../shared/form-field-component';\r\n\r\n/**\r\n * This component renders a select field\r\n */\r\n@FormFieldComponent('select')\r\n@Component({\r\n  selector: 'igo-form-field-select',\r\n  templateUrl: './form-field-select.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldSelectComponent implements OnInit {\r\n\r\n  choices$: Observable<FormFieldSelectChoice[]>;\r\n\r\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Select input choices\r\n   */\r\n  @Input()\r\n  set choices(value: Observable<FormFieldSelectChoice[]> | FormFieldSelectChoice[]) {\r\n    if (value instanceof Observable) {\r\n      this.choices$ = value;\r\n    } else {\r\n      this.choices$ = of(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Wheter a disable switch should be available\r\n   */\r\n  @Input() disableSwitch: boolean = false;\r\n\r\n  /**\r\n   * Whether the field is required\r\n   */\r\n  get required(): boolean {\r\n    return formControlIsRequired(this.formControl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabled$.next(this.formControl.disabled);\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    return getControlErrorMessage(this.formControl, this.errors);\r\n  }\r\n\r\n  onDisableSwitchClick() {\r\n    this.toggleDisabled();\r\n  }\r\n\r\n  private toggleDisabled() {\r\n    const disabled = !this.disabled$.value;\r\n    if (disabled === true) {\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n    this.disabled$.next(disabled);\r\n  }\r\n\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport {\r\n  formControlIsRequired,\r\n  getControlErrorMessage\r\n} from '../shared/form.utils';\r\nimport { FormFieldComponent } from '../shared/form-field-component';\r\n\r\n/**\r\n * This component renders a text field\r\n */\r\n@FormFieldComponent('text')\r\n@Component({\r\n  selector: 'igo-form-field-text',\r\n  templateUrl: './form-field-text.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldTextComponent implements OnInit {\r\n\r\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Wheter a disable switch should be available\r\n   */\r\n  @Input() disableSwitch: boolean = false;\r\n\r\n  /**\r\n   * Whether the field is required\r\n   */\r\n  get required(): boolean {\r\n    return formControlIsRequired(this.formControl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabled$.next(this.formControl.disabled);\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    return getControlErrorMessage(this.formControl, this.errors);\r\n  }\r\n\r\n  onDisableSwitchClick() {\r\n    this.toggleDisabled();\r\n  }\r\n\r\n  private toggleDisabled() {\r\n    const disabled = !this.disabled$.value;\r\n    if (disabled === true) {\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n    this.disabled$.next(disabled);\r\n  }\r\n\r\n}\r\n","import {\r\n  Input,\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { formControlIsRequired, getControlErrorMessage } from '../shared/form.utils';\r\nimport { FormFieldComponent } from '../shared/form-field-component';\r\n\r\n/**\r\n * This component renders a textarea field\r\n */\r\n@FormFieldComponent('textarea')\r\n@Component({\r\n  selector: 'igo-form-field-textarea',\r\n  templateUrl: './form-field-textarea.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormFieldTextareaComponent implements OnInit {\r\n\r\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Wheter a disable switch should be available\r\n   */\r\n  @Input() disableSwitch: boolean = false;\r\n\r\n  /**\r\n   * Whether the field is required\r\n   */\r\n  get required(): boolean {\r\n    return formControlIsRequired(this.formControl);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.disabled$.next(this.formControl.disabled);\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    return getControlErrorMessage(this.formControl, this.errors);\r\n  }\r\n\r\n  onDisableSwitchClick() {\r\n    this.toggleDisabled();\r\n  }\r\n\r\n  private toggleDisabled() {\r\n    const disabled = !this.disabled$.value;\r\n    if (disabled === true) {\r\n      this.formControl.disable();\r\n    } else {\r\n      this.formControl.enable();\r\n    }\r\n    this.disabled$.next(disabled);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoDynamicOutletModule } from '../../dynamic-component/dynamic-outlet/dynamic-outlet.module';\r\n\r\nimport { FormFieldComponent } from './form-field.component';\r\nimport { FormFieldSelectComponent } from './form-field-select.component';\r\nimport { FormFieldTextComponent } from './form-field-text.component';\r\nimport { FormFieldTextareaComponent } from './form-field-textarea.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    IgoLanguageModule,\r\n    IgoDynamicOutletModule\r\n  ],\r\n  exports: [\r\n    FormFieldComponent,\r\n    FormFieldSelectComponent,\r\n    FormFieldTextComponent,\r\n    FormFieldTextareaComponent\r\n  ],\r\n  declarations: [\r\n    FormFieldComponent,\r\n    FormFieldSelectComponent,\r\n    FormFieldTextComponent,\r\n    FormFieldTextareaComponent\r\n  ]\r\n})\r\nexport class IgoFormFieldModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { getControlErrorMessage } from '../shared/form.utils';\r\nimport { FormField, FormFieldGroup } from '../shared/form.interfaces';\r\n\r\n/**\r\n * A configurable form, optionnally bound to an entity\r\n * (for example in case of un update). Submitting that form\r\n * emits an event with the form data but no other operation is performed.\r\n */\r\n@Component({\r\n  selector: 'igo-form-group',\r\n  templateUrl: './form-group.component.html',\r\n  styleUrls: ['./form-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FormGroupComponent {\r\n\r\n  /**\r\n   * Form field group\r\n   */\r\n  @Input() group: FormFieldGroup;\r\n\r\n  /**\r\n   * Field placeholder\r\n   */\r\n  @Input() errors: {[key: string]: string};\r\n\r\n  /**\r\n   * Form group control\r\n   */\r\n  get formControl(): FormGroup { return this.group.control; }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Return the number of columns a field should occupy.\r\n   * The maximum allowed is 2, even if the field config says more.\r\n   * @param field Field\r\n   * @returns Number of columns\r\n   * @internal\r\n   */\r\n  getFieldColSpan(field: FormField): number {\r\n    let colSpan = 2;\r\n    const options = field.options || {};\r\n    if (options.cols && options.cols > 0) {\r\n      colSpan = Math.min(options.cols, 2);\r\n    }\r\n\r\n    return colSpan;\r\n  }\r\n\r\n  /**\r\n   * Return the number of columns a field should occupy.\r\n   * The maximum allowed is 2, even if the field config says more.\r\n   * @param field Field\r\n   * @returns Number of columns\r\n   * @internal\r\n   */\r\n  getFieldNgClass(field: FormField): {[key: string]: boolean} {\r\n    const colspan = this.getFieldColSpan(field);\r\n    return {[`igo-form-field-colspan-${colspan}`]: true};\r\n  }\r\n\r\n  /**\r\n   * Get error message\r\n   */\r\n  getErrorMessage(): string {\r\n    const options = this.group.options || {};\r\n    return getControlErrorMessage(this.formControl, options.errors || {});\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatFormFieldModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { IgoFormFieldModule } from '../form-field/form-field.module';\r\nimport { FormGroupComponent } from './form-group.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatFormFieldModule,\r\n    IgoLanguageModule,\r\n    IgoFormFieldModule\r\n  ],\r\n  exports: [\r\n    FormGroupComponent\r\n  ],\r\n  declarations: [\r\n    FormGroupComponent\r\n  ]\r\n})\r\nexport class IgoFormGroupModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoFormFormModule } from './form/form.module';\r\nimport { IgoFormGroupModule } from './form-group/form-group.module';\r\nimport { IgoFormFieldModule } from './form-field/form-field.module';\r\nimport { FormFieldSelectComponent } from './form-field/form-field-select.component';\r\nimport { FormFieldTextComponent } from './form-field/form-field-text.component';\r\nimport { FormFieldTextareaComponent } from './form-field/form-field-textarea.component';\r\nimport { FormService } from './shared/form.service';\r\nimport { FormFieldService } from './shared/form-field.service';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoFormGroupModule,\r\n    IgoFormFieldModule\r\n  ],\r\n  exports: [\r\n    IgoFormFormModule,\r\n    IgoFormGroupModule,\r\n    IgoFormFieldModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    FormService,\r\n    FormFieldService\r\n  ],\r\n  entryComponents: [\r\n    FormFieldSelectComponent,\r\n    FormFieldTextComponent,\r\n    FormFieldTextareaComponent\r\n  ]\r\n})\r\nexport class IgoFormModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { MatSelectModule } from '@angular/material';\r\n\r\nimport { EntitySelectorComponent } from './entity-selector.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatSelectModule\r\n  ],\r\n  exports: [EntitySelectorComponent],\r\n  declarations: [EntitySelectorComponent]\r\n})\r\nexport class IgoEntitySelectorModule {}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoStopDropPropagation]'\r\n})\r\nexport class StopDropPropagationDirective {\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(event: any): void {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { Directive, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoStopPropagation]'\r\n})\r\nexport class StopPropagationDirective {\r\n  @HostListener('click', ['$event'])\r\n  public onClick(event: any): void {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { StopDropPropagationDirective } from './stop-drop-propagation.directive';\r\nimport { StopPropagationDirective } from './stop-propagation.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [StopDropPropagationDirective, StopPropagationDirective],\r\n  exports: [StopDropPropagationDirective, StopPropagationDirective]\r\n})\r\nexport class IgoStopPropagationModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoStopPropagationModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  ElementRef,\r\n  Renderer2,\r\n  EventEmitter,\r\n  Output,\r\n  HostListener\r\n} from '@angular/core';\r\n\r\nimport { EntityTableScrollBehavior } from '../shared/entity.enums';\r\n\r\n/**\r\n * Directive that handles an entity table row click and selection.\r\n */\r\n@Directive({\r\n  selector: '[igoEntityTableRow]'\r\n})\r\nexport class EntityTableRowDirective {\r\n\r\n  /**\r\n   * Class added to a selected row\r\n   */\r\n  static selectedCls = 'igo-entity-table-row-selected';\r\n\r\n  /**\r\n   * Class added to a highlighted row\r\n   */\r\n  static highlightedCls = 'igo-entity-table-row-highlighted';\r\n\r\n  /**\r\n   * Whether a row supports selection\r\n   */\r\n  @Input() selection = false;\r\n\r\n  /**\r\n   * Whether clicking a row should select it (if selection is true)\r\n   */\r\n  @Input() selectOnClick: boolean = true;\r\n\r\n  /**\r\n   * Whether the selected row should be highlighted\r\n   */\r\n  @Input()\r\n  highlightSelection: boolean = true;\r\n\r\n  /**\r\n   * Whether a row is selected\r\n   */\r\n  @Input()\r\n  set selected(value: boolean) {\r\n    if (this.selection === false) { return; }\r\n    if (value === this._selected) { return; }\r\n\r\n    this.toggleSelected(value);\r\n    this.scroll();\r\n  }\r\n  get selected(): boolean {\r\n    return this._selected;\r\n  }\r\n  private _selected = false;\r\n\r\n  /**\r\n   * Scroll behavior on selection\r\n   */\r\n  @Input()\r\n  scrollBehavior: EntityTableScrollBehavior = EntityTableScrollBehavior.Auto;\r\n\r\n  /**\r\n   * Event emitted when a row is selected\r\n   */\r\n  @Output() select = new EventEmitter<EntityTableRowDirective>();\r\n\r\n  /**\r\n   * When a row is clicked, select it if it's supported\r\n   * @ignore\r\n   */\r\n  @HostListener('click')\r\n  onClick() {\r\n    if (this.selection === false || this.selectOnClick === false) {\r\n      return;\r\n    }\r\n\r\n    this.toggleSelected(true);\r\n    this.select.emit(this);\r\n  }\r\n\r\n  constructor(private renderer: Renderer2, private el: ElementRef) {}\r\n\r\n  /**\r\n   * Select a row and add or remove the selected class from it\r\n   * @param selected Whether the row should be selected\r\n   */\r\n  private toggleSelected(selected: boolean) {\r\n    this._selected = selected;\r\n    if (selected === true) {\r\n      this.addCls(EntityTableRowDirective.selectedCls);\r\n      if (this.highlightSelection === true) {\r\n        this.addCls(EntityTableRowDirective.highlightedCls);\r\n      }\r\n    } else {\r\n      this.removeCls(EntityTableRowDirective.selectedCls);\r\n      this.removeCls(EntityTableRowDirective.highlightedCls);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Scroll to the selected row\r\n   */\r\n  private scroll() {\r\n    if (this._selected === true) {\r\n      this.el.nativeElement.scrollIntoView({\r\n        behavior: this.scrollBehavior,\r\n        block: 'center',\r\n        inline: 'center'\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the selected CSS class\r\n   */\r\n  private addCls(cls: string) {\r\n    this.renderer.addClass(this.el.nativeElement, cls);\r\n  }\r\n\r\n  /**\r\n   * Remove the selected CSS class\r\n   */\r\n  private removeCls(cls: string) {\r\n    this.renderer.removeClass(this.el.nativeElement, cls);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatTableModule,\r\n  MatSortModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatCheckboxModule\r\n} from '@angular/material';\r\n\r\nimport { IgoStopPropagationModule } from '../../stop-propagation/stop-propagation.module';\r\nimport { IgoCustomHtmlModule } from '../../custom-html/custom-html.module';\r\nimport { EntityTableRowDirective } from './entity-table-row.directive';\r\nimport { EntityTableComponent } from './entity-table.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatCheckboxModule,\r\n    IgoStopPropagationModule,\r\n    IgoCustomHtmlModule\r\n  ],\r\n  exports: [\r\n    EntityTableComponent\r\n  ],\r\n  declarations: [\r\n    EntityTableComponent,\r\n    EntityTableRowDirective\r\n  ]\r\n})\r\nexport class IgoEntityTableModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoEntitySelectorModule } from './entity-selector/entity-selector.module';\r\nimport { IgoEntityTableModule } from './entity-table/entity-table.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoEntitySelectorModule,\r\n    IgoEntityTableModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoEntityModule {}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\n\r\n@Pipe({\r\n  name: 'secureImage'\r\n})\r\nexport class SecureImagePipe implements PipeTransform {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  transform(url: string) {\r\n    return this.http\r\n      .get(url, {\r\n        headers: {\r\n          activityInterceptor: 'false'\r\n        },\r\n        responseType: 'blob'\r\n      })\r\n      .pipe(\r\n        switchMap(blob => {\r\n          return new Observable(observer => {\r\n            const reader = new FileReader();\r\n            reader.readAsDataURL(blob);\r\n            reader.onloadend = () => {\r\n              observer.next(reader.result);\r\n            };\r\n          });\r\n        })\r\n      );\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { SecureImagePipe } from './secure-image.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [SecureImagePipe],\r\n  exports: [SecureImagePipe]\r\n})\r\nexport class IgoImageModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoImageModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'keyvalue'\r\n})\r\nexport class KeyValuePipe implements PipeTransform {\r\n  transform(value: any, args?: any): any {\r\n    const keyValues = [];\r\n    Object.getOwnPropertyNames(value).forEach((key: string) =>\r\n      keyValues.push({ key, value: value[key] })\r\n    );\r\n\r\n    return keyValues;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { KeyValuePipe } from './keyvalue.pipe';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [KeyValuePipe],\r\n  exports: [KeyValuePipe]\r\n})\r\nexport class IgoKeyValueModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoKeyValueModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-json-dialog',\r\n  templateUrl: './json-dialog.component.html'\r\n})\r\nexport class JsonDialogComponent {\r\n  public title: string;\r\n  public data: any;\r\n  public ignoreKeys: string[];\r\n\r\n  constructor(public dialogRef: MatDialogRef<JsonDialogComponent>) {}\r\n\r\n  isObject(val) {\r\n    return typeof val === 'object' && !Array.isArray(val);\r\n  }\r\n\r\n  getKey(baseKey, key) {\r\n    return (baseKey ? baseKey + '.' : '') + key;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { JsonDialogComponent } from './json-dialog.component';\r\n\r\n@Injectable()\r\nexport class JsonDialogService {\r\n  constructor(private dialog: MatDialog) {}\r\n\r\n  public open(title: any, data, ignoreKeys?: string[]): Observable<any> {\r\n    const dialogRef = this.dialog.open(JsonDialogComponent, {\r\n      disableClose: false\r\n    });\r\n    dialogRef.componentInstance.data = data;\r\n    dialogRef.componentInstance.title = title;\r\n    dialogRef.componentInstance.ignoreKeys = ignoreKeys;\r\n\r\n    return dialogRef.afterClosed();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule, MatDialogModule } from '@angular/material';\r\n\r\nimport { IgoKeyValueModule } from '../keyvalue/keyvalue.module';\r\n\r\nimport { JsonDialogComponent } from './json-dialog.component';\r\nimport { JsonDialogService } from './json-dialog.service';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatButtonModule, MatDialogModule, IgoKeyValueModule],\r\n  exports: [JsonDialogComponent],\r\n  declarations: [JsonDialogComponent],\r\n  entryComponents: [JsonDialogComponent],\r\n  providers: [JsonDialogService]\r\n})\r\nexport class IgoJsonDialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoJsonDialogModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  ElementRef,\r\n  Renderer2,\r\n  HostListener,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[igoListItem]'\r\n})\r\nexport class ListItemDirective {\r\n\r\n  static selectedCls = 'igo-list-item-selected';\r\n  static disabledCls = 'igo-list-item-disabled';\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  @Input()\r\n  get focused() {\r\n    return this._focused;\r\n  }\r\n  set focused(value: boolean) {\r\n    if (value === this._focused) {\r\n      return;\r\n    }\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    value ? this.beforeFocus.emit(this) : this.beforeUnfocus.emit(this);\r\n\r\n    this._focused = value;\r\n    this.toggleSelectedClass();\r\n\r\n    value ? this.focus.emit(this) : this.unfocus.emit(this);\r\n  }\r\n  private _focused = false;\r\n\r\n  @Input()\r\n  get selected() {\r\n    return this._selected;\r\n  }\r\n  set selected(value: boolean) {\r\n    if (value === this._selected) {\r\n      return;\r\n    }\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    value ? this.beforeSelect.emit(this) : this.beforeUnselect.emit(this);\r\n\r\n    this._selected = value;\r\n    this._focused = value;\r\n    this.toggleSelectedClass();\r\n\r\n    value ? this.select.emit(this) : this.unselect.emit(this);\r\n  }\r\n  private _selected = false;\r\n\r\n  @Input()\r\n  get disabled() {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    if (value === this._disabled) {\r\n      return;\r\n    }\r\n\r\n    if (value === true) {\r\n      this.selected = false;\r\n    }\r\n\r\n    value ? this.beforeDisable.emit(this) : this.beforeEnable.emit(this);\r\n\r\n    this._disabled = value;\r\n    this.toggleDisabledClass();\r\n\r\n    value ? this.disable.emit(this) : this.enable.emit(this);\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Output() beforeSelect = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeFocus = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeUnselect = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeUnfocus = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeDisable = new EventEmitter<ListItemDirective>();\r\n  @Output() beforeEnable = new EventEmitter<ListItemDirective>();\r\n  @Output() focus = new EventEmitter<ListItemDirective>();\r\n  @Output() unfocus = new EventEmitter<ListItemDirective>();\r\n  @Output() select = new EventEmitter<ListItemDirective>();\r\n  @Output() unselect = new EventEmitter<ListItemDirective>();\r\n  @Output() disable = new EventEmitter<ListItemDirective>();\r\n  @Output() enable = new EventEmitter<ListItemDirective>();\r\n\r\n  @HostListener('click')\r\n  onClick() {\r\n    this.selected = true;\r\n  }\r\n\r\n  constructor(public renderer: Renderer2, private el: ElementRef) {}\r\n\r\n  getOffsetTop(): number {\r\n    const padding = 5;\r\n\r\n    return this.el.nativeElement.offsetTop - padding;\r\n  }\r\n\r\n  private toggleSelectedClass() {\r\n    if (this.focused || this.selected) {\r\n      this.addCls(ListItemDirective.selectedCls);\r\n    } else {\r\n      this.removeCls(ListItemDirective.selectedCls);\r\n    }\r\n  }\r\n\r\n  private toggleDisabledClass() {\r\n    if (this.disabled) {\r\n      this.addCls(ListItemDirective.disabledCls);\r\n    } else {\r\n      this.removeCls(ListItemDirective.disabledCls);\r\n    }\r\n  }\r\n\r\n  private addCls(cls: string) {\r\n    this.renderer.addClass(this.el.nativeElement, cls);\r\n  }\r\n\r\n  private removeCls(cls: string) {\r\n    this.renderer.removeClass(this.el.nativeElement, cls);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  AfterViewInit,\r\n  OnInit,\r\n  OnDestroy,\r\n  QueryList,\r\n  Input,\r\n  ContentChildren,\r\n  HostListener,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { ListItemDirective } from './list-item.directive';\r\n\r\n@Component({\r\n  selector: 'igo-list',\r\n  templateUrl: './list.component.html',\r\n  styleUrls: ['./list.component.scss']\r\n})\r\nexport class ListComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  @Input()\r\n  get navigation() {\r\n    return this._navigation;\r\n  }\r\n  set navigation(value: boolean) {\r\n    this._navigation = value;\r\n  }\r\n  private _navigation = true;\r\n\r\n  @Input()\r\n  get selection() {\r\n    return this._selection;\r\n  }\r\n  set selection(value: boolean) {\r\n    this._selection = value;\r\n  }\r\n  private _selection = true;\r\n\r\n  get selectedItem() {\r\n    return this._selectedItem;\r\n  }\r\n  set selectedItem(value: ListItemDirective) {\r\n    this.focusedItem = value;\r\n    this._selectedItem = value;\r\n  }\r\n  private _selectedItem: ListItemDirective;\r\n\r\n  get focusedItem() {\r\n    return this._focusedItem;\r\n  }\r\n  set focusedItem(value: ListItemDirective) {\r\n    this._focusedItem = value;\r\n  }\r\n  private _focusedItem: ListItemDirective;\r\n\r\n  private navigationEnabled: boolean;\r\n  private listItems$$: Subscription;\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  @ContentChildren(ListItemDirective, { descendants: true })\r\n  listItems: QueryList<ListItemDirective>;\r\n\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n    // It would be nice to be able to unsubscribe to the event\r\n    // completely but until ES7 this won't be possible because\r\n    // document events are not observables\r\n    if (this.navigationEnabled) {\r\n      if (event.keyCode === 38 || event.keyCode === 40) {\r\n        event.preventDefault();\r\n        this.navigate(event.keyCode);\r\n      } else if (event.keyCode === 13) {\r\n        this.select(this.focusedItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(private el: ElementRef) {}\r\n\r\n  ngOnInit() {\r\n    this.enableNavigation();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.listItems.length) {\r\n      this.init();\r\n    }\r\n\r\n    this.listItems$$ = this.listItems.changes.subscribe(\r\n      (items: ListItemDirective[]) => this.init()\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.listItems$$.unsubscribe();\r\n  }\r\n\r\n  focus(item?: ListItemDirective) {\r\n    if (!this.selection) {\r\n      return;\r\n    }\r\n\r\n    this.unfocus();\r\n\r\n    // We need to make this check because dynamic\r\n    // lists such as in the search results list may fail\r\n    if (item !== undefined) {\r\n      item.focused = true;\r\n    }\r\n  }\r\n\r\n  unfocus() {\r\n    if (this.focusedItem !== undefined) {\r\n      this.focusedItem.focused = false;\r\n    }\r\n\r\n    this.focusedItem = undefined;\r\n  }\r\n\r\n  focusNext() {\r\n    const items = this.listItems.toArray();\r\n    let item;\r\n    let disabled = true;\r\n    let index = this.getFocusedIndex();\r\n    if (index === undefined) {\r\n      index = -1;\r\n    }\r\n\r\n    while (disabled && index < items.length - 1) {\r\n      index += 1;\r\n      item = items[index];\r\n      disabled = item.disabled;\r\n    }\r\n\r\n    if (item !== undefined) {\r\n      this.focus(item);\r\n    }\r\n  }\r\n\r\n  focusPrevious() {\r\n    const items = this.listItems.toArray();\r\n    let item;\r\n    let disabled = true;\r\n    let index = this.getFocusedIndex();\r\n\r\n    while (disabled && index > 0) {\r\n      index -= 1;\r\n      item = items[index];\r\n      disabled = item.disabled;\r\n    }\r\n\r\n    if (item !== undefined) {\r\n      this.focus(item);\r\n    }\r\n  }\r\n\r\n  select(item?: ListItemDirective) {\r\n    if (!this.selection) {\r\n      return;\r\n    }\r\n\r\n    this.unselect();\r\n\r\n    if (item !== undefined) {\r\n      item.selected = true;\r\n    }\r\n  }\r\n\r\n  unselect() {\r\n    this.unfocus();\r\n\r\n    if (this.selectedItem !== undefined) {\r\n      this.selectedItem.selected = false;\r\n    }\r\n\r\n    this.selectedItem = undefined;\r\n  }\r\n\r\n  enableNavigation() {\r\n    if (this.navigation) {\r\n      this.navigationEnabled = true;\r\n    }\r\n  }\r\n\r\n  disableNavigation() {\r\n    this.navigationEnabled = false;\r\n  }\r\n\r\n  scrollToItem(item: ListItemDirective) {\r\n    this.el.nativeElement.scrollTop = item.getOffsetTop();\r\n  }\r\n\r\n  private init() {\r\n    this.subscribe();\r\n\r\n    this.selectedItem = this.findSelectedItem();\r\n    this.focusedItem = this.findFocusedItem();\r\n\r\n    this.enableNavigation();\r\n  }\r\n\r\n  private subscribe() {\r\n    this.unsubscribe();\r\n\r\n    this.listItems.toArray().forEach(item => {\r\n      this.subscriptions.push(\r\n        item.beforeSelect.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemBeforeSelect(item2)\r\n        )\r\n      );\r\n\r\n      this.subscriptions.push(\r\n        item.select.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemSelect(item2)\r\n        )\r\n      );\r\n\r\n      this.subscriptions.push(\r\n        item.beforeFocus.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemBeforeFocus(item2)\r\n        )\r\n      );\r\n\r\n      this.subscriptions.push(\r\n        item.focus.subscribe((item2: ListItemDirective) =>\r\n          this.handleItemFocus(item2)\r\n        )\r\n      );\r\n    }, this);\r\n  }\r\n\r\n  private unsubscribe() {\r\n    this.subscriptions.forEach((sub: Subscription) => sub.unsubscribe());\r\n    this.subscriptions = [];\r\n  }\r\n\r\n  private handleItemBeforeFocus(item: ListItemDirective) {\r\n    if (item !== this.focusedItem) {\r\n      this.unselect();\r\n    }\r\n  }\r\n\r\n  private handleItemFocus(item: ListItemDirective) {\r\n    this.focusedItem = item;\r\n  }\r\n\r\n  private handleItemBeforeSelect(item: ListItemDirective) {\r\n    if (item !== this.focusedItem) {\r\n      this.unselect();\r\n    }\r\n  }\r\n\r\n  private handleItemSelect(item: ListItemDirective) {\r\n    this.selectedItem = item;\r\n  }\r\n\r\n  private findSelectedItem() {\r\n    return this.listItems.toArray().find(item => item.selected);\r\n  }\r\n\r\n  private findFocusedItem() {\r\n    return this.listItems.toArray().find(item => item.focused);\r\n  }\r\n\r\n  private getFocusedIndex() {\r\n    return this.listItems\r\n      .toArray()\r\n      .findIndex(item => item === this.focusedItem);\r\n  }\r\n\r\n  private navigate(key: number) {\r\n    switch (key) {\r\n      case 38:\r\n        this.focusPrevious();\r\n        break;\r\n      case 40:\r\n        this.focusNext();\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule, MatListModule } from '@angular/material';\r\n\r\nimport { IgoClickoutModule } from '../clickout/clickout.module';\r\n\r\nimport { ListItemDirective } from './list-item.directive';\r\nimport { ListComponent } from './list.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatIconModule, MatListModule, IgoClickoutModule],\r\n  declarations: [ListItemDirective, ListComponent],\r\n  exports: [ListItemDirective, ListComponent]\r\n})\r\nexport class IgoListModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoListModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  HostBinding\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-panel',\r\n  templateUrl: './panel.component.html',\r\n  styleUrls: ['./panel.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PanelComponent {\r\n\r\n  @Input()\r\n  get title() {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    this._title = value;\r\n  }\r\n  private _title: string;\r\n\r\n  @Input()\r\n  @HostBinding('class.igo-panel-with-header')\r\n  get withHeader(): boolean {\r\n    return this._withHeader;\r\n  }\r\n  set withHeader(value: boolean) {\r\n    this._withHeader = value;\r\n  }\r\n  private _withHeader = true;\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PanelComponent } from './panel.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    PanelComponent\r\n  ],\r\n  declarations: [\r\n    PanelComponent\r\n  ]\r\n})\r\nexport class IgoPanelModule {}\r\n","import { Directive, Self, HostListener, Renderer2 } from '@angular/core';\r\nimport { MatSidenav } from '@angular/material';\r\n\r\n/**\r\n * <igoSidenavShim> directive.\r\n *\r\n * This directive prevents a material sidenav with mode=\"side\"\r\n * from focusing an element after it's closed\r\n */\r\n@Directive({\r\n  selector: '[igoSidenavShim]'\r\n})\r\nexport class SidenavShimDirective {\r\n  private focusedElement: HTMLElement;\r\n  private blurElement: HTMLElement;\r\n\r\n  @HostListener('open', ['$event'])\r\n  onOpen() {\r\n    this.focusedElement = document.activeElement as HTMLElement;\r\n  }\r\n\r\n  @HostListener('close-start', ['$event'])\r\n  onCloseStart() {\r\n    const focusedElement = document.activeElement as HTMLElement;\r\n    if (focusedElement !== this.focusedElement) {\r\n      this.blurElement = this.focusedElement;\r\n    } else {\r\n      this.blurElement = undefined;\r\n    }\r\n  }\r\n\r\n  @HostListener('close', ['$event'])\r\n  onClose() {\r\n    if (this.blurElement) {\r\n      this.renderer.selectRootElement(this.blurElement).blur();\r\n    }\r\n\r\n    this.blurElement = undefined;\r\n    this.focusedElement = undefined;\r\n  }\r\n\r\n  constructor(@Self() component: MatSidenav, private renderer: Renderer2) {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { SidenavShimDirective } from './sidenav-shim.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [SidenavShimDirective],\r\n  exports: [SidenavShimDirective]\r\n})\r\nexport class IgoSidenavModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSidenavModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'igo-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent {\r\n\r\n  public shown$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  @Input()\r\n  set shown(value: boolean) { this.shown$.next(value); }\r\n  get shown(): boolean { return this.shown$.value; }\r\n\r\n  constructor() {}\r\n\r\n  show() {\r\n    this.shown = true;\r\n  }\r\n\r\n  hide() {\r\n    this.shown = false;\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { ActivityService } from '@igo2/core';\r\nimport { SpinnerComponent } from './spinner.component';\r\n\r\n/**\r\n * A directive to bind a SpinnerComponent to the activity service.\r\n * The activity service tracks any HTTP request and this directive\r\n * will display the spinner it's attached to when the activity counter\r\n * is greater than 0.\r\n */\r\n@Directive({\r\n  selector: '[igoSpinnerActivity]',\r\n  providers: [SpinnerComponent]\r\n})\r\nexport class SpinnerActivityDirective implements OnInit, OnDestroy {\r\n  /**\r\n   * Subscription to the activity service counter\r\n   */\r\n  private counter$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() private spinner: SpinnerComponent,\r\n    private activityService: ActivityService\r\n  ) {}\r\n\r\n  /**\r\n   * Subscribe to the activity service counter and display the spinner\r\n   * when it's is greater than 0.\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.counter$$ = this.activityService.counter$\r\n      .pipe(debounceTime(50))\r\n      .subscribe((count: number) => {\r\n        count > 0 ? this.spinner.show() : this.spinner.hide();\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubcribe to the activity service counter.\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.counter$$.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatProgressSpinnerModule } from '@angular/material';\r\n\r\nimport { SpinnerActivityDirective } from './spinner-activity.directive';\r\nimport { SpinnerComponent } from './spinner.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MatProgressSpinnerModule],\r\n  declarations: [SpinnerActivityDirective, SpinnerComponent],\r\n  exports: [SpinnerActivityDirective, SpinnerComponent]\r\n})\r\nexport class IgoSpinnerModule {}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { MatSort } from '@angular/material';\r\n\r\nimport { Observable, BehaviorSubject, merge } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { TableDatabase, TableModel } from './index';\r\n\r\nexport class TableDataSource extends DataSource<any> {\r\n  get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  private _filterChange = new BehaviorSubject('');\r\n\r\n  constructor(\r\n    private _database: TableDatabase,\r\n    private _model: TableModel,\r\n    private _sort: MatSort\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  // Connect function called by the table to retrieve one stream containing\r\n  // the data to render.\r\n  connect(): Observable<any[]> {\r\n    if (!this._database) {\r\n      return merge([]);\r\n    }\r\n    const displayDataChanges = [\r\n      this._database.dataChange,\r\n      this._filterChange,\r\n      this._sort.sortChange\r\n    ];\r\n\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        return this.getFilteredData(this._database.data);\r\n      }),\r\n      map(data => {\r\n        return this.getSortedData(data);\r\n      })\r\n    );\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  getFilteredData(data): any[] {\r\n    if (!this.filter) {\r\n      return data;\r\n    }\r\n    return data.slice().filter((item: any) => {\r\n      const searchStr: string = this._model.columns\r\n        .filter(c => c.filterable)\r\n        .map(c => ObjectUtils.resolve(item, c.name))\r\n        .join(' ')\r\n        .toLowerCase();\r\n\r\n      return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n    });\r\n  }\r\n\r\n  getSortedData(data): any[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n\r\n    return data.sort((a, b) => {\r\n      const propertyA: number | string = ObjectUtils.resolve(\r\n        a,\r\n        this._sort.active\r\n      );\r\n      const propertyB: number | string = ObjectUtils.resolve(\r\n        b,\r\n        this._sort.active\r\n      );\r\n\r\n      return ObjectUtils.naturalCompare(\r\n        propertyB,\r\n        propertyA,\r\n        this._sort.direction\r\n      );\r\n    });\r\n  }\r\n}\r\n","export enum TableActionColor {\r\n  primary,\r\n  accent,\r\n  warn\r\n}\r\n","import {\r\n  Component,\r\n  ElementRef,\r\n  ViewChild,\r\n  Input,\r\n  Output,\r\n  OnChanges,\r\n  OnInit,\r\n  AfterViewInit,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { MatSort } from '@angular/material';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\nimport { debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { fromEvent } from 'rxjs';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { TableModel } from './table-model.interface';\r\nimport { TableDatabase } from './table-database';\r\nimport { TableDataSource } from './table-datasource';\r\nimport { TableActionColor } from './table-action-color.enum';\r\n\r\n@Component({\r\n  selector: 'igo-table',\r\n  templateUrl: './table.component.html',\r\n  styleUrls: ['./table.component.scss']\r\n})\r\nexport class TableComponent implements OnChanges, OnInit, AfterViewInit {\r\n  @Input()\r\n  get database(): TableDatabase {\r\n    return this._database;\r\n  }\r\n  set database(value: TableDatabase) {\r\n    this._database = value;\r\n  }\r\n  private _database: TableDatabase;\r\n\r\n  @Input()\r\n  get model(): TableModel {\r\n    return this._model;\r\n  }\r\n  set model(value: TableModel) {\r\n    this._model = value;\r\n  }\r\n  private _model: TableModel;\r\n\r\n  @Input()\r\n  get hasFilterInput(): boolean {\r\n    return this._hasFIlterInput;\r\n  }\r\n  set hasFilterInput(value: boolean) {\r\n    this._hasFIlterInput = value;\r\n  }\r\n  private _hasFIlterInput = true;\r\n\r\n  public displayedColumns;\r\n  public dataSource: TableDataSource | null;\r\n  public selection = new SelectionModel<any>(true, []);\r\n\r\n  @Output()\r\n  select = new EventEmitter<{\r\n    added: any[];\r\n    removed: any[];\r\n    source: SelectionModel<any>;\r\n  }>();\r\n\r\n  @ViewChild('filter') filter: ElementRef;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new TableDataSource(this.database, this.model, this.sort);\r\n\r\n    if (this.model) {\r\n      this.displayedColumns = this.model.columns\r\n        .filter(c => c.displayed !== false)\r\n        .map(c => c.name);\r\n\r\n      if (this.model.selectionCheckbox) {\r\n        this.displayedColumns.unshift('selectionCheckbox');\r\n      }\r\n      if (this.model.actions && this.model.actions.length) {\r\n        this.displayedColumns.push('action');\r\n      }\r\n    }\r\n\r\n    this.selection.changed.subscribe(e => this.select.emit(e));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (this.filter) {\r\n      fromEvent(this.filter.nativeElement, 'keyup')\r\n        .pipe(\r\n          debounceTime(150),\r\n          distinctUntilChanged()\r\n        )\r\n        .subscribe(() => {\r\n          if (!this.dataSource) {\r\n            return;\r\n          }\r\n          this.dataSource.filter = this.filter.nativeElement.value;\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnChanges(change) {\r\n    if (change.database) {\r\n      this.dataSource = new TableDataSource(\r\n        this.database,\r\n        this.model,\r\n        this.sort\r\n      );\r\n      this.selection.clear();\r\n    }\r\n  }\r\n\r\n  getActionColor(colorId: number): string {\r\n    return TableActionColor[colorId];\r\n  }\r\n\r\n  getValue(row, key) {\r\n    return ObjectUtils.resolve(row, key);\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.database.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.database.data.forEach(row => this.selection.select(row));\r\n  }\r\n\r\n  handleClickAction(event, action, row) {\r\n    event.stopPropagation();\r\n    action.click(row);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTableModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSortModule,\r\n  MatCheckboxModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { TableComponent } from './table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CdkTableModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    IgoLanguageModule\r\n  ],\r\n  declarations: [TableComponent],\r\n  exports: [TableComponent]\r\n})\r\nexport class IgoTableModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoTableModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { Tool } from './tool.interface';\r\n\r\n/**\r\n * Service where runtime tool configurations are registered\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ToolService {\r\n\r\n  static tools: {[key: string]: Tool} = {};\r\n\r\n  static register(tool: Tool) {\r\n    ToolService.tools[tool.name] = tool;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Return a tool\r\n   * @param name Tool name\r\n   * @returns tool Tool\r\n   */\r\n  getTool(name: string): Tool {\r\n    return ToolService.tools[name];\r\n  }\r\n\r\n  /**\r\n   * Return all tools\r\n   * @returns tTols\r\n   */\r\n  getTools(): Tool[] {\r\n    return Object.values(ToolService.tools);\r\n  }\r\n\r\n}\r\n","import { EntityStore } from '../../entity';\r\nimport { Action } from './action.interfaces';\r\n\r\n/**\r\n * The class is a specialized version of an EntityStore that stores\r\n * actions.\r\n */\r\nexport class ActionStore extends EntityStore<Action> {\r\n\r\n  /**\r\n   * Update actions availability. That means disabling or enabling some\r\n   * actions based on the conditions they define.\r\n   */\r\n  updateActionsAvailability() {\r\n    const availables = [];\r\n    const unavailables = [];\r\n\r\n    this.entities$.value.forEach((action: Action) => {\r\n      const conditions = action.conditions || [];\r\n      const args = action.conditionArgs || [];\r\n      const available = conditions.every((condition: (...args: any[]) => boolean) => {\r\n        return condition(...args);\r\n      });\r\n      available ? availables.push(action) : unavailables.push(action);\r\n    });\r\n\r\n    if (unavailables.length > 0) {\r\n      this.state.updateMany(unavailables, {\r\n        disabled: true,\r\n        active: false\r\n      });\r\n    }\r\n\r\n    if (availables.length > 0) {\r\n      this.state.updateMany(availables, {\r\n        disabled: false\r\n      });\r\n    }\r\n  }\r\n\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function toolSlideInOut(\r\n  speed = '300ms',\r\n  type = 'ease-in-out'\r\n): AnimationTriggerMetadata {\r\n  return trigger('toolSlideInOut', [\r\n    state(\r\n      'enter',\r\n      style({\r\n        transform: 'translate3d(0, 0, 0)'\r\n      })\r\n    ),\r\n    transition('void => enter', animate(speed + ' ' + type))\r\n  ]);\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnDestroy,\r\n  OnInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\n\r\nimport { Action, ActionStore } from '../../action';\r\nimport { Tool } from '../shared/tool.interface';\r\nimport { Toolbox } from '../shared/toolbox';\r\nimport { toolSlideInOut } from './toolbox.animation';\r\n\r\n@Component({\r\n  selector: 'igo-toolbox',\r\n  templateUrl: 'toolbox.component.html',\r\n  styleUrls: ['toolbox.component.scss'],\r\n  animations: [toolSlideInOut()],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ToolboxComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Observable of the active tool\r\n   */\r\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Store of actions that toggle tools\r\n   */\r\n  actionStore: ActionStore = new ActionStore([]);\r\n\r\n  /**\r\n   * Observable of he anmation state\r\n   */\r\n  animation$: BehaviorSubject<string> = new BehaviorSubject('none');\r\n\r\n  /**\r\n   * Observable of the toolbar\r\n   */\r\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * Subscription to the active tool\r\n   */\r\n  private activeTool$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to the toolbar\r\n   */\r\n  private toolbar$$: Subscription;\r\n\r\n  /**\r\n   * Observable of the ongoing animation. This is useful when\r\n   * multiple animations are triggered at once i.e. when the user clicks\r\n   * too fast on different actions\r\n   */\r\n  private animating$ = new BehaviorSubject<boolean>(false);\r\n\r\n  /**\r\n   * Subscription to the ongoing animation\r\n   */\r\n  private animating$$: Subscription;\r\n\r\n  /**\r\n   * Toolbox\r\n   */\r\n  @Input() toolbox: Toolbox;\r\n\r\n  /**\r\n   * Whether the toolbox should animate the first tool entering\r\n   */\r\n  @Input() animate: boolean = false;\r\n\r\n  /**\r\n   * Whether the Toolbar should display actions' titles\r\n   */\r\n  get toolbarWithTitle(): boolean {\r\n    return this.activeTool$.value === undefined;\r\n  }\r\n\r\n  /**\r\n   * Initialize the toolbar and subscribe to the active tool\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.toolbar$$ = this.toolbox.toolbar$.subscribe((toolbar: string[]) =>\r\n      this.onToolbarChange(toolbar)\r\n    );\r\n    this.activeTool$$ = this.toolbox.activeTool$.subscribe((tool: Tool) =>\r\n      this.onActiveToolChange(tool)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the active tool and destroy the action store\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.toolbar$$.unsubscribe();\r\n    this.activeTool$$.unsubscribe();\r\n    this.actionStore.destroy();\r\n  }\r\n\r\n  /**\r\n   * Track the starting animation\r\n   * @internal\r\n   */\r\n  onAnimationStart() {\r\n    this.animating$.next(true);\r\n  }\r\n\r\n  /**\r\n   * Untrack the completed animation\r\n   * @internal\r\n   */\r\n  onAnimationComplete() {\r\n    this.animating$.next(false);\r\n  }\r\n\r\n  /**\r\n   * Return a tool's inputs\r\n   * @param tool Tool\r\n   * @returns Tool inputs\r\n   * @internal\r\n   */\r\n  getToolInputs(tool: Tool): { [key: string]: any } {\r\n    return tool.options || {};\r\n  }\r\n\r\n  /**\r\n   * Get Action bar item class function\r\n   * @internal\r\n   */\r\n  get actionBarItemClassFunc() {\r\n    return (tool: Tool) => {\r\n      if (!this.toolbox.activeTool$.value) {\r\n        return;\r\n      }\r\n      return { 'tool-actived': tool.id === this.toolbox.activeTool$.value.name };\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Initialize an action store\r\n   * @param toolbar Toolbar\r\n   */\r\n  private onToolbarChange(toolbar: string[]) {\r\n    this.setToolbar(toolbar);\r\n  }\r\n\r\n  /**\r\n   * Activate a tool and trigger an animation or not\r\n   * @param tool Tool to activate\r\n   */\r\n  private onActiveToolChange(tool: Tool) {\r\n    if (!this.animate) {\r\n      this.setActiveTool(tool);\r\n      return;\r\n    }\r\n    this.onAnimate(() => this.setActiveTool(tool));\r\n  }\r\n\r\n  /**\r\n   * Set the active tool\r\n   * @param tool Tool to activate\r\n   */\r\n  private setActiveTool(tool: Tool | undefined) {\r\n    if (tool === undefined) {\r\n      this.actionStore.state.updateAll({ active: false });\r\n    } else {\r\n      const action = this.actionStore.get(tool.name);\r\n      if (action !== undefined) {\r\n        this.actionStore.state.update(action, { active: true }, true);\r\n      }\r\n    }\r\n\r\n    this.activeTool$.next(tool);\r\n    if (this.animate) {\r\n      this.animation$.next('enter');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Initialize the toolbar\r\n   */\r\n  private setToolbar(toolbar: string[]) {\r\n    const actions = toolbar.reduce((acc: Action[], toolName: string) => {\r\n      const tool = this.toolbox.getTool(toolName);\r\n      if (tool === undefined) {\r\n        return acc;\r\n      }\r\n\r\n      acc.push({\r\n        id: tool.name,\r\n        title: tool.title,\r\n        icon: tool.icon,\r\n        // iconImage: tool.iconImage,\r\n        tooltip: tool.tooltip,\r\n        args: [tool, this.toolbox],\r\n        handler: (_tool: Tool, _toolbox: Toolbox) => {\r\n          _toolbox.activateTool(_tool.name);\r\n        }\r\n      });\r\n      return acc;\r\n    }, []);\r\n    this.actionStore.load(actions);\r\n    this.toolbar$.next(toolbar);\r\n  }\r\n\r\n  /**\r\n   * Observe the ongoing animation and ignore any incoming animation\r\n   * while one is still ongoing.\r\n   * @param callback Callback to execute when the animation completes\r\n   */\r\n  private onAnimate(callback: () => void) {\r\n    this.unAnimate();\r\n    this.animating$$ = this.animating$.subscribe((animation: boolean) => {\r\n      if (!animation) {\r\n        callback.call(this);\r\n        this.unAnimate();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stop observing an animation when it's complete\r\n   */\r\n  private unAnimate() {\r\n    if (this.animating$$) {\r\n      this.animating$$.unsubscribe();\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoActionModule } from '../../action/action.module';\r\nimport {\r\n    IgoDynamicComponentModule\r\n} from '../../dynamic-component/dynamic-component.module';\r\n\r\nimport { ToolboxComponent } from './toolbox.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoActionModule,\r\n    IgoDynamicComponentModule\r\n  ],\r\n  exports: [\r\n    ToolboxComponent\r\n  ],\r\n  declarations: [\r\n    ToolboxComponent\r\n  ]\r\n})\r\nexport class IgoToolboxModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ToolService } from './shared/tool.service';\r\nimport { IgoToolboxModule } from './toolbox/toolbox.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoToolboxModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoToolModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoToolModule,\r\n      providers: [\r\n        ToolService\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { DynamicComponent } from '../../dynamic-component';\r\n\r\nimport { WidgetComponent } from '../shared/widget.interfaces';\r\n\r\n/**\r\n * This component dynamically renders a widget. It also subscribes\r\n * to the widget's 'cancel' and 'complete' events and destroys it\r\n * when any of those event is emitted.\r\n */\r\n@Component({\r\n  selector: 'igo-widget-outlet',\r\n  templateUrl: './widget-outlet.component.html',\r\n  styleUrls: ['./widget-outlet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class WidgetOutletComponent implements OnDestroy {\r\n\r\n  /**\r\n   * Widget subscribers to 'cancel' and 'complete'\r\n   * @internal\r\n   */\r\n  private baseSubscribers = {\r\n    cancel: (event: any) => this.onCancel(event),\r\n    complete: (event: any) => this.onComplete(event)\r\n  };\r\n\r\n  /**\r\n   * Widget\r\n   */\r\n  @Input() widget: DynamicComponent<WidgetComponent>;\r\n\r\n  /**\r\n   * Widget inputs\r\n   */\r\n  @Input() inputs: {[key: string]: any};\r\n\r\n  /**\r\n   * Widget subscribers\r\n   */\r\n  @Input() subscribers: {[key: string]: (event: any) => void} = {};\r\n\r\n  /**\r\n   * Event emitted when the widget emits 'complete'\r\n   */\r\n  @Output() complete = new EventEmitter<any>();\r\n\r\n  /**\r\n   * Event emitted when the widget emits 'cancel'\r\n   */\r\n  @Output() cancel = new EventEmitter<any>();\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Destroy the current widget and all it's inner subscriptions\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.destroyWidget();\r\n  }\r\n\r\n  /**\r\n   * Get the effective subscribers. That means a combination of the base\r\n   * subscribers and any subscriber given as input.\r\n   * @returns Combined subscribers\r\n   * @internal\r\n   */\r\n  getEffectiveSubscribers(): {[key: string]: (event: any) => void} {\r\n    const subscribers = Object.assign({}, this.subscribers);\r\n\r\n    // Base subscribers\r\n    Object.keys(this.baseSubscribers).forEach((key: string) => {\r\n      const subscriber = subscribers[key];\r\n      const baseSubscriber = this.baseSubscribers[key];\r\n      if (subscriber !== undefined) {\r\n        subscribers[key] = (event: any) => {\r\n          subscriber(event);\r\n          baseSubscriber(event);\r\n        };\r\n      } else {\r\n        subscribers[key] = baseSubscriber;\r\n      }\r\n    });\r\n\r\n    return subscribers;\r\n  }\r\n\r\n  /**\r\n   * When the widget emits 'cancel', propagate that event and destroy\r\n   * the widget\r\n   */\r\n  private onCancel(event: any) {\r\n    this.cancel.emit(event);\r\n    this.destroyWidget();\r\n  }\r\n\r\n  /**\r\n   * When the widget emits 'complete', propagate that event and destroy\r\n   * the widget\r\n   */\r\n  private onComplete(event: any) {\r\n    this.complete.emit(event);\r\n    this.destroyWidget();\r\n  }\r\n\r\n  /**\r\n   * Destroy the current widget\r\n   */\r\n  private destroyWidget() {\r\n    if (this.widget !== undefined) {\r\n      this.widget.destroy();\r\n    }\r\n    this.widget = undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  IgoDynamicComponentModule\r\n} from '../../dynamic-component/dynamic-component.module';\r\n\r\nimport { WidgetOutletComponent } from './widget-outlet.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoDynamicComponentModule\r\n  ],\r\n  exports: [\r\n    WidgetOutletComponent\r\n  ],\r\n  declarations: [\r\n    WidgetOutletComponent\r\n  ]\r\n})\r\nexport class IgoWidgetOutletModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { DynamicComponentService } from '../../dynamic-component/shared/dynamic-component.service';\r\n\r\nimport { Widget } from './widget';\r\nimport { WidgetComponent } from './widget.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WidgetService {\r\n\r\n  constructor(private dynamicComponentService: DynamicComponentService) {}\r\n\r\n  create(widgetCls: any): Widget {\r\n    return this.dynamicComponentService.create(widgetCls as WidgetComponent);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoWidgetOutletModule } from './widget-outlet/widget-outlet.module';\r\nimport { WidgetService } from './shared/widget.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoWidgetOutletModule\r\n  ],\r\n  exports: [\r\n    IgoWidgetOutletModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    WidgetService\r\n  ]\r\n})\r\nexport class IgoWidgetModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { getEntityTitle } from '../../entity';\r\nimport { Workspace } from '../shared/workspace';\r\nimport { WorkspaceStore } from '../shared/store';\r\n\r\n/**\r\n * Drop list that activates the selected workspace emit an event.\r\n */\r\n@Component({\r\n  selector: 'igo-workspace-selector',\r\n  templateUrl: './workspace-selector.component.html',\r\n  styleUrls: ['./workspace-selector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class WorkspaceSelectorComponent {\r\n\r\n  /**\r\n   * Store that holds the available workspaces.\r\n   */\r\n  @Input() store: WorkspaceStore;\r\n\r\n  /**\r\n   * Event emitted when an workspace is selected or unselected\r\n   */\r\n  @Output() selectedChange = new EventEmitter<{\r\n    selected: boolean;\r\n    value: Workspace;\r\n  }>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  getWorkspaceTitle(workspace: Workspace): string {\r\n    return getEntityTitle(workspace);\r\n  }\r\n\r\n  /**\r\n   * When an workspace is manually selected, select it into the\r\n   * store and emit an event.\r\n   * @internal\r\n   * @param event The selection change event\r\n   */\r\n  onSelectedChange(event: {value: Workspace}) {\r\n    const workspace = event.value;\r\n    this.store.activateWorkspace(workspace);\r\n    this.selectedChange.emit({selected: true, value: workspace});\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoEntitySelectorModule } from '../../entity/entity-selector/entity-selector.module';\r\nimport { WorkspaceSelectorComponent } from './workspace-selector.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoEntitySelectorModule\r\n  ],\r\n  exports: [\r\n    WorkspaceSelectorComponent\r\n  ],\r\n  declarations: [\r\n    WorkspaceSelectorComponent\r\n  ]\r\n})\r\nexport class IgoWorkspaceSelectorModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { Widget } from '../../widget';\r\nimport { Workspace } from '../shared/workspace';\r\n\r\n/**\r\n * This component dynamically render an Workspace's active widget.\r\n * It also deactivate that widget whenever the widget's component\r\n * emit the 'cancel' or 'complete' event.\r\n */\r\n@Component({\r\n  selector: 'igo-workspace-widget-outlet',\r\n  templateUrl: './workspace-widget-outlet.component.html',\r\n  styleUrls: ['./workspace-widget-outlet.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class WorkspaceWidgetOutletComponent {\r\n\r\n  /**\r\n   * Workspace\r\n   */\r\n  @Input() workspace: Workspace;\r\n\r\n  /**\r\n   * Event emitted when a widget is deactivate which happens\r\n   * when the widget's component emits the 'cancel' or 'complete' event.\r\n   */\r\n  @Output() deactivateWidget = new EventEmitter<Widget>();\r\n\r\n  /**\r\n   * Observable of the workspace's active widget\r\n   * @internal\r\n   */\r\n  get widget$(): BehaviorSubject<Widget> { return this.workspace.widget$; }\r\n\r\n  /**\r\n   * Observable of the workspace's widget inputs\r\n   * @internal\r\n   */\r\n  get widgetInputs$(): BehaviorSubject<{[key: string]: any}> {\r\n    return this.workspace.widgetInputs$;\r\n  }\r\n\r\n  /**\r\n   * Observable of the workspace's widget inputs\r\n   * @internal\r\n   */\r\n  get widgetSubscribers$(): BehaviorSubject<{[key: string]: (event: any) => void}> {\r\n    return this.workspace.widgetSubscribers$;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * When a widget's component emit the 'cancel' event,\r\n   * deactivate that widget and emit the 'deactivateWidget' event.\r\n   * @param widget Widget\r\n   * @internal\r\n   */\r\n  onWidgetCancel(widget: Widget) {\r\n    this.workspace.deactivateWidget();\r\n    this.deactivateWidget.emit(widget);\r\n  }\r\n\r\n  /**\r\n   * When a widget's component emit the 'cancel' event,\r\n   * deactivate that widget and emit the 'deactivateWidget' event.\r\n   * @param widget Widget\r\n   * @internal\r\n   */\r\n  onWidgetComplete(widget: Widget) {\r\n    this.workspace.deactivateWidget();\r\n    this.deactivateWidget.emit(widget);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoWidgetOutletModule } from '../../widget/widget-outlet/widget-outlet.module';\r\n\r\nimport { WorkspaceWidgetOutletComponent } from './workspace-widget-outlet.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoWidgetOutletModule\r\n  ],\r\n  exports: [\r\n    WorkspaceWidgetOutletComponent\r\n  ],\r\n  declarations: [\r\n    WorkspaceWidgetOutletComponent\r\n  ]\r\n})\r\nexport class IgoWorkspaceWidgetOutletModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoWorkspaceSelectorModule } from './workspace-selector/workspace-selector.module';\r\nimport { IgoWorkspaceWidgetOutletModule } from './workspace-widget-outlet/workspace-widget-outlet.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoWorkspaceSelectorModule,\r\n    IgoWorkspaceWidgetOutletModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoWorkspaceModule {}\r\n","import { BehaviorSubject } from 'rxjs';\r\n\r\nexport class TableDatabase {\r\n  /** Stream that emits whenever the data has been modified. */\r\n  dataChange: BehaviorSubject<any[]> = new BehaviorSubject<any[]>([]);\r\n  get data(): any[] {\r\n    return this.dataChange.value;\r\n  }\r\n\r\n  constructor(data?) {\r\n    if (data) {\r\n      this.dataChange.next(data);\r\n    }\r\n  }\r\n\r\n  set(data) {\r\n    this.dataChange.next(data);\r\n  }\r\n\r\n  add(item) {\r\n    const copiedData = this.data.slice();\r\n    copiedData.push(item);\r\n    this.set(copiedData);\r\n  }\r\n\r\n  remove(item) {\r\n    const copiedData = this.data.slice();\r\n    const index = copiedData.indexOf(item);\r\n    copiedData.splice(index, 1);\r\n    this.set(copiedData);\r\n  }\r\n}\r\n","import { Tool } from './tool.interface';\r\nimport { ToolService } from './tool.service';\r\n\r\nexport function ToolComponent(tool: Partial<Tool>): (cls: any) => any {\r\n  return (compType: any) => {\r\n    ToolService.register(Object.assign({}, tool, {\r\n      component: compType\r\n    } as Tool));\r\n  };\r\n}\r\n","import { EntityRecord, EntityStore } from '../../entity';\r\nimport { Tool, ToolboxOptions } from './tool.interface';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\n/**\r\n * Service where all available tools and their component are registered.\r\n */\r\nexport class Toolbox {\r\n  /**\r\n   * Observable of the active tool\r\n   */\r\n  activeTool$: BehaviorSubject<Tool> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Ordered list of tool names to display in a toolbar\r\n   */\r\n  toolbar$: BehaviorSubject<string[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * Observable of the active tool\r\n   */\r\n  private activeTool$$: Subscription;\r\n\r\n  /**\r\n   * Active tool history. Useful for activating the previous tool.\r\n   */\r\n  private activeToolHistory: string[] = [];\r\n\r\n  /**\r\n   * Tool store\r\n   */\r\n  private store = new EntityStore<Tool>([], {\r\n    getKey: (tool: Tool) => tool.name\r\n  });\r\n\r\n  get tools$(): BehaviorSubject<Tool[]> {\r\n    return this.store.entities$;\r\n  }\r\n\r\n  constructor(private options: ToolboxOptions = {}) {\r\n    this.setToolbar(options.toolbar);\r\n    this.initStore();\r\n  }\r\n\r\n  /**\r\n   * Destroy the toolbox\r\n   */\r\n  destroy() {\r\n    this.activeTool$$.unsubscribe();\r\n    this.store.destroy();\r\n  }\r\n\r\n  /**\r\n   * Return a tool\r\n   * @param name Tool name\r\n   * @returns tool Tool\r\n   */\r\n  getTool(name: string): Tool {\r\n    return this.store.get(name);\r\n  }\r\n\r\n  /**\r\n   * Return all tools\r\n   * @returns Array of tools\r\n   */\r\n  getTools(): Tool[] {\r\n    return this.store.all();\r\n  }\r\n\r\n  /**\r\n   * Set tool configurations\r\n   * @param tools Tools\r\n   */\r\n  setTools(tools: Tool[]) {\r\n    this.store.load(tools);\r\n  }\r\n\r\n  /**\r\n   * Set toolbar\r\n   * @param toolbar A list of tool names\r\n   */\r\n  setToolbar(toolbar: string[]) {\r\n    this.toolbar$.next(toolbar || []);\r\n  }\r\n\r\n  /**\r\n   * Activate a tool (and deactivate other tools)\r\n   * @param name Tool name\r\n   * @param options Tool options\r\n   */\r\n  activateTool(name: string, options: { [key: string]: any } = {}) {\r\n    const tool = this.getTool(name);\r\n    if (tool === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.store.state.update(tool, { active: true, options }, true);\r\n  }\r\n\r\n  /**\r\n   * Activate the previous tool, if any\r\n   */\r\n  activatePreviousTool() {\r\n    if (this.activeToolHistory.length <= 1) {\r\n      this.deactivateTool();\r\n      return;\r\n    }\r\n    const [previous, current] = this.activeToolHistory.splice(-2, 2);\r\n    this.activateTool(previous);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active tool\r\n   */\r\n  deactivateTool() {\r\n    this.clearActiveToolHistory();\r\n    this.store.state.updateAll({ active: false });\r\n  }\r\n\r\n  /**\r\n   * Initialize the tool store and start observing the active tool\r\n   */\r\n  private initStore() {\r\n    this.store = new EntityStore<Tool>([], {\r\n      getKey: (entity: Tool) => entity.name\r\n    });\r\n\r\n    this.activeTool$$ = this.store.stateView\r\n      .firstBy$((record: EntityRecord<Tool>) => record.state.active === true)\r\n      .subscribe((record: EntityRecord<Tool>) => {\r\n        if (record === undefined) {\r\n          this.setActiveTool(undefined);\r\n          return;\r\n        }\r\n\r\n        const tool = record.entity;\r\n        const options = Object.assign(\r\n          {},\r\n          tool.options || {},\r\n          record.state.options || {}\r\n        );\r\n        this.setActiveTool(Object.assign({}, tool, { options }));\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Set the active tool and update the tool history\r\n   * @param tool Tool\r\n   */\r\n  private setActiveTool(tool: Tool | undefined) {\r\n    this.activeTool$.next(tool);\r\n    if (tool === undefined) {\r\n      this.clearActiveToolHistory();\r\n    } else {\r\n      this.activeToolHistory = this.activeToolHistory\r\n        .filter((name: string) => name !== tool.name)\r\n        .concat([tool.name]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the tool history\r\n   */\r\n  private clearActiveToolHistory() {\r\n    this.activeToolHistory = [];\r\n  }\r\n}\r\n","import { DynamicComponent } from '../../dynamic-component/shared/dynamic-component';\r\nimport { WidgetComponent } from './widget.interfaces';\r\n\r\nexport class Widget extends DynamicComponent<WidgetComponent> {}\r\n","import { EntityStore } from '../../entity';\r\nimport { Workspace } from './workspace';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n/**\r\n * The class is a specialized version of an EntityStore that stores\r\n * workspaces.\r\n */\r\nexport class WorkspaceStore extends EntityStore<Workspace> {\r\n\r\n  activeWorkspace$: BehaviorSubject<Workspace> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Activate the an workspace workspace and deactivate the one currently active\r\n   * @param workspace Workspace\r\n   */\r\n  activateWorkspace(workspace: Workspace) {\r\n    const active = this.activeWorkspace$.value;\r\n    if (active !== undefined) {\r\n      active.deactivate();\r\n    }\r\n\r\n    this.deactivateWorkspace();\r\n    if (workspace !== undefined) {\r\n      this.state.update(workspace, {active: true, selected: true}, true);\r\n      this.activeWorkspace$.next(workspace);\r\n      workspace.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate the current workspace\r\n   * @param workspace Workspace\r\n   */\r\n  deactivateWorkspace() {\r\n    const active = this.activeWorkspace$.value;\r\n    if (active !== undefined) {\r\n      active.deactivate();\r\n      this.activeWorkspace$.next(undefined);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Subscription, BehaviorSubject, Subject } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { ActionStore } from '../../action';\r\nimport { Widget } from '../../widget';\r\nimport { EntityRecord, EntityStore } from '../../entity';\r\n\r\nimport { WorkspaceOptions } from './workspace.interfaces';\r\n\r\n/**\r\n * This class is responsible of managing the relations between\r\n * entities and the actions that consume them. It also defines an\r\n * entity table template that may be used by an entity table component.\r\n */\r\nexport class Workspace<E extends object = object> {\r\n\r\n  /**\r\n   * Observable of the selected widget\r\n   */\r\n  readonly widget$ = new BehaviorSubject<Widget>(undefined);\r\n\r\n  /**\r\n   * Observable of the selected widget's inputs\r\n   */\r\n  readonly widgetInputs$ = new BehaviorSubject<{[key: string]: any}>({});\r\n\r\n  /**\r\n   * Observable of the selected widget's subscribers\r\n   */\r\n  readonly widgetSubscribers$ = new BehaviorSubject<{[key: string]: (event: any) => void}>({});\r\n\r\n  /**\r\n   * Subscription to the selected entity\r\n   */\r\n  private entities$$: Subscription;\r\n\r\n  /**\r\n   * Whether this workspace is active\r\n   */\r\n  private active: boolean = false;\r\n\r\n  /**\r\n   * State change that trigger an update of the actions availability\r\n   */\r\n  private change: Subject<void> = new Subject();\r\n\r\n  /**\r\n   * Subscription to state changes\r\n   */\r\n  private change$: Subscription;\r\n\r\n  /**\r\n   * Workspace id\r\n   */\r\n  get id(): string { return this.options.id; }\r\n\r\n  /**\r\n   * Workspace title\r\n   */\r\n  get title(): string { return this.options.title; }\r\n\r\n  /**\r\n   * Workspace title\r\n   */\r\n  get meta(): {[key: string]: any} { return this.options.meta || {}; }\r\n\r\n  /**\r\n   * Entities store\r\n   */\r\n  get entityStore(): EntityStore<E> { return this.options.entityStore as EntityStore<E>; }\r\n\r\n  /**\r\n   * Actions store (some actions activate a widget)\r\n   */\r\n  get actionStore(): ActionStore { return this.options.actionStore; }\r\n\r\n  /**\r\n   * Selected widget\r\n   */\r\n  get widget(): Widget { return this.widget$.value; }\r\n\r\n  /**\r\n   * Whether a widget is selected\r\n   */\r\n  get hasWidget(): boolean { return this.widget !== undefined; }\r\n\r\n  constructor(protected options: WorkspaceOptions) {}\r\n\r\n  /**\r\n   * Whether this workspace is active\r\n   */\r\n  isActive(): boolean { return this.active; }\r\n\r\n  /**\r\n   * Activate the workspace. By doing that, the workspace will observe\r\n   * the selected entity (from the store) and update the actions availability.\r\n   * For example, some actions require an entity to be selected.\r\n   */\r\n  activate() {\r\n    if (this.active === true) {\r\n      this.deactivate();\r\n    }\r\n    this.active = true;\r\n\r\n    if (this.entityStore !== undefined) {\r\n      this.entities$$ = this.entityStore.stateView.all$()\r\n        .subscribe(() => this.onStateChange());\r\n    }\r\n\r\n    if (this.actionStore !== undefined) {\r\n      this.change$ = this.change\r\n        .pipe(debounceTime(35))\r\n        .subscribe(() => this.actionStore.updateActionsAvailability());\r\n    }\r\n\r\n    this.change.next();\r\n  }\r\n\r\n  /**\r\n   * Deactivate the workspace. Unsubcribe to the selected entity.\r\n   */\r\n  deactivate() {\r\n    this.active = false;\r\n    this.deactivateWidget();\r\n\r\n    if (this.entities$$ !== undefined) {\r\n      this.entities$$.unsubscribe();\r\n    }\r\n    if (this.change$ !== undefined) {\r\n      this.change$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate a widget. In itself, activating a widget doesn't render it but,\r\n   * if an WorkspaceWidgetOutlet component is bound to this workspace, the widget will\r\n   * show up.\r\n   * @param widget Widget\r\n   * @param inputs Inputs the widget will receive\r\n   */\r\n  activateWidget(\r\n    widget: Widget,\r\n    inputs: {[key: string]: any} = {},\r\n    subscribers: {[key: string]: (event: any) => void} = {}\r\n  ) {\r\n    this.widget$.next(widget);\r\n    this.widgetInputs$.next(inputs);\r\n    this.widgetSubscribers$.next(subscribers);\r\n    this.change.next();\r\n  }\r\n\r\n  /**\r\n   * Deactivate a widget.\r\n   */\r\n  deactivateWidget() {\r\n    this.widget$.next(undefined);\r\n    this.change.next();\r\n  }\r\n\r\n  /**\r\n   * When the state changes, update the actions availability.\r\n   */\r\n  private onStateChange() {\r\n    this.change.next();\r\n  }\r\n\r\n}\r\n"],"names":["ReplaySubject","BehaviorSubject","map","combineLatest","skip","debounceTime","ObjectUtils","tslib_1.__values","catchError","of","tap","EventEmitter","Component","ChangeDetectionStrategy","ChangeDetectorRef","Input","Output","overlay","Overlay","HostBinding","NgModule","CommonModule","IgoLanguageModule","MatButtonModule","MatIconModule","MatTooltipModule","MatMenuModule","MatListModule","MatCardModule","Directive","ElementRef","HostListener","Pipe","Renderer2","MatDialogRef","Injectable","MatDialog","MatDialogModule","TemplatePortal","fromEvent","filter","take","ViewContainerRef","DomSanitizer","MatInputModule","ComponentFactoryResolver","ViewChild","MediaService","FormsModule","ReactiveFormsModule","FormBuilder","FormFieldComponent","Observable","MatFormFieldModule","MatSelectModule","MatTableModule","MatSortModule","MatCheckboxModule","http","switchMap","HttpClient","ContentChildren","MatSidenav","Self","ActivityService","MatProgressSpinnerModule","tslib_1.__extends","merge","DataSource","SelectionModel","distinctUntilChanged","MatSort","CdkTableModule","trigger","state","style","transition","animate","Subject"],"mappings":"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"}
