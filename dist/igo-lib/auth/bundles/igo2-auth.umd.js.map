{"version":3,"file":"igo2-auth.umd.js.map","sources":["ng://@igo2/auth/lib/shared/token.service.ts","ng://@igo2/auth/lib/shared/auth.service.ts","ng://@igo2/auth/lib/auth-form/auth-form.component.ts","ng://@igo2/auth/lib/auth-form/auth-intern.component.ts","ng://@igo2/auth/lib/auth-form/auth-facebook.component.ts","ng://@igo2/auth/lib/auth-form/auth-google.component.ts","ng://@igo2/auth/lib/shared/logged.guard.ts","ng://@igo2/auth/lib/shared/auth.guard.ts","ng://@igo2/auth/lib/shared/admin.guard.ts","ng://@igo2/auth/lib/shared/profils.guard.ts","ng://@igo2/auth/lib/shared/auth.interceptor.ts","ng://@igo2/auth/lib/shared/protected.directive.ts","ng://@igo2/auth/lib/auth-routing.module.ts","ng://@igo2/auth/lib/auth.module.ts"],"sourcesContent":["import { Injectable, Injector } from '@angular/core';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthOptions } from './auth.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TokenService {\r\n  private options: AuthOptions;\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  set(token) {\r\n    localStorage.setItem(this.tokenKey, token);\r\n  }\r\n\r\n  remove() {\r\n    localStorage.removeItem(this.tokenKey);\r\n  }\r\n\r\n  get(): string {\r\n    return localStorage.getItem(this.tokenKey);\r\n  }\r\n\r\n  decode() {\r\n    const token = this.get();\r\n    if (!token) {\r\n      return;\r\n    }\r\n    return jwtDecode(token);\r\n  }\r\n\r\n  isExpired() {\r\n    const jwt = this.decode();\r\n    const currentTime = new Date().getTime() / 1000;\r\n    if (jwt && currentTime < jwt.exp) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private get tokenKey() {\r\n    const config = this.injector.get(ConfigService);\r\n    this.options = config.getConfig('auth') || {};\r\n    return this.options.tokenKey;\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { Observable, BehaviorSubject, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\n\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\nimport { Base64 } from '@igo2/utils';\r\n\r\nimport { AuthOptions, User } from './auth.interface';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  public authenticate$ = new BehaviorSubject<boolean>(undefined);\r\n  public redirectUrl: string;\r\n  private options: AuthOptions;\r\n  private anonymous = false;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private tokenService: TokenService,\r\n    private config: ConfigService,\r\n    private languageService: LanguageService,\r\n    @Optional() private router: Router\r\n  ) {\r\n    this.options = this.config.getConfig('auth') || {};\r\n    this.authenticate$.next(this.authenticated);\r\n  }\r\n\r\n  login(username: string, password: string): any {\r\n    const myHeader = new HttpHeaders();\r\n    myHeader.append('Content-Type', 'application/json');\r\n\r\n    const body = JSON.stringify({\r\n      username,\r\n      password: this.encodePassword(password)\r\n    });\r\n\r\n    return this.loginCall(body, myHeader);\r\n  }\r\n\r\n  loginWithToken(token: string, type: string): any {\r\n    const myHeader = new HttpHeaders();\r\n    myHeader.append('Content-Type', 'application/json');\r\n\r\n    const body = JSON.stringify({\r\n      token,\r\n      typeConnection: type\r\n    });\r\n\r\n    return this.loginCall(body, myHeader);\r\n  }\r\n\r\n  loginAnonymous() {\r\n    this.anonymous = true;\r\n    return of(true);\r\n  }\r\n\r\n  logout() {\r\n    this.anonymous = false;\r\n    this.tokenService.remove();\r\n    this.authenticate$.next(false);\r\n    return of(true);\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !this.tokenService.isExpired();\r\n  }\r\n\r\n  getToken(): string {\r\n    return this.tokenService.get();\r\n  }\r\n\r\n  decodeToken() {\r\n    if (this.isAuthenticated()) {\r\n      return this.tokenService.decode();\r\n    }\r\n    return false;\r\n  }\r\n\r\n  goToRedirectUrl() {\r\n    if (!this.router) {\r\n      return;\r\n    }\r\n    const redirectUrl = this.redirectUrl || this.router.url;\r\n\r\n    if (redirectUrl === this.options.loginRoute) {\r\n      const homeRoute = this.options.homeRoute || '/';\r\n      this.router.navigateByUrl(homeRoute);\r\n    } else if (redirectUrl) {\r\n      this.router.navigateByUrl(redirectUrl);\r\n    }\r\n  }\r\n\r\n  getUserInfo(): Observable<User> {\r\n    const url = this.options.url + '/info';\r\n    return this.http.get<User>(url);\r\n  }\r\n\r\n  getProfils() {\r\n    return this.http.get(`${this.options.url}/profils`);\r\n  }\r\n\r\n  updateUser(user: User): Observable<User> {\r\n    const url = this.options.url;\r\n    return this.http.patch<User>(url, JSON.stringify(user));\r\n  }\r\n\r\n  private encodePassword(password: string) {\r\n    return Base64.encode(password);\r\n  }\r\n\r\n  // authenticated or anonymous\r\n  get logged(): boolean {\r\n    return this.authenticated || this.isAnonymous;\r\n  }\r\n\r\n  get isAnonymous(): boolean {\r\n    return this.anonymous;\r\n  }\r\n\r\n  get authenticated(): boolean {\r\n    return this.isAuthenticated();\r\n  }\r\n\r\n  private loginCall(body, headers) {\r\n    return this.http\r\n      .post(`${this.options.url}/login`, body, { headers })\r\n      .pipe(\r\n        tap((data: any) => {\r\n          this.tokenService.set(data.token);\r\n          const tokenDecoded = this.decodeToken();\r\n          if (tokenDecoded && tokenDecoded.user && tokenDecoded.user.locale) {\r\n            this.languageService.setLanguage(tokenDecoded.user.locale);\r\n          }\r\n          this.authenticate$.next(true);\r\n        })\r\n      );\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  Input,\r\n  Optional\r\n} from '@angular/core';\r\nimport { Router, NavigationStart } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthOptions } from '../shared/auth.interface';\r\nimport { AuthService } from '../shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'igo-auth-form',\r\n  templateUrl: './auth-form.component.html',\r\n  styleUrls: ['./auth-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class AuthFormComponent implements OnInit {\r\n  @Input()\r\n  get backgroundDisable(): boolean {\r\n    if (this.isLogoutRoute || this.isLogoutRoute) {\r\n      return false;\r\n    }\r\n    return this._backgroundDisable;\r\n  }\r\n  set backgroundDisable(value: boolean) {\r\n    this._backgroundDisable = value.toString() === 'true';\r\n  }\r\n  private _backgroundDisable = true;\r\n\r\n  @Input()\r\n  get hasAlreadyConnectedDiv(): boolean {\r\n    return this._hasAlreadyConnectedDiv;\r\n  }\r\n  set hasAlreadyConnectedDiv(value: boolean) {\r\n    this._hasAlreadyConnectedDiv = value.toString() === 'true';\r\n  }\r\n  private _hasAlreadyConnectedDiv = true;\r\n\r\n  @Input()\r\n  get hasLogoutDiv(): boolean {\r\n    return this._hasLogoutDiv;\r\n  }\r\n  set hasLogoutDiv(value: boolean) {\r\n    this._hasLogoutDiv = value.toString() === 'true';\r\n  }\r\n  private _hasLogoutDiv = true;\r\n\r\n  @Input()\r\n  get showAlreadyConnectedDiv(): boolean {\r\n    if (this.isLogoutRoute) {\r\n      return this.hasAlreadyConnectedDiv;\r\n    }\r\n    return this._showAlreadyConnectedDiv;\r\n  }\r\n  set showAlreadyConnectedDiv(value: boolean) {\r\n    this._showAlreadyConnectedDiv = value.toString() === 'true';\r\n  }\r\n  private _showAlreadyConnectedDiv = false;\r\n\r\n  @Input()\r\n  get showLogoutDiv(): boolean {\r\n    if (this.isLogoutRoute) {\r\n      return this.hasLogoutDiv;\r\n    }\r\n    return this._showLogoutDiv;\r\n  }\r\n  set showLogoutDiv(value: boolean) {\r\n    this._showLogoutDiv = value.toString() === 'true';\r\n  }\r\n  private _showLogoutDiv = false;\r\n\r\n  get showLoginDiv(): boolean {\r\n    if (!this.isLogoutRoute) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  public options: AuthOptions;\r\n  public user;\r\n\r\n  public visible = true;\r\n\r\n  private isLoginRoute: boolean;\r\n  private isLogoutRoute: boolean;\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private config: ConfigService,\r\n    @Optional() private router: Router\r\n  ) {\r\n    this.options = this.config.getConfig('auth') || {};\r\n    this.visible = Object.getOwnPropertyNames(this.options).length !== 0;\r\n  }\r\n\r\n  public ngOnInit() {\r\n    this.analyzeRoute();\r\n    this.getName();\r\n  }\r\n\r\n  public login() {\r\n    this.auth.goToRedirectUrl();\r\n    this.getName();\r\n  }\r\n\r\n  public logout() {\r\n    this.auth.logout().subscribe(() => {\r\n      this.user = undefined;\r\n      if (this.router) {\r\n        if (this.options.logoutRoute) {\r\n          this.router.navigate([this.options.logoutRoute]);\r\n        } else if (this.options.homeRoute) {\r\n          this.router.navigate([this.options.homeRoute]);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  public home() {\r\n    if (this.router && this.options.homeRoute) {\r\n      this.router.navigate([this.options.homeRoute]);\r\n    }\r\n  }\r\n\r\n  private getName() {\r\n    if (this.auth.decodeToken()) {\r\n      const tokenDecoded = this.auth.decodeToken();\r\n      this.user = {\r\n        name: tokenDecoded.user.firstName || tokenDecoded.user.sourceId\r\n      };\r\n    }\r\n  }\r\n\r\n  private analyzeRoute() {\r\n    if (!this.router) {\r\n      return;\r\n    }\r\n\r\n    this.router.events\r\n      .pipe(filter(event => event instanceof NavigationStart))\r\n      .subscribe((changeEvent: any) => {\r\n        if (changeEvent.url) {\r\n          const currentRoute = changeEvent.url;\r\n          const logoutRoute = this.options.logoutRoute;\r\n          const loginRoute = this.options.loginRoute;\r\n\r\n          this.isLogoutRoute = currentRoute === logoutRoute;\r\n          this.isLoginRoute = currentRoute === loginRoute;\r\n\r\n          if (this.isLogoutRoute) {\r\n            this.auth.logout();\r\n          }\r\n        }\r\n      });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { Validators, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { AuthService } from '../shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'igo-auth-intern',\r\n  templateUrl: './auth-intern.component.html',\r\n  styleUrls: ['./auth-intern.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class AuthInternComponent {\r\n  @Input()\r\n  get allowAnonymous(): boolean {\r\n    return this._allowAnonymous;\r\n  }\r\n  set allowAnonymous(value: boolean) {\r\n    this._allowAnonymous = value;\r\n  }\r\n  private _allowAnonymous = true;\r\n\r\n  public error = '';\r\n  public form: FormGroup;\r\n\r\n  @Output() login: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(public auth: AuthService, fb: FormBuilder) {\r\n    this.form = fb.group({\r\n      username: ['', Validators.required],\r\n      password: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  loginUser(values: any) {\r\n    this.auth.login(values.username, values.password).subscribe(\r\n      () => {\r\n        this.login.emit(true);\r\n      },\r\n      (error: any) => {\r\n        this.error = error.error.message;\r\n      }\r\n    );\r\n    return false;\r\n  }\r\n\r\n  loginAnonymous() {\r\n    this.auth.loginAnonymous().subscribe(() => {\r\n      this.login.emit(true);\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthFacebookOptions } from '../shared/auth.interface';\r\nimport { AuthService } from '../shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'igo-auth-facebook',\r\n  templateUrl: './auth-facebook.component.html',\r\n  styleUrls: ['./auth-facebook.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AuthFacebookComponent {\r\n  private options: AuthFacebookOptions;\r\n\r\n  @Output() login: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private config: ConfigService,\r\n    private appRef: ApplicationRef\r\n  ) {\r\n    this.options = this.config.getConfig('auth.facebook') || {};\r\n\r\n    if (this.options.apiKey) {\r\n      this.loadSDKFacebook();\r\n    }\r\n  }\r\n\r\n  private subscribeEvents() {\r\n    (window as any).FB.Event.subscribe('auth.statusChange', rep => {\r\n      this.statusChangeCallback(rep);\r\n    });\r\n  }\r\n\r\n  private statusChangeCallback(response) {\r\n    if (response.status === 'connected') {\r\n      const accessToken = response.authResponse.accessToken;\r\n      this.loginFacebook(accessToken);\r\n    }\r\n  }\r\n\r\n  private loginFacebook(token) {\r\n    this.authService.loginWithToken(token, 'facebook').subscribe(() => {\r\n      this.appRef.tick();\r\n      this.login.emit(true);\r\n    });\r\n  }\r\n\r\n  private loadSDKFacebook() {\r\n    if (document.getElementById('facebook-jssdk')) {\r\n      return;\r\n    }\r\n\r\n    const urlSDK =\r\n      'https://connect.facebook.net/fr_CA/sdk.js#xfbml=1&version=v2.9';\r\n\r\n    const fjs = document.getElementsByTagName('script')[0];\r\n    const js = document.createElement('script');\r\n    js.id = 'facebook-jssdk';\r\n    js.src = `${urlSDK}&appId=${this.options.apiKey}`;\r\n    js.onload = () => {\r\n      this.subscribeEvents();\r\n    };\r\n    fjs.parentNode.insertBefore(js, fjs);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ChangeDetectionStrategy,\r\n  ApplicationRef,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthGoogleOptions } from '../shared/auth.interface';\r\nimport { AuthService } from '../shared/auth.service';\r\n\r\n@Component({\r\n  selector: 'igo-auth-google',\r\n  templateUrl: './auth-google.component.html',\r\n  styleUrls: ['./auth-google.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class AuthGoogleComponent {\r\n  private options: AuthGoogleOptions;\r\n\r\n  @Output() login: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private config: ConfigService,\r\n    private appRef: ApplicationRef\r\n  ) {\r\n    this.options = this.config.getConfig('auth.google') || {};\r\n\r\n    if (this.options.apiKey && this.options.clientId) {\r\n      this.loadSDKGoogle();\r\n      this.loadPlatform();\r\n    }\r\n  }\r\n\r\n  public handleSignInClick() {\r\n    (window as any).gapi.auth2.getAuthInstance().signIn();\r\n  }\r\n\r\n  public handleSignOutClick() {\r\n    (window as any).gapi.auth2.getAuthInstance().signOut();\r\n  }\r\n\r\n  private handleClientLoad() {\r\n    (window as any).gapi.load('client:auth2', () => this.initClient());\r\n  }\r\n\r\n  private initClient() {\r\n    (window as any).gapi.client\r\n      .init({\r\n        apiKey: this.options.apiKey,\r\n        clientId: this.options.clientId,\r\n        discoveryDocs: [\r\n          'https://people.googleapis.com/$discovery/rest?version=v1'\r\n        ],\r\n        scope: 'profile'\r\n      })\r\n      .then(() => {\r\n        this.handleSignOutClick();\r\n        (window as any).gapi.auth2.getAuthInstance().isSignedIn.listen(rep => {\r\n          this.updateSigninStatus(rep);\r\n        });\r\n      });\r\n  }\r\n\r\n  private updateSigninStatus(isSignedIn) {\r\n    if (isSignedIn) {\r\n      this.loginGoogle((window as any).gapi.client.getToken().access_token);\r\n    }\r\n  }\r\n\r\n  private loginGoogle(token) {\r\n    this.authService.loginWithToken(token, 'google').subscribe(() => {\r\n      this.appRef.tick();\r\n      this.login.emit(true);\r\n    });\r\n  }\r\n\r\n  private loadSDKGoogle() {\r\n    const fjs = document.getElementsByTagName('script')[0];\r\n    const js = document.createElement('script');\r\n    js.id = 'google-jssdk';\r\n    js.src = 'https://apis.google.com/js/api.js';\r\n    js.onload = () => {\r\n      this.handleClientLoad();\r\n    };\r\n    fjs.parentNode.insertBefore(js, fjs);\r\n  }\r\n\r\n  private loadPlatform() {\r\n    const fjs = document.getElementsByTagName('script')[0];\r\n    const js = document.createElement('script');\r\n    js.id = 'google-platform';\r\n    js.src = 'https://apis.google.com/js/platform.js';\r\n    fjs.parentNode.insertBefore(js, fjs);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoggedGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private config: ConfigService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.authService.logged) {\r\n      return true;\r\n    }\r\n\r\n    this.authService.redirectUrl = state.url;\r\n\r\n    const authConfig = this.config.getConfig('auth');\r\n    if (authConfig && authConfig.loginRoute) {\r\n      this.router.navigateByUrl(authConfig.loginRoute);\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private config: ConfigService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    if (this.authService.authenticated) {\r\n      return true;\r\n    }\r\n\r\n    this.authService.redirectUrl = state.url;\r\n\r\n    const authConfig = this.config.getConfig('auth');\r\n    if (authConfig && authConfig.loginRoute) {\r\n      this.router.navigateByUrl(authConfig.loginRoute);\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private config: ConfigService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    const token = this.authService.decodeToken();\r\n    if (token && token.user && token.user.isAdmin) {\r\n      return true;\r\n    }\r\n\r\n    this.authService.redirectUrl = state.url;\r\n\r\n    const authConfig = this.config.getConfig('auth');\r\n    if (authConfig && authConfig.loginRoute) {\r\n      this.router.navigateByUrl(authConfig.loginRoute);\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProfilsGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    private config: ConfigService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\r\n    return this.authService.getProfils().pipe(\r\n      map((profils: string[]) => {\r\n        const authConfig = this.config.getConfig('auth');\r\n\r\n        if (\r\n          profils &&\r\n          profils.some(v => authConfig.profilsGuard.indexOf(v) !== -1)\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        this.authService.redirectUrl = state.url;\r\n\r\n        if (authConfig && authConfig.loginRoute) {\r\n          this.router.navigateByUrl(authConfig.loginRoute);\r\n        }\r\n\r\n        return false;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { TokenService } from './token.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  private trustHosts: string[] = [];\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private tokenService: TokenService\r\n  ) {\r\n    this.trustHosts = this.config.getConfig('auth.trustHosts') || [];\r\n    this.trustHosts.push(window.location.hostname);\r\n  }\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const token = this.tokenService.get();\r\n    const element = document.createElement('a');\r\n    element.href = req.url;\r\n\r\n    if (!token && this.trustHosts.indexOf(element.hostname) === -1) {\r\n      return next.handle(req);\r\n    }\r\n\r\n    const authHeader = `Bearer ${token}`;\r\n    const authReq = req.clone({\r\n      headers: req.headers.set('Authorization', authHeader)\r\n    });\r\n    return next.handle(authReq);\r\n  }\r\n}\r\n","import { Directive, ElementRef } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Directive({\r\n  selector: '[igoProtected]'\r\n})\r\nexport class ProtectedDirective {\r\n  constructor(authentication: AuthService, el: ElementRef) {\r\n    if (!authentication.isAuthenticated()) {\r\n      el.nativeElement.parentNode.removeChild(el.nativeElement);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { AuthFormComponent } from './auth-form/auth-form.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: AuthFormComponent },\r\n  { path: 'logout', component: AuthFormComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n  providers: []\r\n})\r\nexport class AuthRoutingModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ProtectedDirective } from './shared/protected.directive';\r\nimport { AuthInterceptor } from './shared/auth.interceptor';\r\n\r\nimport { AuthInternComponent } from './auth-form/auth-intern.component';\r\nimport { AuthFormComponent } from './auth-form/auth-form.component';\r\nimport { AuthGoogleComponent } from './auth-form/auth-google.component';\r\nimport { AuthFacebookComponent } from './auth-form/auth-facebook.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule\r\n  ],\r\n  declarations: [\r\n    AuthFormComponent,\r\n    AuthGoogleComponent,\r\n    AuthInternComponent,\r\n    AuthFacebookComponent,\r\n    ProtectedDirective\r\n  ],\r\n  exports: [AuthFormComponent, ProtectedDirective]\r\n})\r\nexport class IgoAuthModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoAuthModule,\r\n      providers: [\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: AuthInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n"],"names":["ConfigService","Injectable","Injector","BehaviorSubject","HttpHeaders","of","Base64","tap","HttpClient","LanguageService","Router","Optional","filter","NavigationStart","Component","ChangeDetectionStrategy","Input","EventEmitter","Validators","FormBuilder","Output","ApplicationRef","map","Directive","ElementRef","NgModule","RouterModule","HTTP_INTERCEPTORS","CommonModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatButtonModule","IgoLanguageModule"],"mappings":"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"}
