{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@igo2/context/lib/context-manager/shared/context.enum.ts","ng://@igo2/context/lib/context-manager/shared/context.service.ts","ng://@igo2/context/lib/context-manager/shared/map-context.directive.ts","ng://@igo2/context/lib/context-manager/shared/layer-context.directive.ts","ng://@igo2/context/lib/context-manager/context-list/context-list.component.ts","ng://@igo2/context/lib/context-manager/context-list/context-list-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-item/context-item.component.ts","ng://@igo2/context/lib/context-manager/context-form/context-form.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions.component.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-manager.module.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-dialog.component.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-button.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/shared/poi.service.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-dialog.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-button.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-dialog.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.animation.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.component.ts","ng://@igo2/context/lib/context-map-button/context-map-button.module.ts","ng://@igo2/context/lib/share-map/shared/share-map.service.ts","ng://@igo2/context/lib/share-map/share-map/share-map.component.ts","ng://@igo2/context/lib/share-map/share-map/share-map-binding.directive.ts","ng://@igo2/context/lib/share-map/share-map.module.ts","ng://@igo2/context/lib/sidenav/sidenav.component.ts","ng://@igo2/context/lib/sidenav/sidenav.module.ts","ng://@igo2/context/lib/context.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","null","read","write","public","protected","private","ContextService","prototype","get","url","this","baseUrl","http","getById","id","getDetails","_this","pipe","catchError","res","handleError","getDefault","tap","context","defaultContextId$","setDefault","post","defaultContextId","delete","contexts","ours","Object","keys","contexts$","forEach","key","filter","c","create","JSON","stringify","map","contextCreated","authService","authenticated","permission","TypePermission","clone","properties","contextCloned","update","patch","addToolAssociation","contextId","toolId","association","deleteToolAssociation","getPermissions","addPermissionAssociation","profil","type","typePermission","deletePermissionAssociation","permissionId","getLocalContexts","getPath","options","contextListFile","getLocalContext","uri","loadContexts","subscribe","publicsContexts","contextUri","find","defaultContextUri","loadDefaultContext","loadFct","direct","_context","addContextToList","setContext","undefined","loadContext","route","contextKey","queryParams","debounceTime","params","contextParam","context$","contexts$$","getContextByUri","unsubscribe","err","currentContext","view","keepCurrentView","assign","mapViewFromRoute","loadEditedContext","setEditedContext","editedContext$","getContextFromMap","igoMap","ol","getView","proj","getProjection","getCode","center","olPoint","getCenter","transform","uuid","title","scope","getCoordinates","zoom","getZoom","projection","layers","tools","layers$","getValue","layers_1","tslib_1.__values","layers_1_1","layer","opts","String","layerOptions","zIndex","visible","sourceOptions","dataSource","tool","setTools","contextToLoad","_b","_c","readParamsFromRoute","centerKey","centerParams","split","Number","geolocate","projectionKey","projectionParam","zoomKey","zoomParam","file","basePath","replace","obj","titleContext","languageService","translate","instant","text","handleContextsChange","keepCurrentContext","editedContext","findContext","editedFound","contextSimplifie","found","Injectable","args","providedIn","HttpClient","AuthService","LanguageService","ConfigService","RouteService","decorators","Optional","config","BehaviorSubject","getConfig","authenticate$","MapContextDirective","defineProperty","component","ngOnInit","context$$","contextService","handleContextChange","ngOnDestroy","viewContext","Directive","selector","MapBrowserComponent","LayerContextDirective","visibleOnLayersKey","visibleOffLayersKey","queryParams$$_1","skip","removeLayers","contextLayers","zip","apply","index","layerService","createAsyncLayer","withLatestFrom","of","layersAndIndex","reduce","acc","bunch","_a","computeLayerVisibilityFromUrl","Array","addLayers","currentLayerid","contextParams","visibleOnLayersParams","visibleOffLayersParams","visiblelayers","invisiblelayers","indexOf","LayerService","ContextListComponent","_contexts","_selectedContext","cdRef","detectChanges","_defaultContextId","Component","template","ChangeDetectorRef","Input","Output","select","EventEmitter","unselect","edit","save","favorite","managePermissions","manageTools","titleMapping","shared","ContextListBindingDirective","onSelect","onEdit","onSave","mapService","getMap","contextFromMap","changes","message","messageService","success","onFavorite","onManageTools","onManagePermissions","onDelete","confirmDialogService","open","confirm","info","onClone","defaultContextId$$","selectedContext$$","selectedContext","Self","MapService","ConfirmDialogService","MessageService","HostListener","ContextItemComponent","_default","favoriteClick","auth","emit","color","collapsed","ContextFormComponent","_btnSubmitText","buildForm","_disabled","handleFormSubmit","inputs","ObjectUtils","removeNull","prefix","submitForm","uriSplit","shift","join","form","formBuilder","group","FormBuilder","ContextEditComponent","refresh","cd","ContextEditBindingDirective","editedContext$$","handleEditedContextChange","ContextPermissionsComponent","_permissions","addPermission","removePermission","scopeChanged","ContextPermissionsBindingDirective","onAddPermission","profils","profils_1","profils_1_1","p","permissions","onRemovePermission","findIndex","splice","onScopeChanged","permissionsArray","toString","CONTEXT_DIRECTIVES","IgoContextManagerModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","MatTooltipModule","MatListModule","MatCheckboxModule","MatRadioModule","IgoAuthModule","IgoListModule","IgoKeyValueModule","IgoCollapsibleModule","IgoStopPropagationModule","IgoLanguageModule","exports","declarations","BookmarkDialogComponent","MatDialogRef","dialogRef","BookmarkButtonComponent","_map","_color","createContext","dialog","disableClose","afterClosed","context_1","titleD","MatDialog","PoiService","EMPTY","PoiDialogComponent","PoiButtonComponent","authenticate$$","getPois","deletePoi","poi","translate_1","poiService","pois","showError","rep","createPoi","x","y","newPoi","zoomOnPoi","olproj.fromLonLat","animate","duration","easing","oleasing.easeOut","UserDialogComponent","decodeToken","user","exp","Date","toLocaleString","userButtonSlideInOut","trigger","state","style","width","overflow","display","transition","UserButtonComponent","accountClick","expand","logout","infoUser","animations","IgoContextMapButtonModule","IgoConfirmDialogModule","MatSelectModule","MatOptionModule","MatDialogModule","entryComponents","providers","ShareMapService","getUrl","formValues","publicShareOption","apiUrl","getUrlWithApi","getUrlWithoutApi","location","origin","pathname","viewController","llc","layerlistControls","querystring","visibleKey","invisibleKey","routingKey","routingCoordKey","stopsCoordinates","routingFormService","getStopsCoordinates","coord","routingUrl","visibleLayers","lay","invisibleLayers","layersUrl","layersToLoop","layersToLoop_1","layersToLoop_1_1","substr","arrayCenter","toFixed","endsWith","slice","RoutingFormService","ShareMapComponent","_hasShareMapButton","_hasCopyLinkButton","userId","ngAfterViewInit","hasApi","resetUrl","hasLayerListControls","layerListService","keyword","sortedAlpha","onlyVisible","onlyInRange","values","shareMapService","copyTextToClipboard","textArea","Clipboard","copy","msg","LayerListService","ShareMapBindingDirective","initRoutes","llcKKey","llcAKey","llcVKey","keywordFromUrl","sortedAplhaFromUrl","onlyVisibleFromUrl","onlyInRangeFromUrl","keywordInitialized","sortedAlphaInitialized","onlyVisibleInitialized","onlyInRangeInitialized","IgoShareMapModule","SidenavComponent","_opened","_feature","_tool","_media","_title","feature","getEntityTitle","zoomToFeatureExtent","geometry","olFeature","format","readFeature","dataProjection","featureProjection","moveToOlFeatures","FeatureMotion","Zoom","toggleTopPanel","topPanelState","Title","titleService","olFormatGeoJSON","getTitle","IgoSidenavModule","MatSidenavModule","IgoPanelModule","IgoFlexibleModule","IgoFeatureModule","IgoContextModule"],"mappings":"osCAcA,SA8FgBA,EAASC,GACrB,IAAIC,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UAAWC,EAAI,EAChE,OAAIH,EAAUA,EAAEI,KAAKL,GACd,CACHM,KAAM,WAEF,OADIN,GAAKI,GAAKJ,EAAEO,SAAQP,OAAI,GACrB,CAAEQ,MAAOR,GAAKA,EAAEI,KAAMK,MAAOT,KAKhD,SAAgBU,EAAOV,EAAGW,GACtB,IAAIV,EAAsB,mBAAXC,QAAyBF,EAAEE,OAAOC,UACjD,IAAKF,EAAG,OAAOD,EACf,IAAmBY,EAAYC,EAA3BT,EAAIH,EAAEI,KAAKL,GAAOc,EAAK,GAC3B,IACI,WAAc,IAANH,GAAsB,EAANA,QAAcC,EAAIR,EAAEE,QAAQG,MAAMK,EAAGC,KAAKH,EAAEJ,OAExE,MAAOQ,GAASH,EAAI,CAAEG,MAAOA,WAEzB,IACQJ,IAAMA,EAAEH,OAASR,EAAIG,EAAU,YAAIH,EAAEI,KAAKD,WAExC,GAAIS,EAAG,MAAMA,EAAEG,OAE7B,OAAOF,EAGX,SAAgBG,IACZ,IAAK,IAAIH,EAAK,GAAIV,EAAI,EAAGA,EAAIc,UAAUX,OAAQH,IAC3CU,EAAKA,EAAGK,OAAOT,EAAOQ,UAAUd,KACpC,OAAOU,yGC1ITM,OAAA,EACAC,KAAA,EACAC,MAAA,kEAIAC,SAAA,EACAC,YAAA,EACAC,UAAA,0FCwEAC,EAAAC,UAAAC,IAAA,eACQC,EAAMC,KAAKC,QAAU,YAC3B,OAAOD,KAAKE,KAAKJ,IAAkBC,IAGrCH,EAAAC,UAAAM,QAAA,SAAQC,OACAL,EAAMC,KAAKC,QAAU,aAAeG,EAC1C,OAAOJ,KAAKE,KAAKJ,IAAaC,IAGhCH,EAAAC,UAAAQ,WAAA,SAAWD,GAAX,IAAAE,EAAAN,KACQD,EAASC,KAAKC,QAAO,aAAaG,EAAE,WAC1C,OAAOJ,KAAKE,KACTJ,IAAqBC,GACrBQ,KAAKC,EAAAA,WAAU,SAACC,GAAO,OAAAH,EAAKI,YAAYD,EAAKL,OAGlDR,EAAAC,UAAAc,WAAA,WAAA,IAAAL,EAAAN,KACQD,EAAMC,KAAKC,QAAU,oBAC3B,OAAOD,KAAKE,KAAKJ,IAAqBC,GAAKQ,KACzCK,EAAAA,IAAG,SAACC,GACFP,EAAKQ,kBAAkBtC,KAAKqC,EAAQT,QAK1CR,EAAAC,UAAAkB,WAAA,SAAWX,OACHL,EAAMC,KAAKC,QAAU,oBAC3B,OAAOD,KAAKE,KAAKc,KAAKjB,EAAK,CAAEkB,iBAAkBb,KAGjDR,EAAAC,UAAAqB,UAAA,SAAOd,GAAP,IAAAE,EAAAN,KACQD,EAAMC,KAAKC,QAAU,aAAeG,EAC1C,OAAOJ,KAAKE,KAAKgB,UAAanB,GAAKQ,KACjCK,EAAAA,IAAG,SAACH,OACIU,EAAyB,CAAEC,KAAM,IACvCC,OAAOC,KAAKhB,EAAKiB,UAAU7C,OAAO8C,QAAO,SACvCC,GACE,OAACN,EAASM,GAAOnB,EAAKiB,UAAU7C,MAAM+C,GAAKC,OAAM,SAACC,GAAK,OAAAA,EAAEvB,KAAOA,MAEpEE,EAAKiB,UAAU/C,KAAK2C,OAK1BvB,EAAAC,UAAA+B,OAAA,SAAOf,GAAP,IAAAP,EAAAN,KACQD,EAAMC,KAAKC,QAAU,YAC3B,OAAOD,KAAKE,KAAKc,KAAcjB,EAAK8B,KAAKC,UAAUjB,IAAUN,KAC3DwB,EAAAA,IAAG,SAACC,GAQF,OAPI1B,EAAK2B,YAAYC,cACnBF,EAAeG,WAAaC,EAAeA,EAAe5C,OAE1DwC,EAAeG,WAAaC,EAAeA,EAAe7C,MAE5De,EAAKiB,UAAU7C,MAAM0C,KAAKnC,KAAK+C,GAC/B1B,EAAKiB,UAAU/C,KAAK8B,EAAKiB,UAAU7C,OAC5BsD,MAKbpC,EAAAC,UAAAwC,MAAA,SAAMjC,EAAYkC,GAAlB,IAAAhC,EAAAN,UAAkB,IAAAsC,IAAAA,EAAA,QACVvC,EAAMC,KAAKC,QAAU,aAAeG,EAAK,SAC/C,OAAOJ,KAAKE,KAAKc,KAAcjB,EAAK8B,KAAKC,UAAUQ,IAAa/B,KAC9DwB,EAAAA,IAAG,SAACQ,GAIF,OAHAA,EAAcJ,WAAaC,EAAeA,EAAe5C,OACzDc,EAAKiB,UAAU7C,MAAM0C,KAAKnC,KAAKsD,GAC/BjC,EAAKiB,UAAU/C,KAAK8B,EAAKiB,UAAU7C,OAC5B6D,MAKb3C,EAAAC,UAAA2C,OAAA,SAAOpC,EAAYS,OACXd,EAAMC,KAAKC,QAAU,aAAeG,EAC1C,OAAOJ,KAAKE,KAAKuC,MAAe1C,EAAK8B,KAAKC,UAAUjB,KAKtDjB,EAAAC,UAAA6C,mBAAA,SAAmBC,EAAmBC,OAC9B7C,EAASC,KAAKC,QAAO,aAAa0C,EAAS,SAC3CE,EAAc,CAClBD,OAAMA,GAER,OAAO5C,KAAKE,KAAKc,KAAWjB,EAAK8B,KAAKC,UAAUe,KAGlDjD,EAAAC,UAAAiD,sBAAA,SAAsBH,EAAmBC,OACjC7C,EAASC,KAAKC,QAAO,aAAa0C,EAAS,UAAUC,EAC3D,OAAO5C,KAAKE,KAAKgB,UAAOnB,IAG1BH,EAAAC,UAAAkD,eAAA,SAAe3C,OACPL,EAAMC,KAAKC,QAAU,aAAeG,EAAK,eAC/C,OAAOJ,KAAKE,KAAKJ,IAAyBC,IAG5CH,EAAAC,UAAAmD,yBAAA,SACEL,EACAM,EACAC,OAEMnD,EAASC,KAAKC,QAAO,aAAa0C,EAAS,eAC3CE,EAAc,CAClBI,OAAMA,EACNE,eAAgBD,GAElB,OAAOlD,KAAKE,KAAKc,KACfjB,EACA8B,KAAKC,UAAUe,KAInBjD,EAAAC,UAAAuD,4BAAA,SACET,EACAU,OAEMtD,EACJC,KAAKC,QAAO,aACD0C,EAAS,gBAAgBU,EACtC,OAAOrD,KAAKE,KAAKgB,UAAanB,IAKhCH,EAAAC,UAAAyD,iBAAA,eACQvD,EAAMC,KAAKuD,QAAQvD,KAAKwD,QAAQC,iBACtC,OAAOzD,KAAKE,KAAKJ,IAAkBC,GAAKQ,KACtCwB,EAAAA,IAAG,SAAEtB,GACH,MAAO,CAAEW,KAAMX,OAKrBb,EAAAC,UAAA6D,gBAAA,SAAgBC,GAAhB,IAAArD,EAAAN,KACQD,EAAMC,KAAKuD,QAAWI,EAAG,SAC/B,OAAO3D,KAAKE,KAAKJ,IAAqBC,GAAKQ,KACzCC,EAAAA,WAAU,SAACC,GACT,OAAOH,EAAKI,YAAYD,EAAKkD,OAKnC/D,EAAAC,UAAA+D,aAAA,WAAA,IAAAtD,EAAAN,MAEMA,KAAKC,QACGD,KAAKF,MAELE,KAAKsD,oBAETO,UAAS,SAAC1C,OACV2C,EAAkBxD,EAAKiB,UAAU7C,MAAMe,UAE7C,GAAIqE,EAAiB,KACbC,EAAaD,EAAgBE,KAAI,SACrCrC,GAAK,OAAAA,EAAEgC,MAAQrD,EAAKkD,QAAQS,oBAE1BF,IACG5C,EAAS1B,YACZ0B,EAAS1B,UAAS,IAEpB0B,EAAS1B,UAAOR,KAAK8E,IAGzBzD,EAAKiB,UAAU/C,KAAK2C,MAIxBvB,EAAAC,UAAAqE,mBAAA,WACe,SAAPC,EAAWC,QAAA,IAAAA,IAAAA,GAAA,IACVA,GAAU9D,EAAKL,SAAWK,EAAK2B,YAAYC,cAC9C5B,EAAKK,aAAakD,UAAS,SACxBQ,GACC/D,EAAKkD,QAAQS,kBAAoBI,EAASV,IAC1CrD,EAAKgE,iBAAiBD,GACtB/D,EAAKiE,WAAWF,IACjB,WAEC/D,EAAKQ,kBAAkBtC,KAAKgG,WAC5BlE,EAAKmE,YAAYnE,EAAKkD,QAAQS,qBAIlC3D,EAAKmE,YAAYnE,EAAKkD,QAAQS,mBAfpC,IAAA3D,EAAAN,KAmBMA,KAAK0E,OAAS1E,KAAK0E,MAAMlB,QAAQmB,WACnC3E,KAAK0E,MAAME,YAAYrE,KAAKsE,EAAAA,aAAa,MAAMhB,UAAS,SAACiB,OACjDC,EAAeD,EAAOxE,EAAKoE,MAAMlB,QAAkB,YACrDY,GAAS,EACTW,IACFzE,EAAKkD,QAAQS,kBAAoBc,EACjCX,GAAS,GAEXD,EAAQC,KAGVD,KAIJvE,EAAAC,UAAA4E,YAAA,SAAYd,GAAZ,IAAArD,EAAAN,KACQa,EAAUb,KAAKgF,SAAStG,MAC9B,IAAImC,GAAWA,EAAQ8C,MAAQA,MAIzBsB,EAAajF,KAAKkF,gBAAgBvB,GAAKE,UAAS,SACnDQ,GACCY,EAAWE,cACX7E,EAAKgE,iBAAiBD,GACtB/D,EAAKiE,WAAWF,IACjB,SACDe,GACEH,EAAWE,iBAKjBvF,EAAAC,UAAA0E,WAAA,SAAW1D,OACHwE,EAAiBrF,KAAKgF,SAAStG,MACrC,GAAI2G,GAAkBxE,GAAWA,EAAQT,KAAOiF,EAAejF,GAK7D,OAJIS,EAAQkB,IAAIuD,KAAKC,kBAAoBf,YACvC3D,EAAQkB,IAAIuD,KAAKC,iBAAkB,QAErCvF,KAAKgF,SAASxG,KAAKqC,GAIhBA,EAAQkB,MACXlB,EAAQkB,IAAM,CAAEuD,KAAM,KAGxBjE,OAAOmE,OAAO3E,EAAQkB,IAAIuD,KAAMtF,KAAKyF,kBAErCzF,KAAKgF,SAASxG,KAAKqC,IAGrBjB,EAAAC,UAAA6F,kBAAA,SAAkB/B,GAAlB,IAAArD,EAAAN,KACEA,KAAKkF,gBAAgBvB,GAAKE,UAAS,SAAEQ,GACnC/D,EAAKqF,iBAAiBtB,MAI1BzE,EAAAC,UAAA8F,iBAAA,SAAiB9E,GACfb,KAAK4F,eAAepH,KAAKqC,IAG3BjB,EAAAC,UAAAgG,kBAAA,SAAkBC,WACVR,EAAOQ,EAAOC,GAAGC,UACjBC,EAAOX,EAAKY,gBAAgBC,UAC5BC,EAAc,IAAIC,EAAQf,EAAKgB,aAAaC,UAChDN,EACA,aAGIpF,EAAU,CACd8C,IAAK6C,EAAAA,OACLC,MAAO,GACPC,MAAO,UACP3E,IAAK,CACHuD,KAAM,CACJc,OAAQA,EAAOO,iBACfC,KAAMtB,EAAKuB,UACXC,WAAYb,IAGhBc,OAAQ,GACRC,MAAO,IAGHD,EAASjB,EAAOmB,QAAQC,eAE9B,IAAgB,IAAAC,EAAAC,EAAAL,GAAMM,EAAAF,EAAA3I,QAAA6I,EAAA1I,KAAA0I,EAAAF,EAAA3I,OAAE,CAAnB,IACG8I,EADID,EAAA3I,MAEJ6I,EAAO,CACXnH,GAAIkH,EAAM9D,QAAQpD,GAAKoH,OAAOF,EAAM9D,QAAQpD,IAAMoE,UAClDiD,aAAc,CACZhB,MAAOa,EAAM9D,QAAQiD,MACrBiB,OAAQJ,EAAMI,OACdC,QAASL,EAAMK,SAEjBC,cAAe,CACb1E,KAAMoE,EAAMO,WAAWrE,QAAQN,KAC/B4B,OAAQwC,EAAMO,WAAWrE,QAAQsB,OACjC/E,IAAKuH,EAAMO,WAAWrE,QAAQzD,MAGlCc,EAAQkG,OAAO9H,KAAKsI,wGAOtB,OAJA1G,EAAQmG,MAAQhH,KAAKgH,MAAMjF,IAAG,SAAC+F,GAC7B,MAAO,CAAE1H,GAAIoH,OAAOM,EAAK1H,OAGpBS,GAGTjB,EAAAC,UAAAkI,SAAA,SAASf,GACPhH,KAAKgH,MAAQA,GAGPpH,EAAAC,UAAAqF,gBAAR,SAAwBvB,WACtB,GAAI3D,KAAKC,QAAS,KACZ+H,OAAa,MACjB,IAAkB,IAAAC,EAAAb,EAAA/F,OAAOC,KAAKtB,KAAKuB,UAAU7C,QAAMwJ,EAAAD,EAAAzJ,QAAA0J,EAAAvJ,KAAAuJ,EAAAD,EAAAzJ,OAAE,CAAhD,IAAMiD,EAAGyG,EAAAxJ,MAIZ,GAHAsJ,EAAgBhI,KAAKuB,UAAU7C,MAAM+C,GAAKuC,KAAI,SAACrC,GAC7C,OAAOA,EAAEgC,MAAQA,IAGjB,+GAKEvD,EAAK4H,EAAgBA,EAAc5H,GAAKuD,EAC9C,OAAO3D,KAAKK,WAAWD,GAGzB,OAAOJ,KAAK0D,gBAAgBC,IAGtB/D,EAAAC,UAAAsI,oBAAR,WAAA,IAAA7H,EAAAN,KACOA,KAAK0E,OAIV1E,KAAK0E,MAAME,YAAYf,UAAS,SAACiB,OACzBsD,EAAY9H,EAAKoE,MAAMlB,QAAQ4E,UACrC,GAAIA,GAAatD,EAAM,GAAuB,KACtCuD,EAAevD,EAAM,GAC3BxE,EAAKmF,iBAAiBW,OAASiC,EAAaC,MAAM,KAAKvG,IAAIwG,QAC3DjI,EAAKmF,iBAAiB+C,WAAY,MAG9BC,EAAgBnI,EAAKoE,MAAMlB,QAAQiF,cACzC,GAAIA,GAAiB3D,EAAM,GAA2B,KAC9C4D,EAAkB5D,EAAM,GAC9BxE,EAAKmF,iBAAiBqB,WAAa4B,MAG/BC,EAAUrI,EAAKoE,MAAMlB,QAAQmF,QACnC,GAAIA,GAAW7D,EAAM,GAAqB,KAClC8D,EAAY9D,EAAM,GACxBxE,EAAKmF,iBAAiBmB,KAAO2B,OAAOK,OAKlChJ,EAAAC,UAAA0D,QAAR,SAAgBsF,GAGd,OAFiB7I,KAAKwD,QAAQsF,SAASC,QAAQ,MAAO,IAEpC,IAAIF,GAGhBjJ,EAAAC,UAAAa,YAAR,SAAoBD,EAAekD,OAC3B9C,EAAUb,KAAKuB,UAAU7C,MAAM0C,KAAK4C,KAAI,SAACgF,GAAO,OAAAA,EAAIrF,MAAQA,IAC5DsF,EAAepI,EAAUA,EAAQ4F,MAAQ9C,EAU/C,KAAM,CAAC,CAAE8C,MATUzG,KAAKkJ,gBAAgBC,UAAUC,QAChD,4CAQ0BC,KALVrJ,KAAKkJ,gBAAgBC,UAAUC,QAC/C,0CACA,CAAE1K,MAAOuK,OAMLrJ,EAAAC,UAAAyJ,qBAAR,SACEnI,EACAoI,QAAA,IAAAA,IAAAA,GAAA,OAEM1I,EAAUb,KAAKgF,SAAStG,MACxB8K,EAAgBxJ,KAAK4F,eAAelH,MAErC6K,GAAuBvJ,KAAKyJ,YAAY5I,IAGvCA,EAAQkB,IAAIuD,KAAKC,kBAAoBf,YACvC3D,EAAQkB,IAAIuD,KAAKC,iBAAkB,GAErCvF,KAAKgF,SAASxG,KAAKqC,GACnBb,KAAKW,aAAakD,UAAS,eAN3B7D,KAAKkE,yBAQDwF,EAAc1J,KAAKyJ,YAAYD,GAChCE,GAA0C,UAA3BA,EAAYvH,YAC9BnC,KAAK2F,iBAAiBnB,YAIlB5E,EAAAC,UAAAyE,iBAAR,SAAyBzD,GAEvB,IADqBb,KAAKyJ,YAAY5I,GACnB,KACX8I,EAAmB,CACvBvJ,GAAIS,EAAQT,GACZuD,IAAK9C,EAAQ8C,IACb8C,MAAO5F,EAAQ4F,MACfC,MAAO7F,EAAQ6F,MACfvE,WAAYC,EAAeA,EAAe7C,OAExCS,KAAKuB,UAAU7C,OAASsB,KAAKuB,UAAU7C,MAAMe,YAC/CO,KAAKuB,UAAU7C,MAAMe,UAAOR,KAAK0K,GACjC3J,KAAKuB,UAAU/C,KAAKwB,KAAKuB,UAAU7C,UAKjCkB,EAAAC,UAAA4J,YAAR,SAAoB5I,WAClB,IAAKA,IAAYA,EAAQT,GACvB,OAAO,MAILwJ,EADEzI,EAAWnB,KAAKuB,UAAU7C,UAEhC,IAAkB,IAAAuJ,EAAAb,EAAA/F,OAAOC,KAAKH,IAAS+G,EAAAD,EAAAzJ,QAAA0J,EAAAvJ,QAErCiL,EADczI,EADF+G,EAAAxJ,OAEEsF,KAAI,SAACrC,GAAK,OAAAA,EAAEvB,KAAOS,EAAQT,MAFJ8H,EAAAD,EAAAzJ,6GAQvC,OAAOoL,uBA7dVC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,oDA9BLC,EAAAA,kBAgBAC,EAAAA,mBAHPC,EAAAA,uBAHAC,EAAAA,qBACAC,EAAAA,aAAYC,WAAA,CAAA,CAAAnH,KAuCToH,EAAAA,qPALH,SAAA1K,EACUM,EACA+B,EACAiH,EACAqB,EACY7F,GALtB,IAAApE,EAAAN,KACUA,KAAAE,KAAAA,EACAF,KAAAiC,YAAAA,EACAjC,KAAAkJ,gBAAAA,EACAlJ,KAAAuK,OAAAA,EACYvK,KAAA0E,MAAAA,EAjBf1E,KAAAgF,SAAW,IAAIwF,EAAAA,gBAAiChG,WAChDxE,KAAAuB,UAAY,IAAIiJ,EAAAA,gBAA8B,CAAEpJ,KAAM,KACtDpB,KAAAc,kBAAoB,IAAI0J,EAAAA,gBAAwBhG,WAChDxE,KAAA4F,eAAiB,IAAI4E,EAAAA,gBAAiChG,WACrDxE,KAAAyF,iBAAmC,GAezCzF,KAAKwD,QAAUnC,OAAOmE,OACpB,CACEsD,SAAU,WACVrF,gBAAiB,iBACjBQ,kBAAmB,YAErBjE,KAAKuK,OAAOE,UAAU,YAGxBzK,KAAKC,QAAUD,KAAKwD,QAAQzD,IAE5BC,KAAKmI,sBAELnI,KAAKiC,YAAYyI,cAAc7G,UAAS,SAAC3B,GACvC,GAAsB,OAAlBA,EAAJ,KAIM+C,EAAa3E,EAAKiB,UAAUsC,UAAS,SAAC1C,GACtC8D,IACFA,EAAWE,cACX7E,EAAKgJ,qBAAqBnI,MAG9Bb,EAAKsD,oBATHtD,EAAK4D,uBCpEb,IAAAyG,GAiBEtJ,OAAAuJ,eAAID,EAAA9K,UAAA,MAAG,KAAP,WACE,OAAOG,KAAK6K,UAAU9I,qCAUxB4I,EAAA9K,UAAAiL,SAAA,WAAA,IAAAxK,EAAAN,KACEA,KAAK+K,UAAY/K,KAAKgL,eAAehG,SAClCzE,KAAKmB,EAAAA,OAAM,SAACb,GAAW,OAAAA,IAAY2D,aACnCX,UAAS,SAAChD,GAAW,OAAAP,EAAK2K,oBAAoBpK,MAGnD8J,EAAA9K,UAAAqL,YAAA,WACElL,KAAK+K,UAAU5F,eAGTwF,EAAA9K,UAAAoL,oBAAR,SAA4BpK,GAC1B,GAAIA,EAAQkB,MAAQyC,UAApB,KAkBM2G,EAA8BtK,EAAQkB,IAAIuD,MACZ,IAAhC6F,EAAY5F,kBACdvF,KAAK6K,UAAUvF,KAAI,yBAjDxB8F,EAAAA,UAAStB,KAAA,CAAC,CACTuB,SAAU,+DANqBC,EAAAA,2BAExB1L,KAuDT+K,GAzCE,SAAAA,EACEE,EACQG,GAAAhL,KAAAgL,eAAAA,EAERhL,KAAK6K,UAAYA,SCEnBxJ,OAAAuJ,eAAIW,EAAA1L,UAAA,MAAG,KAAP,WACE,OAAOG,KAAK6K,UAAU9I,qCAUxBwJ,EAAA1L,UAAAiL,SAAA,WAAA,IAAAxK,EAAAN,KAKE,GAJAA,KAAK+K,UAAY/K,KAAKgL,eAAehG,SAClCzE,KAAKmB,EAAAA,OAAM,SAACb,GAAW,OAAAA,IAAY2D,aACnCX,UAAS,SAAChD,GAAW,OAAAP,EAAK2K,oBAAoBpK,KAG/Cb,KAAK0E,OACL1E,KAAK0E,MAAMlB,QAAQgI,oBACnBxL,KAAK0E,MAAMlB,QAAQiI,qBACnBzL,KAAK0E,MAAMlB,QAAQmB,eAEb+G,EAAgB1L,KAAK0E,MAAME,YAC9BrE,KAAKoL,EAAAA,KAAK,IACV9H,UAAS,SAACiB,GACTxE,EAAKsE,YAAcE,EACnB4G,EAAcvG,iBAKtBoG,EAAA1L,UAAAqL,YAAA,WACElL,KAAK+K,UAAU5F,eAGToG,EAAA1L,UAAAoL,oBAAR,SAA4BpK,GAA5B,IAAAP,EAAAN,KACMa,EAAQkG,SAAWvC,YAEvBxE,KAAK+B,IAAI6J,aAAa5L,KAAK6L,eAC3B7L,KAAK6L,cAAgB,GAEGC,EAAAA,IAAGC,WAAA,EAAA5M,EAAI0B,EAAQkG,OAAOhF,IAAG,SAAE0F,EAA4BuE,GAC7E,OAAO1L,EAAK2L,aAAaC,iBAAiBzE,GAAclH,KACtD4L,EAAAA,eAAeC,EAAAA,GAAGJ,SAINnI,UAAS,SAAEwI,OACnBtF,EAASsF,EAAeC,OAAM,SAAEC,EAAcC,GAC5C,IAAAC,EAAA7N,EAAA4N,EAAA,GAAClF,EAAAmF,EAAA,GAAOT,EAAAS,EAAA,GAId,OAHAnF,EAAMK,QAAUrH,EAAKoM,8BAA8BpF,GACnDA,EAAMI,OAASJ,EAAMI,QAAUsE,EAAQ,EACvCO,EAAIP,GAAS1E,EACNiF,GACN,IAAII,MAAMN,EAAe5N,SAC5B6B,EAAKuL,cAAgB9E,EACrBzG,EAAKyB,IAAI6K,UAAU7F,OAIfwE,EAAA1L,UAAA6M,8BAAR,SAAsCpF,OAC9BxC,EAAS9E,KAAK4E,YACdS,EAAiBrF,KAAKgL,eAAehG,SAAStG,MAAMiF,IACpDkJ,EAAyBvF,EAAMlH,GAEjCuH,EAAUL,EAAMK,QACpB,IAAK7C,IAAW+H,EACd,OAAOlF,MAGHmF,EAAgBhI,EAAO9E,KAAK0E,MAAMlB,QAAkB,YAC1D,GAAIsJ,IAAkBzH,IAAmByH,EAAe,KAClDC,EAAwB,GACxBC,EAAyB,GACzBC,EAA0B,GAC1BC,EAA4B,GAG9BlN,KAAK0E,MAAMlB,QAAQgI,oBACnB1G,EAAO9E,KAAK0E,MAAMlB,QAA0B,sBAE5CuJ,EACEjI,EAAO9E,KAAK0E,MAAMlB,QAA0B,qBAG9CxD,KAAK0E,MAAMlB,QAAQiI,qBACnB3G,EAAO9E,KAAK0E,MAAMlB,QAA2B,uBAE7CwJ,EACElI,EAAO9E,KAAK0E,MAAMlB,QAA2B,sBAKnB,MAA1BuJ,IACFpF,GAAU,GAEmB,MAA3BqF,IACFrF,GAAU,GAIZsF,EAAgBF,EAAsBzE,MAAM,KAC5C4E,EAAkBF,EAAuB1E,MAAM,MACF,EAAzC2E,EAAcE,QAAQN,KACxBlF,GAAU,IAEmC,EAA3CuF,EAAgBC,QAAQN,KAC1BlF,GAAU,GAId,OAAOA,uBA1HVyD,EAAAA,UAAStB,KAAA,CAAC,CACTuB,SAAU,iEAVVC,EAAAA,2BAMO1L,SAJPwN,EAAAA,oBALOhD,EAAAA,aAAYC,WAAA,CAAA,CAAAnH,KA8BhBoH,EAAAA,cA0GLiB,GA9GE,SAAAA,EACUV,EACAG,EACAiB,EACYvH,GAHZ1E,KAAA6K,UAAAA,EACA7K,KAAAgL,eAAAA,EACAhL,KAAAiM,aAAAA,EACYjM,KAAA0E,MAAAA,EAVd1E,KAAA6L,cAAyB,GCzBnC,IAAAwB,GAeEhM,OAAAuJ,eACIyC,EAAAxN,UAAA,WAAQ,KADZ,WAEE,OAAOG,KAAKsN,eAEd,SAAa5O,GACXsB,KAAKsN,UAAY5O,mCAInB2C,OAAAuJ,eACIyC,EAAAxN,UAAA,kBAAe,KADnB,WAEE,OAAOG,KAAKuN,sBAEd,SAAoB7O,GAClBsB,KAAKuN,iBAAmB7O,EACxBsB,KAAKwN,MAAMC,iDAIbpM,OAAAuJ,eACIyC,EAAAxN,UAAA,mBAAgB,KADpB,WAEE,OAAOG,KAAK0N,uBAEd,SAAqBhP,GACnBsB,KAAK0N,kBAAoBhP,uDA7B5BiP,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,mBACVuC,SAAA,0oCAPAC,EAAAA,uDAUCC,EAAAA,+BASAA,EAAAA,gCAUAA,EAAAA,sBASAC,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,kCACAA,EAAAA,4BACAA,EAAAA,UASHV,GADE,SAAAA,EAAoBG,GAAAxN,KAAAwN,MAAAA,EArCZxN,KAAAsN,UAA0B,CAAElM,KAAM,IAqBhCpB,KAAAgO,OAAS,IAAIC,EAAAA,aACbjO,KAAAkO,SAAW,IAAID,EAAAA,aACfjO,KAAAmO,KAAO,IAAIF,EAAAA,aACXjO,KAAAkB,UAAS,IAAI+M,EAAAA,aACbjO,KAAAoO,KAAO,IAAIH,EAAAA,aACXjO,KAAAqC,MAAQ,IAAI4L,EAAAA,aACZjO,KAAAqO,SAAW,IAAIJ,EAAAA,aACfjO,KAAAsO,kBAAoB,IAAIL,EAAAA,aACxBjO,KAAAuO,YAAc,IAAIN,EAAAA,aAErBjO,KAAAwO,aAAe,CACpBpN,KAAM,yCACNqN,OAAQ,4CACRhP,SAAQ,6CCxDZ,IAAAiP,GAgCEA,EAAA7O,UAAA8O,SADA,SACS9N,GACPb,KAAKgL,eAAevG,YAAY5D,EAAQ8C,MAI1C+K,EAAA7O,UAAA+O,OADA,SACO/N,GACLb,KAAKgL,eAAetF,kBAAkB7E,EAAQ8C,MAIhD+K,EAAA7O,UAAAgP,OADA,SACOhO,GADP,IAAAP,EAAAN,KAEQ+B,EAAM/B,KAAK8O,WAAWC,SACtBC,EAAiBhP,KAAKgL,eAAenF,kBAAkB9D,GAEvDkN,EAAe,CACnBlI,OAAQiI,EAAejI,OACvBhF,IAAK,CACHuD,KAAM0J,EAAejN,IAAIuD,OAI7BtF,KAAKgL,eAAexI,OAAO3B,EAAQT,GAAI6O,GAASpL,UAAS,eACjDsF,EAAY7I,EAAK4I,gBAAgBC,UACjC+F,EAAU/F,EAAUC,QACxB,4CACA,CACE1K,MAAOmC,EAAQ4F,QAGbA,EAAQ0C,EAAUC,QACtB,+CAEF9I,EAAK6O,eAAeC,QAAQF,EAASzI,MAKzCiI,EAAA7O,UAAAwP,WADA,SACWxO,GADX,IAAAP,EAAAN,KAEEA,KAAKgL,eAAejK,WAAWF,EAAQT,IAAIyD,UAAS,WAClDvD,EAAK0K,eAAelK,kBAAkBtC,KAAKqC,EAAQT,QAC7C+I,EAAY7I,EAAK4I,gBAAgBC,UACjC+F,EAAU/F,EAAUC,QACxB,gDACA,CACE1K,MAAOmC,EAAQ4F,QAGbA,EAAQ0C,EAAUC,QACtB,mDAEF9I,EAAK6O,eAAeC,QAAQF,EAASzI,MAKzCiI,EAAA7O,UAAAyP,cADA,SACczO,GACZb,KAAKgL,eAAetF,kBAAkB7E,EAAQ8C,MAIhD+K,EAAA7O,UAAA0P,oBADA,SACoB1O,GAClBb,KAAKgL,eAAetF,kBAAkB7E,EAAQ8C,MAIhD+K,EAAA7O,UAAA2P,SADA,SACS3O,GADT,IAAAP,EAAAN,KAEQmJ,EAAYnJ,KAAKkJ,gBAAgBC,UACvCnJ,KAAKyP,qBACFC,KACCvG,EAAUC,QAAQ,oDAEnBvF,UAAS,SAAC8L,GACLA,GACFrP,EAAK0K,eAAe9J,UAAOL,EAAQT,IAAIyD,UAAS,eACxCqL,EAAU/F,EAAUC,QACxB,8CACA,CACE1K,MAAOmC,EAAQ4F,QAGbA,EAAQ0C,EAAUC,QACtB,iDAEF9I,EAAK6O,eAAeS,KAAKV,EAASzI,QAO5CiI,EAAA7O,UAAAgQ,QADA,SACQhP,GADR,IAAAP,EAAAN,KAEQsC,EAAa,CACjBmE,MAAO5F,EAAQ4F,MAAQ,QACvB9C,IAAK9C,EAAQ8C,IAAM,SAErB3D,KAAKgL,eAAe3I,MAAMxB,EAAQT,GAAIkC,GAAYuB,UAAS,eACnDsF,EAAY7I,EAAK4I,gBAAgBC,UACjC+F,EAAU/F,EAAUC,QACxB,6CACA,CACE1K,MAAOmC,EAAQ4F,QAGbA,EAAQ0C,EAAUC,QACtB,gDAEF9I,EAAK6O,eAAeC,QAAQF,EAASzI,MAezCiI,EAAA7O,UAAAiL,SAAA,WAAA,IAAAxK,EAAAN,KAEEA,KAAK6K,UAAU1J,SAAW,CAAEC,KAAM,IAElCpB,KAAKiF,WAAajF,KAAKgL,eAAezJ,UAAUsC,UAAS,SAAC1C,GACxD,OAAAb,EAAKgJ,qBAAqBnI,KAG5BnB,KAAK8P,mBAAqB9P,KAAKgL,eAAelK,kBAAkB+C,UAAS,SACvEzD,GACEE,EAAKuK,UAAU5J,iBAAmBb,IAKtCJ,KAAK+P,kBAAoB/P,KAAKgL,eAAehG,SAC1CzE,KAAKsE,EAAAA,aAAa,MAClBhB,UAAS,SAAChD,GAAW,OAACP,EAAKuK,UAAUmF,gBAAkBnP,IAE1Db,KAAKgL,eAAepH,gBAGtB8K,EAAA7O,UAAAqL,YAAA,WACElL,KAAKiF,WAAWE,cAChBnF,KAAK+P,kBAAkB5K,cACvBnF,KAAK8P,mBAAmB3K,eAGlBuJ,EAAA7O,UAAAyJ,qBAAR,SAA6BnI,GAC3BnB,KAAK6K,UAAU1J,SAAWA,uBAhK7BiK,EAAAA,UAAStB,KAAA,CAAC,CACTuB,SAAU,uEAHHgC,EAAoBhD,WAAA,CAAA,CAAAnH,KA2HxB+M,EAAAA,cA5HIrQ,SAPAsQ,EAAAA,kBAFgBhG,EAAAA,uBAChBiG,EAAAA,4BADAC,EAAAA,oDAqBNC,EAAAA,aAAYvG,KAAA,CAAC,SAAU,CAAC,2BAKxBuG,EAAAA,aAAYvG,KAAA,CAAC,OAAQ,CAAC,2BAKtBuG,EAAAA,aAAYvG,KAAA,CAAC,OAAQ,CAAC,+BA2BtBuG,EAAAA,aAAYvG,KAAA,CAAC,WAAY,CAAC,kCAkB1BuG,EAAAA,aAAYvG,KAAA,CAAC,cAAe,CAAC,wCAK7BuG,EAAAA,aAAYvG,KAAA,CAAC,oBAAqB,CAAC,6BAKnCuG,EAAAA,aAAYvG,KAAA,CAAC,SAAU,CAAC,4BAyBxBuG,EAAAA,aAAYvG,KAAA,CAAC,QAAS,CAAC,cA+D1B4E,GA1CE,SAAAA,EACU7D,EACAG,EACA8D,EACA5F,EACAuG,EACAN,GAJAnP,KAAAgL,eAAAA,EACAhL,KAAA8O,WAAAA,EACA9O,KAAAkJ,gBAAAA,EACAlJ,KAAAyP,qBAAAA,EACAzP,KAAAmP,eAAAA,EAERnP,KAAK6K,UAAYA,ECtJrB,IAAAyF,GAgBEjP,OAAAuJ,eACI0F,EAAAzQ,UAAA,UAAO,KADX,WAEE,OAAOG,KAAKqE,cAEd,SAAY3F,GACVsB,KAAKqE,SAAW3F,mCAIlB2C,OAAAuJ,eACI0F,EAAAzQ,UAAA,UAAO,KADX,WAEE,OAAOG,KAAKuQ,cAEd,SAAY7R,GACVsB,KAAKuQ,SAAW7R,mCAclB4R,EAAAzQ,UAAA2Q,cAAA,SAAc3P,GACRb,KAAKyQ,KAAKvO,eACZlC,KAAKqO,SAASqC,KAAK7P,wBAxCxB8M,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,mBACVuC,SAAA,+rHANO3D,EAAAA,gDAcN6D,EAAAA,yBASAA,EAAAA,oBASAC,EAAAA,yBACAA,EAAAA,qBACAA,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,kCACAA,EAAAA,4BACAA,EAAAA,UASHuC,GAPE,SAAAA,EAAmBG,GAAAzQ,KAAAyQ,KAAAA,EA9BZzQ,KAAAmD,eAAiBf,EACjBpC,KAAA2Q,MAAQ,UACR3Q,KAAA4Q,WAAY,EAkBX5Q,KAAAuQ,UAAW,EAETvQ,KAAAmO,KAAO,IAAIF,EAAAA,aACXjO,KAAAkB,UAAS,IAAI+M,EAAAA,aACbjO,KAAAoO,KAAO,IAAIH,EAAAA,aACXjO,KAAAqC,MAAQ,IAAI4L,EAAAA,aACZjO,KAAAqO,SAAW,IAAIJ,EAAAA,aACfjO,KAAAsO,kBAAoB,IAAIL,EAAAA,aACxBjO,KAAAuO,YAAc,IAAIN,EAAAA,aCxC9B,IAAA4C,GAeExP,OAAAuJ,eACIiG,EAAAhR,UAAA,gBAAa,KADjB,WAEE,OAAOG,KAAK8Q,oBAEd,SAAkBpS,GAChBsB,KAAK8Q,eAAiBpS,mCAIxB2C,OAAAuJ,eACIiG,EAAAhR,UAAA,UAAO,KADX,WAEE,OAAOG,KAAKqE,cAEd,SAAY3F,GACVsB,KAAKqE,SAAW3F,EAChBsB,KAAK+Q,6CAIP1P,OAAAuJ,eACIiG,EAAAhR,UAAA,WAAQ,KADZ,WAEE,OAAOG,KAAKgR,eAEd,SAAatS,GACXsB,KAAKgR,UAAYtS,mCAWnBmS,EAAAhR,UAAAiL,SAAA,WACE9K,KAAK+Q,aAGAF,EAAAhR,UAAAoR,iBAAP,SAAwBvS,OAClBwS,EAAS7P,OAAOmE,OAAO,GAAI9G,IAC/BwS,EAASC,EAAAA,YAAYC,WAAWF,IACzBvN,IAAMuN,EAAOvN,IAAIoF,QAAQ,IAAK,IACjCmI,EAAOvN,IACTuN,EAAOvN,IAAM3D,KAAKqR,OAAS,IAAMH,EAAOvN,IAExCuN,EAAOvN,IAAM3D,KAAKqR,OAEpBrR,KAAKsR,WAAWZ,KAAKQ,IAGfL,EAAAhR,UAAAkR,UAAR,eACQlQ,EAAeb,KAAKa,SAAW,GAE/B0Q,EAAW1Q,EAAQ8C,IAAI2E,MAAM,KACnCtI,KAAKqR,OAASE,EAASC,YACjB7N,EAAM4N,EAASE,KAAK,KAE1BzR,KAAK0R,KAAO1R,KAAK2R,YAAYC,MAAM,CACjCnL,MAAO,CAAC5F,EAAQ4F,OAChB9C,IAAK,CAACA,GAAO,4BArElBgK,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,mBACVuC,SAAA,ksCAPOiE,EAAAA,sDAcN/D,EAAAA,uBASAA,EAAAA,wBAUAA,EAAAA,0BAUAC,EAAAA,sBACAA,EAAAA,yBACAA,EAAAA,UAgCH8C,GA9BE,SAAAA,EAAoBc,GAAA3R,KAAA2R,YAAAA,EAPZ3R,KAAAgR,WAAY,EAGVhR,KAAAsR,WAAgC,IAAIrD,EAAAA,aACpCjO,KAAAqC,MAA2B,IAAI4L,EAAAA,aAC/BjO,KAAAkB,UAA4B,IAAI+M,EAAAA,aC9C5C,IAAA6D,GASEzQ,OAAAuJ,eACIkH,EAAAjS,UAAA,UAAO,KADX,WAEE,OAAOG,KAAKqE,cAEd,SAAY3F,GACVsB,KAAKqE,SAAW3F,EAChBsB,KAAK+R,2CAQPD,EAAAjS,UAAAkS,QAAA,WACE/R,KAAKgS,GAAGvE,qCApBXE,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,mBACVuC,SAAA,4PAN+CC,EAAAA,sDAS9CC,EAAAA,0BAUAC,EAAAA,UAOH+D,GALE,SAAAA,EAAoBE,GAAAhS,KAAAgS,GAAAA,EAFVhS,KAAAsR,WAAgC,IAAIrD,EAAAA,aCnBhD,IAAAgE,GAuBEA,EAAApS,UAAA+O,OADA,SACO/N,GADP,IAAAP,EAAAN,KAEQI,EAAKJ,KAAK6K,UAAUhK,QAAQT,GAClCJ,KAAKgL,eAAexI,OAAOpC,EAAIS,GAASgD,UAAS,eACzCsF,EAAY7I,EAAK4I,gBAAgBC,UACjC+F,EAAU/F,EAAUC,QAAQ,4CAA6C,CAC7E1K,MAAOmC,EAAQ4F,OAASnG,EAAKuK,UAAUhK,QAAQ4F,QAE3CA,EAAQ0C,EAAUC,QAAQ,+CAChC9I,EAAK6O,eAAeC,QAAQF,EAASzI,MAazCwL,EAAApS,UAAAiL,SAAA,WAAA,IAAAxK,EAAAN,KACEA,KAAKkS,gBAAkBlS,KAAKgL,eAAepF,eAAe/B,UAAS,SACjEhD,GAAW,OAAAP,EAAK6R,0BAA0BtR,MAI9CoR,EAAApS,UAAAqL,YAAA,WACElL,KAAKkS,gBAAgB/M,eAGf8M,EAAApS,UAAAsS,0BAAR,SAAkCtR,GAChCb,KAAK6K,UAAUhK,QAAUA,uBAxC5BuK,EAAAA,UAAStB,KAAA,CAAC,CACTuB,SAAU,uEAHHyG,EAAoBzH,WAAA,CAAA,CAAAnH,KAuBxB+M,EAAAA,cAxBIrQ,SAHAwQ,EAAAA,sBAAgBlG,EAAAA,mDAatBmG,EAAAA,aAAYvG,KAAA,CAAC,aAAc,CAAC,cAmC/BmI,GAtBE,SAAAA,EACUpH,EACAG,EACAmE,EACAjG,GAFAlJ,KAAAgL,eAAAA,EACAhL,KAAAmP,eAAAA,EACAnP,KAAAkJ,gBAAAA,EAERlJ,KAAK6K,UAAYA,ECzCrB,IAAAuH,GAiBE/Q,OAAAuJ,eACIwH,EAAAvS,UAAA,UAAO,KADX,WAEE,OAAOG,KAAKqE,cAEd,SAAY3F,GACVsB,KAAKqE,SAAW3F,mCAIlB2C,OAAAuJ,eACIwH,EAAAvS,UAAA,cAAW,KADf,WAEE,OAAOG,KAAKqS,kBAEd,SAAgB3T,GACdsB,KAAKqS,aAAe3T,mCAWtB0T,EAAAvS,UAAAiL,SAAA,WACE9K,KAAK+Q,aAGAqB,EAAAvS,UAAAoR,iBAAP,SAAwBvS,GACtBsB,KAAKsS,cAAc5B,KAAKhS,IAGlB0T,EAAAvS,UAAAkR,UAAR,WACE/Q,KAAK0R,KAAO1R,KAAK2R,YAAYC,MAAM,CACjC3O,OAAQ,GACRE,eAAgB,CAAC,+BA5CtBwK,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,0BACVuC,SAAA,0hGAVOiE,EAAAA,gDAgBN/D,EAAAA,2BASAA,EAAAA,6BASAC,EAAAA,iCACAA,EAAAA,6BAEAA,EAAAA,UAkBHqE,GAhBE,SAAAA,EAAoBT,GAAA3R,KAAA2R,YAAAA,EALV3R,KAAAsS,cAAiD,IAAIrE,EAAAA,aAE/DjO,KAAAuS,iBAAoD,IAAItE,EAAAA,aAC9CjO,KAAAwS,aAAsC,IAAIvE,EAAAA,oBCXpDwE,EAAA5S,UAAA6S,gBADA,SACgBvQ,GADhB,IAAA7B,EAAAN,KAEQ2C,EAAY3C,KAAK6K,UAAUhK,QAAQT,GACzCJ,KAAKgL,eACFhI,yBACCL,EACAR,EAAWc,OACXd,EAAWgB,gBAEZU,UAAS,SAAC8O,eACT,IAAgB,IAAAC,EAAAxL,EAAAuL,GAAOE,EAAAD,EAAApU,QAAAqU,EAAAlU,KAAAkU,EAAAD,EAAApU,OAAE,CAApB,IAAMsU,EAACD,EAAAnU,MACV4B,EAAKuK,UAAUkI,YAAY5Q,EAAWgB,gBAAgBlE,KAAK6T,4GAEvD7P,EAASd,EAAWc,OACpBkG,EAAY7I,EAAK4I,gBAAgBC,UACjC+F,EAAU/F,EAAUC,QAAQ,uCAAwC,CACxE1K,MAAOuE,IAEHwD,EAAQ0C,EAAUC,QAAQ,0CAChC9I,EAAK6O,eAAeC,QAAQF,EAASzI,MAK3CgM,EAAA5S,UAAAmT,mBADA,SACmB7Q,GADnB,IAAA7B,EAAAN,KAEQ2C,EAAY3C,KAAK6K,UAAUhK,QAAQT,GACzCJ,KAAKgL,eACF5H,4BAA4BT,EAAWR,EAAW/B,IAClDyD,UAAS,eACFmI,EAAQ1L,EAAKuK,UAAUkI,YAC3B5Q,EAAWgB,gBACX8P,UAAS,SAACH,GACV,OAAOA,EAAE1S,KAAO+B,EAAW/B,KAE7BE,EAAKuK,UAAUkI,YAAY5Q,EAAWgB,gBAAgB+P,OAAOlH,EAAO,OAE9D/I,EAASd,EAAWc,OACpBkG,EAAY7I,EAAK4I,gBAAgBC,UACjC+F,EAAU/F,EAAUC,QAAQ,0CAA2C,CAC3E1K,MAAOuE,IAEHwD,EAAQ0C,EAAUC,QAAQ,6CAChC9I,EAAK6O,eAAeC,QAAQF,EAASzI,MAK3CgM,EAAA5S,UAAAsT,eADA,SACetS,GADf,IAAAP,EAAAN,KAEQ0G,EAAQ7F,EAAQ6F,MACtB1G,KAAKgL,eAAexI,OAAO3B,EAAQT,GAAI,CAAEsG,MAAKA,IAAI7C,UAAS,eACnDsF,EAAY7I,EAAK4I,gBAAgBC,UACjC+F,EAAU/F,EAAUC,QACxB,gDACA,CACE1K,MAAOyK,EAAUC,QAAQ,gCAAkC1C,KAGzDD,EAAQ0C,EAAUC,QACtB,mDAEF9I,EAAK6O,eAAeC,QAAQF,EAASzI,MAazCgM,EAAA5S,UAAAiL,SAAA,WAAA,IAAAxK,EAAAN,KACEA,KAAKkS,gBAAkBlS,KAAKgL,eAAepF,eAAe/B,UAAS,SACjEhD,GAAW,OAAAP,EAAK6R,0BAA0BtR,MAI9C4R,EAAA5S,UAAAqL,YAAA,WACElL,KAAKkS,gBAAgB/M,eAGfsN,EAAA5S,UAAAsS,0BAAR,SAAkCtR,GAAlC,IAAAP,EAAAN,MACEA,KAAK6K,UAAUhK,QAAUA,IAGvBb,KAAKgL,eACFjI,eAAelC,EAAQT,IACvByD,UAAS,SAACuP,OAEHL,EAAc,CAClBxT,MAFF6T,EAAmBA,GAAoB,IAEd1R,OAAM,SAACoR,GAC5B,MAAuC,SAAhCA,EAAE3P,eAAekQ,aAE1B7T,MAAO4T,EAAiB1R,OAAM,SAACoR,GAC7B,MAAuC,UAAhCA,EAAE3P,eAAekQ,cAG5B,OAAQ/S,EAAKuK,UAAUkI,YAAcA,yBA1G9C3H,EAAAA,UAAStB,KAAA,CAAC,CACTuB,SAAU,8EAHH+G,EAA2B/H,WAAA,CAAA,CAAAnH,KA0E/B+M,EAAAA,cA3EIrQ,SAPgBsK,EAAAA,uBAAhBkG,EAAAA,2DAiBNC,EAAAA,aAAYvG,KAAA,CAAC,gBAAiB,CAAC,uCAuB/BuG,EAAAA,aAAYvG,KAAA,CAAC,mBAAoB,CAAC,mCAuBlCuG,EAAAA,aAAYvG,KAAA,CAAC,eAAgB,CAAC,cAyDjC2I,GAvCE,SAAAA,EACU5H,EACAG,EACA9B,EACAiG,GAFAnP,KAAAgL,eAAAA,EACAhL,KAAAkJ,gBAAAA,EACAlJ,KAAAmP,eAAAA,EAERnP,KAAK6K,UAAYA,MC9DfyI,EAAqB,CACzB3I,EACAY,GAGFgI,GA8CSA,EAAAC,QAAP,WACE,MAAO,CACLC,SAAUF,wBAhDfG,EAAAA,SAAQ5J,KAAA,CAAC,CACR6J,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBACAC,EAAAA,mBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,gBACAC,EAAAA,iBACAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,eACAC,EAAAA,cACAC,EAAAA,cACAC,EAAAA,kBACAC,EAAAA,qBACAC,EAAAA,yBACAC,EAAAA,mBAEFC,QAAO1V,EAAA,CACLkO,EACAqB,EACA4B,EACAO,EACAiB,EACAG,EACAG,EACAK,GAEGa,GAELwB,aAAY3V,EAAA,CACVkO,EACAqB,EACA4B,EACAO,EACAiB,EACAG,EACAG,EACAK,GAEGa,OASPC,GAnDA,SAAAA,KCvCA,IAAAwB,uBAGCpH,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,sBACVuC,SAAA,owBAJOoH,EAAAA,gBAUTD,GADE,SAAAA,EAAmBE,GAAAjV,KAAAiV,UAAAA,ECVrB,IAAAC,GAeE7T,OAAAuJ,eACIsK,EAAArV,UAAA,MAAG,KADP,WAEE,OAAOG,KAAKmV,UAEd,SAAQzW,GACNsB,KAAKmV,KAAOzW,mCAId2C,OAAAuJ,eACIsK,EAAArV,UAAA,QAAK,KADT,WAEE,OAAOG,KAAKoV,YAEd,SAAU1W,GACRsB,KAAKoV,OAAS1W,mCAWhBwW,EAAArV,UAAAwV,cAAA,WAAA,IAAA/U,EAAAN,KACEA,KAAKsV,OACF5F,KAAKqF,EAAyB,CAAEQ,cAAc,IAC9CC,cACA3R,UAAS,SAAC4C,GACT,GAAIA,EAAO,KACHgP,EAAUnV,EAAK0K,eAAenF,kBAAkBvF,EAAKyB,KAC3D0T,EAAQhP,MAAQA,EAChBnG,EAAK0K,eAAepJ,OAAO6T,GAAS5R,UAAS,eACrCsF,EAAY7I,EAAK4I,gBAAgBC,UACjCuM,EAASvM,EAAUC,QACvB,iDAEI8F,EAAU/F,EAAUC,QACxB,8CACA,CACE1K,MAAO+W,EAAQhP,QAGnBnG,EAAK6O,eAAeC,QAAQF,EAASwG,6BAlDhD/H,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,sBACVuC,SAAA,qmBAVO+H,EAAAA,iBAKA/V,SAHgBsK,EAAAA,uBAAhBkG,EAAAA,+CAYNtC,EAAAA,qBASAA,EAAAA,SAwCHoH,GA/BE,SAAAA,EACUI,EACAtK,EACA9B,EACAiG,GAHAnP,KAAAsV,OAAAA,EACAtV,KAAAgL,eAAAA,EACAhL,KAAAkJ,gBAAAA,EACAlJ,KAAAmP,eAAAA,ECrCZ,IAAAyG,GAeEA,GAAA/V,UAAAC,IAAA,WACE,IAAKE,KAAKC,QACR,OAAO4V,EAAAA,UAGH9V,EAAMC,KAAKC,QAAU,QAC3B,OAAOD,KAAKE,KAAKJ,IAAWC,IAG9B6V,GAAA/V,UAAAqB,UAAA,SAAOd,OACCL,EAAMC,KAAKC,QAAU,SAAWG,EACtC,OAAOJ,KAAKE,KAAKgB,UAAanB,IAGhC6V,GAAA/V,UAAA+B,OAAA,SAAOf,OACCd,EAAMC,KAAKC,QAAU,QAC3B,OAAOD,KAAKE,KAAKc,KAAUjB,EAAK8B,KAAKC,UAAUjB,0BAxBlDgJ,EAAAA,uDANQG,EAAAA,kBAGAG,EAAAA,iBA6BTyL,IAtBE,SAAAA,GAAoB1V,EAA0BqK,GAA1BvK,KAAAE,KAAAA,EAA0BF,KAAAuK,OAAAA,EAC5CvK,KAAKC,QAAUD,KAAKuK,OAAOE,UAAU,eCZzC,IAAAqL,yBAGCnI,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,iBACVuC,SAAA,2vBAJOoH,EAAAA,gBAUTc,IADE,SAAAA,GAAmBb,GAAAjV,KAAAiV,UAAAA,ECVrB,IAAAc,IAuBE1U,OAAAuJ,eACImL,GAAAlW,UAAA,MAAG,KADP,WAEE,OAAOG,KAAKmV,UAEd,SAAQzW,GACNsB,KAAKmV,KAAOzW,mCAId2C,OAAAuJ,eACImL,GAAAlW,UAAA,QAAK,KADT,WAEE,OAAOG,KAAKoV,YAEd,SAAU1W,GACRsB,KAAKoV,OAAS1W,mCAgBhBqX,GAAAlW,UAAAiL,SAAA,WAAA,IAAAxK,EAAAN,KACEA,KAAKgW,eAAiBhW,KAAKiC,YAAYyI,cAAc7G,UAAS,SAAC4M,GACzDA,GACFnQ,EAAK2V,aAKXF,GAAAlW,UAAAqL,YAAA,WACElL,KAAKgW,eAAe7Q,eAGtB4Q,GAAAlW,UAAAqW,UAAA,SAAUC,GAAV,IAAA7V,EAAAN,KACE,GAAImW,GAAOA,EAAI/V,GAAI,KACXgW,EAAYpW,KAAKkJ,gBAAgBC,UACvCnJ,KAAKyP,qBACFC,KAAK0G,EAAUhN,QAAQ,+CACvBvF,UAAS,SAAC8L,GACLA,GACFrP,EAAK+V,WAAWnV,UAAOiV,EAAI/V,IAAIyD,UAAS,eAE9B4C,EAAQ2P,EAAUhN,QACtB,4CAEI8F,EAAUkH,EAAUhN,QACxB,yCACA,CACE1K,MAAOyX,EAAI1P,QAGfnG,EAAK6O,eAAeS,KAAKV,EAASzI,GAClCnG,EAAKgW,KAAOhW,EAAKgW,KAAK5U,OAAM,SAACoR,GAAK,OAAAA,EAAE1S,KAAO+V,EAAI/V,MAChD,SACDgF,GACEA,EAAIlG,MAAMuH,MAAQ,cAClBnG,EAAK6O,eAAeoH,UAAUnR,SAQpC2Q,GAAAlW,UAAAoW,QAAR,WAAA,IAAA3V,EAAAN,KACEA,KAAKqW,WAAWvW,MAAM+D,UAAS,SAC7B2S,GACElW,EAAKgW,KAAOE,GACb,SACDpR,GACEA,EAAIlG,MAAMuH,MAAQ,WAClBnG,EAAK6O,eAAeoH,UAAUnR,MAKpC2Q,GAAAlW,UAAA4W,UAAA,WAAA,IAAAnW,EAAAN,KACQsF,EAAOtF,KAAK+B,IAAIgE,GAAGC,UACnBC,EAAOX,EAAKY,gBAAgBC,UAC5BC,EAAc,IAAIC,EAAQf,EAAKgB,aAAaC,UAChDN,EACA,aAGIkQ,EAAW,CACf1P,MAAO,GACPiQ,EAAGtQ,EAAOO,iBAAiB,GAC3BgQ,EAAGvQ,EAAOO,iBAAiB,GAC3BC,KAAMtB,EAAKuB,WAGb7G,KAAKsV,OACF5F,KAAKoG,GAAoB,CAAEP,cAAc,IACzCC,cACA3R,UAAS,SAAC4C,GACLA,IACF0P,EAAI1P,MAAQA,EACZnG,EAAK+V,WAAWzU,OAAOuU,GAAKtS,UAAS,SACnC+S,OACQzN,EAAY7I,EAAK4I,gBAAgBC,UACjCuM,EAASvM,EAAUC,QACvB,4CAEI8F,EAAU/F,EAAUC,QACxB,yCACA,CACE1K,MAAOyX,EAAI1P,QAGfnG,EAAK6O,eAAeC,QAAQF,EAASwG,GACrCS,EAAI/V,GAAKwW,EAAOxW,GAChBE,EAAKgW,KAAKrX,KAAKkX,IAChB,SACD/Q,GACEA,EAAIlG,MAAMuH,MAAQ,YAClBnG,EAAK6O,eAAeoH,UAAUnR,SAO1C2Q,GAAAlW,UAAAgX,UAAA,SAAUzW,OACF+V,EAAMnW,KAAKsW,KAAKtS,KAAI,SAAC8O,GAAK,OAAAA,EAAE1S,KAAOA,IAEnCgG,EAAS0Q,EAAAA,WACb,CAACvO,OAAO4N,EAAIO,GAAInO,OAAO4N,EAAIQ,IAC3B3W,KAAK+B,IAAI+E,YAGX9G,KAAK+B,IAAIgE,GAAGC,UAAU+Q,QAAQ,CAC5B3Q,OAAMA,EACNQ,KAAMuP,EAAIvP,KACVoQ,SAAU,IACVC,OAAQC,EAAAA,gCArJbvJ,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,iBACVuC,SAAA,k0CAlBO+H,EAAAA,iBASA1L,EAAAA,mBAGA2L,SALAxF,EAAAA,sBAAgBlG,EAAAA,uBAChBiG,EAAAA,sDAcNrC,EAAAA,qBASAA,EAAAA,SAyIHiI,IA7HE,SAAAA,GACUT,EACArT,EACAoU,EACAlH,EACAjG,EACAuG,GALAzP,KAAAsV,OAAAA,EACAtV,KAAAiC,YAAAA,EACAjC,KAAAqW,WAAAA,EACArW,KAAAmP,eAAAA,EACAnP,KAAAkJ,gBAAAA,EACAlJ,KAAAyP,qBAAAA,EClDZ,IAAA0H,yBAKCxJ,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,kBACVuC,SAAA,wlBANOoH,EAAAA,oBAEA/K,EAAAA,eAkBTkN,IARE,SAAAA,GACSlC,EACCxE,GADDzQ,KAAAiV,UAAAA,EACCjV,KAAAyQ,KAAAA,MAEF2G,EAAcpX,KAAKyQ,KAAK2G,cAC9BpX,KAAKqX,KAAOD,EAAYC,KACxBrX,KAAKsX,IAAM,IAAIC,KAAuB,IAAlBH,EAAYE,KAAYE,iBCVhD,SAAgBC,KACd,OAAOC,EAAAA,QAAQ,kBAAmB,CAChCC,EAAAA,MACE,WACAC,EAAAA,MAAM,CACJC,MAAO,IACPC,SAAU,SACVC,QAAS,UAGbJ,EAAAA,MACE,SACAC,EAAAA,MAAM,CACJE,SAAU,SACVC,QAAS,aAGbC,EAAAA,WAAW,qBAAsBjB,EAAAA,QAAQ,UACzCiB,EAAAA,WAAW,qBAAsBjB,EAAAA,QAAQ,YC3B7C,IAAAkB,IAiBE5W,OAAAuJ,eACIqN,GAAApY,UAAA,MAAG,KADP,WAEE,OAAOG,KAAKmV,UAEd,SAAQzW,GACNsB,KAAKmV,KAAOzW,mCAId2C,OAAAuJ,eACIqN,GAAApY,UAAA,QAAK,KADT,WAEE,OAAOG,KAAKoV,YAEd,SAAU1W,GACRsB,KAAKoV,OAAS1W,mCAehBuZ,GAAApY,UAAAqY,aAAA,WACMlY,KAAKyQ,KAAKvO,cACZlC,KAAKmY,QAAUnY,KAAKmY,OAEpBnY,KAAKyQ,KAAK2H,UAIdH,GAAApY,UAAAuY,OAAA,WACEpY,KAAKmY,QAAS,EACdnY,KAAKyQ,KAAK2H,UAGZH,GAAApY,UAAAwY,SAAA,WACErY,KAAKsV,OAAO5F,KAAKyH,GAAqB,CAAE5B,cAAc,0BAlDzD5H,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,kBACVuC,SAAA,ukCAEA0K,WAAY,CAACb,2kBAbN9B,EAAAA,iBAEAxL,EAAAA,qBACAF,EAAAA,6CAaN6D,EAAAA,qBASAA,EAAAA,SAoCHmK,IAxBE,SAAAA,GACU3C,EACA/K,EACDkG,GAFCzQ,KAAAsV,OAAAA,EACAtV,KAAAuK,OAAAA,EACDvK,KAAAyQ,KAAAA,EANFzQ,KAAAmY,QAAS,EACTnY,KAAA2H,SAAU,EAOf3H,KAAK2H,UAAU3H,KAAKuK,OAAOE,UAAU,QC3CzC,IAAA8N,IA6DSA,GAAA/E,QAAP,WACE,MAAO,CACLC,SAAU8E,0BApCf7E,EAAAA,SAAQ5J,KAAA,CAAC,CACR6J,QAAS,CACPC,EAAAA,aACAgB,EAAAA,kBACA4D,EAAAA,uBACA7D,EAAAA,yBACAJ,EAAAA,cACAV,EAAAA,YACAI,EAAAA,cACAC,EAAAA,gBACAuE,EAAAA,gBACAC,EAAAA,gBACAvE,EAAAA,iBACAJ,EAAAA,mBACA4E,EAAAA,gBACA3E,EAAAA,gBAEFa,QAAS,CAACK,EAAyBa,GAAoBkC,IACvDnD,aAAc,CACZI,EACAH,EACAgB,GACAD,GACAmC,GACAd,IAEFyB,gBAAiB,CACf7D,EACAe,GACAqB,IAEF0B,UAAW,CAACjD,OAQd2C,IAvCA,SAAAA,cCJEO,GAAAjZ,UAAAkZ,OAAA,SAAOhX,EAAaiX,EAAYC,GAC9B,OAAIjZ,KAAKkZ,OACAlZ,KAAKmZ,cAAcpX,EAAKiX,GAE1BhZ,KAAKoZ,iBAAiBrX,EAAKkX,IAGpCH,GAAAjZ,UAAAsZ,cAAA,SAAcpX,EAAaiX,GAA3B,IAAA1Y,EAAAN,KACQa,EAAUb,KAAKgL,eAAenF,kBAAkB9D,GAWtD,OAVAlB,EAAQ6F,MAAQ,SAChB7F,EAAQ4F,MAAQuS,EAAWvS,MAC3B5F,EAAQ8C,IAAMqV,EAAWrV,IACzB3D,KAAKgL,eAAepJ,OAAOf,GAASgD,UAAS,SAC3C2S,KAAS,SACTpR,GACEA,EAAIlG,MAAMuH,MAAQ,YAClBnG,EAAK6O,eAAeoH,UAAUnR,KAGxBiU,SAASC,OAASD,SAASE,SAAQ,YAAYP,EAAWrV,KAGtEmV,GAAAjZ,UAAAuZ,iBAAA,SAAiBrX,EAAakX,WAC5B,GACGjZ,KAAK0E,OACL1E,KAAK0E,MAAMlB,QAAQgI,oBACnBxL,KAAK0E,MAAMlB,QAAQiI,qBACnB1J,EAAIyX,eAAe3S,UAJtB,KAQM4S,EAAMR,EAAkBS,kBAAkBC,YAE5CC,EAAa5Z,KAAK0E,MAAMlB,QAAQgI,mBAChCqO,EAAe7Z,KAAK0E,MAAMlB,QAAQiI,oBAChC1E,EAAShF,EAAIgF,OAEb+S,EAAa9Z,KAAK0E,MAAMlB,QAAQuW,gBAChCC,EAAmB,GAEvBha,KAAKia,oBACLja,KAAKia,mBAAmBC,uBACiC,IAAzDla,KAAKia,mBAAmBC,sBAAsBzb,QAE9CuB,KAAKia,mBAAmBC,sBAAsB1Y,QAAO,SAAC2Y,GACpDH,EAAiB/a,KAAKkb,SAGtBC,EAAa,GACc,GAA3BJ,EAAiBvb,SACnB2b,EAAgBN,EAAU,IAAIE,EAAiBvI,KAAK,UAGhD4I,EAAgBtT,EAAOrF,OAAM,SAAC4Y,GAAO,OAAAA,EAAI3S,UACzC4S,EAAkBxT,EAAOrF,OAAM,SAAC4Y,GAAO,OAACA,EAAI3S,UAErB,IAAzB0S,EAAc5b,SAChBmb,EAAa,IAEgB,IAA3BW,EAAgB9b,SAClBob,EAAe,QAGbW,EAAY,GACZC,EAAe,GAGjBA,EAFEJ,EAAc5b,OAAS8b,EAAgB9b,QACzC+b,EAAeZ,EAAU,MAAMC,EAAY,IAC5BU,IAEfC,EAAeX,EAAY,MAAMD,EAAU,IAC5BS,OAGjB,IAAoB,IAAAK,EAAAtT,EAAAqT,GAAYE,EAAAD,EAAAlc,QAAAmc,EAAAhc,KAAAgc,EAAAD,EAAAlc,OAAE,CAA7B,IAAM8I,EAAKqT,EAAAjc,MACV4I,EAAMlH,KACRoa,GAAalT,EAAMlH,GAAK,0GAG5Boa,EAAYA,EAAUI,OAAO,EAAGJ,EAAU/b,OAAS,OAE/CmI,EAAO,QAAU7E,EAAIyX,eAAe3S,UAClCgU,EAAc9Y,EAAIyX,eAAelT,UAAU,cAAgB,GAG3DF,GAAS,UAFFyU,EAAY,GAAGC,QAAQ,GAAG/R,QAAQ,eAAgB,OAElC,IADjB8R,EAAY,GAAGC,QAAQ,GAAG/R,QAAQ,eAAgB,QACvBA,QAAQ,UAAW,IACtDlI,EAAU,GACVb,KAAKgL,eAAehG,SAAStG,QACgB,aAA3CsB,KAAKgL,eAAehG,SAAStG,MAAMiF,MACrC9C,EAAU,WAAab,KAAKgL,eAAehG,SAAStG,MAAMiF,KAExD3D,KAAKgL,eAAehG,SAAStG,MAAMqD,IAAIuD,KAAKsB,OAC9CA,EACE5G,KAAKgL,eAAehG,SAAStG,MAAMqD,IAAIuD,KAAKsB,OAC5C7E,EAAIyX,eAAe3S,UACf,GACA,QAAU9E,EAAIyX,eAAe3S,YAQvC,QAJI9G,EAAM,GAAGsZ,SAASC,OACpBD,SAASE,SAAQ,IACf1Y,EAAO,IAAI+F,EAAI,IAAIR,EAAM,IAAIoU,EAAS,IAAIf,EAAG,IAAIW,EAE5C9b,EAAI,EAAGA,EAAI,EAAGA,IAErByB,GADAA,EAAMA,EAAIgJ,QAAQ,MAAO,MACfgS,SAAS,KAAOhb,EAAIib,MAAM,GAAI,GAAKjb,EAK/C,OAFAA,GADAA,EAAMA,EAAIgb,SAAS,KAAOhb,EAAIib,MAAM,GAAI,GAAKjb,GACnCgJ,QAAQ,KAAM,4BA5H3Bc,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,qDANSI,EAAAA,qBAGdvK,SAH6BwQ,EAAAA,sBACrB6K,EAAAA,mBAAkB5Q,WAAA,CAAA,CAAAnH,KAc9BoH,EAAAA,kBAfIF,EAAAA,aAAYC,WAAA,CAAA,CAAAnH,KAgBhBoH,EAAAA,sPALH,SAAAwO,GACUvO,EACAS,EACAmE,EACY8K,EACAvV,GAJZ1E,KAAAuK,OAAAA,EACAvK,KAAAgL,eAAAA,EACAhL,KAAAmP,eAAAA,EACYnP,KAAAia,mBAAAA,EACAja,KAAA0E,MAAAA,EAEpB1E,KAAKkZ,OAASlZ,KAAKuK,OAAOE,UAAU,eCpBxC,IAAAyQ,IAkBE7Z,OAAAuJ,eACIsQ,GAAArb,UAAA,MAAG,KADP,WAEE,OAAOG,KAAKmV,UAEd,SAAQzW,GACNsB,KAAKmV,KAAOzW,mCAId2C,OAAAuJ,eACIsQ,GAAArb,UAAA,oBAAiB,KADrB,WAEE,OAAOG,KAAKmb,wBAEd,SAAsBzc,GACpBsB,KAAKmb,mBAAqBzc,mCAI5B2C,OAAAuJ,eACIsQ,GAAArb,UAAA,oBAAiB,KADrB,WAEE,OAAOG,KAAKob,wBAEd,SAAsB1c,GACpBsB,KAAKob,mBAAqB1c,mCAuB5Bwc,GAAArb,UAAAiL,SAAA,WAAA,IAAAxK,EAAAN,KACEA,KAAKyQ,KAAK/F,cAAc7G,UAAS,SAAC4M,OAC1B2G,EAAc9W,EAAKmQ,KAAK2G,cAC9B9W,EAAK+a,OAASjE,EAAYC,KAAOD,EAAYC,KAAKjX,GAAKoE,UACvDlE,EAAKP,IAAMyE,UACXlE,EAAKyQ,eAITmK,GAAArb,UAAAyb,gBAAA,WACOtb,KAAKub,QACRvb,KAAKwb,YAIFN,GAAArb,UAAA4b,qBAAP,WACE,SAAIzb,KAAK0b,iBAAiBC,SAAW3b,KAAK0b,iBAAiBE,aACzD5b,KAAK0b,iBAAiBG,aAAe7b,KAAK0b,iBAAiBI,eACzD9b,KAAKiZ,kBAAkBS,kBAAkBC,YAAc,GACnD3Z,KAAK0b,iBAAiBC,UACxB3b,KAAKiZ,kBAAkBS,kBAAkBC,aAAe,SAAW3Z,KAAK0b,iBAAiBC,SAEvF3b,KAAK0b,iBAAiBE,cACxB5b,KAAKiZ,kBAAkBS,kBAAkBC,aAAe,WAEtD3Z,KAAK0b,iBAAiBG,cACxB7b,KAAKiZ,kBAAkBS,kBAAkBC,aAAe,WAEtD3Z,KAAK0b,iBAAiBI,cACxB9b,KAAKiZ,kBAAkBS,kBAAkBC,aAAe,YAEnD,IAKbuB,GAAArb,UAAA2b,SAAA,SAASO,QAAA,IAAAA,IAAAA,EAAA,IACP/b,KAAKyb,2BACCvK,EAAS7P,OAAOmE,OAAO,GAAIuW,GACjC7K,EAAOvN,IAAM3D,KAAKqb,OAAYrb,KAAKqb,OAAM,IAAIU,EAAOpY,IAAQoY,EAAOpY,IACnE3D,KAAKD,IAAMC,KAAKgc,gBAAgBjD,OAAO/Y,KAAK+B,IAAKmP,EAAQlR,KAAKiZ,oBAGhEiC,GAAArb,UAAAoc,oBAAA,SAAoBC,GAElB,GADmBC,EAAAA,UAAUC,KAAKF,GAClB,KACR/S,EAAYnJ,KAAKkJ,gBAAgBC,UACjC1C,EAAQ0C,EAAUC,QACtB,yCAEIiT,EAAMlT,EAAUC,QAAQ,uCAC9BpJ,KAAKmP,eAAeC,QAAQiN,EAAK5V,KAI7ByU,GAAArb,UAAAkR,UAAR,eACQ3Q,EAAKoG,EAAAA,OACPC,EAAQ,WACZA,GAASzG,KAAKqb,OAAS,IAAIrb,KAAKqb,OAAM,IAAIjb,EAAE,IAAM,IAAIA,EAAE,IACxDJ,KAAK0R,KAAO1R,KAAK2R,YAAYC,MAAM,CACjCnL,MAAO,CAACA,GACR9C,IAAK,CAACvD,2BAnHXuN,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,gBACVuC,SAAA,8rFAROzD,EAAAA,qBAA+BD,EAAAA,uBAAhBkG,EAAAA,sBACfnG,EAAAA,mBAGA6O,UAPAjH,EAAAA,mBAKQyK,EAAAA,kDAYdxO,EAAAA,iCASAA,EAAAA,iCASAA,EAAAA,SA4FHoN,IA5EE,SAAAA,GACU3Q,EACArB,EACAiG,EACAsB,EACAuL,EACArK,EACA+J,GANA1b,KAAAuK,OAAAA,EACAvK,KAAAkJ,gBAAAA,EACAlJ,KAAAmP,eAAAA,EACAnP,KAAAyQ,KAAAA,EACAzQ,KAAAgc,gBAAAA,EACAhc,KAAA2R,YAAAA,EACA3R,KAAA0b,iBAAAA,EAzBF1b,KAAAmb,oBAAqB,EASrBnb,KAAAob,oBAAqB,EAGtBpb,KAAAub,QAAS,EAETvb,KAAAiZ,kBAAoB,CACzBS,kBAAmB,CAAEC,YAAa,KAYlC3Z,KAAKub,SAASvb,KAAKuK,OAAOE,UAAU,eC7DxC,IAAA8R,IAoBEA,GAAA1c,UAAAiL,SAAA,WACE9K,KAAKwc,cAGCD,GAAA1c,UAAA2c,WAAR,WAAA,IAAAlc,EAAAN,KAEIA,KAAK0E,QACJ1E,KAAK0E,MAAMlB,QAAQiZ,SAAWzc,KAAK0E,MAAMlB,QAAQkZ,SAChD1c,KAAK0E,MAAMlB,QAAQmZ,SAAW3c,KAAK0E,MAAMlB,QAAQmZ,UACnD3c,KAAK0E,MAAME,YAAYf,UAAS,SAACiB,OAEzB8X,EAAiB9X,EAAOxE,EAAKoE,MAAMlB,QAAe,SAClDqZ,EAAqB/X,EAAOxE,EAAKoE,MAAMlB,QAAe,SACtDsZ,EAAqBhY,EAAOxE,EAAKoE,MAAMlB,QAAe,SACtDuZ,EAAqBjY,EAAOxE,EAAKoE,MAAMlB,QAAe,SACxDoZ,IAAmBtc,EAAKob,iBAAiBsB,qBAC3C1c,EAAKob,iBAAiBC,QAAUiB,EAChCtc,EAAKob,iBAAiBsB,oBAAqB,GAEzCH,IAAuBvc,EAAKob,iBAAiBuB,yBAC/C3c,EAAKob,iBAAiBE,YAAqC,MAAvBiB,EACpCvc,EAAKob,iBAAiBuB,wBAAyB,GAE7CH,IAAuBxc,EAAKob,iBAAiBwB,yBAC/C5c,EAAKob,iBAAiBG,YAAqC,MAAvBiB,EACpCxc,EAAKob,iBAAiBwB,wBAAyB,GAE7CH,IAAuBzc,EAAKob,iBAAiByB,yBAC/C7c,EAAKob,iBAAiBI,YAAqC,MAAvBiB,EACpCzc,EAAKob,iBAAiByB,wBAAyB,GAE5C7c,EAAKuK,UAAU0Q,QAClBjb,EAAKuK,UAAU2Q,mCA9CxBpQ,EAAAA,UAAStB,KAAA,CAAC,CACTuB,SAAU,qEAJH6P,GAAiB7Q,WAAA,CAAA,CAAAnH,KAUrB+M,EAAAA,cAXIqM,EAAAA,wBAEAlS,EAAAA,aAAYC,WAAA,CAAA,CAAAnH,KAWhBoH,EAAAA,cA0CLiS,IA7CE,SAAAA,GACU1R,EACA6Q,EACYhX,GADZ1E,KAAA0b,iBAAAA,EACY1b,KAAA0E,MAAAA,EAEpB1E,KAAK6K,UAAYA,ECjBrB,IAAAuS,IAgCSA,GAAA5J,QAAP,WACE,MAAO,CACLC,SAAU2J,0BAlBf1J,EAAAA,SAAQ5J,KAAA,CAAC,CACR6J,QAAS,CACPC,EAAAA,aACAC,EAAAA,YACAC,EAAAA,oBACAG,EAAAA,cACAE,EAAAA,iBACAJ,EAAAA,mBACAC,EAAAA,eACAE,EAAAA,gBACAU,EAAAA,mBAEFC,QAAS,CAACqG,GAAmBqB,IAC7BzH,aAAc,CAACoG,GAAmBqB,QAQpCa,IArBA,SAAAA,MChBA,IAAAC,IAgBEhc,OAAAuJ,eACIyS,GAAAxd,UAAA,MAAG,KADP,WAEE,OAAOG,KAAKmV,UAEd,SAAQzW,GACNsB,KAAKmV,KAAOzW,mCAGd2C,OAAAuJ,eACIyS,GAAAxd,UAAA,SAAM,KADV,WAEE,OAAOG,KAAKsd,aAEd,SAAW5e,GACTsB,KAAKsd,QAAU5e,mCAIjB2C,OAAAuJ,eACIyS,GAAAxd,UAAA,UAAO,KADX,WAEE,OAAOG,KAAKud,cAEd,SAAY7e,GACVsB,KAAKud,SAAW7e,mCAIlB2C,OAAAuJ,eACIyS,GAAAxd,UAAA,OAAI,KADR,WAEE,OAAOG,KAAKwd,WAEd,SAAS9e,GACPsB,KAAKwd,MAAQ9e,mCAIf2C,OAAAuJ,eACIyS,GAAAxd,UAAA,QAAK,KADT,WAEE,OAAOG,KAAKyd,YAEd,SAAU/e,GACRsB,KAAKyd,OAAS/e,mCAIhB2C,OAAAuJ,eACIyS,GAAAxd,UAAA,QAAK,KADT,WAEE,OAAOG,KAAK0d,YAEd,SAAUhf,GACJA,IACFsB,KAAK0d,OAAShf,oCAOlB2C,OAAAuJ,eAAIyS,GAAAxd,UAAA,eAAY,KAAhB,WACE,OAAOG,KAAK2d,QAAUC,EAAAA,eAAe5d,KAAK2d,SAAWnZ,2CAKvD6Y,GAAAxd,UAAAge,oBAAA,WACE,GAAI7d,KAAK2d,QAAQG,SAAU,KACnBC,EAAY/d,KAAKge,OAAOC,YAAYje,KAAK2d,QAAS,CACtDO,eAAgBle,KAAK2d,QAAQ7W,WAC7BqX,kBAAmBne,KAAK+B,IAAI+E,aAE9BsX,EAAAA,iBAAiBpe,KAAK+B,IAAK,CAACgc,GAAYM,EAAAA,cAAcC,QAI1DjB,GAAAxd,UAAA0e,eAAA,WAC6B,YAAvBve,KAAKwe,cACPxe,KAAKwe,cAAgB,WAErBxe,KAAKwe,cAAgB,gCApF1B7Q,EAAAA,UAAS7D,KAAA,CAAC,CACTuB,SAAU,cACVuC,SAAA,+gHAVO6Q,EAAAA,uCAeN3Q,EAAAA,sBAQAA,EAAAA,uBASAA,EAAAA,oBASAA,EAAAA,qBASAA,EAAAA,qBASAA,EAAAA,SAqCHuP,IApBE,SAAAA,GAAmBqB,GAAA1e,KAAA0e,aAAAA,EA9DX1e,KAAAge,OAAS,IAAIW,EAsDb3e,KAAA0d,OAAiB1d,KAAK0e,aAAaE,WAEpC5e,KAAAwe,cAA+B,UCvExC,IAAAK,IAiCSA,GAAArL,QAAP,WACE,MAAO,CACLC,SAAUoL,0BAnBfnL,EAAAA,SAAQ5J,KAAA,CAAC,CACR6J,QAAS,CACPC,EAAAA,aACAK,EAAAA,cACAC,EAAAA,gBACA4K,EAAAA,iBACA3K,EAAAA,iBACAS,EAAAA,kBACAmK,EAAAA,eACAC,EAAAA,kBACAC,EAAAA,iBACA1L,GAEFsB,QAAS,CAACwI,IACVvI,aAAc,CAACuI,QAQjBwB,IAtBA,SAAAA,MChBA,IAAAK,IAkBSA,GAAA1L,QAAP,WACE,MAAO,CACLC,SAAUyL,GACVrG,UAAW,0BAdhBnF,EAAAA,SAAQ5J,KAAA,CAAC,CACR6J,QAAS,GACTmB,aAAc,GACdD,QAAS,CACPtB,EACAgF,GACA6E,GACAyB,QAUJK,IAjBA,SAAAA","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TypePermission {\r\n  null,\r\n  read,\r\n  write\r\n}\r\n\r\nexport enum Scope {\r\n  public,\r\n  protected,\r\n  private\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, tap, catchError, debounceTime } from 'rxjs/operators';\r\n\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport { Tool } from '@igo2/common';\r\nimport { uuid } from '@igo2/utils';\r\nimport {\r\n  ConfigService,\r\n  RouteService,\r\n  Message,\r\n  LanguageService\r\n} from '@igo2/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { TypePermission } from './context.enum';\r\nimport {\r\n  ContextsList,\r\n  ContextServiceOptions,\r\n  Context,\r\n  DetailedContext,\r\n  ContextMapView,\r\n  ContextPermission\r\n} from './context.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContextService {\r\n  public context$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  public contexts$ = new BehaviorSubject<ContextsList>({ ours: [] });\r\n  public defaultContextId$ = new BehaviorSubject<string>(undefined);\r\n  public editedContext$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  private mapViewFromRoute: ContextMapView = {};\r\n  private options: ContextServiceOptions;\r\n  private baseUrl: string;\r\n\r\n  // Until the ContextService is completely refactored, this is needed\r\n  // to track the current tools\r\n  private tools: Tool[];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private languageService: LanguageService,\r\n    private config: ConfigService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.options = Object.assign(\r\n      {\r\n        basePath: 'contexts',\r\n        contextListFile: '_contexts.json',\r\n        defaultContextUri: '_default'\r\n      },\r\n      this.config.getConfig('context')\r\n    );\r\n\r\n    this.baseUrl = this.options.url;\r\n\r\n    this.readParamsFromRoute();\r\n\r\n    this.authService.authenticate$.subscribe(authenticated => {\r\n      if (authenticated === null) {\r\n        this.loadDefaultContext();\r\n        return;\r\n      }\r\n      const contexts$$ = this.contexts$.subscribe(contexts => {\r\n        if (contexts$$) {\r\n          contexts$$.unsubscribe();\r\n          this.handleContextsChange(contexts);\r\n        }\r\n      });\r\n      this.loadContexts();\r\n    });\r\n  }\r\n\r\n  get(): Observable<ContextsList> {\r\n    const url = this.baseUrl + '/contexts';\r\n    return this.http.get<ContextsList>(url);\r\n  }\r\n\r\n  getById(id: string): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.get<Context>(url);\r\n  }\r\n\r\n  getDetails(id: string): Observable<DetailedContext> {\r\n    const url = `${this.baseUrl}/contexts/${id}/details`;\r\n    return this.http\r\n      .get<DetailedContext>(url)\r\n      .pipe(catchError(res => this.handleError(res, id)));\r\n  }\r\n\r\n  getDefault(): Observable<DetailedContext> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      tap(context => {\r\n        this.defaultContextId$.next(context.id);\r\n      })\r\n    );\r\n  }\r\n\r\n  setDefault(id: string): Observable<any> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.post(url, { defaultContextId: id });\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.delete<void>(url).pipe(\r\n      tap(res => {\r\n        const contexts: ContextsList = { ours: [] };\r\n        Object.keys(this.contexts$.value).forEach(\r\n          key =>\r\n            (contexts[key] = this.contexts$.value[key].filter(c => c.id !== id))\r\n        );\r\n        this.contexts$.next(contexts);\r\n      })\r\n    );\r\n  }\r\n\r\n  create(context: DetailedContext): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts';\r\n    return this.http.post<Context>(url, JSON.stringify(context)).pipe(\r\n      map(contextCreated => {\r\n        if (this.authService.authenticated) {\r\n          contextCreated.permission = TypePermission[TypePermission.write];\r\n        } else {\r\n          contextCreated.permission = TypePermission[TypePermission.read];\r\n        }\r\n        this.contexts$.value.ours.push(contextCreated);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCreated;\r\n      })\r\n    );\r\n  }\r\n\r\n  clone(id: string, properties = {}): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/clone';\r\n    return this.http.post<Context>(url, JSON.stringify(properties)).pipe(\r\n      map(contextCloned => {\r\n        contextCloned.permission = TypePermission[TypePermission.write];\r\n        this.contexts$.value.ours.push(contextCloned);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCloned;\r\n      })\r\n    );\r\n  }\r\n\r\n  update(id: string, context: Context): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.patch<Context>(url, JSON.stringify(context));\r\n  }\r\n\r\n  // =================================================================\r\n\r\n  addToolAssociation(contextId: string, toolId: string): Observable<void> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools`;\r\n    const association = {\r\n      toolId\r\n    };\r\n    return this.http.post<void>(url, JSON.stringify(association));\r\n  }\r\n\r\n  deleteToolAssociation(contextId: string, toolId: string): Observable<any> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools/${toolId}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  getPermissions(id: string): Observable<ContextPermission[]> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/permissions';\r\n    return this.http.get<ContextPermission[]>(url);\r\n  }\r\n\r\n  addPermissionAssociation(\r\n    contextId: string,\r\n    profil: string,\r\n    type: TypePermission\r\n  ): Observable<ContextPermission[]> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/permissions`;\r\n    const association = {\r\n      profil,\r\n      typePermission: type\r\n    };\r\n    return this.http.post<ContextPermission[]>(\r\n      url,\r\n      JSON.stringify(association)\r\n    );\r\n  }\r\n\r\n  deletePermissionAssociation(\r\n    contextId: string,\r\n    permissionId: string\r\n  ): Observable<void> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }/contexts/${contextId}/permissions/${permissionId}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  // ======================================================================\r\n\r\n  getLocalContexts(): Observable<ContextsList> {\r\n    const url = this.getPath(this.options.contextListFile);\r\n    return this.http.get<ContextsList>(url).pipe(\r\n      map((res: any) => {\r\n        return { ours: res };\r\n      })\r\n    );\r\n  }\r\n\r\n  getLocalContext(uri): Observable<DetailedContext> {\r\n    const url = this.getPath(`${uri}.json`);\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      catchError(res => {\r\n        return this.handleError(res, uri);\r\n      })\r\n    );\r\n  }\r\n\r\n  loadContexts() {\r\n    let request;\r\n    if (this.baseUrl) {\r\n      request = this.get();\r\n    } else {\r\n      request = this.getLocalContexts();\r\n    }\r\n    request.subscribe(contexts => {\r\n      const publicsContexts = this.contexts$.value.public;\r\n\r\n      if (publicsContexts) {\r\n        const contextUri = publicsContexts.find(\r\n          c => c.uri === this.options.defaultContextUri\r\n        );\r\n        if (contextUri) {\r\n          if (!contexts.public) {\r\n            contexts.public = [];\r\n          }\r\n          contexts.public.push(contextUri);\r\n        }\r\n      }\r\n      this.contexts$.next(contexts);\r\n    });\r\n  }\r\n\r\n  loadDefaultContext() {\r\n    const loadFct = (direct = false) => {\r\n      if (!direct && this.baseUrl && this.authService.authenticated) {\r\n        this.getDefault().subscribe(\r\n          (_context: DetailedContext) => {\r\n            this.options.defaultContextUri = _context.uri;\r\n            this.addContextToList(_context);\r\n            this.setContext(_context);\r\n          },\r\n          () => {\r\n            this.defaultContextId$.next(undefined);\r\n            this.loadContext(this.options.defaultContextUri);\r\n          }\r\n        );\r\n      } else {\r\n        this.loadContext(this.options.defaultContextUri);\r\n      }\r\n    };\r\n\r\n    if (this.route && this.route.options.contextKey) {\r\n      this.route.queryParams.pipe(debounceTime(100)).subscribe(params => {\r\n        const contextParam = params[this.route.options.contextKey as string];\r\n        let direct = false;\r\n        if (contextParam) {\r\n          this.options.defaultContextUri = contextParam;\r\n          direct = true;\r\n        }\r\n        loadFct(direct);\r\n      });\r\n    } else {\r\n      loadFct();\r\n    }\r\n  }\r\n\r\n  loadContext(uri: string) {\r\n    const context = this.context$.value;\r\n    if (context && context.uri === uri) {\r\n      return;\r\n    }\r\n\r\n    const contexts$$ = this.getContextByUri(uri).subscribe(\r\n      (_context: DetailedContext) => {\r\n        contexts$$.unsubscribe();\r\n        this.addContextToList(_context);\r\n        this.setContext(_context);\r\n      },\r\n      err => {\r\n        contexts$$.unsubscribe();\r\n      }\r\n    );\r\n  }\r\n\r\n  setContext(context: DetailedContext) {\r\n    const currentContext = this.context$.value;\r\n    if (currentContext && context && context.id === currentContext.id) {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      return;\r\n    }\r\n\r\n    if (!context.map) {\r\n      context.map = { view: {} };\r\n    }\r\n\r\n    Object.assign(context.map.view, this.mapViewFromRoute);\r\n\r\n    this.context$.next(context);\r\n  }\r\n\r\n  loadEditedContext(uri: string) {\r\n    this.getContextByUri(uri).subscribe((_context: DetailedContext) => {\r\n      this.setEditedContext(_context);\r\n    });\r\n  }\r\n\r\n  setEditedContext(context: DetailedContext) {\r\n    this.editedContext$.next(context);\r\n  }\r\n\r\n  getContextFromMap(igoMap: IgoMap): DetailedContext {\r\n    const view = igoMap.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const context = {\r\n      uri: uuid(),\r\n      title: '',\r\n      scope: 'private',\r\n      map: {\r\n        view: {\r\n          center: center.getCoordinates(),\r\n          zoom: view.getZoom(),\r\n          projection: proj\r\n        }\r\n      },\r\n      layers: [],\r\n      tools: []\r\n    };\r\n\r\n    const layers = igoMap.layers$.getValue();\r\n\r\n    for (const l of layers) {\r\n      const layer: any = l;\r\n      const opts = {\r\n        id: layer.options.id ? String(layer.options.id) : undefined,\r\n        layerOptions: {\r\n          title: layer.options.title,\r\n          zIndex: layer.zIndex,\r\n          visible: layer.visible\r\n        },\r\n        sourceOptions: {\r\n          type: layer.dataSource.options.type,\r\n          params: layer.dataSource.options.params,\r\n          url: layer.dataSource.options.url\r\n        }\r\n      };\r\n      context.layers.push(opts);\r\n    }\r\n\r\n    context.tools = this.tools.map(tool => {\r\n      return { id: String(tool.id) };\r\n    });\r\n\r\n    return context;\r\n  }\r\n\r\n  setTools(tools: Tool[]) {\r\n    this.tools = tools;\r\n  }\r\n\r\n  private getContextByUri(uri: string): Observable<DetailedContext> {\r\n    if (this.baseUrl) {\r\n      let contextToLoad;\r\n      for (const key of Object.keys(this.contexts$.value)) {\r\n        contextToLoad = this.contexts$.value[key].find(c => {\r\n          return c.uri === uri;\r\n        });\r\n        if (contextToLoad) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // TODO : use always id or uri\r\n      const id = contextToLoad ? contextToLoad.id : uri;\r\n      return this.getDetails(id);\r\n    }\r\n\r\n    return this.getLocalContext(uri);\r\n  }\r\n\r\n  private readParamsFromRoute() {\r\n    if (!this.route) {\r\n      return;\r\n    }\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const centerKey = this.route.options.centerKey;\r\n      if (centerKey && params[centerKey as string]) {\r\n        const centerParams = params[centerKey as string];\r\n        this.mapViewFromRoute.center = centerParams.split(',').map(Number);\r\n        this.mapViewFromRoute.geolocate = false;\r\n      }\r\n\r\n      const projectionKey = this.route.options.projectionKey;\r\n      if (projectionKey && params[projectionKey as string]) {\r\n        const projectionParam = params[projectionKey as string];\r\n        this.mapViewFromRoute.projection = projectionParam;\r\n      }\r\n\r\n      const zoomKey = this.route.options.zoomKey;\r\n      if (zoomKey && params[zoomKey as string]) {\r\n        const zoomParam = params[zoomKey as string];\r\n        this.mapViewFromRoute.zoom = Number(zoomParam);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getPath(file: string) {\r\n    const basePath = this.options.basePath.replace(/\\/$/, '');\r\n\r\n    return `${basePath}/${file}`;\r\n  }\r\n\r\n  private handleError(res: Response, uri: string): Message[] {\r\n    const context = this.contexts$.value.ours.find(obj => obj.uri === uri);\r\n    const titleContext = context ? context.title : uri;\r\n    const titleError = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.title'\r\n    );\r\n\r\n    const textError = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.text',\r\n      { value: titleContext }\r\n    );\r\n\r\n    throw [{ title: titleError, text: textError }];\r\n  }\r\n\r\n  private handleContextsChange(\r\n    contexts: ContextsList,\r\n    keepCurrentContext = false\r\n  ) {\r\n    const context = this.context$.value;\r\n    const editedContext = this.editedContext$.value;\r\n\r\n    if (!keepCurrentContext || !this.findContext(context)) {\r\n      this.loadDefaultContext();\r\n    } else {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      this.getDefault().subscribe(() => {});\r\n    }\r\n    const editedFound = this.findContext(editedContext);\r\n    if (!editedFound || editedFound.permission !== 'write') {\r\n      this.setEditedContext(undefined);\r\n    }\r\n  }\r\n\r\n  private addContextToList(context: Context) {\r\n    const contextFound = this.findContext(context);\r\n    if (!contextFound) {\r\n      const contextSimplifie = {\r\n        id: context.id,\r\n        uri: context.uri,\r\n        title: context.title,\r\n        scope: context.scope,\r\n        permission: TypePermission[TypePermission.read]\r\n      };\r\n      if (this.contexts$.value && this.contexts$.value.public) {\r\n        this.contexts$.value.public.push(contextSimplifie);\r\n        this.contexts$.next(this.contexts$.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  private findContext(context: Context) {\r\n    if (!context || !context.id) {\r\n      return false;\r\n    }\r\n\r\n    const contexts = this.contexts$.value;\r\n    let found;\r\n    for (const key of Object.keys(contexts)) {\r\n      const value = contexts[key];\r\n      found = value.find(c => c.id === context.id);\r\n      if (found) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n}\r\n","import { Directive, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { IgoMap, MapViewOptions, MapBrowserComponent } from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext, ContextMapView } from './context.interface';\r\n\r\n@Directive({\r\n  selector: '[igoMapContext]'\r\n})\r\nexport class MapContextDirective implements OnInit, OnDestroy {\r\n  private component: MapBrowserComponent;\r\n  private context$$: Subscription;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    component: MapBrowserComponent,\r\n    private contextService: ContextService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter(context => context !== undefined))\r\n      .subscribe(context => this.handleContextChange(context));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.map === undefined) {\r\n      return;\r\n    }\r\n\r\n    // This creates a new ol.Map when the context changes. Doing that\r\n    // allows the print tool to work properly even when the map's canvas\r\n    // has been tainted (CORS) with the layers of another context. This could\r\n    // have some side effects such as unbinding all listeners on the first map.\r\n    // A better solution would be to create a new map (preview) before\r\n    // printing and avoid the tainted canvas issue. This will come later so\r\n    // this snippet of code is kept here in case it takes too long becomes\r\n    // an issue\r\n\r\n    // const target = this.component.map.ol.getTarget();\r\n    // this.component.map.ol.setTarget(undefined);\r\n    // this.component.map.init();\r\n    // this.component.map.ol.setTarget(target);\r\n\r\n    const viewContext: ContextMapView = context.map.view;\r\n    if (viewContext.keepCurrentView !== true) {\r\n      this.component.view = viewContext as MapViewOptions;\r\n    }\r\n  }\r\n}\r\n","import { Directive, OnInit, OnDestroy, Optional } from '@angular/core';\r\n\r\nimport { Subscription, of, zip } from 'rxjs';\r\nimport { withLatestFrom, skip, filter } from 'rxjs/operators';\r\n\r\nimport { RouteService } from '@igo2/core';\r\nimport {\r\n  IgoMap,\r\n  MapBrowserComponent,\r\n  Layer,\r\n  LayerService,\r\n  LayerOptions\r\n} from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext } from './context.interface';\r\n\r\n@Directive({\r\n  selector: '[igoLayerContext]'\r\n})\r\nexport class LayerContextDirective implements OnInit, OnDestroy {\r\n\r\n  private context$$: Subscription;\r\n  private queryParams: any;\r\n\r\n  private contextLayers: Layer[] = [];\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    private component: MapBrowserComponent,\r\n    private contextService: ContextService,\r\n    private layerService: LayerService,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter(context => context !== undefined))\r\n      .subscribe(context => this.handleContextChange(context));\r\n\r\n    if (\r\n      this.route &&\r\n      this.route.options.visibleOnLayersKey &&\r\n      this.route.options.visibleOffLayersKey &&\r\n      this.route.options.contextKey\r\n    ) {\r\n      const queryParams$$ = this.route.queryParams\r\n        .pipe(skip(1))\r\n        .subscribe(params => {\r\n          this.queryParams = params;\r\n          queryParams$$.unsubscribe();\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.layers === undefined) { return; }\r\n\r\n    this.map.removeLayers(this.contextLayers);\r\n    this.contextLayers = [];\r\n\r\n    const layersAndIndex$ = zip(...context.layers.map((layerOptions: LayerOptions, index: number) => {\r\n      return this.layerService.createAsyncLayer(layerOptions).pipe(\r\n        withLatestFrom(of(index))\r\n      );\r\n    }));\r\n\r\n    layersAndIndex$.subscribe((layersAndIndex: [Layer, number][]) => {\r\n      const layers = layersAndIndex.reduce((acc: Layer[], bunch: [Layer, number]) => {\r\n        const [layer, index] = bunch;\r\n        layer.visible = this.computeLayerVisibilityFromUrl(layer);\r\n        layer.zIndex = layer.zIndex || index + 1;  // Map indexes start at 1\r\n        acc[index] = layer;\r\n        return acc;\r\n      }, new Array(layersAndIndex.length));\r\n      this.contextLayers = layers;\r\n      this.map.addLayers(layers);\r\n    });\r\n  }\r\n\r\n  private computeLayerVisibilityFromUrl(layer: Layer): boolean {\r\n    const params = this.queryParams;\r\n    const currentContext = this.contextService.context$.value.uri;\r\n    const currentLayerid: string = layer.id;\r\n\r\n    let visible = layer.visible;\r\n    if (!params || !currentLayerid) {\r\n      return visible;\r\n    }\r\n\r\n    const contextParams = params[this.route.options.contextKey as string];\r\n    if (contextParams === currentContext || !contextParams) {\r\n      let visibleOnLayersParams = '';\r\n      let visibleOffLayersParams = '';\r\n      let visiblelayers: string[] = [];\r\n      let invisiblelayers: string[] = [];\r\n\r\n      if (\r\n        this.route.options.visibleOnLayersKey &&\r\n        params[this.route.options.visibleOnLayersKey as string]\r\n      ) {\r\n        visibleOnLayersParams =\r\n          params[this.route.options.visibleOnLayersKey as string];\r\n      }\r\n      if (\r\n        this.route.options.visibleOffLayersKey &&\r\n        params[this.route.options.visibleOffLayersKey as string]\r\n      ) {\r\n        visibleOffLayersParams =\r\n          params[this.route.options.visibleOffLayersKey as string];\r\n      }\r\n\r\n      /* This order is important because to control whichever\r\n       the order of * param. First whe open and close everything.*/\r\n      if (visibleOnLayersParams === '*') {\r\n        visible = true;\r\n      }\r\n      if (visibleOffLayersParams === '*') {\r\n        visible = false;\r\n      }\r\n\r\n      // After, managing named layer by id (context.json OR id from datasource)\r\n      visiblelayers = visibleOnLayersParams.split(',');\r\n      invisiblelayers = visibleOffLayersParams.split(',');\r\n      if (visiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = true;\r\n      }\r\n      if (invisiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = false;\r\n      }\r\n    }\r\n\r\n    return visible;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { DetailedContext, ContextsList } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-list',\r\n  templateUrl: './context-list.component.html'\r\n})\r\nexport class ContextListComponent {\r\n  @Input()\r\n  get contexts(): ContextsList {\r\n    return this._contexts;\r\n  }\r\n  set contexts(value: ContextsList) {\r\n    this._contexts = value;\r\n  }\r\n  private _contexts: ContextsList = { ours: [] };\r\n\r\n  @Input()\r\n  get selectedContext(): DetailedContext {\r\n    return this._selectedContext;\r\n  }\r\n  set selectedContext(value: DetailedContext) {\r\n    this._selectedContext = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _selectedContext: DetailedContext;\r\n\r\n  @Input()\r\n  get defaultContextId(): string {\r\n    return this._defaultContextId;\r\n  }\r\n  set defaultContextId(value: string) {\r\n    this._defaultContextId = value;\r\n  }\r\n  private _defaultContextId: string;\r\n\r\n  @Output() select = new EventEmitter<DetailedContext>();\r\n  @Output() unselect = new EventEmitter<DetailedContext>();\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n\r\n  public titleMapping = {\r\n    ours: 'igo.context.contextManager.ourContexts',\r\n    shared: 'igo.context.contextManager.sharedContexts',\r\n    public: 'igo.context.contextManager.publicContexts'\r\n  };\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { MapService } from '@igo2/geo';\r\n\r\nimport {\r\n  Context,\r\n  DetailedContext,\r\n  ContextsList\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextListComponent } from './context-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextListBinding]'\r\n})\r\nexport class ContextListBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextListComponent;\r\n  private contexts$$: Subscription;\r\n  private selectedContext$$: Subscription;\r\n  private defaultContextId$$: Subscription;\r\n\r\n  @HostListener('select', ['$event'])\r\n  onSelect(context: Context) {\r\n    this.contextService.loadContext(context.uri);\r\n  }\r\n\r\n  @HostListener('edit', ['$event'])\r\n  onEdit(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('save', ['$event'])\r\n  onSave(context: Context) {\r\n    const map = this.mapService.getMap();\r\n    const contextFromMap = this.contextService.getContextFromMap(map);\r\n\r\n    const changes: any = {\r\n      layers: contextFromMap.layers,\r\n      map: {\r\n        view: contextFromMap.map.view\r\n      }\r\n    };\r\n\r\n    this.contextService.update(context.id, changes).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.saveMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.saveTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('favorite', ['$event'])\r\n  onFavorite(context: Context) {\r\n    this.contextService.setDefault(context.id).subscribe(() => {\r\n      this.contextService.defaultContextId$.next(context.id);\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('manageTools', ['$event'])\r\n  onManageTools(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('managePermissions', ['$event'])\r\n  onManagePermissions(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('delete', ['$event'])\r\n  onDelete(context: Context) {\r\n    const translate = this.languageService.translate;\r\n    this.confirmDialogService\r\n      .open(\r\n        translate.instant('igo.context.contextManager.dialog.confirmDelete')\r\n      )\r\n      .subscribe(confirm => {\r\n        if (confirm) {\r\n          this.contextService.delete(context.id).subscribe(() => {\r\n            const message = translate.instant(\r\n              'igo.context.contextManager.dialog.deleteMsg',\r\n              {\r\n                value: context.title\r\n              }\r\n            );\r\n            const title = translate.instant(\r\n              'igo.context.contextManager.dialog.deleteTitle'\r\n            );\r\n            this.messageService.info(message, title);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  @HostListener('clone', ['$event'])\r\n  onClone(context: DetailedContext) {\r\n    const properties = {\r\n      title: context.title + '-copy',\r\n      uri: context.uri + '-copy'\r\n    };\r\n    this.contextService.clone(context.id, properties).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextListComponent,\r\n    private contextService: ContextService,\r\n    private mapService: MapService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input contexts\r\n    this.component.contexts = { ours: [] };\r\n\r\n    this.contexts$$ = this.contextService.contexts$.subscribe(contexts =>\r\n      this.handleContextsChange(contexts)\r\n    );\r\n\r\n    this.defaultContextId$$ = this.contextService.defaultContextId$.subscribe(\r\n      id => {\r\n        this.component.defaultContextId = id;\r\n      }\r\n    );\r\n\r\n    // See feature-list.component for an explanation about the debounce time\r\n    this.selectedContext$$ = this.contextService.context$\r\n      .pipe(debounceTime(100))\r\n      .subscribe(context => (this.component.selectedContext = context));\r\n\r\n    this.contextService.loadContexts();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contexts$$.unsubscribe();\r\n    this.selectedContext$$.unsubscribe();\r\n    this.defaultContextId$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextsChange(contexts: ContextsList) {\r\n    this.component.contexts = contexts;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { TypePermission } from '../shared/context.enum';\r\nimport { DetailedContext } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-item',\r\n  templateUrl: './context-item.component.html',\r\n  styleUrls: ['./context-item.component.scss']\r\n})\r\nexport class ContextItemComponent {\r\n  public typePermission = TypePermission;\r\n  public color = 'primary';\r\n  public collapsed = true;\r\n\r\n  @Input()\r\n  get context(): DetailedContext {\r\n    return this._context;\r\n  }\r\n  set context(value: DetailedContext) {\r\n    this._context = value;\r\n  }\r\n  private _context: DetailedContext;\r\n\r\n  @Input()\r\n  get default(): boolean {\r\n    return this._default;\r\n  }\r\n  set default(value: boolean) {\r\n    this._default = value;\r\n  }\r\n  private _default = false;\r\n\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n\r\n  constructor(public auth: AuthService) {}\r\n\r\n  favoriteClick(context) {\r\n    if (this.auth.authenticated) {\r\n      this.favorite.emit(context);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-form',\r\n  templateUrl: './context-form.component.html',\r\n  styleUrls: ['./context-form.component.scss']\r\n})\r\nexport class ContextFormComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public prefix: string;\r\n\r\n  @Input()\r\n  get btnSubmitText(): string {\r\n    return this._btnSubmitText;\r\n  }\r\n  set btnSubmitText(value: string) {\r\n    this._btnSubmitText = value;\r\n  }\r\n  private _btnSubmitText: string;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.buildForm();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled = false;\r\n\r\n  // TODO: replace any by ContextOptions or Context\r\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\r\n  @Output() clone: EventEmitter<any> = new EventEmitter();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    let inputs = Object.assign({}, value);\r\n    inputs = ObjectUtils.removeNull(inputs);\r\n    inputs.uri = inputs.uri.replace(' ', '');\r\n    if (inputs.uri) {\r\n      inputs.uri = this.prefix + '-' + inputs.uri;\r\n    } else {\r\n      inputs.uri = this.prefix;\r\n    }\r\n    this.submitForm.emit(inputs);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const context: any = this.context || {};\r\n\r\n    const uriSplit = context.uri.split('-');\r\n    this.prefix = uriSplit.shift();\r\n    const uri = uriSplit.join('-');\r\n\r\n    this.form = this.formBuilder.group({\r\n      title: [context.title],\r\n      uri: [uri || ' ']\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-edit',\r\n  templateUrl: './context-edit.component.html'\r\n})\r\nexport class ContextEditComponent {\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.refresh();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  refresh() {\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { Context, DetailedContext } from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextEditComponent } from './context-edit.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextEditBinding]'\r\n})\r\nexport class ContextEditBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextEditComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @HostListener('submitForm', ['$event'])\r\n  onEdit(context: Context) {\r\n    const id = this.component.context.id;\r\n    this.contextService.update(id, context).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant('igo.context.contextManager.dialog.saveMsg', {\r\n        value: context.title || this.component.context.title\r\n      });\r\n      const title = translate.instant('igo.context.contextManager.dialog.saveTitle');\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextEditComponent,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  ContextPermissionsList\r\n} from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-permissions',\r\n  templateUrl: './context-permissions.component.html',\r\n  styleUrls: ['./context-permissions.component.scss']\r\n})\r\nexport class ContextPermissionsComponent implements OnInit {\r\n  public form: FormGroup;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get permissions(): ContextPermissionsList {\r\n    return this._permissions;\r\n  }\r\n  set permissions(value: ContextPermissionsList) {\r\n    this._permissions = value;\r\n  }\r\n  private _permissions: ContextPermissionsList;\r\n\r\n  @Output() addPermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output()\r\n  removePermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output() scopeChanged: EventEmitter<Context> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    this.addPermission.emit(value);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      profil: [],\r\n      typePermission: ['read']\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  DetailedContext\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextPermissionsComponent } from './context-permissions.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextPermissionsBinding]'\r\n})\r\nexport class ContextPermissionsBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextPermissionsComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @HostListener('addPermission', ['$event'])\r\n  onAddPermission(permission: ContextPermission) {\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .addPermissionAssociation(\r\n        contextId,\r\n        permission.profil,\r\n        permission.typePermission\r\n      )\r\n      .subscribe(profils => {\r\n        for (const p of profils) {\r\n          this.component.permissions[permission.typePermission].push(p);\r\n        }\r\n        const profil = permission.profil;\r\n        const translate = this.languageService.translate;\r\n        const message = translate.instant('igo.context.permission.dialog.addMsg', {\r\n          value: profil\r\n        });\r\n        const title = translate.instant('igo.context.permission.dialog.addTitle');\r\n        this.messageService.success(message, title);\r\n      });\r\n  }\r\n\r\n  @HostListener('removePermission', ['$event'])\r\n  onRemovePermission(permission: ContextPermission) {\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .deletePermissionAssociation(contextId, permission.id)\r\n      .subscribe(() => {\r\n        const index = this.component.permissions[\r\n          permission.typePermission\r\n        ].findIndex(p => {\r\n          return p.id === permission.id;\r\n        });\r\n        this.component.permissions[permission.typePermission].splice(index, 1);\r\n\r\n        const profil = permission.profil;\r\n        const translate = this.languageService.translate;\r\n        const message = translate.instant('igo.context.permission.dialog.deleteMsg', {\r\n          value: profil\r\n        });\r\n        const title = translate.instant('igo.context.permission.dialog.deleteTitle');\r\n        this.messageService.success(message, title);\r\n      });\r\n  }\r\n\r\n  @HostListener('scopeChanged', ['$event'])\r\n  onScopeChanged(context: Context) {\r\n    const scope = context.scope;\r\n    this.contextService.update(context.id, { scope }).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedMsg',\r\n        {\r\n          value: translate.instant('igo.context.permission.scope.' + scope)\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextPermissionsComponent,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n\r\n    if (context) {\r\n      this.contextService\r\n        .getPermissions(context.id)\r\n        .subscribe(permissionsArray => {\r\n          permissionsArray = permissionsArray || [];\r\n          const permissions = {\r\n            read: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'read';\r\n            }),\r\n            write: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'write';\r\n            })\r\n          };\r\n          return (this.component.permissions = permissions);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule\r\n} from '@angular/material';\r\n\r\nimport { IgoAuthModule } from '@igo2/auth';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoListModule,\r\n  IgoKeyValueModule,\r\n  IgoCollapsibleModule,\r\n  IgoStopPropagationModule\r\n} from '@igo2/common';\r\n\r\nimport { MapContextDirective } from './shared/map-context.directive';\r\nimport { LayerContextDirective } from './shared/layer-context.directive';\r\nimport { ContextListComponent } from './context-list/context-list.component';\r\nimport { ContextListBindingDirective } from './context-list/context-list-binding.directive';\r\nimport { ContextItemComponent } from './context-item/context-item.component';\r\nimport { ContextFormComponent } from './context-form/context-form.component';\r\nimport { ContextEditComponent } from './context-edit/context-edit.component';\r\nimport { ContextEditBindingDirective } from './context-edit/context-edit-binding.directive';\r\nimport { ContextPermissionsComponent } from './context-permissions/context-permissions.component';\r\nimport { ContextPermissionsBindingDirective } from './context-permissions/context-permissions-binding.directive';\r\n\r\nconst CONTEXT_DIRECTIVES = [\r\n  MapContextDirective,\r\n  LayerContextDirective\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    IgoAuthModule,\r\n    IgoListModule,\r\n    IgoKeyValueModule,\r\n    IgoCollapsibleModule,\r\n    IgoStopPropagationModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ],\r\n  declarations: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ]\r\n})\r\nexport class IgoContextManagerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextManagerModule\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-dialog',\r\n  templateUrl: './bookmark-dialog.component.html'\r\n})\r\nexport class BookmarkDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<BookmarkDialogComponent>) {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\nimport { BookmarkDialogComponent } from './bookmark-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-button',\r\n  templateUrl: './bookmark-button.component.html',\r\n  styleUrls: ['./bookmark-button.component.scss']\r\n})\r\nexport class BookmarkButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  createContext() {\r\n    this.dialog\r\n      .open(BookmarkDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          const context = this.contextService.getContextFromMap(this.map);\r\n          context.title = title;\r\n          this.contextService.create(context).subscribe(() => {\r\n            const translate = this.languageService.translate;\r\n            const titleD = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createTitle'\r\n            );\r\n            const message = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createMsg',\r\n              {\r\n                value: context.title\r\n              }\r\n            );\r\n            this.messageService.success(message, titleD);\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, EMPTY } from 'rxjs';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { Poi } from './poi.interface';\r\n\r\n@Injectable()\r\nexport class PoiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    this.baseUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  get(): Observable<Poi[]> {\r\n    if (!this.baseUrl) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.get<Poi[]>(url);\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    const url = this.baseUrl + '/pois/' + id;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  create(context: Poi): Observable<Poi> {\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.post<Poi>(url, JSON.stringify(context));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-poi-dialog',\r\n  templateUrl: './poi-dialog.component.html'\r\n})\r\nexport class PoiDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PoiDialogComponent>) {}\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as olproj from 'ol/proj';\r\nimport * as oleasing from 'ol/easing';\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { PoiService } from './shared/poi.service';\r\nimport { Poi } from './shared/poi.interface';\r\nimport { PoiDialogComponent } from './poi-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-poi-button',\r\n  templateUrl: './poi-button.component.html',\r\n  styleUrls: ['./poi-button.component.scss']\r\n})\r\nexport class PoiButtonComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public pois: Poi[];\r\n  private authenticate$$: Subscription;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private authService: AuthService,\r\n    private poiService: PoiService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authenticate$$ = this.authService.authenticate$.subscribe(auth => {\r\n      if (auth) {\r\n        this.getPois();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authenticate$$.unsubscribe();\r\n  }\r\n\r\n  deletePoi(poi: Poi) {\r\n    if (poi && poi.id) {\r\n      const translate = this.languageService.translate;\r\n      this.confirmDialogService\r\n        .open(translate.instant('igo.context.poiButton.dialog.confirmDelete'))\r\n        .subscribe(confirm => {\r\n          if (confirm) {\r\n            this.poiService.delete(poi.id).subscribe(\r\n              () => {\r\n                const title = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteTitle'\r\n                );\r\n                const message = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteMsg',\r\n                  {\r\n                    value: poi.title\r\n                  }\r\n                );\r\n                this.messageService.info(message, title);\r\n                this.pois = this.pois.filter(p => p.id !== poi.id);\r\n              },\r\n              err => {\r\n                err.error.title = 'DELETE Pois';\r\n                this.messageService.showError(err);\r\n              }\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private getPois() {\r\n    this.poiService.get().subscribe(\r\n      rep => {\r\n        this.pois = rep;\r\n      },\r\n      err => {\r\n        err.error.title = 'GET Pois';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  createPoi() {\r\n    const view = this.map.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const poi: Poi = {\r\n      title: '',\r\n      x: center.getCoordinates()[0],\r\n      y: center.getCoordinates()[1],\r\n      zoom: view.getZoom()\r\n    };\r\n\r\n    this.dialog\r\n      .open(PoiDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          poi.title = title;\r\n          this.poiService.create(poi).subscribe(\r\n            newPoi => {\r\n              const translate = this.languageService.translate;\r\n              const titleD = translate.instant(\r\n                'igo.context.poiButton.dialog.createTitle'\r\n              );\r\n              const message = translate.instant(\r\n                'igo.context.poiButton.dialog.createMsg',\r\n                {\r\n                  value: poi.title\r\n                }\r\n              );\r\n              this.messageService.success(message, titleD);\r\n              poi.id = newPoi.id;\r\n              this.pois.push(poi);\r\n            },\r\n            err => {\r\n              err.error.title = 'POST Pois';\r\n              this.messageService.showError(err);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  zoomOnPoi(id) {\r\n    const poi = this.pois.find(p => p.id === id);\r\n\r\n    const center = olproj.fromLonLat(\r\n      [Number(poi.x), Number(poi.y)],\r\n      this.map.projection\r\n    );\r\n\r\n    this.map.ol.getView().animate({\r\n      center,\r\n      zoom: poi.zoom,\r\n      duration: 500,\r\n      easing: oleasing.easeOut\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\n\r\n@Component({\r\n  selector: 'igo-user-dialog',\r\n  templateUrl: './user-dialog.component.html'\r\n})\r\nexport class UserDialogComponent {\r\n  public user;\r\n  public exp;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UserDialogComponent>,\r\n    private auth: AuthService\r\n  ) {\r\n    const decodeToken = this.auth.decodeToken();\r\n    this.user = decodeToken.user;\r\n    this.exp = new Date(decodeToken.exp * 1000).toLocaleString();\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function userButtonSlideInOut(): AnimationTriggerMetadata {\r\n  return trigger('userButtonState', [\r\n    state(\r\n      'collapse',\r\n      style({\r\n        width: '0',\r\n        overflow: 'hidden',\r\n        display: 'none'\r\n      })\r\n    ),\r\n    state(\r\n      'expand',\r\n      style({\r\n        overflow: 'hidden',\r\n        display: 'display'\r\n      })\r\n    ),\r\n    transition('collapse => expand', animate('200ms')),\r\n    transition('expand => collapse', animate('200ms'))\r\n  ]);\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { UserDialogComponent } from './user-dialog.component';\r\nimport { userButtonSlideInOut } from './user-button.animation';\r\n\r\n@Component({\r\n  selector: 'igo-user-button',\r\n  templateUrl: './user-button.component.html',\r\n  styleUrls: ['./user-button.component.scss'],\r\n  animations: [userButtonSlideInOut()]\r\n})\r\nexport class UserButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public expand = false;\r\n  public visible = false;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private config: ConfigService,\r\n    public auth: AuthService\r\n  ) {\r\n    this.visible = this.config.getConfig('auth') ? true : false;\r\n  }\r\n\r\n  accountClick() {\r\n    if (this.auth.authenticated) {\r\n      this.expand = !this.expand;\r\n    } else {\r\n      this.auth.logout();\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.expand = false;\r\n    this.auth.logout();\r\n  }\r\n\r\n  infoUser() {\r\n    this.dialog.open(UserDialogComponent, { disableClose: false });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatDialogModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoConfirmDialogModule, IgoStopPropagationModule } from '@igo2/common';\r\nimport { IgoAuthModule } from '@igo2/auth';\r\n\r\nimport { BookmarkButtonComponent } from './bookmark-button/bookmark-button.component';\r\nimport { BookmarkDialogComponent } from './bookmark-button/bookmark-dialog.component';\r\nimport { PoiButtonComponent } from './poi-button/poi-button.component';\r\nimport { PoiDialogComponent } from './poi-button/poi-dialog.component';\r\nimport { PoiService } from './poi-button/shared/poi.service';\r\nimport { UserDialogComponent } from './user-button/user-dialog.component';\r\nimport { UserButtonComponent } from './user-button/user-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    IgoConfirmDialogModule,\r\n    IgoStopPropagationModule,\r\n    IgoAuthModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatInputModule\r\n  ],\r\n  exports: [BookmarkButtonComponent, PoiButtonComponent, UserButtonComponent],\r\n  declarations: [\r\n    BookmarkButtonComponent,\r\n    BookmarkDialogComponent,\r\n    PoiButtonComponent,\r\n    PoiDialogComponent,\r\n    UserButtonComponent,\r\n    UserDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    BookmarkDialogComponent,\r\n    PoiDialogComponent,\r\n    UserDialogComponent\r\n  ],\r\n  providers: [PoiService]\r\n})\r\nexport class IgoContextMapButtonModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextMapButtonModule\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { RouteService, ConfigService, MessageService } from '@igo2/core';\r\nimport { IgoMap, RoutingFormService } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareMapService {\r\n  private apiUrl: string;\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    @Optional() private routingFormService: RoutingFormService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.apiUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  getUrl(map: IgoMap, formValues, publicShareOption) {\r\n    if (this.apiUrl) {\r\n      return this.getUrlWithApi(map, formValues);\r\n    }\r\n    return this.getUrlWithoutApi(map, publicShareOption);\r\n  }\r\n\r\n  getUrlWithApi(map: IgoMap, formValues) {\r\n    const context = this.contextService.getContextFromMap(map);\r\n    context.scope = 'public';\r\n    context.title = formValues.title;\r\n    context.uri = formValues.uri;\r\n    this.contextService.create(context).subscribe(\r\n      rep => {},\r\n      err => {\r\n        err.error.title = 'Share Map';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n    return `${location.origin + location.pathname}?context=${formValues.uri}`;\r\n  }\r\n\r\n  getUrlWithoutApi(map: IgoMap, publicShareOption) {\r\n    if (\r\n      !this.route ||\r\n      !this.route.options.visibleOnLayersKey ||\r\n      !this.route.options.visibleOffLayersKey ||\r\n      !map.viewController.getZoom()\r\n    ) {\r\n      return;\r\n    }\r\n    const llc = publicShareOption.layerlistControls.querystring;\r\n\r\n    let visibleKey = this.route.options.visibleOnLayersKey;\r\n    let invisibleKey = this.route.options.visibleOffLayersKey;\r\n    const layers = map.layers;\r\n\r\n    const routingKey = this.route.options.routingCoordKey;\r\n    const stopsCoordinates = [];\r\n    if (\r\n      this.routingFormService &&\r\n      this.routingFormService.getStopsCoordinates() &&\r\n      this.routingFormService.getStopsCoordinates().length !== 0\r\n    ) {\r\n      this.routingFormService.getStopsCoordinates().forEach(coord => {\r\n        stopsCoordinates.push(coord);\r\n      });\r\n    }\r\n    let routingUrl = '';\r\n    if (stopsCoordinates.length >= 2) {\r\n      routingUrl = `${routingKey}=${stopsCoordinates.join(';')}`;\r\n    }\r\n\r\n    const visibleLayers = layers.filter(lay => lay.visible);\r\n    const invisibleLayers = layers.filter(lay => !lay.visible);\r\n\r\n    if (visibleLayers.length === 0) {\r\n      visibleKey = '';\r\n    }\r\n    if (invisibleLayers.length === 0) {\r\n      invisibleKey = '';\r\n    }\r\n\r\n    let layersUrl = '';\r\n    let layersToLoop = [];\r\n    if (visibleLayers.length > invisibleLayers.length) {\r\n      layersUrl = `${visibleKey}=*&${invisibleKey}=`;\r\n      layersToLoop = invisibleLayers;\r\n    } else {\r\n      layersUrl = `${invisibleKey}=*&${visibleKey}=`;\r\n      layersToLoop = visibleLayers;\r\n    }\r\n\r\n    for (const layer of layersToLoop) {\r\n      if (layer.id) {\r\n        layersUrl += layer.id + ',';\r\n      }\r\n    }\r\n    layersUrl = layersUrl.substr(0, layersUrl.length - 1);\r\n\r\n    let zoom = 'zoom=' + map.viewController.getZoom();\r\n    const arrayCenter = map.viewController.getCenter('EPSG:4326') || [];\r\n    const long = arrayCenter[0].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\r\n    const lat = arrayCenter[1].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\r\n    const center = `center=${long},${lat}`.replace(/.00000/g, '');\r\n    let context = '';\r\n    if (this.contextService.context$.value) {\r\n      if (this.contextService.context$.value.uri !== '_default') {\r\n        context = 'context=' + this.contextService.context$.value.uri;\r\n      }\r\n      if (this.contextService.context$.value.map.view.zoom) {\r\n        zoom =\r\n          this.contextService.context$.value.map.view.zoom ===\r\n          map.viewController.getZoom()\r\n            ? ''\r\n            : 'zoom=' + map.viewController.getZoom();\r\n      }\r\n    }\r\n\r\n    let url = `${location.origin}${\r\n      location.pathname\r\n    }?${context}&${zoom}&${center}&${layersUrl}&${llc}&${routingUrl}`;\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      url = url.replace(/&&/g, '&');\r\n      url = url.endsWith('&') ? url.slice(0, -1) : url;\r\n    }\r\n    url = url.endsWith('&') ? url.slice(0, -1) : url;\r\n    url = url.replace('?&', '?');\r\n\r\n    return url;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { uuid, Clipboard } from '@igo2/utils';\r\nimport { ConfigService, MessageService, LanguageService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap, LayerListService } from '@igo2/geo';\r\n\r\nimport { ShareMapService } from '../shared/share-map.service';\r\n\r\n@Component({\r\n  selector: 'igo-share-map',\r\n  templateUrl: './share-map.component.html',\r\n  styleUrls: ['./share-map.component.scss']\r\n})\r\nexport class ShareMapComponent implements AfterViewInit, OnInit {\r\n  public form: FormGroup;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get hasShareMapButton(): boolean {\r\n    return this._hasShareMapButton;\r\n  }\r\n  set hasShareMapButton(value: boolean) {\r\n    this._hasShareMapButton = value;\r\n  }\r\n  private _hasShareMapButton = true;\r\n\r\n  @Input()\r\n  get hasCopyLinkButton(): boolean {\r\n    return this._hasCopyLinkButton;\r\n  }\r\n  set hasCopyLinkButton(value: boolean) {\r\n    this._hasCopyLinkButton = value;\r\n  }\r\n  private _hasCopyLinkButton = false;\r\n\r\n  public url: string;\r\n  public hasApi = false;\r\n  public userId;\r\n  public publicShareOption = {\r\n    layerlistControls: { querystring: '' }\r\n  };\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private auth: AuthService,\r\n    private shareMapService: ShareMapService,\r\n    private formBuilder: FormBuilder,\r\n    private layerListService: LayerListService\r\n  ) {\r\n    this.hasApi = this.config.getConfig('context.url') ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.auth.authenticate$.subscribe(auth => {\r\n      const decodeToken = this.auth.decodeToken();\r\n      this.userId = decodeToken.user ? decodeToken.user.id : undefined;\r\n      this.url = undefined;\r\n      this.buildForm();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.hasApi) {\r\n      this.resetUrl();\r\n    }\r\n  }\r\n\r\n  public hasLayerListControls(): boolean {\r\n    if (this.layerListService.keyword || this.layerListService.sortedAlpha  ||\r\n      this.layerListService.onlyVisible || this.layerListService.onlyInRange ) {\r\n        this.publicShareOption.layerlistControls.querystring = '';\r\n        if (this.layerListService.keyword) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llck=' + this.layerListService.keyword;\r\n        }\r\n        if (this.layerListService.sortedAlpha) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llca=1';\r\n        }\r\n        if (this.layerListService.onlyVisible) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llcv=1';\r\n        }\r\n        if (this.layerListService.onlyInRange) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llcr=1';\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  resetUrl(values: any = {}) {\r\n    this.hasLayerListControls();\r\n    const inputs = Object.assign({}, values);\r\n    inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\r\n    this.url = this.shareMapService.getUrl(this.map, inputs, this.publicShareOption);\r\n  }\r\n\r\n  copyTextToClipboard(textArea) {\r\n    const successful = Clipboard.copy(textArea);\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant(\r\n        'igo.context.shareMap.dialog.copyTitle'\r\n      );\r\n      const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const id = uuid();\r\n    let title = 'Partage ';\r\n    title += this.userId ? `(${this.userId}-${id})` : `(${id})`;\r\n    this.form = this.formBuilder.group({\r\n      title: [title],\r\n      uri: [id]\r\n    });\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, Optional } from '@angular/core';\r\n\r\nimport { LayerListService } from '@igo2/geo';\r\nimport { ShareMapComponent } from './share-map.component';\r\nimport { RouteService } from '@igo2/core';\r\n\r\n@Directive({\r\n  selector: '[igoShareMapBinding]'\r\n})\r\nexport class ShareMapBindingDirective implements OnInit {\r\n  private component: ShareMapComponent;\r\n\r\n  constructor(\r\n    @Self() component: ShareMapComponent,\r\n    private layerListService: LayerListService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initRoutes();\r\n  }\r\n\r\n  private initRoutes() {\r\n    if (\r\n      this.route &&\r\n      (this.route.options.llcKKey || this.route.options.llcAKey ||\r\n        this.route.options.llcVKey || this.route.options.llcVKey)) {\r\n      this.route.queryParams.subscribe(params => {\r\n\r\n        const keywordFromUrl = params[this.route.options.llcKKey as string];\r\n        const sortedAplhaFromUrl = params[this.route.options.llcAKey as string];\r\n        const onlyVisibleFromUrl = params[this.route.options.llcVKey as string];\r\n        const onlyInRangeFromUrl = params[this.route.options.llcRKey as string];\r\n        if (keywordFromUrl && !this.layerListService.keywordInitialized) {\r\n          this.layerListService.keyword = keywordFromUrl;\r\n          this.layerListService.keywordInitialized = true;\r\n        }\r\n        if (sortedAplhaFromUrl && !this.layerListService.sortedAlphaInitialized) {\r\n          this.layerListService.sortedAlpha = sortedAplhaFromUrl === '1' ? true : false;\r\n          this.layerListService.sortedAlphaInitialized = true;\r\n        }\r\n        if (onlyVisibleFromUrl && !this.layerListService.onlyVisibleInitialized) {\r\n          this.layerListService.onlyVisible = onlyVisibleFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyVisibleInitialized = true;\r\n        }\r\n        if (onlyInRangeFromUrl && !this.layerListService.onlyInRangeInitialized) {\r\n          this.layerListService.onlyInRange = onlyInRangeFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyInRangeInitialized = true;\r\n        }\r\n        if (!this.component.hasApi) {\r\n          this.component.resetUrl();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ShareMapComponent } from './share-map/share-map.component';\r\nimport { ShareMapBindingDirective } from './share-map/share-map-binding.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [ShareMapComponent, ShareMapBindingDirective],\r\n  declarations: [ShareMapComponent, ShareMapBindingDirective]\r\n})\r\nexport class IgoShareMapModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoShareMapModule\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Media } from '@igo2/core';\r\nimport { FlexibleState, Tool, getEntityTitle } from '@igo2/common';\r\nimport { Feature, FeatureMotion, IgoMap, moveToOlFeatures } from '@igo2/geo';\r\n\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\n\r\n@Component({\r\n  selector: 'igo-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent {\r\n  private format = new olFormatGeoJSON();\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n  @Input()\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n  set opened(value: boolean) {\r\n    this._opened = value;\r\n  }\r\n  private _opened: boolean;\r\n\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n  }\r\n  private _feature: Feature;\r\n\r\n  @Input()\r\n  get tool(): Tool {\r\n    return this._tool;\r\n  }\r\n  set tool(value: Tool) {\r\n    this._tool = value;\r\n  }\r\n  private _tool: Tool;\r\n\r\n  @Input()\r\n  get media(): Media {\r\n    return this._media;\r\n  }\r\n  set media(value: Media) {\r\n    this._media = value;\r\n  }\r\n  private _media: Media;\r\n\r\n  @Input()\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    if (value) {\r\n      this._title = value;\r\n    }\r\n  }\r\n  private _title: string = this.titleService.getTitle();\r\n\r\n  public topPanelState: FlexibleState = 'initial';\r\n\r\n  get featureTitle(): string {\r\n    return this.feature ? getEntityTitle(this.feature) : undefined;\r\n  }\r\n\r\n  constructor(public titleService: Title) {}\r\n\r\n  zoomToFeatureExtent() {\r\n    if (this.feature.geometry) {\r\n      const olFeature = this.format.readFeature(this.feature, {\r\n        dataProjection: this.feature.projection,\r\n        featureProjection: this.map.projection\r\n      });\r\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\r\n    }\r\n  }\r\n\r\n  toggleTopPanel() {\r\n    if (this.topPanelState === 'initial') {\r\n      this.topPanelState = 'expanded';\r\n    } else {\r\n      this.topPanelState = 'initial';\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\r\nimport { IgoFeatureModule } from '@igo2/geo';\r\n\r\nimport { IgoContextManagerModule } from '../context-manager/context-manager.module';\r\nimport { SidenavComponent } from './sidenav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule,\r\n    IgoPanelModule,\r\n    IgoFlexibleModule,\r\n    IgoFeatureModule,\r\n    IgoContextManagerModule\r\n  ],\r\n  exports: [SidenavComponent],\r\n  declarations: [SidenavComponent]\r\n})\r\nexport class IgoSidenavModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSidenavModule\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { IgoContextManagerModule } from './context-manager/context-manager.module';\r\nimport { IgoContextMapButtonModule } from './context-map-button/context-map-button.module';\r\nimport { IgoShareMapModule } from './share-map/share-map.module';\r\nimport { IgoSidenavModule } from './sidenav/sidenav.module';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [\r\n    IgoContextManagerModule,\r\n    IgoContextMapButtonModule,\r\n    IgoShareMapModule,\r\n    IgoSidenavModule\r\n  ]\r\n})\r\nexport class IgoContextModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}