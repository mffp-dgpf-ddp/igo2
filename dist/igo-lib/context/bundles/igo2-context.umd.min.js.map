{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@igo2/context/lib/context-manager/shared/context.enum.ts","ng://@igo2/context/lib/context-manager/shared/context.service.ts","ng://@igo2/context/lib/context-manager/shared/map-context.directive.ts","ng://@igo2/context/lib/context-manager/shared/layer-context.directive.ts","ng://@igo2/context/lib/context-manager/context-list/context-list.component.ts","ng://@igo2/context/lib/context-manager/context-list/context-list-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-item/context-item.component.ts","ng://@igo2/context/lib/context-manager/context-form/context-form.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions.component.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-manager.module.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-dialog.component.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-button.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/shared/poi.service.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-dialog.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-button.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-dialog.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.animation.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.component.ts","ng://@igo2/context/lib/context-map-button/context-map-button.module.ts","ng://@igo2/context/lib/share-map/shared/share-map.service.ts","ng://@igo2/context/lib/share-map/share-map/share-map.component.ts","ng://@igo2/context/lib/share-map/share-map/share-map-binding.directive.ts","ng://@igo2/context/lib/share-map/share-map.module.ts","ng://@igo2/context/lib/sidenav/sidenav.component.ts","ng://@igo2/context/lib/sidenav/sidenav.module.ts","ng://@igo2/context/lib/context.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","null","read","write","public","protected","private","ContextService","http","authService","languageService","config","route","_this","this","context$","BehaviorSubject","undefined","contexts$","ours","defaultContextId$","editedContext$","mapViewFromRoute","options","Object","assign","basePath","contextListFile","defaultContextUri","getConfig","baseUrl","url","readParamsFromRoute","authenticate$","subscribe","authenticated","contexts$$","contexts","unsubscribe","handleContextsChange","loadContexts","loadDefaultContext","prototype","get","getById","id","getDetails","pipe","catchError","res","handleError","getDefault","tap","context","setDefault","post","defaultContextId","delete","keys","forEach","key","filter","c","create","JSON","stringify","map","contextCreated","permission","TypePermission","clone","properties","contextCloned","update","patch","addToolAssociation","contextId","toolId","association","deleteToolAssociation","getPermissions","addPermissionAssociation","profil","type","typePermission","deletePermissionAssociation","permissionId","getLocalContexts","getPath","getLocalContext","uri","publicsContexts","contextUri","find","loadFct","direct","_context","addContextToList","setContext","loadContext","contextKey","queryParams","debounceTime","params","contextParam","getContextByUri","err","currentContext","view","keepCurrentView","loadEditedContext","setEditedContext","getContextFromMap","igoMap","ol","getView","proj","getProjection","getCode","center","olPoint","getCenter","transform","uuid","title","scope","getCoordinates","zoom","getZoom","projection","layers","tools","layers$","getValue","layers_1","tslib_1.__values","layers_1_1","layer","opts","String","zIndex","visible","sourceOptions","dataSource","tool","setTools","contextToLoad","_b","_c","centerKey","centerParams","split","Number","geolocate","projectionKey","projectionParam","zoomKey","zoomParam","file","replace","obj","titleContext","translate","instant","text","keepCurrentContext","editedContext","findContext","editedFound","contextSimplifie","found","Injectable","args","providedIn","HttpClient","AuthService","LanguageService","ConfigService","RouteService","decorators","Optional","MapContextDirective","component","contextService","defineProperty","ngOnInit","context$$","handleContextChange","ngOnDestroy","viewContext","Directive","selector","MapBrowserComponent","LayerContextDirective","layerService","contextLayers","visibleOnLayersKey","visibleOffLayersKey","queryParams$$_1","skip","removeLayers","zip","apply","layerOptions","index","createAsyncLayer","withLatestFrom","of","layersAndIndex","reduce","acc","bunch","_a","computeLayerVisibilityFromUrl","Array","addLayers","currentLayerid","contextParams","visibleOnLayersParams","visibleOffLayersParams","visiblelayers","invisiblelayers","indexOf","LayerService","ContextListComponent","cdRef","_contexts","select","EventEmitter","unselect","edit","save","favorite","managePermissions","manageTools","titleMapping","shared","_selectedContext","detectChanges","_defaultContextId","Component","template","ChangeDetectorRef","Input","Output","ContextListBindingDirective","mapService","confirmDialogService","messageService","onSelect","onEdit","onSave","getMap","contextFromMap","changes","message","success","onFavorite","onManageTools","onManagePermissions","onDelete","open","confirm","info","onClone","defaultContextId$$","selectedContext$$","selectedContext","Self","MapService","ConfirmDialogService","MessageService","HostListener","ContextItemComponent","auth","color","collapsed","_default","favoriteClick","emit","ContextFormComponent","formBuilder","_disabled","submitForm","_btnSubmitText","buildForm","handleFormSubmit","inputs","ObjectUtils","removeNull","prefix","uriSplit","shift","join","form","group","FormBuilder","ContextEditComponent","ContextEditBindingDirective","editedContext$$","handleEditedContextChange","ContextPermissionsComponent","addPermission","removePermission","scopeChanged","_permissions","ContextPermissionsBindingDirective","onAddPermission","profils","profils_1","profils_1_1","p","permissions","onRemovePermission","findIndex","splice","onScopeChanged","permissionsArray","toString","CONTEXT_DIRECTIVES","IgoContextManagerModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","MatTooltipModule","MatListModule","MatCheckboxModule","MatRadioModule","IgoAuthModule","IgoListModule","IgoKeyValueModule","IgoCollapsibleModule","IgoStopPropagationModule","IgoLanguageModule","exports","declarations","BookmarkDialogComponent","dialogRef","MatDialogRef","BookmarkButtonComponent","dialog","_map","_color","createContext","disableClose","afterClosed","context_1","titleD","MatDialog","PoiService","EMPTY","PoiDialogComponent","PoiButtonComponent","poiService","authenticate$$","getPois","deletePoi","poi","translate_1","pois","showError","rep","createPoi","x","y","newPoi","zoomOnPoi","olproj.fromLonLat","animate","duration","easing","oleasing.easeOut","UserDialogComponent","decodeToken","user","exp","Date","toLocaleString","userButtonSlideInOut","trigger","state","style","width","overflow","display","transition","UserButtonComponent","expand","accountClick","logout","infoUser","animations","IgoContextMapButtonModule","IgoConfirmDialogModule","MatSelectModule","MatOptionModule","MatDialogModule","entryComponents","providers","ShareMapService","routingFormService","apiUrl","getUrl","formValues","publicShareOption","getUrlWithApi","getUrlWithoutApi","location","origin","pathname","llc","layerlistControls","querystring","visibleKey","invisibleKey","routingKey","routingCoordKey","stopsCoordinates","getStopsCoordinates","coord","routingUrl","visibleLayers","lay","invisibleLayers","layersUrl","layersToLoop","layersToLoop_1","layersToLoop_1_1","substr","RoutingFormService","ShareMapComponent","shareMapService","layerListService","_hasShareMapButton","_hasCopyLinkButton","hasApi","userId","ngAfterViewInit","resetUrl","hasLayerListControls","keyword","sortedAlpha","onlyVisible","onlyInRange","values","copyTextToClipboard","textArea","Clipboard","copy","msg","LayerListService","ShareMapBindingDirective","initRoutes","llcKKey","llcAKey","llcVKey","keywordFromUrl","sortedAplhaFromUrl","onlyVisibleFromUrl","onlyInRangeFromUrl","keywordInitialized","sortedAlphaInitialized","onlyVisibleInitialized","onlyInRangeInitialized","IgoShareMapModule","SidenavComponent","titleService","format","olFormatGeoJSON","_title","getTitle","topPanelState","_opened","_feature","_tool","_media","feature","getEntityTitle","zoomToFeatureExtent","geometry","olFeature","readFeature","dataProjection","featureProjection","moveToOlFeatures","FeatureMotion","Zoom","toggleTopPanel","Title","IgoSidenavModule","MatSidenavModule","IgoPanelModule","IgoFlexibleModule","IgoFeatureModule","IgoContextModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TypePermission {\r\n  null,\r\n  read,\r\n  write\r\n}\r\n\r\nexport enum Scope {\r\n  public,\r\n  protected,\r\n  private\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, tap, catchError, debounceTime } from 'rxjs/operators';\r\n\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport { Tool } from '@igo2/common';\r\nimport { uuid } from '@igo2/utils';\r\nimport {\r\n  ConfigService,\r\n  RouteService,\r\n  Message,\r\n  LanguageService\r\n} from '@igo2/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { TypePermission } from './context.enum';\r\nimport {\r\n  ContextsList,\r\n  ContextServiceOptions,\r\n  Context,\r\n  DetailedContext,\r\n  ContextMapView,\r\n  ContextPermission\r\n} from './context.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContextService {\r\n  public context$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  public contexts$ = new BehaviorSubject<ContextsList>({ ours: [] });\r\n  public defaultContextId$ = new BehaviorSubject<string>(undefined);\r\n  public editedContext$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  private mapViewFromRoute: ContextMapView = {};\r\n  private options: ContextServiceOptions;\r\n  private baseUrl: string;\r\n\r\n  // Until the ContextService is completely refactored, this is needed\r\n  // to track the current tools\r\n  private tools: Tool[];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private languageService: LanguageService,\r\n    private config: ConfigService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.options = Object.assign(\r\n      {\r\n        basePath: 'contexts',\r\n        contextListFile: '_contexts.json',\r\n        defaultContextUri: '_default'\r\n      },\r\n      this.config.getConfig('context')\r\n    );\r\n\r\n    this.baseUrl = this.options.url;\r\n\r\n    this.readParamsFromRoute();\r\n\r\n    this.authService.authenticate$.subscribe(authenticated => {\r\n      if (authenticated === null) {\r\n        this.loadDefaultContext();\r\n        return;\r\n      }\r\n      const contexts$$ = this.contexts$.subscribe(contexts => {\r\n        if (contexts$$) {\r\n          contexts$$.unsubscribe();\r\n          this.handleContextsChange(contexts);\r\n        }\r\n      });\r\n      this.loadContexts();\r\n    });\r\n  }\r\n\r\n  get(): Observable<ContextsList> {\r\n    const url = this.baseUrl + '/contexts';\r\n    return this.http.get<ContextsList>(url);\r\n  }\r\n\r\n  getById(id: string): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.get<Context>(url);\r\n  }\r\n\r\n  getDetails(id: string): Observable<DetailedContext> {\r\n    const url = `${this.baseUrl}/contexts/${id}/details`;\r\n    return this.http\r\n      .get<DetailedContext>(url)\r\n      .pipe(catchError(res => this.handleError(res, id)));\r\n  }\r\n\r\n  getDefault(): Observable<DetailedContext> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      tap(context => {\r\n        this.defaultContextId$.next(context.id);\r\n      })\r\n    );\r\n  }\r\n\r\n  setDefault(id: string): Observable<any> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.post(url, { defaultContextId: id });\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.delete<void>(url).pipe(\r\n      tap(res => {\r\n        const contexts: ContextsList = { ours: [] };\r\n        Object.keys(this.contexts$.value).forEach(\r\n          key =>\r\n            (contexts[key] = this.contexts$.value[key].filter(c => c.id !== id))\r\n        );\r\n        this.contexts$.next(contexts);\r\n      })\r\n    );\r\n  }\r\n\r\n  create(context: DetailedContext): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts';\r\n    return this.http.post<Context>(url, JSON.stringify(context)).pipe(\r\n      map(contextCreated => {\r\n        if (this.authService.authenticated) {\r\n          contextCreated.permission = TypePermission[TypePermission.write];\r\n        } else {\r\n          contextCreated.permission = TypePermission[TypePermission.read];\r\n        }\r\n        this.contexts$.value.ours.push(contextCreated);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCreated;\r\n      })\r\n    );\r\n  }\r\n\r\n  clone(id: string, properties = {}): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/clone';\r\n    return this.http.post<Context>(url, JSON.stringify(properties)).pipe(\r\n      map(contextCloned => {\r\n        contextCloned.permission = TypePermission[TypePermission.write];\r\n        this.contexts$.value.ours.push(contextCloned);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCloned;\r\n      })\r\n    );\r\n  }\r\n\r\n  update(id: string, context: Context): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.patch<Context>(url, JSON.stringify(context));\r\n  }\r\n\r\n  // =================================================================\r\n\r\n  addToolAssociation(contextId: string, toolId: string): Observable<void> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools`;\r\n    const association = {\r\n      toolId\r\n    };\r\n    return this.http.post<void>(url, JSON.stringify(association));\r\n  }\r\n\r\n  deleteToolAssociation(contextId: string, toolId: string): Observable<any> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools/${toolId}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  getPermissions(id: string): Observable<ContextPermission[]> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/permissions';\r\n    return this.http.get<ContextPermission[]>(url);\r\n  }\r\n\r\n  addPermissionAssociation(\r\n    contextId: string,\r\n    profil: string,\r\n    type: TypePermission\r\n  ): Observable<ContextPermission[]> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/permissions`;\r\n    const association = {\r\n      profil,\r\n      typePermission: type\r\n    };\r\n    return this.http.post<ContextPermission[]>(\r\n      url,\r\n      JSON.stringify(association)\r\n    );\r\n  }\r\n\r\n  deletePermissionAssociation(\r\n    contextId: string,\r\n    permissionId: string\r\n  ): Observable<void> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }/contexts/${contextId}/permissions/${permissionId}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  // ======================================================================\r\n\r\n  getLocalContexts(): Observable<ContextsList> {\r\n    const url = this.getPath(this.options.contextListFile);\r\n    return this.http.get<ContextsList>(url).pipe(\r\n      map((res: any) => {\r\n        return { ours: res };\r\n      })\r\n    );\r\n  }\r\n\r\n  getLocalContext(uri): Observable<DetailedContext> {\r\n    const url = this.getPath(`${uri}.json`);\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      catchError(res => {\r\n        return this.handleError(res, uri);\r\n      })\r\n    );\r\n  }\r\n\r\n  loadContexts() {\r\n    let request;\r\n    if (this.baseUrl) {\r\n      request = this.get();\r\n    } else {\r\n      request = this.getLocalContexts();\r\n    }\r\n    request.subscribe(contexts => {\r\n      const publicsContexts = this.contexts$.value.public;\r\n\r\n      if (publicsContexts) {\r\n        const contextUri = publicsContexts.find(\r\n          c => c.uri === this.options.defaultContextUri\r\n        );\r\n        if (contextUri) {\r\n          if (!contexts.public) {\r\n            contexts.public = [];\r\n          }\r\n          contexts.public.push(contextUri);\r\n        }\r\n      }\r\n      this.contexts$.next(contexts);\r\n    });\r\n  }\r\n\r\n  loadDefaultContext() {\r\n    const loadFct = (direct = false) => {\r\n      if (!direct && this.baseUrl && this.authService.authenticated) {\r\n        this.getDefault().subscribe(\r\n          (_context: DetailedContext) => {\r\n            this.options.defaultContextUri = _context.uri;\r\n            this.addContextToList(_context);\r\n            this.setContext(_context);\r\n          },\r\n          () => {\r\n            this.defaultContextId$.next(undefined);\r\n            this.loadContext(this.options.defaultContextUri);\r\n          }\r\n        );\r\n      } else {\r\n        this.loadContext(this.options.defaultContextUri);\r\n      }\r\n    };\r\n\r\n    if (this.route && this.route.options.contextKey) {\r\n      this.route.queryParams.pipe(debounceTime(100)).subscribe(params => {\r\n        const contextParam = params[this.route.options.contextKey as string];\r\n        let direct = false;\r\n        if (contextParam) {\r\n          this.options.defaultContextUri = contextParam;\r\n          direct = true;\r\n        }\r\n        loadFct(direct);\r\n      });\r\n    } else {\r\n      loadFct();\r\n    }\r\n  }\r\n\r\n  loadContext(uri: string) {\r\n    const context = this.context$.value;\r\n    if (context && context.uri === uri) {\r\n      return;\r\n    }\r\n\r\n    const contexts$$ = this.getContextByUri(uri).subscribe(\r\n      (_context: DetailedContext) => {\r\n        contexts$$.unsubscribe();\r\n        this.addContextToList(_context);\r\n        this.setContext(_context);\r\n      },\r\n      err => {\r\n        contexts$$.unsubscribe();\r\n      }\r\n    );\r\n  }\r\n\r\n  setContext(context: DetailedContext) {\r\n    const currentContext = this.context$.value;\r\n    if (currentContext && context && context.id === currentContext.id) {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      return;\r\n    }\r\n\r\n    if (!context.map) {\r\n      context.map = { view: {} };\r\n    }\r\n\r\n    Object.assign(context.map.view, this.mapViewFromRoute);\r\n\r\n    this.context$.next(context);\r\n  }\r\n\r\n  loadEditedContext(uri: string) {\r\n    this.getContextByUri(uri).subscribe((_context: DetailedContext) => {\r\n      this.setEditedContext(_context);\r\n    });\r\n  }\r\n\r\n  setEditedContext(context: DetailedContext) {\r\n    this.editedContext$.next(context);\r\n  }\r\n\r\n  getContextFromMap(igoMap: IgoMap): DetailedContext {\r\n    const view = igoMap.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const context = {\r\n      uri: uuid(),\r\n      title: '',\r\n      scope: 'private',\r\n      map: {\r\n        view: {\r\n          center: center.getCoordinates(),\r\n          zoom: view.getZoom(),\r\n          projection: proj\r\n        }\r\n      },\r\n      layers: [],\r\n      tools: []\r\n    };\r\n\r\n    const layers = igoMap.layers$.getValue();\r\n\r\n    for (const l of layers) {\r\n      const layer: any = l;\r\n      const opts = {\r\n        id: layer.options.id ? String(layer.options.id) : undefined,\r\n        title: layer.options.title,\r\n        zIndex: layer.zIndex,\r\n        visible: layer.visible,\r\n        sourceOptions: {\r\n          type: layer.dataSource.options.type,\r\n          params: layer.dataSource.options.params,\r\n          url: layer.dataSource.options.url\r\n        }\r\n      };\r\n      context.layers.push(opts);\r\n    }\r\n\r\n    context.tools = this.tools.map(tool => String(tool.id));\r\n\r\n    return context;\r\n  }\r\n\r\n  setTools(tools: Tool[]) {\r\n    this.tools = tools;\r\n  }\r\n\r\n  private getContextByUri(uri: string): Observable<DetailedContext> {\r\n    if (this.baseUrl) {\r\n      let contextToLoad;\r\n      for (const key of Object.keys(this.contexts$.value)) {\r\n        contextToLoad = this.contexts$.value[key].find(c => {\r\n          return c.uri === uri;\r\n        });\r\n        if (contextToLoad) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // TODO : use always id or uri\r\n      const id = contextToLoad ? contextToLoad.id : uri;\r\n      return this.getDetails(id);\r\n    }\r\n\r\n    return this.getLocalContext(uri);\r\n  }\r\n\r\n  private readParamsFromRoute() {\r\n    if (!this.route) {\r\n      return;\r\n    }\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const centerKey = this.route.options.centerKey;\r\n      if (centerKey && params[centerKey as string]) {\r\n        const centerParams = params[centerKey as string];\r\n        this.mapViewFromRoute.center = centerParams.split(',').map(Number);\r\n        this.mapViewFromRoute.geolocate = false;\r\n      }\r\n\r\n      const projectionKey = this.route.options.projectionKey;\r\n      if (projectionKey && params[projectionKey as string]) {\r\n        const projectionParam = params[projectionKey as string];\r\n        this.mapViewFromRoute.projection = projectionParam;\r\n      }\r\n\r\n      const zoomKey = this.route.options.zoomKey;\r\n      if (zoomKey && params[zoomKey as string]) {\r\n        const zoomParam = params[zoomKey as string];\r\n        this.mapViewFromRoute.zoom = Number(zoomParam);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getPath(file: string) {\r\n    const basePath = this.options.basePath.replace(/\\/$/, '');\r\n\r\n    return `${basePath}/${file}`;\r\n  }\r\n\r\n  private handleError(res: Response, uri: string): Message[] {\r\n    const context = this.contexts$.value.ours.find(obj => obj.uri === uri);\r\n    const titleContext = context ? context.title : uri;\r\n    const titleError = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.title'\r\n    );\r\n\r\n    const textError = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.text',\r\n      { value: titleContext }\r\n    );\r\n\r\n    throw [{ title: titleError, text: textError }];\r\n  }\r\n\r\n  private handleContextsChange(\r\n    contexts: ContextsList,\r\n    keepCurrentContext = false\r\n  ) {\r\n    const context = this.context$.value;\r\n    const editedContext = this.editedContext$.value;\r\n\r\n    if (!keepCurrentContext || !this.findContext(context)) {\r\n      this.loadDefaultContext();\r\n    } else {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      this.getDefault().subscribe(() => {});\r\n    }\r\n    const editedFound = this.findContext(editedContext);\r\n    if (!editedFound || editedFound.permission !== 'write') {\r\n      this.setEditedContext(undefined);\r\n    }\r\n  }\r\n\r\n  private addContextToList(context: Context) {\r\n    const contextFound = this.findContext(context);\r\n    if (!contextFound) {\r\n      const contextSimplifie = {\r\n        id: context.id,\r\n        uri: context.uri,\r\n        title: context.title,\r\n        scope: context.scope,\r\n        permission: TypePermission[TypePermission.read]\r\n      };\r\n      if (this.contexts$.value && this.contexts$.value.public) {\r\n        this.contexts$.value.public.push(contextSimplifie);\r\n        this.contexts$.next(this.contexts$.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  private findContext(context: Context) {\r\n    if (!context || !context.id) {\r\n      return false;\r\n    }\r\n\r\n    const contexts = this.contexts$.value;\r\n    let found;\r\n    for (const key of Object.keys(contexts)) {\r\n      const value = contexts[key];\r\n      found = value.find(c => c.id === context.id);\r\n      if (found) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n}\r\n","import { Directive, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { IgoMap, MapViewOptions, MapBrowserComponent } from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext, ContextMapView } from './context.interface';\r\n\r\n@Directive({\r\n  selector: '[igoMapContext]'\r\n})\r\nexport class MapContextDirective implements OnInit, OnDestroy {\r\n  private component: MapBrowserComponent;\r\n  private context$$: Subscription;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    component: MapBrowserComponent,\r\n    private contextService: ContextService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter(context => context !== undefined))\r\n      .subscribe(context => this.handleContextChange(context));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.map === undefined) {\r\n      return;\r\n    }\r\n\r\n    // This creates a new ol.Map when the context changes. Doing that\r\n    // allows the print tool to work properly even when the map's canvas\r\n    // has been tainted (CORS) with the layers of another context. This could\r\n    // have some side effects such as unbinding all listeners on the first map.\r\n    // A better solution would be to create a new map (preview) before\r\n    // printing and avoid the tainted canvas issue. This will come later so\r\n    // this snippet of code is kept here in case it takes too long becomes\r\n    // an issue\r\n\r\n    // const target = this.component.map.ol.getTarget();\r\n    // this.component.map.ol.setTarget(undefined);\r\n    // this.component.map.init();\r\n    // this.component.map.ol.setTarget(target);\r\n\r\n    const viewContext: ContextMapView = context.map.view;\r\n    if (viewContext.keepCurrentView !== true) {\r\n      this.component.view = viewContext as MapViewOptions;\r\n    }\r\n  }\r\n}\r\n","import { Directive, OnInit, OnDestroy, Optional } from '@angular/core';\r\n\r\nimport { Subscription, of, zip } from 'rxjs';\r\nimport { withLatestFrom, skip, filter } from 'rxjs/operators';\r\n\r\nimport { RouteService } from '@igo2/core';\r\nimport {\r\n  IgoMap,\r\n  MapBrowserComponent,\r\n  Layer,\r\n  LayerService,\r\n  LayerOptions\r\n} from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext } from './context.interface';\r\n\r\n@Directive({\r\n  selector: '[igoLayerContext]'\r\n})\r\nexport class LayerContextDirective implements OnInit, OnDestroy {\r\n\r\n  private context$$: Subscription;\r\n  private queryParams: any;\r\n\r\n  private contextLayers: Layer[] = [];\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    private component: MapBrowserComponent,\r\n    private contextService: ContextService,\r\n    private layerService: LayerService,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter(context => context !== undefined))\r\n      .subscribe(context => this.handleContextChange(context));\r\n\r\n    if (\r\n      this.route &&\r\n      this.route.options.visibleOnLayersKey &&\r\n      this.route.options.visibleOffLayersKey &&\r\n      this.route.options.contextKey\r\n    ) {\r\n      const queryParams$$ = this.route.queryParams\r\n        .pipe(skip(1))\r\n        .subscribe(params => {\r\n          this.queryParams = params;\r\n          queryParams$$.unsubscribe();\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.layers === undefined) { return; }\r\n\r\n    this.map.removeLayers(this.contextLayers);\r\n    this.contextLayers = [];\r\n\r\n    const layersAndIndex$ = zip(...context.layers.map((layerOptions: LayerOptions, index: number) => {\r\n      return this.layerService.createAsyncLayer(layerOptions).pipe(\r\n        withLatestFrom(of(index))\r\n      );\r\n    }));\r\n\r\n    layersAndIndex$.subscribe((layersAndIndex: [Layer, number][]) => {\r\n      const layers = layersAndIndex.reduce((acc: Layer[], bunch: [Layer, number]) => {\r\n        const [layer, index] = bunch;\r\n        layer.visible = this.computeLayerVisibilityFromUrl(layer);\r\n        layer.zIndex = layer.zIndex || index + 1;  // Map indexes start at 1\r\n        acc[index] = layer;\r\n        return acc;\r\n      }, new Array(layersAndIndex.length));\r\n      this.contextLayers = layers;\r\n      this.map.addLayers(layers);\r\n    });\r\n  }\r\n\r\n  private computeLayerVisibilityFromUrl(layer: Layer): boolean {\r\n    const params = this.queryParams;\r\n    const currentContext = this.contextService.context$.value.uri;\r\n    const currentLayerid: string = layer.id;\r\n\r\n    let visible = layer.visible;\r\n    if (!params || !currentLayerid) {\r\n      return visible;\r\n    }\r\n\r\n    const contextParams = params[this.route.options.contextKey as string];\r\n    if (contextParams === currentContext || !contextParams) {\r\n      let visibleOnLayersParams = '';\r\n      let visibleOffLayersParams = '';\r\n      let visiblelayers: string[] = [];\r\n      let invisiblelayers: string[] = [];\r\n\r\n      if (\r\n        this.route.options.visibleOnLayersKey &&\r\n        params[this.route.options.visibleOnLayersKey as string]\r\n      ) {\r\n        visibleOnLayersParams =\r\n          params[this.route.options.visibleOnLayersKey as string];\r\n      }\r\n      if (\r\n        this.route.options.visibleOffLayersKey &&\r\n        params[this.route.options.visibleOffLayersKey as string]\r\n      ) {\r\n        visibleOffLayersParams =\r\n          params[this.route.options.visibleOffLayersKey as string];\r\n      }\r\n\r\n      /* This order is important because to control whichever\r\n       the order of * param. First whe open and close everything.*/\r\n      if (visibleOnLayersParams === '*') {\r\n        visible = true;\r\n      }\r\n      if (visibleOffLayersParams === '*') {\r\n        visible = false;\r\n      }\r\n\r\n      // After, managing named layer by id (context.json OR id from datasource)\r\n      visiblelayers = visibleOnLayersParams.split(',');\r\n      invisiblelayers = visibleOffLayersParams.split(',');\r\n      if (visiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = true;\r\n      }\r\n      if (invisiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = false;\r\n      }\r\n    }\r\n\r\n    return visible;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { DetailedContext, ContextsList } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-list',\r\n  templateUrl: './context-list.component.html'\r\n})\r\nexport class ContextListComponent {\r\n  @Input()\r\n  get contexts(): ContextsList {\r\n    return this._contexts;\r\n  }\r\n  set contexts(value: ContextsList) {\r\n    this._contexts = value;\r\n  }\r\n  private _contexts: ContextsList = { ours: [] };\r\n\r\n  @Input()\r\n  get selectedContext(): DetailedContext {\r\n    return this._selectedContext;\r\n  }\r\n  set selectedContext(value: DetailedContext) {\r\n    this._selectedContext = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _selectedContext: DetailedContext;\r\n\r\n  @Input()\r\n  get defaultContextId(): string {\r\n    return this._defaultContextId;\r\n  }\r\n  set defaultContextId(value: string) {\r\n    this._defaultContextId = value;\r\n  }\r\n  private _defaultContextId: string;\r\n\r\n  @Output() select = new EventEmitter<DetailedContext>();\r\n  @Output() unselect = new EventEmitter<DetailedContext>();\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n\r\n  public titleMapping = {\r\n    ours: 'igo.context.contextManager.ourContexts',\r\n    shared: 'igo.context.contextManager.sharedContexts',\r\n    public: 'igo.context.contextManager.publicContexts'\r\n  };\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { MapService } from '@igo2/geo';\r\n\r\nimport {\r\n  Context,\r\n  DetailedContext,\r\n  ContextsList\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextListComponent } from './context-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextListBinding]'\r\n})\r\nexport class ContextListBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextListComponent;\r\n  private contexts$$: Subscription;\r\n  private selectedContext$$: Subscription;\r\n  private defaultContextId$$: Subscription;\r\n\r\n  @HostListener('select', ['$event'])\r\n  onSelect(context: Context) {\r\n    this.contextService.loadContext(context.uri);\r\n  }\r\n\r\n  @HostListener('edit', ['$event'])\r\n  onEdit(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('save', ['$event'])\r\n  onSave(context: Context) {\r\n    const map = this.mapService.getMap();\r\n    const contextFromMap = this.contextService.getContextFromMap(map);\r\n\r\n    const changes: any = {\r\n      layers: contextFromMap.layers,\r\n      map: {\r\n        view: contextFromMap.map.view\r\n      }\r\n    };\r\n\r\n    this.contextService.update(context.id, changes).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.saveMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.saveTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('favorite', ['$event'])\r\n  onFavorite(context: Context) {\r\n    this.contextService.setDefault(context.id).subscribe(() => {\r\n      this.contextService.defaultContextId$.next(context.id);\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('manageTools', ['$event'])\r\n  onManageTools(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('managePermissions', ['$event'])\r\n  onManagePermissions(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('delete', ['$event'])\r\n  onDelete(context: Context) {\r\n    const translate = this.languageService.translate;\r\n    this.confirmDialogService\r\n      .open(\r\n        translate.instant('igo.context.contextManager.dialog.confirmDelete')\r\n      )\r\n      .subscribe(confirm => {\r\n        if (confirm) {\r\n          this.contextService.delete(context.id).subscribe(() => {\r\n            const message = translate.instant(\r\n              'igo.context.contextManager.dialog.deleteMsg',\r\n              {\r\n                value: context.title\r\n              }\r\n            );\r\n            const title = translate.instant(\r\n              'igo.context.contextManager.dialog.deleteTitle'\r\n            );\r\n            this.messageService.info(message, title);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  @HostListener('clone', ['$event'])\r\n  onClone(context: DetailedContext) {\r\n    const properties = {\r\n      title: context.title + '-copy',\r\n      uri: context.uri + '-copy'\r\n    };\r\n    this.contextService.clone(context.id, properties).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextListComponent,\r\n    private contextService: ContextService,\r\n    private mapService: MapService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input contexts\r\n    this.component.contexts = { ours: [] };\r\n\r\n    this.contexts$$ = this.contextService.contexts$.subscribe(contexts =>\r\n      this.handleContextsChange(contexts)\r\n    );\r\n\r\n    this.defaultContextId$$ = this.contextService.defaultContextId$.subscribe(\r\n      id => {\r\n        this.component.defaultContextId = id;\r\n      }\r\n    );\r\n\r\n    // See feature-list.component for an explanation about the debounce time\r\n    this.selectedContext$$ = this.contextService.context$\r\n      .pipe(debounceTime(100))\r\n      .subscribe(context => (this.component.selectedContext = context));\r\n\r\n    this.contextService.loadContexts();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contexts$$.unsubscribe();\r\n    this.selectedContext$$.unsubscribe();\r\n    this.defaultContextId$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextsChange(contexts: ContextsList) {\r\n    this.component.contexts = contexts;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { TypePermission } from '../shared/context.enum';\r\nimport { DetailedContext } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-item',\r\n  templateUrl: './context-item.component.html',\r\n  styleUrls: ['./context-item.component.scss']\r\n})\r\nexport class ContextItemComponent {\r\n  public typePermission = TypePermission;\r\n  public color = 'primary';\r\n  public collapsed = true;\r\n\r\n  @Input()\r\n  get context(): DetailedContext {\r\n    return this._context;\r\n  }\r\n  set context(value: DetailedContext) {\r\n    this._context = value;\r\n  }\r\n  private _context: DetailedContext;\r\n\r\n  @Input()\r\n  get default(): boolean {\r\n    return this._default;\r\n  }\r\n  set default(value: boolean) {\r\n    this._default = value;\r\n  }\r\n  private _default = false;\r\n\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n\r\n  constructor(public auth: AuthService) {}\r\n\r\n  favoriteClick(context) {\r\n    if (this.auth.authenticated) {\r\n      this.favorite.emit(context);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-form',\r\n  templateUrl: './context-form.component.html',\r\n  styleUrls: ['./context-form.component.scss']\r\n})\r\nexport class ContextFormComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public prefix: string;\r\n\r\n  @Input()\r\n  get btnSubmitText(): string {\r\n    return this._btnSubmitText;\r\n  }\r\n  set btnSubmitText(value: string) {\r\n    this._btnSubmitText = value;\r\n  }\r\n  private _btnSubmitText: string;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.buildForm();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled = false;\r\n\r\n  // TODO: replace any by ContextOptions or Context\r\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\r\n  @Output() clone: EventEmitter<any> = new EventEmitter();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    let inputs = Object.assign({}, value);\r\n    inputs = ObjectUtils.removeNull(inputs);\r\n    inputs.uri = inputs.uri.replace(' ', '');\r\n    if (inputs.uri) {\r\n      inputs.uri = this.prefix + '-' + inputs.uri;\r\n    } else {\r\n      inputs.uri = this.prefix;\r\n    }\r\n    this.submitForm.emit(inputs);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const context: any = this.context || {};\r\n\r\n    const uriSplit = context.uri.split('-');\r\n    this.prefix = uriSplit.shift();\r\n    const uri = uriSplit.join('-');\r\n\r\n    this.form = this.formBuilder.group({\r\n      title: [context.title],\r\n      uri: [uri || ' ']\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-edit',\r\n  templateUrl: './context-edit.component.html'\r\n})\r\nexport class ContextEditComponent {\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n  }\r\n  private _context: Context;\r\n\r\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor() {}\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { Context, DetailedContext } from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextEditComponent } from './context-edit.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextEditBinding]'\r\n})\r\nexport class ContextEditBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextEditComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @HostListener('submitForm', ['$event'])\r\n  onEdit(context: Context) {\r\n    const id = this.component.context.id;\r\n    this.contextService.update(id, context).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant('igo.context.contextManager.dialog.saveMsg', {\r\n        value: context.title || this.component.context.title\r\n      });\r\n      const title = translate.instant('igo.context.contextManager.dialog.saveTitle');\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextEditComponent,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  ContextPermissionsList\r\n} from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-permissions',\r\n  templateUrl: './context-permissions.component.html',\r\n  styleUrls: ['./context-permissions.component.scss']\r\n})\r\nexport class ContextPermissionsComponent implements OnInit {\r\n  public form: FormGroup;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get permissions(): ContextPermissionsList {\r\n    return this._permissions;\r\n  }\r\n  set permissions(value: ContextPermissionsList) {\r\n    this._permissions = value;\r\n  }\r\n  private _permissions: ContextPermissionsList;\r\n\r\n  @Output() addPermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output()\r\n  removePermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output() scopeChanged: EventEmitter<Context> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    this.addPermission.emit(value);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      profil: [],\r\n      typePermission: ['read']\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  DetailedContext\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextPermissionsComponent } from './context-permissions.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextPermissionsBinding]'\r\n})\r\nexport class ContextPermissionsBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextPermissionsComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @HostListener('addPermission', ['$event'])\r\n  onAddPermission(permission: ContextPermission) {\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .addPermissionAssociation(\r\n        contextId,\r\n        permission.profil,\r\n        permission.typePermission\r\n      )\r\n      .subscribe(profils => {\r\n        for (const p of profils) {\r\n          this.component.permissions[permission.typePermission].push(p);\r\n        }\r\n        const profil = permission.profil;\r\n        const translate = this.languageService.translate;\r\n        const message = translate.instant('igo.context.permission.dialog.addMsg', {\r\n          value: profil\r\n        });\r\n        const title = translate.instant('igo.context.permission.dialog.addTitle');\r\n        this.messageService.success(message, title);\r\n      });\r\n  }\r\n\r\n  @HostListener('removePermission', ['$event'])\r\n  onRemovePermission(permission: ContextPermission) {\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .deletePermissionAssociation(contextId, permission.id)\r\n      .subscribe(() => {\r\n        const index = this.component.permissions[\r\n          permission.typePermission\r\n        ].findIndex(p => {\r\n          return p.id === permission.id;\r\n        });\r\n        this.component.permissions[permission.typePermission].splice(index, 1);\r\n\r\n        const profil = permission.profil;\r\n        const translate = this.languageService.translate;\r\n        const message = translate.instant('igo.context.permission.dialog.deleteMsg', {\r\n          value: profil\r\n        });\r\n        const title = translate.instant('igo.context.permission.dialog.deleteTitle');\r\n        this.messageService.success(message, title);\r\n      });\r\n  }\r\n\r\n  @HostListener('scopeChanged', ['$event'])\r\n  onScopeChanged(context: Context) {\r\n    const scope = context.scope;\r\n    this.contextService.update(context.id, { scope }).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedMsg',\r\n        {\r\n          value: translate.instant('igo.context.permission.scope.' + scope)\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextPermissionsComponent,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n\r\n    if (context) {\r\n      this.contextService\r\n        .getPermissions(context.id)\r\n        .subscribe(permissionsArray => {\r\n          permissionsArray = permissionsArray || [];\r\n          const permissions = {\r\n            read: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'read';\r\n            }),\r\n            write: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'write';\r\n            })\r\n          };\r\n          return (this.component.permissions = permissions);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule\r\n} from '@angular/material';\r\n\r\nimport { IgoAuthModule } from '@igo2/auth';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoListModule,\r\n  IgoKeyValueModule,\r\n  IgoCollapsibleModule,\r\n  IgoStopPropagationModule\r\n} from '@igo2/common';\r\n\r\nimport { MapContextDirective } from './shared/map-context.directive';\r\nimport { LayerContextDirective } from './shared/layer-context.directive';\r\nimport { ContextListComponent } from './context-list/context-list.component';\r\nimport { ContextListBindingDirective } from './context-list/context-list-binding.directive';\r\nimport { ContextItemComponent } from './context-item/context-item.component';\r\nimport { ContextFormComponent } from './context-form/context-form.component';\r\nimport { ContextEditComponent } from './context-edit/context-edit.component';\r\nimport { ContextEditBindingDirective } from './context-edit/context-edit-binding.directive';\r\nimport { ContextPermissionsComponent } from './context-permissions/context-permissions.component';\r\nimport { ContextPermissionsBindingDirective } from './context-permissions/context-permissions-binding.directive';\r\n\r\nconst CONTEXT_DIRECTIVES = [\r\n  MapContextDirective,\r\n  LayerContextDirective\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    IgoAuthModule,\r\n    IgoListModule,\r\n    IgoKeyValueModule,\r\n    IgoCollapsibleModule,\r\n    IgoStopPropagationModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ],\r\n  declarations: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ]\r\n})\r\nexport class IgoContextManagerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextManagerModule\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-dialog',\r\n  templateUrl: './bookmark-dialog.component.html'\r\n})\r\nexport class BookmarkDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<BookmarkDialogComponent>) {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\nimport { BookmarkDialogComponent } from './bookmark-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-button',\r\n  templateUrl: './bookmark-button.component.html',\r\n  styleUrls: ['./bookmark-button.component.scss']\r\n})\r\nexport class BookmarkButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  createContext() {\r\n    this.dialog\r\n      .open(BookmarkDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          const context = this.contextService.getContextFromMap(this.map);\r\n          context.title = title;\r\n          this.contextService.create(context).subscribe(() => {\r\n            const translate = this.languageService.translate;\r\n            const titleD = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createTitle'\r\n            );\r\n            const message = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createMsg',\r\n              {\r\n                value: context.title\r\n              }\r\n            );\r\n            this.messageService.success(message, titleD);\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, EMPTY } from 'rxjs';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { Poi } from './poi.interface';\r\n\r\n@Injectable()\r\nexport class PoiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    this.baseUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  get(): Observable<Poi[]> {\r\n    if (!this.baseUrl) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.get<Poi[]>(url);\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    const url = this.baseUrl + '/pois/' + id;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  create(context: Poi): Observable<Poi> {\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.post<Poi>(url, JSON.stringify(context));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-poi-dialog',\r\n  templateUrl: './poi-dialog.component.html'\r\n})\r\nexport class PoiDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PoiDialogComponent>) {}\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as olproj from 'ol/proj';\r\nimport * as oleasing from 'ol/easing';\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { PoiService } from './shared/poi.service';\r\nimport { Poi } from './shared/poi.interface';\r\nimport { PoiDialogComponent } from './poi-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-poi-button',\r\n  templateUrl: './poi-button.component.html',\r\n  styleUrls: ['./poi-button.component.scss']\r\n})\r\nexport class PoiButtonComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public pois: Poi[];\r\n  private authenticate$$: Subscription;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private authService: AuthService,\r\n    private poiService: PoiService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authenticate$$ = this.authService.authenticate$.subscribe(auth => {\r\n      if (auth) {\r\n        this.getPois();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authenticate$$.unsubscribe();\r\n  }\r\n\r\n  deletePoi(poi: Poi) {\r\n    if (poi && poi.id) {\r\n      const translate = this.languageService.translate;\r\n      this.confirmDialogService\r\n        .open(translate.instant('igo.context.poiButton.dialog.confirmDelete'))\r\n        .subscribe(confirm => {\r\n          if (confirm) {\r\n            this.poiService.delete(poi.id).subscribe(\r\n              () => {\r\n                const title = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteTitle'\r\n                );\r\n                const message = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteMsg',\r\n                  {\r\n                    value: poi.title\r\n                  }\r\n                );\r\n                this.messageService.info(message, title);\r\n                this.pois = this.pois.filter(p => p.id !== poi.id);\r\n              },\r\n              err => {\r\n                err.error.title = 'DELETE Pois';\r\n                this.messageService.showError(err);\r\n              }\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private getPois() {\r\n    this.poiService.get().subscribe(\r\n      rep => {\r\n        this.pois = rep;\r\n      },\r\n      err => {\r\n        err.error.title = 'GET Pois';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  createPoi() {\r\n    const view = this.map.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const poi: Poi = {\r\n      title: '',\r\n      x: center.getCoordinates()[0],\r\n      y: center.getCoordinates()[1],\r\n      zoom: view.getZoom()\r\n    };\r\n\r\n    this.dialog\r\n      .open(PoiDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          poi.title = title;\r\n          this.poiService.create(poi).subscribe(\r\n            newPoi => {\r\n              const translate = this.languageService.translate;\r\n              const titleD = translate.instant(\r\n                'igo.context.poiButton.dialog.createTitle'\r\n              );\r\n              const message = translate.instant(\r\n                'igo.context.poiButton.dialog.createMsg',\r\n                {\r\n                  value: poi.title\r\n                }\r\n              );\r\n              this.messageService.success(message, titleD);\r\n              poi.id = newPoi.id;\r\n              this.pois.push(poi);\r\n            },\r\n            err => {\r\n              err.error.title = 'POST Pois';\r\n              this.messageService.showError(err);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  zoomOnPoi(id) {\r\n    const poi = this.pois.find(p => p.id === id);\r\n\r\n    const center = olproj.fromLonLat(\r\n      [Number(poi.x), Number(poi.y)],\r\n      this.map.projection\r\n    );\r\n\r\n    this.map.ol.getView().animate({\r\n      center,\r\n      zoom: poi.zoom,\r\n      duration: 500,\r\n      easing: oleasing.easeOut\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\n\r\n@Component({\r\n  selector: 'igo-user-dialog',\r\n  templateUrl: './user-dialog.component.html'\r\n})\r\nexport class UserDialogComponent {\r\n  public user;\r\n  public exp;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UserDialogComponent>,\r\n    private auth: AuthService\r\n  ) {\r\n    const decodeToken = this.auth.decodeToken();\r\n    this.user = decodeToken.user;\r\n    this.exp = new Date(decodeToken.exp * 1000).toLocaleString();\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function userButtonSlideInOut(): AnimationTriggerMetadata {\r\n  return trigger('userButtonState', [\r\n    state(\r\n      'collapse',\r\n      style({\r\n        width: '0',\r\n        overflow: 'hidden',\r\n        display: 'none'\r\n      })\r\n    ),\r\n    state(\r\n      'expand',\r\n      style({\r\n        overflow: 'hidden',\r\n        display: 'display'\r\n      })\r\n    ),\r\n    transition('collapse => expand', animate('200ms')),\r\n    transition('expand => collapse', animate('200ms'))\r\n  ]);\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { UserDialogComponent } from './user-dialog.component';\r\nimport { userButtonSlideInOut } from './user-button.animation';\r\n\r\n@Component({\r\n  selector: 'igo-user-button',\r\n  templateUrl: './user-button.component.html',\r\n  styleUrls: ['./user-button.component.scss'],\r\n  animations: [userButtonSlideInOut()]\r\n})\r\nexport class UserButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public expand = false;\r\n  public visible = false;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private config: ConfigService,\r\n    public auth: AuthService\r\n  ) {\r\n    this.visible = this.config.getConfig('auth') ? true : false;\r\n  }\r\n\r\n  accountClick() {\r\n    if (this.auth.authenticated) {\r\n      this.expand = !this.expand;\r\n    } else {\r\n      this.auth.logout();\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.expand = false;\r\n    this.auth.logout();\r\n  }\r\n\r\n  infoUser() {\r\n    this.dialog.open(UserDialogComponent, { disableClose: false });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatDialogModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoConfirmDialogModule, IgoStopPropagationModule } from '@igo2/common';\r\nimport { IgoAuthModule } from '@igo2/auth';\r\n\r\nimport { BookmarkButtonComponent } from './bookmark-button/bookmark-button.component';\r\nimport { BookmarkDialogComponent } from './bookmark-button/bookmark-dialog.component';\r\nimport { PoiButtonComponent } from './poi-button/poi-button.component';\r\nimport { PoiDialogComponent } from './poi-button/poi-dialog.component';\r\nimport { PoiService } from './poi-button/shared/poi.service';\r\nimport { UserDialogComponent } from './user-button/user-dialog.component';\r\nimport { UserButtonComponent } from './user-button/user-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    IgoConfirmDialogModule,\r\n    IgoStopPropagationModule,\r\n    IgoAuthModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatInputModule\r\n  ],\r\n  exports: [BookmarkButtonComponent, PoiButtonComponent, UserButtonComponent],\r\n  declarations: [\r\n    BookmarkButtonComponent,\r\n    BookmarkDialogComponent,\r\n    PoiButtonComponent,\r\n    PoiDialogComponent,\r\n    UserButtonComponent,\r\n    UserDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    BookmarkDialogComponent,\r\n    PoiDialogComponent,\r\n    UserDialogComponent\r\n  ],\r\n  providers: [PoiService]\r\n})\r\nexport class IgoContextMapButtonModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextMapButtonModule\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { RouteService, ConfigService, MessageService } from '@igo2/core';\r\nimport { IgoMap, RoutingFormService } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareMapService {\r\n  private apiUrl: string;\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    @Optional() private routingFormService: RoutingFormService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.apiUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  getUrl(map: IgoMap, formValues, publicShareOption) {\r\n    if (this.apiUrl) {\r\n      return this.getUrlWithApi(map, formValues);\r\n    }\r\n    return this.getUrlWithoutApi(map, publicShareOption);\r\n  }\r\n\r\n  getUrlWithApi(map: IgoMap, formValues) {\r\n    const context = this.contextService.getContextFromMap(map);\r\n    context.scope = 'public';\r\n    context.title = formValues.title;\r\n    context.uri = formValues.uri;\r\n    this.contextService.create(context).subscribe(\r\n      rep => {},\r\n      err => {\r\n        err.error.title = 'Share Map';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n    return `${location.origin + location.pathname}?context=${formValues.uri}`;\r\n  }\r\n\r\n  getUrlWithoutApi(map: IgoMap, publicShareOption) {\r\n    if (\r\n      !this.route ||\r\n      !this.route.options.visibleOnLayersKey ||\r\n      !this.route.options.visibleOffLayersKey ||\r\n      !map.getZoom()\r\n    ) {\r\n      return;\r\n    }\r\n    const llc = publicShareOption.layerlistControls.querystring;\r\n\r\n    const visibleKey = this.route.options.visibleOnLayersKey;\r\n    const invisibleKey = this.route.options.visibleOffLayersKey;\r\n    const layers = map.layers;\r\n\r\n    const routingKey = this.route.options.routingCoordKey;\r\n    const stopsCoordinates = [];\r\n    if (\r\n      this.routingFormService &&\r\n      this.routingFormService.getStopsCoordinates() &&\r\n      this.routingFormService.getStopsCoordinates().length !== 0\r\n    ) {\r\n      this.routingFormService.getStopsCoordinates().forEach(coord => {\r\n        stopsCoordinates.push(coord);\r\n      });\r\n    }\r\n    let routingUrl = '';\r\n    if (stopsCoordinates.length >= 2) {\r\n      routingUrl = `${routingKey}=${stopsCoordinates.join(';')}`;\r\n    }\r\n\r\n    const visibleLayers = layers.filter(lay => lay.visible);\r\n    const invisibleLayers = layers.filter(lay => !lay.visible);\r\n\r\n    let layersUrl = '';\r\n    let layersToLoop = [];\r\n    if (visibleLayers.length > invisibleLayers.length) {\r\n      layersUrl = `${visibleKey}=*&${invisibleKey}=`;\r\n      layersToLoop = invisibleLayers;\r\n    } else {\r\n      layersUrl = `${invisibleKey}=*&${visibleKey}=`;\r\n      layersToLoop = visibleLayers;\r\n    }\r\n\r\n    for (const layer of layersToLoop) {\r\n      if (layer.id) {\r\n        layersUrl += layer.id + ',';\r\n      }\r\n    }\r\n    layersUrl = layersUrl.substr(0, layersUrl.length - 1);\r\n\r\n    const zoom = 'zoom=' + map.getZoom();\r\n    const arrayCenter = map.getCenter('EPSG:4326') || [];\r\n    const center = 'center=' + arrayCenter.toString();\r\n    let context = '';\r\n    if (this.contextService.context$.value) {\r\n      context = 'context=' + this.contextService.context$.value.uri;\r\n    }\r\n\r\n    return `${location.origin}${\r\n      location.pathname\r\n    }?${context}&${zoom}&${center}&${layersUrl}&${llc}&${routingUrl}`.replace(/&&/g, '&');\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { uuid, Clipboard } from '@igo2/utils';\r\nimport { ConfigService, MessageService, LanguageService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap, LayerListService } from '@igo2/geo';\r\n\r\nimport { ShareMapService } from '../shared/share-map.service';\r\n\r\n@Component({\r\n  selector: 'igo-share-map',\r\n  templateUrl: './share-map.component.html',\r\n  styleUrls: ['./share-map.component.scss']\r\n})\r\nexport class ShareMapComponent implements AfterViewInit, OnInit {\r\n  public form: FormGroup;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get hasShareMapButton(): boolean {\r\n    return this._hasShareMapButton;\r\n  }\r\n  set hasShareMapButton(value: boolean) {\r\n    this._hasShareMapButton = value;\r\n  }\r\n  private _hasShareMapButton = true;\r\n\r\n  @Input()\r\n  get hasCopyLinkButton(): boolean {\r\n    return this._hasCopyLinkButton;\r\n  }\r\n  set hasCopyLinkButton(value: boolean) {\r\n    this._hasCopyLinkButton = value;\r\n  }\r\n  private _hasCopyLinkButton = false;\r\n\r\n  public url: string;\r\n  public hasApi = false;\r\n  public userId;\r\n  public publicShareOption = {\r\n    layerlistControls: { querystring: '' }\r\n  };\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private auth: AuthService,\r\n    private shareMapService: ShareMapService,\r\n    private formBuilder: FormBuilder,\r\n    private layerListService: LayerListService\r\n  ) {\r\n    this.hasApi = this.config.getConfig('context.url') ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.auth.authenticate$.subscribe(auth => {\r\n      const decodeToken = this.auth.decodeToken();\r\n      this.userId = decodeToken.user ? decodeToken.user.id : undefined;\r\n      this.url = undefined;\r\n      this.buildForm();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.hasApi) {\r\n      this.resetUrl();\r\n    }\r\n  }\r\n\r\n  public hasLayerListControls(): boolean {\r\n    if (this.layerListService.keyword || this.layerListService.sortedAlpha  ||\r\n      this.layerListService.onlyVisible || this.layerListService.onlyInRange ) {\r\n        this.publicShareOption.layerlistControls.querystring = '';\r\n        if (this.layerListService.keyword) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llck=' + this.layerListService.keyword;\r\n        }\r\n        if (this.layerListService.sortedAlpha) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llca=1';\r\n        }\r\n        if (this.layerListService.onlyVisible) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llcv=1';\r\n        }\r\n        if (this.layerListService.onlyInRange) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llcr=1';\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  resetUrl(values: any = {}) {\r\n    this.hasLayerListControls();\r\n    const inputs = Object.assign({}, values);\r\n    inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\r\n    this.url = this.shareMapService.getUrl(this.map, inputs, this.publicShareOption);\r\n  }\r\n\r\n  copyTextToClipboard(textArea) {\r\n    const successful = Clipboard.copy(textArea);\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant(\r\n        'igo.context.shareMap.dialog.copyTitle'\r\n      );\r\n      const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const id = uuid();\r\n    let title = 'Partage ';\r\n    title += this.userId ? `(${this.userId}-${id})` : `(${id})`;\r\n    this.form = this.formBuilder.group({\r\n      title: [title],\r\n      uri: [id]\r\n    });\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, Optional } from '@angular/core';\r\n\r\nimport { LayerListService } from '@igo2/geo';\r\nimport { ShareMapComponent } from './share-map.component';\r\nimport { RouteService } from '@igo2/core';\r\n\r\n@Directive({\r\n  selector: '[igoShareMapBinding]'\r\n})\r\nexport class ShareMapBindingDirective implements OnInit {\r\n  private component: ShareMapComponent;\r\n\r\n  constructor(\r\n    @Self() component: ShareMapComponent,\r\n    private layerListService: LayerListService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initRoutes();\r\n  }\r\n\r\n  private initRoutes() {\r\n    if (\r\n      this.route &&\r\n      (this.route.options.llcKKey || this.route.options.llcAKey ||\r\n        this.route.options.llcVKey || this.route.options.llcVKey)) {\r\n      this.route.queryParams.subscribe(params => {\r\n\r\n        const keywordFromUrl = params[this.route.options.llcKKey as string];\r\n        const sortedAplhaFromUrl = params[this.route.options.llcAKey as string];\r\n        const onlyVisibleFromUrl = params[this.route.options.llcVKey as string];\r\n        const onlyInRangeFromUrl = params[this.route.options.llcRKey as string];\r\n        if (keywordFromUrl && !this.layerListService.keywordInitialized) {\r\n          this.layerListService.keyword = keywordFromUrl;\r\n          this.layerListService.keywordInitialized = true;\r\n        }\r\n        if (sortedAplhaFromUrl && !this.layerListService.sortedAlphaInitialized) {\r\n          this.layerListService.sortedAlpha = sortedAplhaFromUrl === '1' ? true : false;\r\n          this.layerListService.sortedAlphaInitialized = true;\r\n        }\r\n        if (onlyVisibleFromUrl && !this.layerListService.onlyVisibleInitialized) {\r\n          this.layerListService.onlyVisible = onlyVisibleFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyVisibleInitialized = true;\r\n        }\r\n        if (onlyInRangeFromUrl && !this.layerListService.onlyInRangeInitialized) {\r\n          this.layerListService.onlyInRange = onlyInRangeFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyInRangeInitialized = true;\r\n        }\r\n        if (!this.component.hasApi) {\r\n          this.component.resetUrl();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ShareMapComponent } from './share-map/share-map.component';\r\nimport { ShareMapBindingDirective } from './share-map/share-map-binding.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [ShareMapComponent, ShareMapBindingDirective],\r\n  declarations: [ShareMapComponent, ShareMapBindingDirective]\r\n})\r\nexport class IgoShareMapModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoShareMapModule\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Media } from '@igo2/core';\r\nimport { FlexibleState, Tool, getEntityTitle } from '@igo2/common';\r\nimport { Feature, FeatureMotion, IgoMap, moveToOlFeatures } from '@igo2/geo';\r\n\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\n\r\n@Component({\r\n  selector: 'igo-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent {\r\n  private format = new olFormatGeoJSON();\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n  @Input()\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n  set opened(value: boolean) {\r\n    this._opened = value;\r\n  }\r\n  private _opened: boolean;\r\n\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n  }\r\n  private _feature: Feature;\r\n\r\n  @Input()\r\n  get tool(): Tool {\r\n    return this._tool;\r\n  }\r\n  set tool(value: Tool) {\r\n    this._tool = value;\r\n  }\r\n  private _tool: Tool;\r\n\r\n  @Input()\r\n  get media(): Media {\r\n    return this._media;\r\n  }\r\n  set media(value: Media) {\r\n    this._media = value;\r\n  }\r\n  private _media: Media;\r\n\r\n  @Input()\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    if (value) {\r\n      this._title = value;\r\n    }\r\n  }\r\n  private _title: string = this.titleService.getTitle();\r\n\r\n  public topPanelState: FlexibleState = 'initial';\r\n\r\n  get featureTitle(): string {\r\n    return this.feature ? getEntityTitle(this.feature) : undefined;\r\n  }\r\n\r\n  constructor(public titleService: Title) {}\r\n\r\n  zoomToFeatureExtent() {\r\n    if (this.feature.geometry) {\r\n      const olFeature = this.format.readFeature(this.feature, {\r\n        dataProjection: this.feature.projection,\r\n        featureProjection: this.map.projection\r\n      });\r\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\r\n    }\r\n  }\r\n\r\n  toggleTopPanel() {\r\n    if (this.topPanelState === 'initial') {\r\n      this.topPanelState = 'expanded';\r\n    } else {\r\n      this.topPanelState = 'initial';\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\r\nimport { IgoFeatureModule } from '@igo2/geo';\r\n\r\nimport { IgoContextManagerModule } from '../context-manager/context-manager.module';\r\nimport { SidenavComponent } from './sidenav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule,\r\n    IgoPanelModule,\r\n    IgoFlexibleModule,\r\n    IgoFeatureModule,\r\n    IgoContextManagerModule\r\n  ],\r\n  exports: [SidenavComponent],\r\n  declarations: [SidenavComponent]\r\n})\r\nexport class IgoSidenavModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSidenavModule\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { IgoContextManagerModule } from './context-manager/context-manager.module';\r\nimport { IgoContextMapButtonModule } from './context-map-button/context-map-button.module';\r\nimport { IgoShareMapModule } from './share-map/share-map.module';\r\nimport { IgoSidenavModule } from './sidenav/sidenav.module';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [\r\n    IgoContextManagerModule,\r\n    IgoContextMapButtonModule,\r\n    IgoShareMapModule,\r\n    IgoSidenavModule\r\n  ]\r\n})\r\nexport class IgoContextModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}