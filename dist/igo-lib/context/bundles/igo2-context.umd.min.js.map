{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@igo2/context/lib/context-manager/shared/context.enum.ts","ng://@igo2/context/lib/context-manager/shared/context.service.ts","ng://@igo2/context/lib/context-manager/shared/map-context.directive.ts","ng://@igo2/context/lib/context-manager/shared/layer-context.directive.ts","ng://@igo2/context/lib/context-manager/context-list/context-list.component.ts","ng://@igo2/context/lib/context-manager/context-list/context-list-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-item/context-item.component.ts","ng://@igo2/context/lib/context-manager/context-form/context-form.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions.component.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-manager.module.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-dialog.component.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-button.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/shared/poi.service.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-dialog.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-button.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-dialog.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.animation.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.component.ts","ng://@igo2/context/lib/context-map-button/context-map-button.module.ts","ng://@igo2/context/lib/share-map/shared/share-map.service.ts","ng://@igo2/context/lib/share-map/share-map/share-map.component.ts","ng://@igo2/context/lib/share-map/share-map/share-map-binding.directive.ts","ng://@igo2/context/lib/share-map/share-map.module.ts","ng://@igo2/context/lib/sidenav/sidenav.component.ts","ng://@igo2/context/lib/sidenav/sidenav.module.ts","ng://@igo2/context/lib/context.module.ts"],"names":["__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","null","read","write","public","protected","private","ContextService","http","authService","languageService","config","route","_this","this","context$","BehaviorSubject","undefined","contexts$","ours","defaultContextId$","editedContext$","mapViewFromRoute","options","Object","assign","basePath","contextListFile","defaultContextUri","getConfig","baseUrl","url","readParamsFromRoute","authenticate$","subscribe","authenticated","contexts$$","contexts","unsubscribe","handleContextsChange","loadContexts","loadDefaultContext","prototype","get","getById","id","getDetails","pipe","catchError","res","handleError","getDefault","tap","context","setDefault","post","defaultContextId","delete","keys","forEach","key","filter","c","create","JSON","stringify","map","contextCreated","permission","TypePermission","clone","properties","contextCloned","update","patch","addToolAssociation","contextId","toolId","association","deleteToolAssociation","getPermissions","addPermissionAssociation","profil","type","typePermission","deletePermissionAssociation","permissionId","getLocalContexts","getPath","getLocalContext","uri","publicsContexts","contextUri","find","loadFct","direct","_context","addContextToList","setContext","loadContext","contextKey","queryParams","debounceTime","params","contextParam","getContextByUri","err","currentContext","view","keepCurrentView","loadEditedContext","setEditedContext","getContextFromMap","igoMap","ol","getView","proj","getProjection","getCode","center","olPoint","getCenter","transform","uuid","title","scope","getCoordinates","zoom","getZoom","projection","layers","tools","layers$","getValue","layers_1","tslib_1.__values","layers_1_1","layer","opts","String","layerOptions","zIndex","visible","sourceOptions","dataSource","tool","setTools","contextToLoad","_b","_c","centerKey","centerParams","split","Number","geolocate","projectionKey","projectionParam","zoomKey","zoomParam","file","replace","obj","titleContext","translate","instant","text","keepCurrentContext","editedContext","findContext","editedFound","contextSimplifie","found","Injectable","args","providedIn","HttpClient","AuthService","LanguageService","ConfigService","RouteService","decorators","Optional","MapContextDirective","component","contextService","defineProperty","ngOnInit","context$$","handleContextChange","ngOnDestroy","viewContext","Directive","selector","MapBrowserComponent","LayerContextDirective","layerService","contextLayers","visibleOnLayersKey","visibleOffLayersKey","queryParams$$_1","skip","removeLayers","zip","apply","index","createAsyncLayer","withLatestFrom","of","layersAndIndex","reduce","acc","bunch","_a","computeLayerVisibilityFromUrl","Array","addLayers","currentLayerid","contextParams","visibleOnLayersParams","visibleOffLayersParams","visiblelayers","invisiblelayers","indexOf","LayerService","ContextListComponent","cdRef","_contexts","select","EventEmitter","unselect","edit","save","favorite","managePermissions","manageTools","titleMapping","shared","_selectedContext","detectChanges","_defaultContextId","Component","template","ChangeDetectorRef","Input","Output","ContextListBindingDirective","mapService","confirmDialogService","messageService","onSelect","onEdit","onSave","getMap","contextFromMap","changes","message","success","onFavorite","onManageTools","onManagePermissions","onDelete","open","confirm","info","onClone","defaultContextId$$","selectedContext$$","selectedContext","Self","MapService","ConfirmDialogService","MessageService","HostListener","ContextItemComponent","auth","color","collapsed","_default","favoriteClick","emit","ContextFormComponent","formBuilder","_disabled","submitForm","_btnSubmitText","buildForm","handleFormSubmit","inputs","ObjectUtils","removeNull","prefix","uriSplit","shift","join","form","group","FormBuilder","ContextEditComponent","cd","refresh","ContextEditBindingDirective","editedContext$$","handleEditedContextChange","ContextPermissionsComponent","addPermission","removePermission","scopeChanged","_permissions","ContextPermissionsBindingDirective","onAddPermission","profils","profils_1","profils_1_1","p","permissions","onRemovePermission","findIndex","splice","onScopeChanged","permissionsArray","toString","CONTEXT_DIRECTIVES","IgoContextManagerModule","forRoot","ngModule","NgModule","imports","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","MatTooltipModule","MatListModule","MatCheckboxModule","MatRadioModule","IgoAuthModule","IgoListModule","IgoKeyValueModule","IgoCollapsibleModule","IgoStopPropagationModule","IgoLanguageModule","exports","declarations","BookmarkDialogComponent","dialogRef","MatDialogRef","BookmarkButtonComponent","dialog","_map","_color","createContext","disableClose","afterClosed","context_1","titleD","MatDialog","PoiService","EMPTY","PoiDialogComponent","PoiButtonComponent","poiService","authenticate$$","getPois","deletePoi","poi","translate_1","pois","showError","rep","createPoi","x","y","newPoi","zoomOnPoi","olproj.fromLonLat","animate","duration","easing","oleasing.easeOut","UserDialogComponent","decodeToken","user","exp","Date","toLocaleString","userButtonSlideInOut","trigger","state","style","width","overflow","display","transition","UserButtonComponent","expand","accountClick","logout","infoUser","animations","IgoContextMapButtonModule","IgoConfirmDialogModule","MatSelectModule","MatOptionModule","MatDialogModule","entryComponents","providers","ShareMapService","routingFormService","apiUrl","getUrl","formValues","publicShareOption","getUrlWithApi","getUrlWithoutApi","location","origin","pathname","viewController","llc","layerlistControls","querystring","visibleKey","invisibleKey","routingKey","routingCoordKey","stopsCoordinates","getStopsCoordinates","coord","routingUrl","visibleLayers","lay","invisibleLayers","layersUrl","layersToLoop","layersToLoop_1","layersToLoop_1_1","substr","arrayCenter","toFixed","endsWith","slice","RoutingFormService","ShareMapComponent","shareMapService","layerListService","_hasShareMapButton","_hasCopyLinkButton","hasApi","userId","ngAfterViewInit","resetUrl","hasLayerListControls","keyword","sortedAlpha","onlyVisible","onlyInRange","values","copyTextToClipboard","textArea","Clipboard","copy","msg","LayerListService","ShareMapBindingDirective","initRoutes","llcKKey","llcAKey","llcVKey","keywordFromUrl","sortedAplhaFromUrl","onlyVisibleFromUrl","onlyInRangeFromUrl","keywordInitialized","sortedAlphaInitialized","onlyVisibleInitialized","onlyInRangeInitialized","IgoShareMapModule","SidenavComponent","titleService","format","olFormatGeoJSON","_title","getTitle","topPanelState","_opened","_feature","_tool","_media","feature","getEntityTitle","zoomToFeatureExtent","geometry","olFeature","readFeature","dataProjection","featureProjection","moveToOlFeatures","FeatureMotion","Zoom","toggleTopPanel","Title","IgoSidenavModule","MatSidenavModule","IgoPanelModule","IgoFlexibleModule","IgoFeatureModule","IgoContextModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export enum TypePermission {\r\n  null,\r\n  read,\r\n  write\r\n}\r\n\r\nexport enum Scope {\r\n  public,\r\n  protected,\r\n  private\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map, tap, catchError, debounceTime } from 'rxjs/operators';\r\n\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport { Tool } from '@igo2/common';\r\nimport { uuid } from '@igo2/utils';\r\nimport {\r\n  ConfigService,\r\n  RouteService,\r\n  Message,\r\n  LanguageService\r\n} from '@igo2/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { TypePermission } from './context.enum';\r\nimport {\r\n  ContextsList,\r\n  ContextServiceOptions,\r\n  Context,\r\n  DetailedContext,\r\n  ContextMapView,\r\n  ContextPermission\r\n} from './context.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContextService {\r\n  public context$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  public contexts$ = new BehaviorSubject<ContextsList>({ ours: [] });\r\n  public defaultContextId$ = new BehaviorSubject<string>(undefined);\r\n  public editedContext$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  private mapViewFromRoute: ContextMapView = {};\r\n  private options: ContextServiceOptions;\r\n  private baseUrl: string;\r\n\r\n  // Until the ContextService is completely refactored, this is needed\r\n  // to track the current tools\r\n  private tools: Tool[];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private languageService: LanguageService,\r\n    private config: ConfigService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.options = Object.assign(\r\n      {\r\n        basePath: 'contexts',\r\n        contextListFile: '_contexts.json',\r\n        defaultContextUri: '_default'\r\n      },\r\n      this.config.getConfig('context')\r\n    );\r\n\r\n    this.baseUrl = this.options.url;\r\n\r\n    this.readParamsFromRoute();\r\n\r\n    this.authService.authenticate$.subscribe(authenticated => {\r\n      if (authenticated === null) {\r\n        this.loadDefaultContext();\r\n        return;\r\n      }\r\n      const contexts$$ = this.contexts$.subscribe(contexts => {\r\n        if (contexts$$) {\r\n          contexts$$.unsubscribe();\r\n          this.handleContextsChange(contexts);\r\n        }\r\n      });\r\n      this.loadContexts();\r\n    });\r\n  }\r\n\r\n  get(): Observable<ContextsList> {\r\n    const url = this.baseUrl + '/contexts';\r\n    return this.http.get<ContextsList>(url);\r\n  }\r\n\r\n  getById(id: string): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.get<Context>(url);\r\n  }\r\n\r\n  getDetails(id: string): Observable<DetailedContext> {\r\n    const url = `${this.baseUrl}/contexts/${id}/details`;\r\n    return this.http\r\n      .get<DetailedContext>(url)\r\n      .pipe(catchError(res => this.handleError(res, id)));\r\n  }\r\n\r\n  getDefault(): Observable<DetailedContext> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      tap(context => {\r\n        this.defaultContextId$.next(context.id);\r\n      })\r\n    );\r\n  }\r\n\r\n  setDefault(id: string): Observable<any> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.post(url, { defaultContextId: id });\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.delete<void>(url).pipe(\r\n      tap(res => {\r\n        const contexts: ContextsList = { ours: [] };\r\n        Object.keys(this.contexts$.value).forEach(\r\n          key =>\r\n            (contexts[key] = this.contexts$.value[key].filter(c => c.id !== id))\r\n        );\r\n        this.contexts$.next(contexts);\r\n      })\r\n    );\r\n  }\r\n\r\n  create(context: DetailedContext): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts';\r\n    return this.http.post<Context>(url, JSON.stringify(context)).pipe(\r\n      map(contextCreated => {\r\n        if (this.authService.authenticated) {\r\n          contextCreated.permission = TypePermission[TypePermission.write];\r\n        } else {\r\n          contextCreated.permission = TypePermission[TypePermission.read];\r\n        }\r\n        this.contexts$.value.ours.push(contextCreated);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCreated;\r\n      })\r\n    );\r\n  }\r\n\r\n  clone(id: string, properties = {}): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/clone';\r\n    return this.http.post<Context>(url, JSON.stringify(properties)).pipe(\r\n      map(contextCloned => {\r\n        contextCloned.permission = TypePermission[TypePermission.write];\r\n        this.contexts$.value.ours.push(contextCloned);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCloned;\r\n      })\r\n    );\r\n  }\r\n\r\n  update(id: string, context: Context): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.patch<Context>(url, JSON.stringify(context));\r\n  }\r\n\r\n  // =================================================================\r\n\r\n  addToolAssociation(contextId: string, toolId: string): Observable<void> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools`;\r\n    const association = {\r\n      toolId\r\n    };\r\n    return this.http.post<void>(url, JSON.stringify(association));\r\n  }\r\n\r\n  deleteToolAssociation(contextId: string, toolId: string): Observable<any> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools/${toolId}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  getPermissions(id: string): Observable<ContextPermission[]> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/permissions';\r\n    return this.http.get<ContextPermission[]>(url);\r\n  }\r\n\r\n  addPermissionAssociation(\r\n    contextId: string,\r\n    profil: string,\r\n    type: TypePermission\r\n  ): Observable<ContextPermission[]> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/permissions`;\r\n    const association = {\r\n      profil,\r\n      typePermission: type\r\n    };\r\n    return this.http.post<ContextPermission[]>(\r\n      url,\r\n      JSON.stringify(association)\r\n    );\r\n  }\r\n\r\n  deletePermissionAssociation(\r\n    contextId: string,\r\n    permissionId: string\r\n  ): Observable<void> {\r\n    const url = `${\r\n      this.baseUrl\r\n    }/contexts/${contextId}/permissions/${permissionId}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  // ======================================================================\r\n\r\n  getLocalContexts(): Observable<ContextsList> {\r\n    const url = this.getPath(this.options.contextListFile);\r\n    return this.http.get<ContextsList>(url).pipe(\r\n      map((res: any) => {\r\n        return { ours: res };\r\n      })\r\n    );\r\n  }\r\n\r\n  getLocalContext(uri): Observable<DetailedContext> {\r\n    const url = this.getPath(`${uri}.json`);\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      catchError(res => {\r\n        return this.handleError(res, uri);\r\n      })\r\n    );\r\n  }\r\n\r\n  loadContexts() {\r\n    let request;\r\n    if (this.baseUrl) {\r\n      request = this.get();\r\n    } else {\r\n      request = this.getLocalContexts();\r\n    }\r\n    request.subscribe(contexts => {\r\n      const publicsContexts = this.contexts$.value.public;\r\n\r\n      if (publicsContexts) {\r\n        const contextUri = publicsContexts.find(\r\n          c => c.uri === this.options.defaultContextUri\r\n        );\r\n        if (contextUri) {\r\n          if (!contexts.public) {\r\n            contexts.public = [];\r\n          }\r\n          contexts.public.push(contextUri);\r\n        }\r\n      }\r\n      this.contexts$.next(contexts);\r\n    });\r\n  }\r\n\r\n  loadDefaultContext() {\r\n    const loadFct = (direct = false) => {\r\n      if (!direct && this.baseUrl && this.authService.authenticated) {\r\n        this.getDefault().subscribe(\r\n          (_context: DetailedContext) => {\r\n            this.options.defaultContextUri = _context.uri;\r\n            this.addContextToList(_context);\r\n            this.setContext(_context);\r\n          },\r\n          () => {\r\n            this.defaultContextId$.next(undefined);\r\n            this.loadContext(this.options.defaultContextUri);\r\n          }\r\n        );\r\n      } else {\r\n        this.loadContext(this.options.defaultContextUri);\r\n      }\r\n    };\r\n\r\n    if (this.route && this.route.options.contextKey) {\r\n      this.route.queryParams.pipe(debounceTime(100)).subscribe(params => {\r\n        const contextParam = params[this.route.options.contextKey as string];\r\n        let direct = false;\r\n        if (contextParam) {\r\n          this.options.defaultContextUri = contextParam;\r\n          direct = true;\r\n        }\r\n        loadFct(direct);\r\n      });\r\n    } else {\r\n      loadFct();\r\n    }\r\n  }\r\n\r\n  loadContext(uri: string) {\r\n    const context = this.context$.value;\r\n    if (context && context.uri === uri) {\r\n      return;\r\n    }\r\n\r\n    const contexts$$ = this.getContextByUri(uri).subscribe(\r\n      (_context: DetailedContext) => {\r\n        contexts$$.unsubscribe();\r\n        this.addContextToList(_context);\r\n        this.setContext(_context);\r\n      },\r\n      err => {\r\n        contexts$$.unsubscribe();\r\n      }\r\n    );\r\n  }\r\n\r\n  setContext(context: DetailedContext) {\r\n    const currentContext = this.context$.value;\r\n    if (currentContext && context && context.id === currentContext.id) {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      return;\r\n    }\r\n\r\n    if (!context.map) {\r\n      context.map = { view: {} };\r\n    }\r\n\r\n    Object.assign(context.map.view, this.mapViewFromRoute);\r\n\r\n    this.context$.next(context);\r\n  }\r\n\r\n  loadEditedContext(uri: string) {\r\n    this.getContextByUri(uri).subscribe((_context: DetailedContext) => {\r\n      this.setEditedContext(_context);\r\n    });\r\n  }\r\n\r\n  setEditedContext(context: DetailedContext) {\r\n    this.editedContext$.next(context);\r\n  }\r\n\r\n  getContextFromMap(igoMap: IgoMap): DetailedContext {\r\n    const view = igoMap.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const context = {\r\n      uri: uuid(),\r\n      title: '',\r\n      scope: 'private',\r\n      map: {\r\n        view: {\r\n          center: center.getCoordinates(),\r\n          zoom: view.getZoom(),\r\n          projection: proj\r\n        }\r\n      },\r\n      layers: [],\r\n      tools: []\r\n    };\r\n\r\n    const layers = igoMap.layers$.getValue();\r\n\r\n    for (const l of layers) {\r\n      const layer: any = l;\r\n      const opts = {\r\n        id: layer.options.id ? String(layer.options.id) : undefined,\r\n        layerOptions: {\r\n          title: layer.options.title,\r\n          zIndex: layer.zIndex,\r\n          visible: layer.visible\r\n        },\r\n        sourceOptions: {\r\n          type: layer.dataSource.options.type,\r\n          params: layer.dataSource.options.params,\r\n          url: layer.dataSource.options.url\r\n        }\r\n      };\r\n      context.layers.push(opts);\r\n    }\r\n\r\n    context.tools = this.tools.map(tool => {\r\n      return { id: String(tool.id) };\r\n    });\r\n\r\n    return context;\r\n  }\r\n\r\n  setTools(tools: Tool[]) {\r\n    this.tools = tools;\r\n  }\r\n\r\n  private getContextByUri(uri: string): Observable<DetailedContext> {\r\n    if (this.baseUrl) {\r\n      let contextToLoad;\r\n      for (const key of Object.keys(this.contexts$.value)) {\r\n        contextToLoad = this.contexts$.value[key].find(c => {\r\n          return c.uri === uri;\r\n        });\r\n        if (contextToLoad) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      // TODO : use always id or uri\r\n      const id = contextToLoad ? contextToLoad.id : uri;\r\n      return this.getDetails(id);\r\n    }\r\n\r\n    return this.getLocalContext(uri);\r\n  }\r\n\r\n  private readParamsFromRoute() {\r\n    if (!this.route) {\r\n      return;\r\n    }\r\n\r\n    this.route.queryParams.subscribe(params => {\r\n      const centerKey = this.route.options.centerKey;\r\n      if (centerKey && params[centerKey as string]) {\r\n        const centerParams = params[centerKey as string];\r\n        this.mapViewFromRoute.center = centerParams.split(',').map(Number);\r\n        this.mapViewFromRoute.geolocate = false;\r\n      }\r\n\r\n      const projectionKey = this.route.options.projectionKey;\r\n      if (projectionKey && params[projectionKey as string]) {\r\n        const projectionParam = params[projectionKey as string];\r\n        this.mapViewFromRoute.projection = projectionParam;\r\n      }\r\n\r\n      const zoomKey = this.route.options.zoomKey;\r\n      if (zoomKey && params[zoomKey as string]) {\r\n        const zoomParam = params[zoomKey as string];\r\n        this.mapViewFromRoute.zoom = Number(zoomParam);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getPath(file: string) {\r\n    const basePath = this.options.basePath.replace(/\\/$/, '');\r\n\r\n    return `${basePath}/${file}`;\r\n  }\r\n\r\n  private handleError(res: Response, uri: string): Message[] {\r\n    const context = this.contexts$.value.ours.find(obj => obj.uri === uri);\r\n    const titleContext = context ? context.title : uri;\r\n    const titleError = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.title'\r\n    );\r\n\r\n    const textError = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.text',\r\n      { value: titleContext }\r\n    );\r\n\r\n    throw [{ title: titleError, text: textError }];\r\n  }\r\n\r\n  private handleContextsChange(\r\n    contexts: ContextsList,\r\n    keepCurrentContext = false\r\n  ) {\r\n    const context = this.context$.value;\r\n    const editedContext = this.editedContext$.value;\r\n\r\n    if (!keepCurrentContext || !this.findContext(context)) {\r\n      this.loadDefaultContext();\r\n    } else {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      this.getDefault().subscribe(() => {});\r\n    }\r\n    const editedFound = this.findContext(editedContext);\r\n    if (!editedFound || editedFound.permission !== 'write') {\r\n      this.setEditedContext(undefined);\r\n    }\r\n  }\r\n\r\n  private addContextToList(context: Context) {\r\n    const contextFound = this.findContext(context);\r\n    if (!contextFound) {\r\n      const contextSimplifie = {\r\n        id: context.id,\r\n        uri: context.uri,\r\n        title: context.title,\r\n        scope: context.scope,\r\n        permission: TypePermission[TypePermission.read]\r\n      };\r\n      if (this.contexts$.value && this.contexts$.value.public) {\r\n        this.contexts$.value.public.push(contextSimplifie);\r\n        this.contexts$.next(this.contexts$.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  private findContext(context: Context) {\r\n    if (!context || !context.id) {\r\n      return false;\r\n    }\r\n\r\n    const contexts = this.contexts$.value;\r\n    let found;\r\n    for (const key of Object.keys(contexts)) {\r\n      const value = contexts[key];\r\n      found = value.find(c => c.id === context.id);\r\n      if (found) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n}\r\n","import { Directive, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { IgoMap, MapViewOptions, MapBrowserComponent } from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext, ContextMapView } from './context.interface';\r\n\r\n@Directive({\r\n  selector: '[igoMapContext]'\r\n})\r\nexport class MapContextDirective implements OnInit, OnDestroy {\r\n  private component: MapBrowserComponent;\r\n  private context$$: Subscription;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    component: MapBrowserComponent,\r\n    private contextService: ContextService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter(context => context !== undefined))\r\n      .subscribe(context => this.handleContextChange(context));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.map === undefined) {\r\n      return;\r\n    }\r\n\r\n    // This creates a new ol.Map when the context changes. Doing that\r\n    // allows the print tool to work properly even when the map's canvas\r\n    // has been tainted (CORS) with the layers of another context. This could\r\n    // have some side effects such as unbinding all listeners on the first map.\r\n    // A better solution would be to create a new map (preview) before\r\n    // printing and avoid the tainted canvas issue. This will come later so\r\n    // this snippet of code is kept here in case it takes too long becomes\r\n    // an issue\r\n\r\n    // const target = this.component.map.ol.getTarget();\r\n    // this.component.map.ol.setTarget(undefined);\r\n    // this.component.map.init();\r\n    // this.component.map.ol.setTarget(target);\r\n\r\n    const viewContext: ContextMapView = context.map.view;\r\n    if (viewContext.keepCurrentView !== true) {\r\n      this.component.view = viewContext as MapViewOptions;\r\n    }\r\n  }\r\n}\r\n","import { Directive, OnInit, OnDestroy, Optional } from '@angular/core';\r\n\r\nimport { Subscription, of, zip } from 'rxjs';\r\nimport { withLatestFrom, skip, filter } from 'rxjs/operators';\r\n\r\nimport { RouteService } from '@igo2/core';\r\nimport {\r\n  IgoMap,\r\n  MapBrowserComponent,\r\n  Layer,\r\n  LayerService,\r\n  LayerOptions\r\n} from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext } from './context.interface';\r\n\r\n@Directive({\r\n  selector: '[igoLayerContext]'\r\n})\r\nexport class LayerContextDirective implements OnInit, OnDestroy {\r\n\r\n  private context$$: Subscription;\r\n  private queryParams: any;\r\n\r\n  private contextLayers: Layer[] = [];\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    private component: MapBrowserComponent,\r\n    private contextService: ContextService,\r\n    private layerService: LayerService,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter(context => context !== undefined))\r\n      .subscribe(context => this.handleContextChange(context));\r\n\r\n    if (\r\n      this.route &&\r\n      this.route.options.visibleOnLayersKey &&\r\n      this.route.options.visibleOffLayersKey &&\r\n      this.route.options.contextKey\r\n    ) {\r\n      const queryParams$$ = this.route.queryParams\r\n        .pipe(skip(1))\r\n        .subscribe(params => {\r\n          this.queryParams = params;\r\n          queryParams$$.unsubscribe();\r\n        });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.layers === undefined) { return; }\r\n\r\n    this.map.removeLayers(this.contextLayers);\r\n    this.contextLayers = [];\r\n\r\n    const layersAndIndex$ = zip(...context.layers.map((layerOptions: LayerOptions, index: number) => {\r\n      return this.layerService.createAsyncLayer(layerOptions).pipe(\r\n        withLatestFrom(of(index))\r\n      );\r\n    }));\r\n\r\n    layersAndIndex$.subscribe((layersAndIndex: [Layer, number][]) => {\r\n      const layers = layersAndIndex.reduce((acc: Layer[], bunch: [Layer, number]) => {\r\n        const [layer, index] = bunch;\r\n        layer.visible = this.computeLayerVisibilityFromUrl(layer);\r\n        layer.zIndex = layer.zIndex || index + 1;  // Map indexes start at 1\r\n        acc[index] = layer;\r\n        return acc;\r\n      }, new Array(layersAndIndex.length));\r\n      this.contextLayers = layers;\r\n      this.map.addLayers(layers);\r\n    });\r\n  }\r\n\r\n  private computeLayerVisibilityFromUrl(layer: Layer): boolean {\r\n    const params = this.queryParams;\r\n    const currentContext = this.contextService.context$.value.uri;\r\n    const currentLayerid: string = layer.id;\r\n\r\n    let visible = layer.visible;\r\n    if (!params || !currentLayerid) {\r\n      return visible;\r\n    }\r\n\r\n    const contextParams = params[this.route.options.contextKey as string];\r\n    if (contextParams === currentContext || !contextParams) {\r\n      let visibleOnLayersParams = '';\r\n      let visibleOffLayersParams = '';\r\n      let visiblelayers: string[] = [];\r\n      let invisiblelayers: string[] = [];\r\n\r\n      if (\r\n        this.route.options.visibleOnLayersKey &&\r\n        params[this.route.options.visibleOnLayersKey as string]\r\n      ) {\r\n        visibleOnLayersParams =\r\n          params[this.route.options.visibleOnLayersKey as string];\r\n      }\r\n      if (\r\n        this.route.options.visibleOffLayersKey &&\r\n        params[this.route.options.visibleOffLayersKey as string]\r\n      ) {\r\n        visibleOffLayersParams =\r\n          params[this.route.options.visibleOffLayersKey as string];\r\n      }\r\n\r\n      /* This order is important because to control whichever\r\n       the order of * param. First whe open and close everything.*/\r\n      if (visibleOnLayersParams === '*') {\r\n        visible = true;\r\n      }\r\n      if (visibleOffLayersParams === '*') {\r\n        visible = false;\r\n      }\r\n\r\n      // After, managing named layer by id (context.json OR id from datasource)\r\n      visiblelayers = visibleOnLayersParams.split(',');\r\n      invisiblelayers = visibleOffLayersParams.split(',');\r\n      if (visiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = true;\r\n      }\r\n      if (invisiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = false;\r\n      }\r\n    }\r\n\r\n    return visible;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { DetailedContext, ContextsList } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-list',\r\n  templateUrl: './context-list.component.html'\r\n})\r\nexport class ContextListComponent {\r\n  @Input()\r\n  get contexts(): ContextsList {\r\n    return this._contexts;\r\n  }\r\n  set contexts(value: ContextsList) {\r\n    this._contexts = value;\r\n  }\r\n  private _contexts: ContextsList = { ours: [] };\r\n\r\n  @Input()\r\n  get selectedContext(): DetailedContext {\r\n    return this._selectedContext;\r\n  }\r\n  set selectedContext(value: DetailedContext) {\r\n    this._selectedContext = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _selectedContext: DetailedContext;\r\n\r\n  @Input()\r\n  get defaultContextId(): string {\r\n    return this._defaultContextId;\r\n  }\r\n  set defaultContextId(value: string) {\r\n    this._defaultContextId = value;\r\n  }\r\n  private _defaultContextId: string;\r\n\r\n  @Output() select = new EventEmitter<DetailedContext>();\r\n  @Output() unselect = new EventEmitter<DetailedContext>();\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n\r\n  public titleMapping = {\r\n    ours: 'igo.context.contextManager.ourContexts',\r\n    shared: 'igo.context.contextManager.sharedContexts',\r\n    public: 'igo.context.contextManager.publicContexts'\r\n  };\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { MapService } from '@igo2/geo';\r\n\r\nimport {\r\n  Context,\r\n  DetailedContext,\r\n  ContextsList\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextListComponent } from './context-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextListBinding]'\r\n})\r\nexport class ContextListBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextListComponent;\r\n  private contexts$$: Subscription;\r\n  private selectedContext$$: Subscription;\r\n  private defaultContextId$$: Subscription;\r\n\r\n  @HostListener('select', ['$event'])\r\n  onSelect(context: Context) {\r\n    this.contextService.loadContext(context.uri);\r\n  }\r\n\r\n  @HostListener('edit', ['$event'])\r\n  onEdit(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('save', ['$event'])\r\n  onSave(context: Context) {\r\n    const map = this.mapService.getMap();\r\n    const contextFromMap = this.contextService.getContextFromMap(map);\r\n\r\n    const changes: any = {\r\n      layers: contextFromMap.layers,\r\n      map: {\r\n        view: contextFromMap.map.view\r\n      }\r\n    };\r\n\r\n    this.contextService.update(context.id, changes).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.saveMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.saveTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('favorite', ['$event'])\r\n  onFavorite(context: Context) {\r\n    this.contextService.setDefault(context.id).subscribe(() => {\r\n      this.contextService.defaultContextId$.next(context.id);\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('manageTools', ['$event'])\r\n  onManageTools(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('managePermissions', ['$event'])\r\n  onManagePermissions(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('delete', ['$event'])\r\n  onDelete(context: Context) {\r\n    const translate = this.languageService.translate;\r\n    this.confirmDialogService\r\n      .open(\r\n        translate.instant('igo.context.contextManager.dialog.confirmDelete')\r\n      )\r\n      .subscribe(confirm => {\r\n        if (confirm) {\r\n          this.contextService.delete(context.id).subscribe(() => {\r\n            const message = translate.instant(\r\n              'igo.context.contextManager.dialog.deleteMsg',\r\n              {\r\n                value: context.title\r\n              }\r\n            );\r\n            const title = translate.instant(\r\n              'igo.context.contextManager.dialog.deleteTitle'\r\n            );\r\n            this.messageService.info(message, title);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  @HostListener('clone', ['$event'])\r\n  onClone(context: DetailedContext) {\r\n    const properties = {\r\n      title: context.title + '-copy',\r\n      uri: context.uri + '-copy'\r\n    };\r\n    this.contextService.clone(context.id, properties).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextListComponent,\r\n    private contextService: ContextService,\r\n    private mapService: MapService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input contexts\r\n    this.component.contexts = { ours: [] };\r\n\r\n    this.contexts$$ = this.contextService.contexts$.subscribe(contexts =>\r\n      this.handleContextsChange(contexts)\r\n    );\r\n\r\n    this.defaultContextId$$ = this.contextService.defaultContextId$.subscribe(\r\n      id => {\r\n        this.component.defaultContextId = id;\r\n      }\r\n    );\r\n\r\n    // See feature-list.component for an explanation about the debounce time\r\n    this.selectedContext$$ = this.contextService.context$\r\n      .pipe(debounceTime(100))\r\n      .subscribe(context => (this.component.selectedContext = context));\r\n\r\n    this.contextService.loadContexts();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contexts$$.unsubscribe();\r\n    this.selectedContext$$.unsubscribe();\r\n    this.defaultContextId$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextsChange(contexts: ContextsList) {\r\n    this.component.contexts = contexts;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { TypePermission } from '../shared/context.enum';\r\nimport { DetailedContext } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-item',\r\n  templateUrl: './context-item.component.html',\r\n  styleUrls: ['./context-item.component.scss']\r\n})\r\nexport class ContextItemComponent {\r\n  public typePermission = TypePermission;\r\n  public color = 'primary';\r\n  public collapsed = true;\r\n\r\n  @Input()\r\n  get context(): DetailedContext {\r\n    return this._context;\r\n  }\r\n  set context(value: DetailedContext) {\r\n    this._context = value;\r\n  }\r\n  private _context: DetailedContext;\r\n\r\n  @Input()\r\n  get default(): boolean {\r\n    return this._default;\r\n  }\r\n  set default(value: boolean) {\r\n    this._default = value;\r\n  }\r\n  private _default = false;\r\n\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n\r\n  constructor(public auth: AuthService) {}\r\n\r\n  favoriteClick(context) {\r\n    if (this.auth.authenticated) {\r\n      this.favorite.emit(context);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-form',\r\n  templateUrl: './context-form.component.html',\r\n  styleUrls: ['./context-form.component.scss']\r\n})\r\nexport class ContextFormComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public prefix: string;\r\n\r\n  @Input()\r\n  get btnSubmitText(): string {\r\n    return this._btnSubmitText;\r\n  }\r\n  set btnSubmitText(value: string) {\r\n    this._btnSubmitText = value;\r\n  }\r\n  private _btnSubmitText: string;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.buildForm();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled = false;\r\n\r\n  // TODO: replace any by ContextOptions or Context\r\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\r\n  @Output() clone: EventEmitter<any> = new EventEmitter();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    let inputs = Object.assign({}, value);\r\n    inputs = ObjectUtils.removeNull(inputs);\r\n    inputs.uri = inputs.uri.replace(' ', '');\r\n    if (inputs.uri) {\r\n      inputs.uri = this.prefix + '-' + inputs.uri;\r\n    } else {\r\n      inputs.uri = this.prefix;\r\n    }\r\n    this.submitForm.emit(inputs);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const context: any = this.context || {};\r\n\r\n    const uriSplit = context.uri.split('-');\r\n    this.prefix = uriSplit.shift();\r\n    const uri = uriSplit.join('-');\r\n\r\n    this.form = this.formBuilder.group({\r\n      title: [context.title],\r\n      uri: [uri || ' ']\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-edit',\r\n  templateUrl: './context-edit.component.html'\r\n})\r\nexport class ContextEditComponent {\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.refresh();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  refresh() {\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { Context, DetailedContext } from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextEditComponent } from './context-edit.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextEditBinding]'\r\n})\r\nexport class ContextEditBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextEditComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @HostListener('submitForm', ['$event'])\r\n  onEdit(context: Context) {\r\n    const id = this.component.context.id;\r\n    this.contextService.update(id, context).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant('igo.context.contextManager.dialog.saveMsg', {\r\n        value: context.title || this.component.context.title\r\n      });\r\n      const title = translate.instant('igo.context.contextManager.dialog.saveTitle');\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextEditComponent,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  ContextPermissionsList\r\n} from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-permissions',\r\n  templateUrl: './context-permissions.component.html',\r\n  styleUrls: ['./context-permissions.component.scss']\r\n})\r\nexport class ContextPermissionsComponent implements OnInit {\r\n  public form: FormGroup;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get permissions(): ContextPermissionsList {\r\n    return this._permissions;\r\n  }\r\n  set permissions(value: ContextPermissionsList) {\r\n    this._permissions = value;\r\n  }\r\n  private _permissions: ContextPermissionsList;\r\n\r\n  @Output() addPermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output()\r\n  removePermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output() scopeChanged: EventEmitter<Context> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    this.addPermission.emit(value);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      profil: [],\r\n      typePermission: ['read']\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  DetailedContext\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextPermissionsComponent } from './context-permissions.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextPermissionsBinding]'\r\n})\r\nexport class ContextPermissionsBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextPermissionsComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @HostListener('addPermission', ['$event'])\r\n  onAddPermission(permission: ContextPermission) {\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .addPermissionAssociation(\r\n        contextId,\r\n        permission.profil,\r\n        permission.typePermission\r\n      )\r\n      .subscribe(profils => {\r\n        for (const p of profils) {\r\n          this.component.permissions[permission.typePermission].push(p);\r\n        }\r\n        const profil = permission.profil;\r\n        const translate = this.languageService.translate;\r\n        const message = translate.instant('igo.context.permission.dialog.addMsg', {\r\n          value: profil\r\n        });\r\n        const title = translate.instant('igo.context.permission.dialog.addTitle');\r\n        this.messageService.success(message, title);\r\n      });\r\n  }\r\n\r\n  @HostListener('removePermission', ['$event'])\r\n  onRemovePermission(permission: ContextPermission) {\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .deletePermissionAssociation(contextId, permission.id)\r\n      .subscribe(() => {\r\n        const index = this.component.permissions[\r\n          permission.typePermission\r\n        ].findIndex(p => {\r\n          return p.id === permission.id;\r\n        });\r\n        this.component.permissions[permission.typePermission].splice(index, 1);\r\n\r\n        const profil = permission.profil;\r\n        const translate = this.languageService.translate;\r\n        const message = translate.instant('igo.context.permission.dialog.deleteMsg', {\r\n          value: profil\r\n        });\r\n        const title = translate.instant('igo.context.permission.dialog.deleteTitle');\r\n        this.messageService.success(message, title);\r\n      });\r\n  }\r\n\r\n  @HostListener('scopeChanged', ['$event'])\r\n  onScopeChanged(context: Context) {\r\n    const scope = context.scope;\r\n    this.contextService.update(context.id, { scope }).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedMsg',\r\n        {\r\n          value: translate.instant('igo.context.permission.scope.' + scope)\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextPermissionsComponent,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n\r\n    if (context) {\r\n      this.contextService\r\n        .getPermissions(context.id)\r\n        .subscribe(permissionsArray => {\r\n          permissionsArray = permissionsArray || [];\r\n          const permissions = {\r\n            read: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'read';\r\n            }),\r\n            write: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'write';\r\n            })\r\n          };\r\n          return (this.component.permissions = permissions);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule\r\n} from '@angular/material';\r\n\r\nimport { IgoAuthModule } from '@igo2/auth';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoListModule,\r\n  IgoKeyValueModule,\r\n  IgoCollapsibleModule,\r\n  IgoStopPropagationModule\r\n} from '@igo2/common';\r\n\r\nimport { MapContextDirective } from './shared/map-context.directive';\r\nimport { LayerContextDirective } from './shared/layer-context.directive';\r\nimport { ContextListComponent } from './context-list/context-list.component';\r\nimport { ContextListBindingDirective } from './context-list/context-list-binding.directive';\r\nimport { ContextItemComponent } from './context-item/context-item.component';\r\nimport { ContextFormComponent } from './context-form/context-form.component';\r\nimport { ContextEditComponent } from './context-edit/context-edit.component';\r\nimport { ContextEditBindingDirective } from './context-edit/context-edit-binding.directive';\r\nimport { ContextPermissionsComponent } from './context-permissions/context-permissions.component';\r\nimport { ContextPermissionsBindingDirective } from './context-permissions/context-permissions-binding.directive';\r\n\r\nconst CONTEXT_DIRECTIVES = [\r\n  MapContextDirective,\r\n  LayerContextDirective\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    IgoAuthModule,\r\n    IgoListModule,\r\n    IgoKeyValueModule,\r\n    IgoCollapsibleModule,\r\n    IgoStopPropagationModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ],\r\n  declarations: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ]\r\n})\r\nexport class IgoContextManagerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextManagerModule\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-dialog',\r\n  templateUrl: './bookmark-dialog.component.html'\r\n})\r\nexport class BookmarkDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<BookmarkDialogComponent>) {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\nimport { BookmarkDialogComponent } from './bookmark-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-button',\r\n  templateUrl: './bookmark-button.component.html',\r\n  styleUrls: ['./bookmark-button.component.scss']\r\n})\r\nexport class BookmarkButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  createContext() {\r\n    this.dialog\r\n      .open(BookmarkDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          const context = this.contextService.getContextFromMap(this.map);\r\n          context.title = title;\r\n          this.contextService.create(context).subscribe(() => {\r\n            const translate = this.languageService.translate;\r\n            const titleD = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createTitle'\r\n            );\r\n            const message = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createMsg',\r\n              {\r\n                value: context.title\r\n              }\r\n            );\r\n            this.messageService.success(message, titleD);\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, EMPTY } from 'rxjs';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { Poi } from './poi.interface';\r\n\r\n@Injectable()\r\nexport class PoiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    this.baseUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  get(): Observable<Poi[]> {\r\n    if (!this.baseUrl) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.get<Poi[]>(url);\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    const url = this.baseUrl + '/pois/' + id;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  create(context: Poi): Observable<Poi> {\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.post<Poi>(url, JSON.stringify(context));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-poi-dialog',\r\n  templateUrl: './poi-dialog.component.html'\r\n})\r\nexport class PoiDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PoiDialogComponent>) {}\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as olproj from 'ol/proj';\r\nimport * as oleasing from 'ol/easing';\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { PoiService } from './shared/poi.service';\r\nimport { Poi } from './shared/poi.interface';\r\nimport { PoiDialogComponent } from './poi-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-poi-button',\r\n  templateUrl: './poi-button.component.html',\r\n  styleUrls: ['./poi-button.component.scss']\r\n})\r\nexport class PoiButtonComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public pois: Poi[];\r\n  private authenticate$$: Subscription;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private authService: AuthService,\r\n    private poiService: PoiService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authenticate$$ = this.authService.authenticate$.subscribe(auth => {\r\n      if (auth) {\r\n        this.getPois();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authenticate$$.unsubscribe();\r\n  }\r\n\r\n  deletePoi(poi: Poi) {\r\n    if (poi && poi.id) {\r\n      const translate = this.languageService.translate;\r\n      this.confirmDialogService\r\n        .open(translate.instant('igo.context.poiButton.dialog.confirmDelete'))\r\n        .subscribe(confirm => {\r\n          if (confirm) {\r\n            this.poiService.delete(poi.id).subscribe(\r\n              () => {\r\n                const title = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteTitle'\r\n                );\r\n                const message = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteMsg',\r\n                  {\r\n                    value: poi.title\r\n                  }\r\n                );\r\n                this.messageService.info(message, title);\r\n                this.pois = this.pois.filter(p => p.id !== poi.id);\r\n              },\r\n              err => {\r\n                err.error.title = 'DELETE Pois';\r\n                this.messageService.showError(err);\r\n              }\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private getPois() {\r\n    this.poiService.get().subscribe(\r\n      rep => {\r\n        this.pois = rep;\r\n      },\r\n      err => {\r\n        err.error.title = 'GET Pois';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  createPoi() {\r\n    const view = this.map.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const poi: Poi = {\r\n      title: '',\r\n      x: center.getCoordinates()[0],\r\n      y: center.getCoordinates()[1],\r\n      zoom: view.getZoom()\r\n    };\r\n\r\n    this.dialog\r\n      .open(PoiDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          poi.title = title;\r\n          this.poiService.create(poi).subscribe(\r\n            newPoi => {\r\n              const translate = this.languageService.translate;\r\n              const titleD = translate.instant(\r\n                'igo.context.poiButton.dialog.createTitle'\r\n              );\r\n              const message = translate.instant(\r\n                'igo.context.poiButton.dialog.createMsg',\r\n                {\r\n                  value: poi.title\r\n                }\r\n              );\r\n              this.messageService.success(message, titleD);\r\n              poi.id = newPoi.id;\r\n              this.pois.push(poi);\r\n            },\r\n            err => {\r\n              err.error.title = 'POST Pois';\r\n              this.messageService.showError(err);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  zoomOnPoi(id) {\r\n    const poi = this.pois.find(p => p.id === id);\r\n\r\n    const center = olproj.fromLonLat(\r\n      [Number(poi.x), Number(poi.y)],\r\n      this.map.projection\r\n    );\r\n\r\n    this.map.ol.getView().animate({\r\n      center,\r\n      zoom: poi.zoom,\r\n      duration: 500,\r\n      easing: oleasing.easeOut\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\n\r\n@Component({\r\n  selector: 'igo-user-dialog',\r\n  templateUrl: './user-dialog.component.html'\r\n})\r\nexport class UserDialogComponent {\r\n  public user;\r\n  public exp;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UserDialogComponent>,\r\n    private auth: AuthService\r\n  ) {\r\n    const decodeToken = this.auth.decodeToken();\r\n    this.user = decodeToken.user;\r\n    this.exp = new Date(decodeToken.exp * 1000).toLocaleString();\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function userButtonSlideInOut(): AnimationTriggerMetadata {\r\n  return trigger('userButtonState', [\r\n    state(\r\n      'collapse',\r\n      style({\r\n        width: '0',\r\n        overflow: 'hidden',\r\n        display: 'none'\r\n      })\r\n    ),\r\n    state(\r\n      'expand',\r\n      style({\r\n        overflow: 'hidden',\r\n        display: 'display'\r\n      })\r\n    ),\r\n    transition('collapse => expand', animate('200ms')),\r\n    transition('expand => collapse', animate('200ms'))\r\n  ]);\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { UserDialogComponent } from './user-dialog.component';\r\nimport { userButtonSlideInOut } from './user-button.animation';\r\n\r\n@Component({\r\n  selector: 'igo-user-button',\r\n  templateUrl: './user-button.component.html',\r\n  styleUrls: ['./user-button.component.scss'],\r\n  animations: [userButtonSlideInOut()]\r\n})\r\nexport class UserButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public expand = false;\r\n  public visible = false;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private config: ConfigService,\r\n    public auth: AuthService\r\n  ) {\r\n    this.visible = this.config.getConfig('auth') ? true : false;\r\n  }\r\n\r\n  accountClick() {\r\n    if (this.auth.authenticated) {\r\n      this.expand = !this.expand;\r\n    } else {\r\n      this.auth.logout();\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.expand = false;\r\n    this.auth.logout();\r\n  }\r\n\r\n  infoUser() {\r\n    this.dialog.open(UserDialogComponent, { disableClose: false });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatDialogModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoConfirmDialogModule, IgoStopPropagationModule } from '@igo2/common';\r\nimport { IgoAuthModule } from '@igo2/auth';\r\n\r\nimport { BookmarkButtonComponent } from './bookmark-button/bookmark-button.component';\r\nimport { BookmarkDialogComponent } from './bookmark-button/bookmark-dialog.component';\r\nimport { PoiButtonComponent } from './poi-button/poi-button.component';\r\nimport { PoiDialogComponent } from './poi-button/poi-dialog.component';\r\nimport { PoiService } from './poi-button/shared/poi.service';\r\nimport { UserDialogComponent } from './user-button/user-dialog.component';\r\nimport { UserButtonComponent } from './user-button/user-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    IgoConfirmDialogModule,\r\n    IgoStopPropagationModule,\r\n    IgoAuthModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatInputModule\r\n  ],\r\n  exports: [BookmarkButtonComponent, PoiButtonComponent, UserButtonComponent],\r\n  declarations: [\r\n    BookmarkButtonComponent,\r\n    BookmarkDialogComponent,\r\n    PoiButtonComponent,\r\n    PoiDialogComponent,\r\n    UserButtonComponent,\r\n    UserDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    BookmarkDialogComponent,\r\n    PoiDialogComponent,\r\n    UserDialogComponent\r\n  ],\r\n  providers: [PoiService]\r\n})\r\nexport class IgoContextMapButtonModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextMapButtonModule\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { RouteService, ConfigService, MessageService } from '@igo2/core';\r\nimport { IgoMap, RoutingFormService } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareMapService {\r\n  private apiUrl: string;\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    @Optional() private routingFormService: RoutingFormService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.apiUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  getUrl(map: IgoMap, formValues, publicShareOption) {\r\n    if (this.apiUrl) {\r\n      return this.getUrlWithApi(map, formValues);\r\n    }\r\n    return this.getUrlWithoutApi(map, publicShareOption);\r\n  }\r\n\r\n  getUrlWithApi(map: IgoMap, formValues) {\r\n    const context = this.contextService.getContextFromMap(map);\r\n    context.scope = 'public';\r\n    context.title = formValues.title;\r\n    context.uri = formValues.uri;\r\n    this.contextService.create(context).subscribe(\r\n      rep => {},\r\n      err => {\r\n        err.error.title = 'Share Map';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n    return `${location.origin + location.pathname}?context=${formValues.uri}`;\r\n  }\r\n\r\n  getUrlWithoutApi(map: IgoMap, publicShareOption) {\r\n    if (\r\n      !this.route ||\r\n      !this.route.options.visibleOnLayersKey ||\r\n      !this.route.options.visibleOffLayersKey ||\r\n      !map.viewController.getZoom()\r\n    ) {\r\n      return;\r\n    }\r\n    const llc = publicShareOption.layerlistControls.querystring;\r\n\r\n    let visibleKey = this.route.options.visibleOnLayersKey;\r\n    let invisibleKey = this.route.options.visibleOffLayersKey;\r\n    const layers = map.layers;\r\n\r\n    const routingKey = this.route.options.routingCoordKey;\r\n    const stopsCoordinates = [];\r\n    if (\r\n      this.routingFormService &&\r\n      this.routingFormService.getStopsCoordinates() &&\r\n      this.routingFormService.getStopsCoordinates().length !== 0\r\n    ) {\r\n      this.routingFormService.getStopsCoordinates().forEach(coord => {\r\n        stopsCoordinates.push(coord);\r\n      });\r\n    }\r\n    let routingUrl = '';\r\n    if (stopsCoordinates.length >= 2) {\r\n      routingUrl = `${routingKey}=${stopsCoordinates.join(';')}`;\r\n    }\r\n\r\n    const visibleLayers = layers.filter(lay => lay.visible);\r\n    const invisibleLayers = layers.filter(lay => !lay.visible);\r\n\r\n    if (visibleLayers.length === 0) {\r\n      visibleKey = '';\r\n    }\r\n    if (invisibleLayers.length === 0) {\r\n      invisibleKey = '';\r\n    }\r\n\r\n    let layersUrl = '';\r\n    let layersToLoop = [];\r\n    if (visibleLayers.length > invisibleLayers.length) {\r\n      layersUrl = `${visibleKey}=*&${invisibleKey}=`;\r\n      layersToLoop = invisibleLayers;\r\n    } else {\r\n      layersUrl = `${invisibleKey}=*&${visibleKey}=`;\r\n      layersToLoop = visibleLayers;\r\n    }\r\n\r\n    for (const layer of layersToLoop) {\r\n      if (layer.id) {\r\n        layersUrl += layer.id + ',';\r\n      }\r\n    }\r\n    layersUrl = layersUrl.substr(0, layersUrl.length - 1);\r\n\r\n    let zoom = 'zoom=' + map.viewController.getZoom();\r\n    const arrayCenter = map.viewController.getCenter('EPSG:4326') || [];\r\n    const long = arrayCenter[0].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\r\n    const lat = arrayCenter[1].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\r\n    const center = `center=${long},${lat}`.replace(/.00000/g, '');\r\n    let context = '';\r\n    if (this.contextService.context$.value) {\r\n      if (this.contextService.context$.value.uri !== '_default') {\r\n        context = 'context=' + this.contextService.context$.value.uri;\r\n      }\r\n      if (this.contextService.context$.value.map.view.zoom) {\r\n        zoom =\r\n          this.contextService.context$.value.map.view.zoom ===\r\n          map.viewController.getZoom()\r\n            ? ''\r\n            : 'zoom=' + map.viewController.getZoom();\r\n      }\r\n    }\r\n\r\n    let url = `${location.origin}${\r\n      location.pathname\r\n    }?${context}&${zoom}&${center}&${layersUrl}&${llc}&${routingUrl}`;\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      url = url.replace(/&&/g, '&');\r\n      url = url.endsWith('&') ? url.slice(0, -1) : url;\r\n    }\r\n    url = url.endsWith('&') ? url.slice(0, -1) : url;\r\n    url = url.replace('?&', '?');\r\n\r\n    return url;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { uuid, Clipboard } from '@igo2/utils';\r\nimport { ConfigService, MessageService, LanguageService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap, LayerListService } from '@igo2/geo';\r\n\r\nimport { ShareMapService } from '../shared/share-map.service';\r\n\r\n@Component({\r\n  selector: 'igo-share-map',\r\n  templateUrl: './share-map.component.html',\r\n  styleUrls: ['./share-map.component.scss']\r\n})\r\nexport class ShareMapComponent implements AfterViewInit, OnInit {\r\n  public form: FormGroup;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get hasShareMapButton(): boolean {\r\n    return this._hasShareMapButton;\r\n  }\r\n  set hasShareMapButton(value: boolean) {\r\n    this._hasShareMapButton = value;\r\n  }\r\n  private _hasShareMapButton = true;\r\n\r\n  @Input()\r\n  get hasCopyLinkButton(): boolean {\r\n    return this._hasCopyLinkButton;\r\n  }\r\n  set hasCopyLinkButton(value: boolean) {\r\n    this._hasCopyLinkButton = value;\r\n  }\r\n  private _hasCopyLinkButton = false;\r\n\r\n  public url: string;\r\n  public hasApi = false;\r\n  public userId;\r\n  public publicShareOption = {\r\n    layerlistControls: { querystring: '' }\r\n  };\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private auth: AuthService,\r\n    private shareMapService: ShareMapService,\r\n    private formBuilder: FormBuilder,\r\n    private layerListService: LayerListService\r\n  ) {\r\n    this.hasApi = this.config.getConfig('context.url') ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.auth.authenticate$.subscribe(auth => {\r\n      const decodeToken = this.auth.decodeToken();\r\n      this.userId = decodeToken.user ? decodeToken.user.id : undefined;\r\n      this.url = undefined;\r\n      this.buildForm();\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.hasApi) {\r\n      this.resetUrl();\r\n    }\r\n  }\r\n\r\n  public hasLayerListControls(): boolean {\r\n    if (this.layerListService.keyword || this.layerListService.sortedAlpha  ||\r\n      this.layerListService.onlyVisible || this.layerListService.onlyInRange ) {\r\n        this.publicShareOption.layerlistControls.querystring = '';\r\n        if (this.layerListService.keyword) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llck=' + this.layerListService.keyword;\r\n        }\r\n        if (this.layerListService.sortedAlpha) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llca=1';\r\n        }\r\n        if (this.layerListService.onlyVisible) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llcv=1';\r\n        }\r\n        if (this.layerListService.onlyInRange) {\r\n          this.publicShareOption.layerlistControls.querystring += '&llcr=1';\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  resetUrl(values: any = {}) {\r\n    this.hasLayerListControls();\r\n    const inputs = Object.assign({}, values);\r\n    inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\r\n    this.url = this.shareMapService.getUrl(this.map, inputs, this.publicShareOption);\r\n  }\r\n\r\n  copyTextToClipboard(textArea) {\r\n    const successful = Clipboard.copy(textArea);\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant(\r\n        'igo.context.shareMap.dialog.copyTitle'\r\n      );\r\n      const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const id = uuid();\r\n    let title = 'Partage ';\r\n    title += this.userId ? `(${this.userId}-${id})` : `(${id})`;\r\n    this.form = this.formBuilder.group({\r\n      title: [title],\r\n      uri: [id]\r\n    });\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, Optional } from '@angular/core';\r\n\r\nimport { LayerListService } from '@igo2/geo';\r\nimport { ShareMapComponent } from './share-map.component';\r\nimport { RouteService } from '@igo2/core';\r\n\r\n@Directive({\r\n  selector: '[igoShareMapBinding]'\r\n})\r\nexport class ShareMapBindingDirective implements OnInit {\r\n  private component: ShareMapComponent;\r\n\r\n  constructor(\r\n    @Self() component: ShareMapComponent,\r\n    private layerListService: LayerListService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initRoutes();\r\n  }\r\n\r\n  private initRoutes() {\r\n    if (\r\n      this.route &&\r\n      (this.route.options.llcKKey || this.route.options.llcAKey ||\r\n        this.route.options.llcVKey || this.route.options.llcVKey)) {\r\n      this.route.queryParams.subscribe(params => {\r\n\r\n        const keywordFromUrl = params[this.route.options.llcKKey as string];\r\n        const sortedAplhaFromUrl = params[this.route.options.llcAKey as string];\r\n        const onlyVisibleFromUrl = params[this.route.options.llcVKey as string];\r\n        const onlyInRangeFromUrl = params[this.route.options.llcRKey as string];\r\n        if (keywordFromUrl && !this.layerListService.keywordInitialized) {\r\n          this.layerListService.keyword = keywordFromUrl;\r\n          this.layerListService.keywordInitialized = true;\r\n        }\r\n        if (sortedAplhaFromUrl && !this.layerListService.sortedAlphaInitialized) {\r\n          this.layerListService.sortedAlpha = sortedAplhaFromUrl === '1' ? true : false;\r\n          this.layerListService.sortedAlphaInitialized = true;\r\n        }\r\n        if (onlyVisibleFromUrl && !this.layerListService.onlyVisibleInitialized) {\r\n          this.layerListService.onlyVisible = onlyVisibleFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyVisibleInitialized = true;\r\n        }\r\n        if (onlyInRangeFromUrl && !this.layerListService.onlyInRangeInitialized) {\r\n          this.layerListService.onlyInRange = onlyInRangeFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyInRangeInitialized = true;\r\n        }\r\n        if (!this.component.hasApi) {\r\n          this.component.resetUrl();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ShareMapComponent } from './share-map/share-map.component';\r\nimport { ShareMapBindingDirective } from './share-map/share-map-binding.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [ShareMapComponent, ShareMapBindingDirective],\r\n  declarations: [ShareMapComponent, ShareMapBindingDirective]\r\n})\r\nexport class IgoShareMapModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoShareMapModule\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Media } from '@igo2/core';\r\nimport { FlexibleState, Tool, getEntityTitle } from '@igo2/common';\r\nimport { Feature, FeatureMotion, IgoMap, moveToOlFeatures } from '@igo2/geo';\r\n\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\n\r\n@Component({\r\n  selector: 'igo-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent {\r\n  private format = new olFormatGeoJSON();\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n  @Input()\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n  set opened(value: boolean) {\r\n    this._opened = value;\r\n  }\r\n  private _opened: boolean;\r\n\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n  }\r\n  private _feature: Feature;\r\n\r\n  @Input()\r\n  get tool(): Tool {\r\n    return this._tool;\r\n  }\r\n  set tool(value: Tool) {\r\n    this._tool = value;\r\n  }\r\n  private _tool: Tool;\r\n\r\n  @Input()\r\n  get media(): Media {\r\n    return this._media;\r\n  }\r\n  set media(value: Media) {\r\n    this._media = value;\r\n  }\r\n  private _media: Media;\r\n\r\n  @Input()\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    if (value) {\r\n      this._title = value;\r\n    }\r\n  }\r\n  private _title: string = this.titleService.getTitle();\r\n\r\n  public topPanelState: FlexibleState = 'initial';\r\n\r\n  get featureTitle(): string {\r\n    return this.feature ? getEntityTitle(this.feature) : undefined;\r\n  }\r\n\r\n  constructor(public titleService: Title) {}\r\n\r\n  zoomToFeatureExtent() {\r\n    if (this.feature.geometry) {\r\n      const olFeature = this.format.readFeature(this.feature, {\r\n        dataProjection: this.feature.projection,\r\n        featureProjection: this.map.projection\r\n      });\r\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\r\n    }\r\n  }\r\n\r\n  toggleTopPanel() {\r\n    if (this.topPanelState === 'initial') {\r\n      this.topPanelState = 'expanded';\r\n    } else {\r\n      this.topPanelState = 'initial';\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\r\nimport { IgoFeatureModule } from '@igo2/geo';\r\n\r\nimport { IgoContextManagerModule } from '../context-manager/context-manager.module';\r\nimport { SidenavComponent } from './sidenav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule,\r\n    IgoPanelModule,\r\n    IgoFlexibleModule,\r\n    IgoFeatureModule,\r\n    IgoContextManagerModule\r\n  ],\r\n  exports: [SidenavComponent],\r\n  declarations: [SidenavComponent]\r\n})\r\nexport class IgoSidenavModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSidenavModule\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { IgoContextManagerModule } from './context-manager/context-manager.module';\r\nimport { IgoContextMapButtonModule } from './context-map-button/context-map-button.module';\r\nimport { IgoShareMapModule } from './share-map/share-map.module';\r\nimport { IgoSidenavModule } from './sidenav/sidenav.module';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [\r\n    IgoContextManagerModule,\r\n    IgoContextMapButtonModule,\r\n    IgoShareMapModule,\r\n    IgoSidenavModule\r\n  ]\r\n})\r\nexport class IgoContextModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n"]}