import { ChangeDetectorRef, AfterContentChecked } from '@angular/core';
import { OgcInterfaceFilterOptions, OgcFilterableDataSource } from '../../filter/shared/ogc-filter.interface';
import { WktService } from '../../wkt/shared/wkt.service';
import { IgoMap } from '../../map';
export declare class OgcFilterFormComponent implements AfterContentChecked {
    private cdRef;
    private wktService;
    private ogcFilterWriter;
    private _dataSource;
    private _currentFilter;
    operators: any;
    igoSpatialSelectors: any;
    value: string;
    inputOperator: any;
    fields: any[];
    values: any[];
    color: string;
    snrc: string;
    disabled: any;
    private _map;
    baseOverlayName: string;
    private _showFeatureOnMap;
    refreshFilters: Function;
    datasource: OgcFilterableDataSource;
    showFeatureOnMap: boolean;
    map: IgoMap;
    currentFilter: any;
    readonly activeFilters: OgcInterfaceFilterOptions[];
    constructor(cdRef: ChangeDetectorRef, wktService: WktService);
    ngAfterContentChecked(): void;
    updateField(init?: boolean): void;
    private addWktAsOverlay;
    toggleFilterState(event: any, filter: OgcInterfaceFilterOptions, property: any): void;
    deleteFilter(filter: OgcInterfaceFilterOptions): void;
    changeNumericProperty(filter: OgcInterfaceFilterOptions, property: any, value: any): void;
    private removeOverlayByID;
    changeOperator(filter: any): void;
    changeProperty(filter: OgcInterfaceFilterOptions, property: any, value: any): void;
    changeGeometry(filter: any, value?: any): void;
}
