{"version":3,"file":"igo2-geo.js.map","sources":["ng://@igo2/geo/lib/datasource/shared/datasources/data.service.ts","ng://@igo2/geo/lib/datasource/utils/id-generator.ts","ng://@igo2/geo/lib/datasource/shared/datasources/datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/feature-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/osm-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/xyz-datasource.ts","ng://@igo2/geo/lib/filter/shared/ogc-filter.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wfs-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wfs.service.ts","ng://@igo2/geo/lib/query/shared/query.enums.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wms-datasource.ts","ng://@igo2/geo/lib/datasource/utils/tilegrid.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wmts-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/carto-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/arcgisrest-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/tilearcgisrest-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/websocket-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/mvt-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/cluster-datasource.ts","ng://@igo2/geo/lib/feature/shared/feature.enums.ts","ng://@igo2/geo/lib/layer/shared/layer.enums.ts","ng://@igo2/geo/lib/layer/shared/layers/layer.ts","ng://@igo2/geo/lib/layer/shared/layers/layer.interface.ts","ng://@igo2/geo/lib/layer/utils/image-watcher.ts","ng://@igo2/geo/lib/layer/utils/tile-watcher.ts","ng://@igo2/geo/lib/layer/utils/legend.ts","ng://@igo2/geo/lib/layer/shared/layers/image-layer.ts","ng://@igo2/geo/lib/layer/shared/layers/tile-layer.ts","ng://@igo2/geo/lib/layer/shared/layers/vector-layer.ts","ng://@igo2/geo/lib/layer/shared/layers/vectortile-layer.ts","ng://@igo2/geo/lib/layer/shared/style.service.ts","ng://@igo2/geo/lib/query/shared/query.utils.ts","ng://@igo2/geo/lib/layer/layer-item/layer-item.component.ts","ng://@igo2/geo/lib/layer/layer-legend/layer-legend.component.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list.enum.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list.service.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list.component.ts","ng://@igo2/geo/lib/map/shared/map.service.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list-binding.directive.ts","ng://@igo2/geo/lib/feature/shared/strategies/strategy.ts","ng://@igo2/geo/lib/feature/shared/strategies/loading.ts","ng://@igo2/geo/lib/feature/shared/strategies/loading-layer.ts","ng://@igo2/geo/lib/feature/shared/store.ts","ng://@igo2/geo/lib/feature/shared/strategies/selection.ts","ng://@igo2/geo/lib/feature/shared/feature.utils.ts","ng://@igo2/geo/lib/overlay/shared/overlay.utils.ts","ng://@igo2/geo/lib/overlay/shared/overlay.ts","ng://@igo2/geo/lib/map/utils/layer-watcher.ts","ng://@igo2/geo/lib/map/shared/map.enums.ts","ng://@igo2/geo/lib/map/shared/map.utils.ts","ng://@igo2/geo/lib/map/shared/controllers/controller.ts","ng://@igo2/geo/lib/map/shared/controllers/view.ts","ng://@igo2/geo/lib/map/shared/map.ts","ng://@igo2/geo/lib/map/shared/projection.service.ts","ng://@igo2/geo/lib/map/map-browser/map-browser.component.ts","ng://@igo2/geo/lib/map/zoom-button/zoom-button.component.ts","ng://@igo2/geo/lib/map/geolocate-button/geolocate-button.component.ts","ng://@igo2/geo/lib/map/baselayers-switcher/baselayers-switcher.animation.ts","ng://@igo2/geo/lib/map/baselayers-switcher/baselayers-switcher.component.ts","ng://@igo2/geo/lib/map/baselayers-switcher/mini-basemap.component.ts","ng://@igo2/geo/lib/map/rotation-button/rotation-button.component.ts","ng://@igo2/geo/lib/datasource/utils/esri-style-generator.ts","ng://@igo2/geo/lib/datasource/shared/capabilities.service.ts","ng://@igo2/geo/lib/datasource/shared/datasource.service.ts","ng://@igo2/geo/lib/layer/shared/layer.service.ts","ng://@igo2/geo/lib/catalog/shared/catalog.enum.ts","ng://@igo2/geo/lib/query/shared/query.service.ts","ng://@igo2/geo/lib/query/shared/query.directive.ts","ng://@igo2/geo/lib/search/shared/sources/source.ts","ng://@igo2/geo/lib/query/shared/query-search-source.ts","ng://@igo2/geo/lib/catalog/shared/catalog.service.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser.component.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser-layer.component.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser-group.component.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser.module.ts","ng://@igo2/geo/lib/catalog/catalog-library/catalog-library.component.ts","ng://@igo2/geo/lib/catalog/catalog-library/catalog-library-item.component.ts","ng://@igo2/geo/lib/catalog/catalog-library/catalog-library.module.ts","ng://@igo2/geo/lib/catalog/catalog.module.ts","ng://@igo2/geo/lib/datasource/datasource.module.ts","ng://@igo2/geo/lib/filter/shared/filterable-datasource.pipe.ts","ng://@igo2/geo/lib/filter/shared/time-filter.service.ts","ng://@igo2/geo/lib/filter/shared/ogc-filter.service.ts","ng://@igo2/geo/lib/download/shared/download.service.ts","ng://@igo2/geo/lib/download/download-button/download-button.component.ts","ng://@igo2/geo/lib/download/download.module.ts","ng://@igo2/geo/lib/feature/feature-details/feature-details.component.ts","ng://@igo2/geo/lib/feature/feature-details/feature-details.module.ts","ng://@igo2/geo/lib/feature/feature-form/feature-form.component.ts","ng://@igo2/geo/lib/feature/feature-form/feature-form.module.ts","ng://@igo2/geo/lib/feature/feature.module.ts","ng://@igo2/geo/lib/filter/time-filter-form/time-filter-form.component.ts","ng://@igo2/geo/lib/filter/time-filter-item/time-filter-item.component.ts","ng://@igo2/geo/lib/filter/time-filter-list/time-filter-list.component.ts","ng://@igo2/geo/lib/filter/time-filter-list/time-filter-list-binding.directive.ts","ng://@igo2/geo/lib/wkt/shared/wkt.service.ts","ng://@igo2/geo/lib/filter/ogc-filter-form/ogc-filter-form.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-form/ogc-filterable-form.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-item/ogc-filterable-item.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-list/ogc-filterable-list.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-list/ogc-filterable-list-binding.directive.ts","ng://@igo2/geo/lib/filter/ogc-filter-button/ogc-filter-button.component.ts","ng://@igo2/geo/lib/filter/filter.module.ts","ng://@igo2/geo/lib/geometry/geometry-form-field/geometry-form-field.component.ts","ng://@igo2/geo/lib/measure/shared/measure.enum.ts","ng://@igo2/geo/lib/measure/shared/measure.utils.ts","ng://@igo2/geo/lib/geometry/shared/geometry.errors.ts","ng://@igo2/geo/lib/geometry/shared/geometry.utils.ts","ng://@igo2/geo/lib/geometry/shared/controls/draw.ts","ng://@igo2/geo/lib/geometry/shared/controls/modify.ts","ng://@igo2/geo/lib/geometry/shared/controls/slice.ts","ng://@igo2/geo/lib/measure/measurer/measurer-dialog.component.ts","ng://@igo2/geo/lib/measure/measurer/measurer.component.ts","ng://@igo2/geo/lib/measure/measurer/measure-format.pipe.ts","ng://@igo2/geo/lib/geometry/geometry-form-field/geometry-form-field-input.component.ts","ng://@igo2/geo/lib/geometry/geometry-form-field/geometry-form-field.module.ts","ng://@igo2/geo/lib/geometry/geometry.module.ts","ng://@igo2/geo/lib/import-export/shared/export.errors.ts","ng://@igo2/geo/lib/import-export/shared/export.utils.ts","ng://@igo2/geo/lib/import-export/shared/export.type.ts","ng://@igo2/geo/lib/import-export/shared/export.service.ts","ng://@igo2/geo/lib/import-export/shared/import.errors.ts","ng://@igo2/geo/lib/import-export/shared/import.utils.ts","ng://@igo2/geo/lib/import-export/shared/import.service.ts","ng://@igo2/geo/lib/import-export/import-export/import-export.component.ts","ng://@igo2/geo/lib/import-export/shared/drop-geo-file.directive.ts","ng://@igo2/geo/lib/import-export/import-export.module.ts","ng://@igo2/geo/lib/layer/layer.module.ts","ng://@igo2/geo/lib/map/shared/mapLayer.directive.ts","ng://@igo2/geo/lib/map/map.module.ts","ng://@igo2/geo/lib/measure/measurer/measurer-item.component.ts","ng://@igo2/geo/lib/measure/measurer/measurer.module.ts","ng://@igo2/geo/lib/measure/measure.module.ts","ng://@igo2/geo/lib/metadata/shared/metadata.service.ts","ng://@igo2/geo/lib/metadata/metadata-button/metadata-button.component.ts","ng://@igo2/geo/lib/metadata/metadata.module.ts","ng://@igo2/geo/lib/overlay/shared/overlay.enum.ts","ng://@igo2/geo/lib/overlay/shared/overlay.service.ts","ng://@igo2/geo/lib/overlay/shared/overlay.directive.ts","ng://@igo2/geo/lib/overlay/overlay.module.ts","ng://@igo2/geo/lib/print/shared/print.type.ts","ng://@igo2/geo/lib/print/shared/print.service.ts","ng://@igo2/geo/lib/print/print/print.component.ts","ng://@igo2/geo/lib/print/print-form/print-form.component.ts","ng://@igo2/geo/lib/print/print.module.ts","ng://@igo2/geo/lib/query/shared/query-search-source.providers.ts","ng://@igo2/geo/lib/query/query.module.ts","ng://@igo2/geo/lib/search/shared/search-source.service.ts","ng://@igo2/geo/lib/search/shared/search.utils.ts","ng://@igo2/geo/lib/search/shared/search.service.ts","ng://@igo2/geo/lib/routing/routing-sources/routing-source.ts","ng://@igo2/geo/lib/routing/shared/routing-source.service.ts","ng://@igo2/geo/lib/routing/shared/routing.service.ts","ng://@igo2/geo/lib/routing/routing-form/routing-form.service.ts","ng://@igo2/geo/lib/routing/routing-form/routing-form.component.ts","ng://@igo2/geo/lib/routing/routing-form/routing-form-binding.directive.ts","ng://@igo2/geo/lib/routing/routing.module.ts","ng://@igo2/geo/lib/search/shared/search-source-service.providers.ts","ng://@igo2/geo/lib/search/shared/sources/icherche.ts","ng://@igo2/geo/lib/search/shared/sources/icherche.providers.ts","ng://@igo2/geo/lib/utils/googleLinks.ts","ng://@igo2/geo/lib/search/shared/sources/coordinates.ts","ng://@igo2/geo/lib/search/shared/sources/coordinates.providers.ts","ng://@igo2/geo/lib/search/shared/search.enums.ts","ng://@igo2/geo/lib/search/search-selector/search-selector.component.ts","ng://@igo2/geo/lib/search/search-selector/search-selector.module.ts","ng://@igo2/geo/lib/search/search-bar/search-bar.component.ts","ng://@igo2/geo/lib/search/search-bar/search-url-param.directive.ts","ng://@igo2/geo/lib/search/search-bar/search-bar.module.ts","ng://@igo2/geo/lib/search/search-results/search-results.component.ts","ng://@igo2/geo/lib/search/search-results/search-results-item.component.ts","ng://@igo2/geo/lib/search/search-results/search-results.module.ts","ng://@igo2/geo/lib/search/search.module.ts","ng://@igo2/geo/lib/toast/toast.component.ts","ng://@igo2/geo/lib/toast/toast.module.ts","ng://@igo2/geo/lib/workspace/widgets/ogc-filter/ogc-filter.component.ts","ng://@igo2/geo/lib/workspace/widgets/widgets.ts","ng://@igo2/geo/lib/workspace/widgets/ogc-filter/ogc-filter.module.ts","ng://@igo2/geo/lib/workspace/shared/wfs-workspace.ts","ng://@igo2/geo/lib/workspace/shared/wfs-workspace.service.ts","ng://@igo2/geo/lib/workspace/shared/wms-workspace.ts","ng://@igo2/geo/lib/workspace/shared/wms-workspace.service.ts","ng://@igo2/geo/lib/workspace/workspace-selector/workspace-selector.directive.ts","ng://@igo2/geo/lib/workspace/workspace-selector/workspace-selector.module.ts","ng://@igo2/geo/lib/workspace/workspace.module.ts","ng://@igo2/geo/lib/wkt/wkt.module.ts","ng://@igo2/geo/lib/geo.module.ts","ng://@igo2/geo/lib/search/shared/sources/ilayer.ts","ng://@igo2/geo/lib/search/shared/sources/ilayer.providers.ts","ng://@igo2/geo/lib/search/shared/sources/nominatim.ts","ng://@igo2/geo/lib/search/shared/sources/nominatim.providers.ts","ng://@igo2/geo/lib/search/shared/sources/storedqueries.ts","ng://@igo2/geo/lib/search/shared/sources/storedqueries.providers.ts","ng://@igo2/geo/lib/routing/shared/routing.enum.ts","ng://@igo2/geo/lib/routing/routing-sources/osrm-routing-source.ts","ng://@igo2/geo/lib/routing/routing-sources/routing-source.provider.ts"],"sourcesContent":["export abstract class DataService {\r\n    abstract getData(): string;\r\n}\r\n","import { Md5 } from 'ts-md5';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { AnyDataSourceOptions } from '../shared/datasources/any-datasource.interface';\r\nimport { DataSourceOptions } from '../shared/datasources/datasource.interface';\r\nimport { WMSDataSourceOptions } from '../shared/datasources/wms-datasource.interface';\r\nimport { WMTSDataSourceOptions } from '../shared/datasources/wmts-datasource.interface';\r\n\r\n/**\r\n * Generate a id from it's datasource options.\r\n * @param options Data source options\r\n * @returns A id\r\n */\r\nexport function generateIdFromSourceOptions(options: DataSourceOptions): string {\r\n  const generators = {\r\n    wms: generateWMSIdFromSourceOptions,\r\n    wmts: generateWMTSIdFromSourceOptions,\r\n    xyz: generateXYZIdFromSourceOptions,\r\n    feature: generateFeatureIdFromSourceOptions,\r\n    osm: (_options: AnyDataSourceOptions) => 'OSM'\r\n  };\r\n  const generator = generators[options.type] || generateId;\r\n  return generator(options);\r\n}\r\n\r\n/**\r\n * Generate a id from WMS data source options\r\n * @param options WMS data source options\r\n * @returns A md5 hash of the the url and layers\r\n */\r\nexport function generateWMSIdFromSourceOptions(options: WMSDataSourceOptions) {\r\n  const layers = options.params.layers;\r\n  const chain = 'wms' + options.url + layers;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a id from WMTS data source options\r\n * @param options WMTS data source options\r\n * @returns A md5 hash of the the url and layer\r\n */\r\nexport function generateWMTSIdFromSourceOptions(options: WMTSDataSourceOptions) {\r\n  const layer = options.layer;\r\n  const chain = 'wmts' + options.url + layer;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a id from XYZ data source options\r\n * @param options XYZ data source options\r\n * @returns A md5 hash of the the url and layer\r\n */\r\nexport function generateXYZIdFromSourceOptions(options: WMTSDataSourceOptions) {\r\n  const chain = 'xyz' + options.url;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a id from feature data source options\r\n * @param options XYZ data source options\r\n * @returns A md5 hash of the the url and layer\r\n */\r\nexport function generateFeatureIdFromSourceOptions(options: WMTSDataSourceOptions) {\r\n  if (! options.url) { return generateId(options); }\r\n  const chain = 'feature' + options.url;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a unique id\r\n * @returns A uuid\r\n */\r\nexport function generateId(options: AnyDataSourceOptions) {\r\n  return uuid();\r\n}\r\n","import olSource from 'ol/source/Source';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\nimport {\r\n  DataSourceOptions,\r\n  DataSourceLegendOptions\r\n} from './datasource.interface';\r\n\r\nimport { DataService } from './data.service';\r\nimport { generateIdFromSourceOptions } from '../../utils/id-generator';\r\n\r\nimport { NetworkService } from '@igo2/core';\r\nimport { MVTDataSource } from './mvt-datasource';\r\nimport { ViewChild } from '@angular/core';\r\n\r\nexport abstract class DataSource {\r\n  // @ViewChild(MVTDataSource) child: MVTDataSource;\r\n\r\n  public id: string;\r\n  public ol: olSource;\r\n\r\n  constructor(\r\n    public options: DataSourceOptions = {},\r\n    protected networkService?: NetworkService,\r\n    protected dataService?: DataService\r\n  ) {\r\n    this.options = options;\r\n    this.id = this.generateId();\r\n    this.ol = this.createOlSource();\r\n  }\r\n\r\n  protected abstract createOlSource(): olSource;\r\n\r\n  protected generateId(): string {\r\n    return generateIdFromSourceOptions(this.options);\r\n  }\r\n\r\n  getLegend(scale?: number): DataSourceLegendOptions[] {\r\n    return this.options.legend ? [this.options.legend] : [];\r\n  }\r\n\r\n  onLayerStatusChange(status: SubjectStatus): void {}\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport * as olformat from 'ol/format';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { FeatureDataSourceOptions } from './feature-datasource.interface';\r\n\r\nexport class FeatureDataSource extends DataSource {\r\n  public options: FeatureDataSourceOptions;\r\n  public ol: olSourceVector;\r\n  protected createOlSource(): olSourceVector {\r\n    const sourceOptions = {\r\n      format: this.getSourceFormatFromOptions(this.options)\r\n    };\r\n\r\n    return new olSourceVector(Object.assign(sourceOptions, this.options));\r\n  }\r\n\r\n  protected getSourceFormatFromOptions(options: FeatureDataSourceOptions) {\r\n    if (options.format) {\r\n      return options.format;\r\n    }\r\n    let olFormatCls;\r\n    const formatType = options.formatType;\r\n    if (!formatType) {\r\n      olFormatCls = olformat.GeoJSON;\r\n    } else {\r\n      olFormatCls = olformat[formatType];\r\n      if (olFormatCls === undefined) {\r\n        throw new Error('Invalid vector source format ${formatType}.');\r\n      }\r\n    }\r\n\r\n    const formatOptions = options.formatOptions;\r\n    let format;\r\n    if (formatOptions) {\r\n      format = new olFormatCls(formatOptions);\r\n    } else {\r\n      format = new olFormatCls();\r\n    }\r\n\r\n    return format;\r\n  }\r\n}\r\n","import olSourceOSM from 'ol/source/OSM';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { OSMDataSourceOptions } from './osm-datasource.interface';\r\n\r\nexport class OSMDataSource extends DataSource {\r\n  public options: OSMDataSourceOptions;\r\n  public ol: olSourceOSM;\r\n\r\n  protected createOlSource(): olSourceOSM {\r\n    this.options.url = 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n    return new olSourceOSM(this.options);\r\n  }\r\n}\r\n","import olSourceXYZ from 'ol/source/XYZ';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { XYZDataSourceOptions } from './xyz-datasource.interface';\r\n\r\nexport class XYZDataSource extends DataSource {\r\n  public options: XYZDataSourceOptions;\r\n  public ol: olSourceXYZ;\r\n\r\n  protected createOlSource(): olSourceXYZ {\r\n    return new olSourceXYZ(this.options);\r\n  }\r\n\r\n}\r\n","import * as olfilter from 'ol/format/filter';\r\nimport olFormatWKT from 'ol/format/WKT';\r\nimport olFormatWFS from 'ol/format/WFS';\r\nimport olGeometry from 'ol/geom/Geometry';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport {\r\n  OgcFilter,\r\n  IgoOgcFilterObject,\r\n  WFSWriteGetFeatureOptions,\r\n  AnyBaseOgcFilterOptions,\r\n  OgcInterfaceFilterOptions\r\n} from './ogc-filter.interface';\r\n\r\nexport class OgcFilterWriter {\r\n  private filterSequence: OgcInterfaceFilterOptions[] = [];\r\n  public operators = {\r\n    PropertyIsEqualTo: { spatial: false, fieldRestrict: [] },\r\n    PropertyIsNotEqualTo: { spatial: false, fieldRestrict: [] },\r\n    PropertyIsLike: { spatial: false, fieldRestrict: ['string'] },\r\n    PropertyIsGreaterThan: { spatial: false, fieldRestrict: ['number'] },\r\n    PropertyIsGreaterThanOrEqualTo: {\r\n      spatial: false,\r\n      fieldRestrict: ['number']\r\n    },\r\n    PropertyIsLessThan: { spatial: false, fieldRestrict: ['number'] },\r\n    PropertyIsLessThanOrEqualTo: { spatial: false, fieldRestrict: ['number'] },\r\n    PropertyIsBetween: { spatial: false, fieldRestrict: ['number'] },\r\n    During: { spatial: false, fieldRestrict: [] },\r\n    PropertyIsNull: { spatial: false, fieldRestrict: [] },\r\n    Intersects: { spatial: true, fieldRestrict: [] },\r\n    Within: { spatial: true, fieldRestrict: [] },\r\n    Contains: { spatial: true, fieldRestrict: [] }\r\n  };\r\n\r\n  public buildFilter(\r\n    filters: IgoOgcFilterObject,\r\n    extent?: [number, number, number, number],\r\n    proj?,\r\n    fieldNameGeometry?: string\r\n  ): string {\r\n    let ourBboxFilter;\r\n    let enableBbox: boolean;\r\n    if (/intersects|contains|within/gi.test(JSON.stringify(filters))) {\r\n      enableBbox = false;\r\n    } else {\r\n      enableBbox = true;\r\n    }\r\n    if (filters) {\r\n      fieldNameGeometry =\r\n        (filters as any).geometryName !== undefined\r\n          ? (filters as any).geometryName\r\n          : fieldNameGeometry;\r\n    }\r\n    if (extent && filters) {\r\n      ourBboxFilter = olfilter.bbox(fieldNameGeometry, extent, proj.getCode());\r\n    }\r\n    let filterAssembly: OgcFilter;\r\n    if (filters) {\r\n      filters = this.checkIgoFiltersProperties(filters, fieldNameGeometry);\r\n      if (extent && enableBbox) {\r\n        filterAssembly = olfilter.and(\r\n          ourBboxFilter,\r\n          this.bundleFilter(filters)\r\n        );\r\n      } else {\r\n        filterAssembly = this.bundleFilter(filters);\r\n      }\r\n    } else {\r\n      return 'bbox=' + extent.join(',') + ',' + proj.getCode();\r\n    }\r\n\r\n    const wfsOptions: WFSWriteGetFeatureOptions = {\r\n      srsName: '',\r\n      featureNS: '',\r\n      featurePrefix: '',\r\n      featureTypes: ['featureTypes'],\r\n      filter: filterAssembly,\r\n      outputFormat: '',\r\n      geometryName: fieldNameGeometry\r\n    };\r\n\r\n    const query = new olFormatWFS().writeGetFeature(wfsOptions);\r\n    const str = new XMLSerializer().serializeToString(query);\r\n    const regexp1 = /typenames *=|typename *=\\\"featureTypes\\\" *>/gi;\r\n    const regexp2 = /<\\/Query><\\/GetFeature>/gi;\r\n\r\n    return 'filter=' + str.split(regexp1)[1].split(regexp2)[0];\r\n  }\r\n\r\n  private bundleFilter(filterObject: any) {\r\n    if (filterObject instanceof Array) {\r\n      const logicalArray = [];\r\n      filterObject.forEach(element => {\r\n        logicalArray.push(this.bundleFilter(element));\r\n      });\r\n      return logicalArray;\r\n    } else {\r\n      if (filterObject.hasOwnProperty('logical')) {\r\n        return this.createFilter({\r\n          operator: filterObject.logical,\r\n          logicalArray: this.bundleFilter(filterObject.filters)\r\n        });\r\n      } else if (filterObject.hasOwnProperty('operator')) {\r\n        return this.createFilter(filterObject as AnyBaseOgcFilterOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  private createFilter(filterOptions): OgcFilter {\r\n    const operator = filterOptions.operator;\r\n    const logicalArray = filterOptions.logicalArray;\r\n\r\n    const wfsPropertyName = filterOptions.propertyName;\r\n    const wfsPattern = filterOptions.pattern;\r\n    const wfsMatchCase = filterOptions.matchCase\r\n      ? filterOptions.matchCase\r\n      : true;\r\n    const wfsWildCard = filterOptions.wildCard ? filterOptions.wildCard : '*';\r\n    const wfsSingleChar = filterOptions.singleChar\r\n      ? filterOptions.singleChar\r\n      : '.';\r\n    const wfsEscapeChar = filterOptions.escapeChar\r\n      ? filterOptions.escapeChar\r\n      : '!';\r\n\r\n    const wfsLowerBoundary = filterOptions.lowerBoundary;\r\n    const wfsUpperBoundary = filterOptions.upperBoundary;\r\n\r\n    const wfsGeometryName = filterOptions.geometryName;\r\n    const wfsExtent = filterOptions.extent;\r\n    const wfsWktGeometry = filterOptions.wkt_geometry;\r\n    const wfsSrsName = filterOptions.srsName\r\n      ? filterOptions.srsName\r\n      : 'EPSG:3857';\r\n\r\n    const wfsBegin = filterOptions.begin;\r\n    const wfsEnd = filterOptions.end;\r\n\r\n    const wfsExpression = filterOptions.expression;\r\n\r\n    let geometry: olGeometry;\r\n    if (wfsWktGeometry) {\r\n      const wkt = new olFormatWKT();\r\n      geometry = wkt.readGeometry(wfsWktGeometry, {\r\n        dataProjection: wfsSrsName,\r\n        featureProjection: 'EPSG:3857'\r\n      });\r\n    }\r\n\r\n    switch (operator) {\r\n      case 'BBOX':\r\n        return olfilter.bbox(wfsGeometryName, wfsExtent, wfsSrsName);\r\n      case 'PropertyIsBetween':\r\n        return olfilter.between(\r\n          wfsPropertyName,\r\n          wfsLowerBoundary,\r\n          wfsUpperBoundary\r\n        );\r\n      case 'Contains':\r\n        return olfilter.contains(wfsGeometryName, geometry, wfsSrsName);\r\n      case 'During':\r\n        return olfilter.during(wfsPropertyName, wfsBegin, wfsEnd);\r\n      case 'PropertyIsEqualTo':\r\n        return olfilter.equalTo(\r\n          wfsPropertyName,\r\n          wfsExpression,\r\n          wfsMatchCase\r\n        );\r\n      case 'PropertyIsGreaterThan':\r\n        return olfilter.greaterThan(wfsPropertyName, wfsExpression);\r\n      case 'PropertyIsGreaterThanOrEqualTo':\r\n        return olfilter.greaterThanOrEqualTo(wfsPropertyName, wfsExpression);\r\n      case 'Intersects':\r\n        return olfilter.intersects(wfsGeometryName, geometry, wfsSrsName);\r\n      case 'PropertyIsNull':\r\n        return olfilter.isNull(wfsPropertyName);\r\n      case 'PropertyIsLessThan':\r\n        return olfilter.lessThan(wfsPropertyName, wfsExpression);\r\n      case 'PropertyIsLessThanOrEqualTo':\r\n        return olfilter.lessThanOrEqualTo(wfsPropertyName, wfsExpression);\r\n      case 'PropertyIsLike':\r\n        return olfilter.like(\r\n          wfsPropertyName,\r\n          wfsPattern.replace(/[()_]/gi, wfsSingleChar),\r\n          wfsWildCard,\r\n          wfsSingleChar,\r\n          wfsEscapeChar,\r\n          wfsMatchCase\r\n        );\r\n      case 'PropertyIsNotEqualTo':\r\n        return olfilter.notEqualTo(\r\n          wfsPropertyName,\r\n          wfsExpression,\r\n          wfsMatchCase\r\n        );\r\n      case 'Within':\r\n        return olfilter.within(wfsGeometryName, geometry, wfsSrsName);\r\n      // LOGICAL\r\n      case 'And':\r\n        return olfilter.and.apply(null, logicalArray);\r\n      case 'Or':\r\n        return olfilter.or.apply(null, logicalArray);\r\n      case 'Not':\r\n        return olfilter.not.apply(null, logicalArray);\r\n\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  public defineInterfaceFilterSequence(\r\n    filterObject: any,\r\n    geometryName,\r\n    logical = '',\r\n    level = -1\r\n  ): OgcInterfaceFilterOptions[] {\r\n    if (filterObject instanceof Array) {\r\n      filterObject.forEach(element => {\r\n        this.filterSequence.concat(\r\n          this.defineInterfaceFilterSequence(\r\n            element,\r\n            geometryName,\r\n            logical,\r\n            level\r\n          )\r\n        );\r\n      });\r\n    } else {\r\n      if (filterObject.hasOwnProperty('logical')) {\r\n        level = level + 1;\r\n        this.filterSequence.concat(\r\n          this.defineInterfaceFilterSequence(\r\n            filterObject.filters,\r\n            geometryName,\r\n            filterObject.logical,\r\n            level\r\n          )\r\n        );\r\n      } else if (filterObject.hasOwnProperty('operator')) {\r\n        this.filterSequence.push(\r\n          this.addInterfaceFilter(filterObject, geometryName, level, logical)\r\n        );\r\n      }\r\n    }\r\n    return this.filterSequence;\r\n  }\r\n\r\n  public addInterfaceFilter(\r\n    igoOgcFilterObject = { operator: 'PropertyIsEqualTo' },\r\n    geometryName?,\r\n    level = 0,\r\n    parentLogical = 'Or'\r\n  ): OgcInterfaceFilterOptions {\r\n    const f = {\r\n      propertyName: '',\r\n      operator: '',\r\n      active: '',\r\n      filterid: uuid(),\r\n      begin: '',\r\n      end: '',\r\n      lowerBoundary: '',\r\n      upperBoundary: '',\r\n      expression: '',\r\n      pattern: '',\r\n      wildCard: '*',\r\n      singleChar: '.',\r\n      escapeChar: '!',\r\n      matchCase: true,\r\n      igoSpatialSelector: '',\r\n      geometryName: '',\r\n      geometry: '',\r\n      wkt_geometry: '',\r\n      extent: '',\r\n      srsName: '',\r\n      parentLogical: '',\r\n      level: 0\r\n    };\r\n\r\n    return Object.assign(\r\n      f,\r\n      {\r\n        parentLogical,\r\n        level,\r\n        geometryName\r\n      },\r\n      igoOgcFilterObject\r\n    );\r\n  }\r\n\r\n  public checkIgoFiltersProperties(\r\n    filterObject: any,\r\n    fieldNameGeometry,\r\n    active = false\r\n  ) {\r\n    const filterArray = [];\r\n    if (filterObject instanceof Array) {\r\n      filterObject.forEach(element => {\r\n        filterArray.push(\r\n          this.checkIgoFiltersProperties(element, fieldNameGeometry, active)\r\n        );\r\n      });\r\n      return filterArray;\r\n    } else {\r\n      if (filterObject.hasOwnProperty('logical')) {\r\n        return Object.assign(\r\n          {},\r\n          {\r\n            logical: filterObject.logical,\r\n            filters: this.checkIgoFiltersProperties(\r\n              filterObject.filters,\r\n              fieldNameGeometry,\r\n              active\r\n            )\r\n          }\r\n        );\r\n      } else if (filterObject.hasOwnProperty('operator')) {\r\n        return this.addFilterProperties(\r\n          filterObject as OgcInterfaceFilterOptions,\r\n          fieldNameGeometry,\r\n          active\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private addFilterProperties(\r\n    igoOgcFilterObject: OgcInterfaceFilterOptions,\r\n    fieldNameGeometry,\r\n    active = false\r\n  ) {\r\n    const filterid = igoOgcFilterObject.hasOwnProperty('filterid')\r\n      ? igoOgcFilterObject.filterid\r\n      : uuid();\r\n    const status = igoOgcFilterObject.hasOwnProperty('active')\r\n      ? igoOgcFilterObject.active\r\n      : active;\r\n\r\n    return Object.assign(\r\n      {},\r\n      {\r\n        filterid,\r\n        active: status,\r\n        igoSpatialSelector: 'fixedExtent'\r\n      },\r\n      igoOgcFilterObject,\r\n      { geometryName: fieldNameGeometry }\r\n    );\r\n  }\r\n\r\n  public rebuiltIgoOgcFilterObjectFromSequence(\r\n    sequence: OgcInterfaceFilterOptions[]\r\n  ): IgoOgcFilterObject {\r\n    if (sequence instanceof Array) {\r\n      if (sequence.length >= 1) {\r\n        let lastParentLogical = sequence[0].parentLogical;\r\n        let nextElement: any;\r\n        let logicalArray = [];\r\n        let lastProcessedFilter;\r\n        sequence.forEach(uiFilter => {\r\n          const element = Object.assign({}, uiFilter);\r\n          const index = sequence.indexOf(uiFilter);\r\n          if (index >= 0 && index < sequence.length - 1) {\r\n            nextElement = sequence[index + 1];\r\n          } else {\r\n            nextElement = element;\r\n          }\r\n          delete element.active;\r\n          delete element.filterid;\r\n          delete element.parentLogical;\r\n          logicalArray.push(element);\r\n\r\n          if (sequence.length === 1) {\r\n            lastProcessedFilter = element;\r\n          } else if (lastParentLogical !== nextElement.parentLogical) {\r\n            if (logicalArray.length === 1) {\r\n              console.log(\r\n                'You must set at ' +\r\n                  'least two operator in a logical (' +\r\n                  lastParentLogical +\r\n                  ')'\r\n              );\r\n            } else {\r\n              lastProcessedFilter = Object.assign(\r\n                {},\r\n                { logical: lastParentLogical, filters: logicalArray }\r\n              );\r\n              logicalArray = [lastProcessedFilter];\r\n              lastParentLogical = nextElement.parentLogical;\r\n            }\r\n          }\r\n        });\r\n        return lastProcessedFilter;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport * as OlLoadingStrategy from 'ol/loadingstrategy';\r\nimport * as OlFormat from 'ol/format';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { WFSDataSourceOptions } from './wfs-datasource.interface';\r\nimport { WFSService } from './wfs.service';\r\n\r\nimport { OgcFilterWriter } from '../../../filter/shared/ogc-filter';\r\nimport { OgcFilterableDataSourceOptions } from '../../../filter/shared/ogc-filter.interface';\r\n\r\nimport { NetworkService } from '@igo2/core';\r\n\r\nexport class WFSDataSource extends DataSource {\r\n  public ol: olSourceVector;\r\n  public ogcFilterWriter: OgcFilterWriter;\r\n\r\n  constructor(\r\n    public options: WFSDataSourceOptions,\r\n    public networkService: NetworkService,\r\n    protected wfsService: WFSService\r\n  ) {\r\n    super(options, networkService);\r\n    this.options = this.wfsService.checkWfsOptions(options);\r\n    this.ogcFilterWriter = new OgcFilterWriter();\r\n    this.wfsService.getSourceFieldsFromWFS(this.options);\r\n  }\r\n\r\n  protected createOlSource(): olSourceVector {\r\n    // reassignation of params to paramsWFS and url to urlWFS to have a common interface with wms-wfs datasources\r\n    this.options.paramsWFS = this.options.params;\r\n    this.options.urlWfs = this.options.url;\r\n    // default wfs version\r\n    this.options.paramsWFS.version = this.options.paramsWFS.version\r\n      ? this.options.paramsWFS.version\r\n      : '2.0.0';\r\n    const ogcFiltersDefaultValue = true; // default values for wfs.\r\n    (this.options as OgcFilterableDataSourceOptions).ogcFilters =\r\n      (this.options as OgcFilterableDataSourceOptions).ogcFilters === undefined\r\n        ? {}\r\n        : (this.options as OgcFilterableDataSourceOptions).ogcFilters;\r\n    (this.options as OgcFilterableDataSourceOptions).ogcFilters.enabled =\r\n      (this.options as OgcFilterableDataSourceOptions).ogcFilters.enabled ===\r\n      undefined\r\n        ? ogcFiltersDefaultValue\r\n        : (this.options as OgcFilterableDataSourceOptions).ogcFilters.enabled;\r\n    (this.options as OgcFilterableDataSourceOptions).ogcFilters.editable =\r\n      (this.options as OgcFilterableDataSourceOptions).ogcFilters.editable ===\r\n      undefined\r\n        ? ogcFiltersDefaultValue\r\n        : (this.options as OgcFilterableDataSourceOptions).ogcFilters.editable;\r\n\r\n    const baseWfsQuery = 'service=WFS&request=GetFeature';\r\n    // Mandatory\r\n    const url = this.options.urlWfs;\r\n    // Optional\r\n    const outputFormat = this.options.paramsWFS.outputFormat\r\n      ? 'outputFormat=' + this.options.paramsWFS.outputFormat\r\n      : '';\r\n    const wfsVersion = this.options.paramsWFS.version\r\n      ? 'version=' + this.options.paramsWFS.version\r\n      : 'version=' + '2.0.0';\r\n\r\n    let paramTypename = 'typename';\r\n    let paramMaxFeatures = 'maxFeatures';\r\n    if (\r\n      this.options.paramsWFS.version === '2.0.0' ||\r\n      !this.options.paramsWFS.version\r\n    ) {\r\n      paramTypename = 'typenames';\r\n      paramMaxFeatures = 'count';\r\n    }\r\n\r\n    const featureTypes =\r\n      paramTypename + '=' + this.options.paramsWFS.featureTypes;\r\n\r\n    const maxFeatures = this.options.paramsWFS.maxFeatures\r\n      ? paramMaxFeatures + '=' + this.options.paramsWFS.maxFeatures\r\n      : paramMaxFeatures + '=5000';\r\n\r\n    let downloadBaseUrl = `${url}?${baseWfsQuery}&${wfsVersion}&${featureTypes}&`;\r\n    downloadBaseUrl += `${outputFormat}&${maxFeatures}`;\r\n\r\n    this.options.download = Object.assign({}, this.options.download, {\r\n      dynamicUrl: downloadBaseUrl\r\n    });\r\n\r\n    return new olSourceVector({\r\n      format: this.getFormatFromOptions(),\r\n      overlaps: false,\r\n      url: (extent, resolution, proj) => {\r\n        const srsname = this.options.paramsWFS.srsName\r\n          ? 'srsname=' + this.options.paramsWFS.srsName\r\n          : 'srsname=' + proj.getCode();\r\n\r\n        let filters;\r\n        if (\r\n          (this.options as OgcFilterableDataSourceOptions).ogcFilters &&\r\n          (this.options as OgcFilterableDataSourceOptions).ogcFilters.enabled\r\n        ) {\r\n          filters = (this.options as OgcFilterableDataSourceOptions).ogcFilters.filters;\r\n        }\r\n        this.options.paramsWFS.xmlFilter = this.ogcFilterWriter.buildFilter(\r\n          filters,\r\n          extent,\r\n          proj,\r\n          this.options.paramsWFS.fieldNameGeometry\r\n        );\r\n\r\n        let baseUrl = `${url}?${baseWfsQuery}&${wfsVersion}&${featureTypes}&`;\r\n        baseUrl += `${outputFormat}&${srsname}&${maxFeatures}`;\r\n\r\n        const patternFilter = /(filter|bbox)=.*/gi;\r\n        if (patternFilter.test(this.options.paramsWFS.xmlFilter)) {\r\n          baseUrl += `&${this.options.paramsWFS.xmlFilter}`;\r\n        }\r\n\r\n        this.options.download = Object.assign({}, this.options.download, {\r\n          dynamicUrl: baseUrl\r\n        });\r\n\r\n        return baseUrl;\r\n      },\r\n      strategy: OlLoadingStrategy.bbox\r\n    });\r\n  }\r\n\r\n  private getFormatFromOptions() {\r\n    let olFormatCls;\r\n\r\n    const outputFormat = this.options.paramsWFS.outputFormat.toLowerCase();\r\n    const patternGml3 = new RegExp('.*?gml.*?');\r\n    const patternGeojson = new RegExp('.*?json.*?');\r\n\r\n    if (patternGeojson.test(outputFormat)) {\r\n      olFormatCls = OlFormat.GeoJSON;\r\n    }\r\n    if (patternGml3.test(outputFormat)) {\r\n      olFormatCls = OlFormat.WFS;\r\n    }\r\n\r\n    return new olFormatCls();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport olFeature from 'ol/Feature';\r\nimport * as olformat from 'ol/format';\r\n\r\nimport { WFSDataSourceOptions } from './wfs-datasource.interface';\r\nimport { DataService } from './data.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WFSService extends DataService {\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getData() {\r\n    console.log('This is defining a data service.');\r\n    return 'This is defining a data service.';\r\n  }\r\n\r\n  public getSourceFieldsFromWFS(datasource) {\r\n    if (\r\n      datasource.sourceFields === undefined ||\r\n      Object.keys(datasource.sourceFields).length === 0\r\n    ) {\r\n      datasource.sourceFields = [];\r\n      this.wfsGetCapabilities(datasource).subscribe(wfsCapabilities => {\r\n        datasource.paramsWFS.wfsCapabilities = {\r\n          xmlBody: wfsCapabilities.body,\r\n          GetPropertyValue: /GetPropertyValue/gi.test(wfsCapabilities.body)\r\n            ? true\r\n            : false\r\n        };\r\n\r\n        this.defineFieldAndValuefromWFS(datasource).subscribe(sourceFields => {\r\n          datasource.sourceFields = sourceFields;\r\n        });\r\n      });\r\n    } else {\r\n      datasource.sourceFields.forEach(sourcefield => {\r\n        if (sourcefield.alias === undefined) {\r\n          sourcefield.alias = sourcefield.name; // to allow only a list of sourcefield with names\r\n        }\r\n      });\r\n\r\n      datasource.sourceFields\r\n        .filter(\r\n          field => field.values === undefined || field.values.length === 0\r\n        )\r\n        .forEach(f => {\r\n          this.getValueFromWfsGetPropertyValues(\r\n            datasource,\r\n            f.name,\r\n            200,\r\n            0,\r\n            0\r\n          ).subscribe(rep => (f.values = rep));\r\n        });\r\n    }\r\n  }\r\n\r\n  public checkWfsOptions(wfsDataSourceOptions) {\r\n    // Look at https://github.com/openlayers/openlayers/pull/6400\r\n    const patternGml = new RegExp(/.*?gml.*?/gi);\r\n\r\n    if (patternGml.test(wfsDataSourceOptions.paramsWFS.outputFormat)) {\r\n      wfsDataSourceOptions.paramsWFS.version = '1.1.0';\r\n    }\r\n    return Object.assign({}, wfsDataSourceOptions, {\r\n      wfsCapabilities: { xmlBody: '', GetPropertyValue: false }\r\n    });\r\n  }\r\n\r\n  public buildBaseWfsUrl(\r\n    wfsDataSourceOptions: WFSDataSourceOptions,\r\n    wfsQuery: string\r\n  ): string {\r\n    let paramTypename = 'typename';\r\n    if (\r\n      wfsDataSourceOptions.paramsWFS.version === '2.0.0' ||\r\n      !wfsDataSourceOptions.paramsWFS.version\r\n    ) {\r\n      paramTypename = 'typenames';\r\n    }\r\n    const baseWfsQuery = 'service=wfs&request=' + wfsQuery;\r\n    const wfsTypeName =\r\n      paramTypename + '=' + wfsDataSourceOptions.paramsWFS.featureTypes;\r\n    const wfsVersion = wfsDataSourceOptions.paramsWFS.version\r\n      ? 'version=' + wfsDataSourceOptions.paramsWFS.version\r\n      : 'version=' + '2.0.0';\r\n\r\n    return `${\r\n      wfsDataSourceOptions.urlWfs\r\n    }?${baseWfsQuery}&${wfsVersion}&${wfsTypeName}`;\r\n  }\r\n\r\n  public wfsGetFeature(\r\n    wfsDataSourceOptions: WFSDataSourceOptions,\r\n    nb = 5000,\r\n    epsgCode = 3857,\r\n    propertyname = ''\r\n  ): Observable<any> {\r\n    const baseUrl = this.buildBaseWfsUrl(wfsDataSourceOptions, 'GetFeature');\r\n    const outputFormat = wfsDataSourceOptions.paramsWFS.outputFormat\r\n      ? 'outputFormat=' + wfsDataSourceOptions.paramsWFS.outputFormat\r\n      : '';\r\n    const srsname = wfsDataSourceOptions.paramsWFS.srsName\r\n      ? 'srsname=' + wfsDataSourceOptions.paramsWFS.srsName\r\n      : 'srsname=EPSG:' + epsgCode;\r\n    const wfspropertyname =\r\n      propertyname === '' ? propertyname : '&propertyname=' + propertyname;\r\n    let paramMaxFeatures = 'maxFeatures';\r\n    if (\r\n      wfsDataSourceOptions.paramsWFS.version === '2.0.0' ||\r\n      !wfsDataSourceOptions.paramsWFS.version\r\n    ) {\r\n      paramMaxFeatures = 'count';\r\n    }\r\n\r\n    let maxFeatures;\r\n    if (nb !== 5000) {\r\n      maxFeatures = paramMaxFeatures + '=' + nb;\r\n    } else {\r\n      maxFeatures = wfsDataSourceOptions.paramsWFS.maxFeatures\r\n        ? paramMaxFeatures + '=' + wfsDataSourceOptions.paramsWFS.maxFeatures\r\n        : paramMaxFeatures + '=' + nb;\r\n    }\r\n    const urlWfs = `${baseUrl}&${outputFormat}&${srsname}&${maxFeatures}${wfspropertyname}`;\r\n    const patternGml = new RegExp('.*?gml.*?');\r\n    if (\r\n      patternGml.test(wfsDataSourceOptions.paramsWFS.outputFormat.toLowerCase())\r\n    ) {\r\n      return this.http.get(urlWfs, { responseType: 'text' });\r\n    } else {\r\n      return this.http.get(urlWfs);\r\n    }\r\n  }\r\n\r\n  public getValueFromWfsGetPropertyValues(\r\n    wfsDataSourceOptions: WFSDataSourceOptions,\r\n    field,\r\n    maxFeatures = 30,\r\n    startIndex = 0,\r\n    retry = 0\r\n  ): Observable<any> {\r\n    return new Observable(d => {\r\n      const nbRetry = 2;\r\n      const valueList = [];\r\n\r\n      this.wfsGetPropertyValue(\r\n        wfsDataSourceOptions,\r\n        field,\r\n        maxFeatures,\r\n        startIndex\r\n      ).subscribe(\r\n        str => {\r\n          str = str.replace(/&#39;/gi, \"'\"); // tslint:disable-line\r\n          const regexExcp = /exception/gi;\r\n          if (regexExcp.test(str)) {\r\n            retry++;\r\n            if (retry < nbRetry) {\r\n              this.getValueFromWfsGetPropertyValues(\r\n                wfsDataSourceOptions,\r\n                field,\r\n                maxFeatures,\r\n                startIndex,\r\n                retry\r\n              ).subscribe(rep => d.next(rep));\r\n            }\r\n          } else {\r\n            const valueReferenceRegex = new RegExp(\r\n              '<(.+?)' + field + '>(.+?)</(.+?)' + field + '>',\r\n              'gi'\r\n            );\r\n            let n = valueReferenceRegex.exec(str);\r\n            while (n !== null) {\r\n              if (n.index === valueReferenceRegex.lastIndex) {\r\n                valueReferenceRegex.lastIndex++;\r\n              }\r\n              if (valueList.indexOf(n[2]) === -1) {\r\n                valueList.push(n[2]);\r\n              }\r\n              n = valueReferenceRegex.exec(str);\r\n            }\r\n            d.next(valueList);\r\n            d.complete();\r\n          }\r\n        },\r\n        err => {\r\n          if (retry < nbRetry) {\r\n            retry++;\r\n            this.getValueFromWfsGetPropertyValues(\r\n              wfsDataSourceOptions,\r\n              field,\r\n              maxFeatures,\r\n              startIndex,\r\n              retry\r\n            ).subscribe(rep => d.next(rep));\r\n          }\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  wfsGetCapabilities(options): Observable<any> {\r\n    const baseWfsQuery = 'service=wfs&request=GetCapabilities';\r\n    const wfsVersion = options.version\r\n      ? 'version=' + options.version\r\n      : 'version=' + '2.0.0';\r\n    const wfsGcUrl = `${options.urlWfs}?${baseWfsQuery}&${wfsVersion}`;\r\n    return this.http.get(wfsGcUrl, {\r\n      observe: 'response',\r\n      responseType: 'text'\r\n    });\r\n  }\r\n\r\n  defineFieldAndValuefromWFS(\r\n    wfsDataSourceOptions: WFSDataSourceOptions\r\n  ): Observable<any> {\r\n    return new Observable(d => {\r\n      const sourceFields = [];\r\n      let fieldList;\r\n      let fieldListWoGeom;\r\n      let fieldListWoGeomStr;\r\n      let olFormats;\r\n      const patternGml3 = /gml/gi;\r\n      if (wfsDataSourceOptions.paramsWFS.outputFormat.match(patternGml3)) {\r\n        olFormats = olformat.WFS;\r\n      } else {\r\n        olFormats = olformat.GeoJSON;\r\n      }\r\n\r\n      if (wfsDataSourceOptions.paramsWFS.wfsCapabilities.GetPropertyValue) {\r\n        this.wfsGetFeature(wfsDataSourceOptions, 1).subscribe(oneFeature => {\r\n          const features = new olFormats().readFeatures(oneFeature);\r\n          fieldList = features[0].getKeys();\r\n          fieldListWoGeom = fieldList.filter(\r\n            field =>\r\n              field !== features[0].getGeometryName() &&\r\n              !field.match(/boundedby/gi)\r\n          );\r\n          fieldListWoGeomStr = fieldListWoGeom.join(',');\r\n          fieldListWoGeom.forEach(element => {\r\n            const fieldType =\r\n              typeof features[0].get(element) === 'object'\r\n                ? undefined\r\n                : typeof features[0].get(element);\r\n            this.getValueFromWfsGetPropertyValues(\r\n              wfsDataSourceOptions,\r\n              element,\r\n              200\r\n            ).subscribe(valueList => {\r\n              sourceFields.push({\r\n                name: element,\r\n                alias: element,\r\n                values: valueList\r\n              });\r\n              d.next(sourceFields);\r\n            });\r\n          });\r\n        });\r\n      } else {\r\n        this.wfsGetFeature(wfsDataSourceOptions, 1).subscribe(oneFeature => {\r\n          const features = new olFormats().readFeatures(oneFeature);\r\n          fieldList = features[0].getKeys();\r\n          fieldListWoGeom = fieldList.filter(\r\n            field =>\r\n              field !== features[0].getGeometryName() &&\r\n              !field.match(/boundedby/gi)\r\n          );\r\n          fieldListWoGeomStr = fieldListWoGeom.join(',');\r\n          this.wfsGetFeature(\r\n            wfsDataSourceOptions,\r\n            200,\r\n            3857,\r\n            fieldListWoGeomStr\r\n          ).subscribe(manyFeatures => {\r\n            const mfeatures = new olFormats().readFeatures(manyFeatures);\r\n            this.built_properties_value(mfeatures).forEach(element => {\r\n              sourceFields.push(element);\r\n            });\r\n            d.next(sourceFields);\r\n            d.complete();\r\n          });\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  public wfsGetPropertyValue(\r\n    wfsDataSourceOptions: WFSDataSourceOptions,\r\n    field,\r\n    maxFeatures = 30,\r\n    startIndex = 0\r\n  ): Observable<any> {\r\n    const baseWfsQuery =\r\n      'service=wfs&request=GetPropertyValue&count=' + maxFeatures;\r\n    const wfsTypeName =\r\n      'typenames=' + wfsDataSourceOptions.paramsWFS.featureTypes;\r\n    const wfsValueReference = 'valueReference=' + field;\r\n    const wfsVersion = 'version=' + '2.0.0';\r\n    const gfvUrl = `${\r\n      wfsDataSourceOptions.urlWfs\r\n    }?${baseWfsQuery}&${wfsVersion}&${wfsTypeName}&${wfsValueReference}`;\r\n    return this.http.get(gfvUrl, { responseType: 'text' });\r\n  }\r\n\r\n  private built_properties_value(features: olFeature[]): string[] {\r\n    const kv = Object.assign({}, features[0].getProperties());\r\n    delete kv[features[0].getGeometryName()];\r\n    delete kv.boundedBy;\r\n    const sourceFields = [];\r\n    for (const property in kv) {\r\n      if (kv.hasOwnProperty(property)) {\r\n        const fieldType =\r\n          typeof features[0].get(property) === 'object'\r\n            ? undefined\r\n            : typeof features[0].get(property);\r\n        sourceFields.push({\r\n          name: property,\r\n          alias: property,\r\n          type: fieldType,\r\n          values: [kv[property]]\r\n        });\r\n      }\r\n    }\r\n    features.every((element) => {\r\n      const featureProperties = element.getProperties();\r\n      for (const key in featureProperties) {\r\n        if (featureProperties.hasOwnProperty(key) && key in kv) {\r\n          sourceFields.filter(f => f.name === key).forEach(v => {\r\n            if (v.values.indexOf(featureProperties[key]) === -1) {\r\n              v.values.push(featureProperties[key]);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n    return sourceFields;\r\n  }\r\n}\r\n","export enum QueryFormat {\r\n  GML2 = 'gml2',\r\n  GML3 = 'gml3',\r\n  JSON = 'json',\r\n  GEOJSON = 'geojson',\r\n  ESRIJSON = 'esrijson',\r\n  TEXT = 'text',\r\n  HTML = 'html'\r\n}\r\n\r\nexport enum QueryHtmlTarget {\r\n  IFRAME = 'iframe',\r\n  BLANK = '_blank'\r\n}\r\n","import olSourceImageWMS from 'ol/source/ImageWMS';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { DataSourceLegendOptions } from './datasource.interface';\r\nimport { WMSDataSourceOptions } from './wms-datasource.interface';\r\nimport { WFSService } from './wfs.service';\r\n\r\nimport { OgcFilterWriter } from '../../../filter/shared/ogc-filter';\r\nimport { OgcFilterableDataSourceOptions } from '../../../filter/shared/ogc-filter.interface';\r\nimport { QueryHtmlTarget } from '../../../query/shared/query.enums';\r\n\r\nimport { NetworkService } from '@igo2/core';\r\n\r\nexport class WMSDataSource extends DataSource {\r\n  public ol: olSourceImageWMS;\r\n  public ogcFilterWriter: OgcFilterWriter;\r\n\r\n  get params(): any {\r\n    return this.options.params as any;\r\n  }\r\n\r\n  get queryTitle(): string {\r\n    return (this.options as any).queryTitle\r\n      ? (this.options as any).queryTitle\r\n      : 'title';\r\n  }\r\n\r\n  get queryHtmlTarget(): string {\r\n    return (this.options as any).queryHtmlTarget\r\n      ? (this.options as any).queryHtmlTarget\r\n      : QueryHtmlTarget.BLANK;\r\n  }\r\n\r\n  constructor(\r\n    public options: WMSDataSourceOptions,\r\n    public networkService: NetworkService,\r\n    protected wfsService: WFSService\r\n  ) {\r\n    super(options, networkService);\r\n    // Important: To use wms versions smaller than 1.3.0, SRS\r\n    // needs to be supplied in the source \"params\"\r\n\r\n    // We need to do this to override the default version\r\n    // of openlayers which is uppercase\r\n    const sourceParams: any = options.params;\r\n    if (sourceParams && sourceParams.version) {\r\n      sourceParams.VERSION = sourceParams.version;\r\n    }\r\n\r\n    if (sourceParams && sourceParams.VERSION) {\r\n      if (sourceParams.version !== '1.3.0') {\r\n        if (!sourceParams.SRS && !sourceParams.srs) {\r\n          throw new Error(`You must set a SRS (or srs) param for your WMS\r\n           (layer =  ` + sourceParams.layers + `) because your want to use a WMS version under 1.3.0\r\n        Ex: \"srs\": \"EPSG:3857\" `);\r\n        }\r\n      }\r\n    }\r\n\r\n    if (sourceParams && sourceParams.INFO_FORMAT) {\r\n      sourceParams.info_format = sourceParams.INFO_FORMAT;\r\n    }\r\n\r\n    if (options.refreshIntervalSec && options.refreshIntervalSec > 0) {\r\n      setInterval(() => {\r\n        this.refresh();\r\n      }, options.refreshIntervalSec * 1000); // Convert seconds to MS\r\n    }\r\n\r\n    // ####   START if paramsWFS\r\n    if (options.paramsWFS) {\r\n      const wfsCheckup = this.wfsService.checkWfsOptions(options);\r\n      options.paramsWFS.version = wfsCheckup.paramsWFS.version;\r\n      options.paramsWFS.wfsCapabilities = wfsCheckup.params.wfsCapabilities;\r\n\r\n      this.wfsService.getSourceFieldsFromWFS(options);\r\n\r\n      this.options.download = Object.assign({}, this.options.download, {\r\n        dynamicUrl: this.buildDynamicDownloadUrlFromParamsWFS(this.options)\r\n      });\r\n    } //  ####   END  if paramsWFS\r\n    this.ogcFilterWriter = new OgcFilterWriter();\r\n    if (!options.sourceFields || options.sourceFields.length === 0) {\r\n      options.sourceFields = [];\r\n    }\r\n    const initOgcFilters = (this.options as OgcFilterableDataSourceOptions).ogcFilters;\r\n    if (sourceParams.layers.split(',').length > 1 && this.options && initOgcFilters && initOgcFilters.enabled) {\r\n      console.log('*******************************');\r\n      console.log('BE CAREFULL, YOUR WMS LAYERS (' + sourceParams.layers\r\n      + ') MUST SHARE THE SAME FIELDS TO ALLOW ogcFilters TO WORK !! ');\r\n      console.log('*******************************');\r\n  }\r\n\r\n    if (this.options && initOgcFilters && initOgcFilters.enabled && initOgcFilters.filters) {\r\n        const filters = initOgcFilters.filters;\r\n        const rebuildFilter = this.ogcFilterWriter.buildFilter(filters);\r\n        const appliedFilter = this.formatProcessedOgcFilter(rebuildFilter, sourceParams.layers);\r\n        const wmsFilterValue = appliedFilter.length > 0\r\n        ? appliedFilter.replace('filter=', '')\r\n        : undefined;\r\n        this.ol.updateParams({ filter: wmsFilterValue });\r\n      }\r\n\r\n  }\r\n\r\n  refresh() {\r\n    this.ol.updateParams({ igoRefresh: Math.random() });\r\n  }\r\n\r\n  public formatProcessedOgcFilter(processedFilter, layers): string {\r\n    let appliedFilter = '';\r\n    if (processedFilter.length === 0 && layers.indexOf(',') === -1) {\r\n      appliedFilter = processedFilter;\r\n    } else {\r\n      layers.split(',').forEach(layerName => {\r\n        appliedFilter = `${appliedFilter}(${processedFilter.replace('filter=', '')})`;\r\n      });\r\n    }\r\n    return `filter=${appliedFilter}`;\r\n  }\r\n\r\n  private buildDynamicDownloadUrlFromParamsWFS(asWFSDataSourceOptions) {\r\n    const outputFormat =\r\n      asWFSDataSourceOptions.paramsWFS.outputFormat !== undefined\r\n        ? 'outputFormat=' + asWFSDataSourceOptions.paramsWFS.outputFormat\r\n        : '';\r\n\r\n    let paramMaxFeatures = 'maxFeatures';\r\n    if (\r\n      asWFSDataSourceOptions.paramsWFS.version === '2.0.0' ||\r\n      !asWFSDataSourceOptions.paramsWFS.version\r\n    ) {\r\n      paramMaxFeatures = 'count';\r\n    }\r\n    const maxFeatures = asWFSDataSourceOptions.paramsWFS.maxFeatures\r\n      ? paramMaxFeatures + '=' + asWFSDataSourceOptions.paramsWFS.maxFeatures\r\n      : paramMaxFeatures + '=5000';\r\n    const srsname = asWFSDataSourceOptions.paramsWFS.srsName\r\n      ? 'srsname=' + asWFSDataSourceOptions.paramsWFS.srsName\r\n      : 'srsname=EPSG:3857';\r\n    const baseWfsQuery = this.wfsService.buildBaseWfsUrl(\r\n      asWFSDataSourceOptions,\r\n      'GetFeature'\r\n    );\r\n    return `${baseWfsQuery}&${outputFormat}&${srsname}&${maxFeatures}`;\r\n  }\r\n\r\n  protected createOlSource(): olSourceImageWMS {\r\n    if (this.options.paramsWFS) {\r\n      this.options.urlWfs = this.options.urlWfs\r\n        ? this.options.urlWfs\r\n        : this.options.url;\r\n      this.options.paramsWFS.version = this.options.paramsWFS.version\r\n        ? this.options.paramsWFS.version\r\n        : '2.0.0';\r\n    }\r\n    let initOgcFilters = (this.options as OgcFilterableDataSourceOptions).ogcFilters;\r\n    const ogcFiltersDefaultValue = false; // default values for wms.\r\n    initOgcFilters = initOgcFilters === undefined ? {} : initOgcFilters;\r\n    initOgcFilters.enabled = initOgcFilters.enabled === undefined ? ogcFiltersDefaultValue : initOgcFilters.enabled;\r\n    initOgcFilters.editable = initOgcFilters.editable === undefined ? ogcFiltersDefaultValue : initOgcFilters.editable;\r\n    return new olSourceImageWMS(this.options);\r\n  }\r\n\r\n  getLegend(scale?: number): DataSourceLegendOptions[] {\r\n    let legend = super.getLegend();\r\n    if (legend.length > 0) {\r\n      return legend;\r\n    }\r\n\r\n    const sourceParams = this.params;\r\n\r\n    let layers = [];\r\n    if (sourceParams.layers !== undefined) {\r\n      layers = sourceParams.layers.split(',');\r\n    }\r\n\r\n    const baseUrl = this.options.url.replace(/\\?$/, '');\r\n    const params = [\r\n      'REQUEST=GetLegendGraphic',\r\n      'SERVICE=wms',\r\n      'FORMAT=image/png',\r\n      'LEGEND_OPTIONS=forceLabels:on',\r\n      'SLD_VERSION=1.1.0',\r\n      `VERSION=${sourceParams.version || '1.3.0'}`\r\n    ];\r\n    if (scale !== undefined) {\r\n      params.push(`SCALE=${scale}`);\r\n    }\r\n\r\n    legend = layers.map((layer: string) => {\r\n      return {\r\n        url: `${baseUrl}?${params.join('&')}&LAYER=${layer}`,\r\n        title: layers.length > 1 ? layer : undefined\r\n      };\r\n    });\r\n\r\n    return legend;\r\n  }\r\n}\r\n","import olTileGridWMTS from 'ol/tilegrid/WMTS';\r\nimport * as olproj from 'ol/proj';\r\nimport {\r\n  getTopLeft as extentGetTopLeft,\r\n  getWidth as extentGetWidth\r\n} from 'ol/extent.js';\r\n\r\nexport function createDefaultTileGrid(epsg?: string): olTileGridWMTS {\r\n  const projection = epsg ? olproj.get(epsg) : olproj.get('EPSG:3857');\r\n  const projectionExtent = projection.getExtent();\r\n  const size = extentGetWidth(projectionExtent) / 256;\r\n  const resolutions = new Array(20);\r\n  const matrixIds = new Array(20);\r\n  for (let z = 0; z < 20; ++z) {\r\n    resolutions[z] = size / Math.pow(2, z);\r\n    matrixIds[z] = z;\r\n  }\r\n\r\n  return new olTileGridWMTS({\r\n    origin: extentGetTopLeft(projectionExtent),\r\n    resolutions,\r\n    matrixIds\r\n  });\r\n}\r\n","import olSourceWMTS from 'ol/source/WMTS';\r\n\r\nimport { createDefaultTileGrid } from '../../utils/tilegrid';\r\nimport { DataSource } from './datasource';\r\nimport { WMTSDataSourceOptions } from './wmts-datasource.interface';\r\n\r\nimport { NetworkService } from '@igo2/core/igo2-core';\r\n\r\nexport class WMTSDataSource extends DataSource {\r\n  public options: WMTSDataSourceOptions;\r\n  public ol: olSourceWMTS;\r\n\r\n  constructor(\r\n    options: WMTSDataSourceOptions,\r\n    networkService: NetworkService\r\n    ) {\r\n    super(options, networkService);\r\n  }\r\n\r\n  protected createOlSource(): olSourceWMTS {\r\n    const sourceOptions = Object.assign(\r\n      {\r\n        tileGrid: createDefaultTileGrid(this.options.projection as string)\r\n      },\r\n      this.options\r\n    );\r\n\r\n    return new olSourceWMTS(sourceOptions);\r\n  }\r\n\r\n}\r\n","import olSourceCarto from 'ol/source/CartoDB';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { DataSourceLegendOptions } from './datasource.interface';\r\nimport { CartoDataSourceOptions } from './carto-datasource.interface';\r\nimport { QueryHtmlTarget } from '../../../query/shared/query.enums';\r\n\r\nexport class CartoDataSource extends DataSource {\r\n  public ol: olSourceCarto;\r\n  public options: CartoDataSourceOptions;\r\n\r\n  get params(): any {\r\n    return this.options.params as any;\r\n  }\r\n\r\n  get queryTitle(): string {\r\n    return (this.options as any).queryTitle\r\n      ? (this.options as any).queryTitle\r\n      : 'title';\r\n  }\r\n\r\n  get queryHtmlTarget(): string {\r\n    return (this.options as any).queryHtmlTarget\r\n      ? (this.options as any).queryHtmlTarget\r\n      : QueryHtmlTarget.BLANK;\r\n  }\r\n\r\n  protected createOlSource(): olSourceCarto {\r\n    const crossOrigin = this.options.crossOrigin\r\n      ? this.options.crossOrigin\r\n      : 'Anonymous';\r\n    const sourceOptions = Object.assign(\r\n      {\r\n        crossOrigin\r\n      },\r\n      this.options\r\n    );\r\n    return new olSourceCarto(sourceOptions);\r\n  }\r\n\r\n  getLegend(): DataSourceLegendOptions[] {\r\n    const legend = super.getLegend();\r\n    if (legend.length > 0) {\r\n      return legend;\r\n    }\r\n    let htmlString = '<table>';\r\n    if (this.options.config.layers[0].legend != null) {\r\n      this.options.config.layers[0].legend.items.forEach(f => {\r\n        if (f.visible === true) {\r\n          htmlString +=\r\n            '<tr><td>' +\r\n            '<p><font size=\"5\" color=\"' +\r\n            f.value +\r\n            '\"> &#9679</font></p></td>' +\r\n            '<td>' +\r\n            f.name +\r\n            '</td></tr>';\r\n        }\r\n      });\r\n      htmlString += '</table>';\r\n      return [{ html: htmlString }];\r\n    } else {\r\n      // Try to build the legend from the cartocss options\r\n      const layerOptions = this.options.config.layers[0].options;\r\n      // All available cartocss style options\r\n      const types = [\r\n        'polygon-fill:',\r\n        'marker-fill:',\r\n        'shield-fill:',\r\n        'building-fill:',\r\n        'line-color:'\r\n      ];\r\n      for (const oneType of types) {\r\n        if (layerOptions.cartocss.includes(oneType)) {\r\n          const type = layerOptions.cartocss.split(oneType).pop();\r\n          const color = type.substr(0, type.indexOf(';'));\r\n          if (color.includes('ramp')) {\r\n            const colors = color.split(', (')[1].split(',');\r\n            const data = color.split(', (')[2].split(',');\r\n            for (let j = 0; j < colors.length; j++) {\r\n              colors[j] = colors[j].replace(/(\"|\\))/g, '');\r\n              data[j] = data[j].replace(/(\"|\\))/g, '');\r\n              if (data[j].replace(/\\s+/g, '') === '=') {\r\n                data[j] = 'Autres';\r\n              }\r\n              htmlString +=\r\n                '<tr><td>' +\r\n                '<p><font size=\"5\" color=\"' +\r\n                colors[j] +\r\n                '\"> &#9679</font></p></td>' +\r\n                '<td>' +\r\n                data[j] +\r\n                '</td></tr>';\r\n            }\r\n            break;\r\n          } else {\r\n            const title = layerOptions.layer_name\r\n              ? layerOptions.layer_name\r\n              : '';\r\n            htmlString +=\r\n              '<tr><td>' +\r\n              '<p><font size=\"5\" color=\"' +\r\n              color +\r\n              '\"> &#9679</font></p>' +\r\n              '</td><td>' +\r\n              title +\r\n              '</td></tr>';\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      htmlString += '</table>';\r\n      return [{ html: htmlString }];\r\n    }\r\n  }\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport olFormatEsriJSON from 'ol/format/EsriJSON';\r\nimport * as olloadingstrategy from 'ol/loadingstrategy';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { DataSourceLegendOptions } from './datasource.interface';\r\nimport { ArcGISRestDataSourceOptions } from './arcgisrest-datasource.interface';\r\n\r\nexport class ArcGISRestDataSource extends DataSource {\r\n  public ol: olSourceVector;\r\n  public options: ArcGISRestDataSourceOptions;\r\n\r\n  protected createOlSource(): olSourceVector {\r\n    const esrijsonFormat = new olFormatEsriJSON();\r\n    return new olSourceVector({\r\n      attributions: this.options.params.attributions,\r\n      overlaps: false,\r\n      format: esrijsonFormat,\r\n      url: function(extent, resolution, proj) {\r\n        const baseUrl = this.options.url + '/' + this.options.layer + '/query/';\r\n        const geometry = encodeURIComponent(\r\n          '{\"xmin\":' +\r\n            extent[0] +\r\n            ',\"ymin\":' +\r\n            extent[1] +\r\n            ',\"xmax\":' +\r\n            extent[2] +\r\n            ',\"ymax\":' +\r\n            extent[3] +\r\n            ',\"spatialReference\":{\"wkid\":102100}}'\r\n        );\r\n        const params = [\r\n          'f=json',\r\n          `geometry=${geometry}`,\r\n          'geometryType=esriGeometryEnvelope',\r\n          'inSR=102100',\r\n          'spatialRel=esriSpatialRelIntersects',\r\n          'outFields=*',\r\n          'returnGeometry=true',\r\n          'outSR=102100'\r\n        ];\r\n        if (this.options.params.timeFilter) {\r\n          const time = `time=${this.options.params.timeExtent}`;\r\n          params.push(time);\r\n        }\r\n        if (this.options.params.customParams) {\r\n          this.options.params.customParams.forEach(element => {\r\n            params.push(element);\r\n          });\r\n        }\r\n        return `${baseUrl}?${params.join('&')}`;\r\n      }.bind(this),\r\n      strategy: olloadingstrategy.bbox\r\n    });\r\n  }\r\n\r\n  getLegend(): DataSourceLegendOptions[] {\r\n    const legendInfo = this.options.params.legendInfo;\r\n    const legend = super.getLegend();\r\n    if (legendInfo === undefined || legend.length > 0) {\r\n      return legend;\r\n    }\r\n    const id = parseInt(this.options.layer, 10);\r\n    const lyr = legendInfo.layers[id];\r\n    let htmlString = '<table><tr><td>' + lyr.layerName + '</td></tr>';\r\n\r\n    for (const lyrLegend of lyr.legend) {\r\n      const modifiedUrl = this.options.url.replace(\r\n        'FeatureServer',\r\n        'MapServer'\r\n      );\r\n      const src = `${modifiedUrl}/${lyr.layerId}/images/${lyrLegend.url}`;\r\n      const label = lyrLegend.label.replace('<Null>', 'Null');\r\n      htmlString +=\r\n        `<tr><td align='left'><img src=\"` +\r\n        src +\r\n        `\" alt ='' /></td><td>` +\r\n        label +\r\n        '</td></tr>';\r\n    }\r\n    htmlString += '</table>';\r\n    return [{ html: htmlString }];\r\n  }\r\n}\r\n","import olSourceTileArcGISRest from 'ol/source/TileArcGISRest';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { DataSourceLegendOptions } from './datasource.interface';\r\nimport { TileArcGISRestDataSourceOptions } from './tilearcgisrest-datasource.interface';\r\nimport { QueryHtmlTarget } from '../../../query/shared/query.enums';\r\n\r\nexport class TileArcGISRestDataSource extends DataSource {\r\n  public ol: olSourceTileArcGISRest;\r\n  public options: TileArcGISRestDataSourceOptions;\r\n\r\n  get params(): any {\r\n    return this.options.params as any;\r\n  }\r\n\r\n  get queryTitle(): string {\r\n    return (this.options as any).queryTitle\r\n      ? (this.options as any).queryTitle\r\n      : 'title';\r\n  }\r\n\r\n  get queryHtmlTarget(): string {\r\n    return (this.options as any).queryHtmlTarget\r\n      ? (this.options as any).queryHtmlTarget\r\n      : QueryHtmlTarget.BLANK;\r\n  }\r\n\r\n  protected createOlSource(): olSourceTileArcGISRest {\r\n    return new olSourceTileArcGISRest(this.options);\r\n  }\r\n\r\n  getLegend(): DataSourceLegendOptions[] {\r\n    const legend = super.getLegend();\r\n    if (this.options.legendInfo === undefined || legend.length > 0) {\r\n      return legend;\r\n    }\r\n    const id = parseInt(this.options.layer, 10);\r\n    const lyr = this.options.legendInfo.layers[id];\r\n    let htmlString = '<table><tr><td>' + lyr.layerName + '</td></tr>';\r\n\r\n    for (const lyrLegend of lyr.legend) {\r\n      const src = `${this.options.url}/${lyr.layerId}/images/${\r\n        lyrLegend.url\r\n      }`;\r\n      const label = lyrLegend.label.replace('<Null>', 'Null');\r\n      htmlString +=\r\n        `<tr><td align='left'><img src=\"` +\r\n        src +\r\n        `\" alt ='' /></td><td>` +\r\n        label +\r\n        '</td></tr>';\r\n    }\r\n    htmlString += '</table>';\r\n    return [{ html: htmlString }];\r\n  }\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport * as olformat from 'ol/format';\r\nimport { unByKey } from 'ol/Observable';\r\nimport { easeOut } from 'ol/easing';\r\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style';\r\n\r\nimport { Md5 } from 'ts-md5';\r\n\r\nimport { uuid } from '@igo2/utils';\r\nimport { FeatureDataSource } from './feature-datasource';\r\nimport { WebSocketDataSourceOptions } from './websocket-datasource.interface';\r\n\r\nexport class WebSocketDataSource extends FeatureDataSource {\r\n  public ws: WebSocket;\r\n  public options: WebSocketDataSourceOptions;\r\n\r\n  protected createOlSource(): olSourceVector {\r\n    this.createWebSocket();\r\n    this.options.format = this.getSourceFormatFromOptions(this.options);\r\n    return super.createOlSource();\r\n  }\r\n\r\n  private createWebSocket() {\r\n    this.ws = new WebSocket(this.options.url);\r\n    this.ws.onmessage = this.onMessage.bind(this);\r\n\r\n    if (this.options.onclose) {\r\n      this.ws.onclose = this.onClose.bind(this);\r\n    }\r\n\r\n    if (this.options.onerror) {\r\n      this.ws.onerror = this.onError.bind(this);\r\n    }\r\n\r\n    if (this.options.onopen) {\r\n      this.ws.onopen = this.onOpen.bind(this);\r\n    }\r\n  }\r\n\r\n  onMessage(event) {\r\n    const featureAdded = this.options.format.readFeature(event.data);\r\n\r\n    switch (this.options.onmessage) {\r\n      case 'update':\r\n        // ol don't add if same ID\r\n        const featureToRemove = this.ol.getFeatureById(featureAdded.getId());\r\n        if (featureToRemove) {\r\n          this.ol.removeFeature(featureToRemove);\r\n        }\r\n        this.ol.addFeature(featureAdded);\r\n        break;\r\n      case 'delete':\r\n        this.ol.clear(true);\r\n        this.ol.addFeature(featureAdded);\r\n        break;\r\n      case 'add':\r\n      default:\r\n        this.ol.addFeature(featureAdded);\r\n    }\r\n  }\r\n\r\n  onClose(event) {\r\n    // thrown message to user\r\n  }\r\n\r\n  onError(event) {\r\n    // thrown message to user\r\n  }\r\n\r\n  onOpen(event) {\r\n    // thrown message to user ?\r\n  }\r\n}\r\n","import { Md5 } from 'ts-md5';\r\nimport feature from 'ol/Feature';\r\nimport olSourceVectorTile from 'ol/source/VectorTile';\r\nimport olFormatMVT from 'ol/format/MVT';\r\n\r\nimport { uuid, SubjectStatus } from '@igo2/utils';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { MVTDataSourceOptions } from './mvt-datasource.interface';\r\n\r\nexport class MVTDataSource extends DataSource {\r\n  public ol: olSourceVectorTile;\r\n  public options: MVTDataSourceOptions;\r\n  public status: boolean;\r\n\r\n  protected createOlSource(): olSourceVectorTile {\r\n    const mvtFormat = new olFormatMVT({featureClass: feature});\r\n    this.options.format = mvtFormat;\r\n    return new olSourceVectorTile(this.options);\r\n  }\r\n\r\n  protected generateId() {\r\n    if (!this.options.url) {\r\n        return uuid();\r\n    }\r\n    const chain = 'mvt' + this.options.url;\r\n    return Md5.hashStr(chain) as string;\r\n  }\r\n  onLayerStatusChange(status: SubjectStatus): void {}\r\n}\r\n","import olSourceCluster from 'ol/source/Cluster';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { FeatureDataSource } from './feature-datasource';\r\nimport { ClusterDataSourceOptions } from './cluster-datasource.interface';\r\n\r\nexport class ClusterDataSource extends FeatureDataSource {\r\n  public options: ClusterDataSourceOptions;\r\n  public ol: olSourceCluster;\r\n\r\n  protected createOlSource(): olSourceCluster {\r\n    this.options.format = this.getSourceFormatFromOptions(this.options);\r\n    this.options.source = super.createOlSource();\r\n    return new olSourceCluster(this.options);\r\n  }\r\n\r\n  protected generateId() {\r\n    return uuid();\r\n  }\r\n}\r\n","export const FEATURE = 'Feature';\r\n\r\nexport enum FeatureMotion {\r\n  None,\r\n  Move,\r\n  Zoom,\r\n  Default\r\n}\r\n","export const LAYER = 'Layer';\r\n","import { Subject } from 'rxjs';\r\n\r\nimport olLayer from 'ol/layer/Layer';\r\n\r\nimport { DataSource } from '../../../datasource';\r\nimport { IgoMap } from '../../../map';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\nimport { LayerOptions } from './layer.interface';\r\n\r\nexport abstract class Layer {\r\n  public collapsed: boolean;\r\n  public dataSource: DataSource;\r\n  public map: IgoMap;\r\n  public ol: olLayer;\r\n  public options: LayerOptions;\r\n  public status$: Subject<SubjectStatus>;\r\n\r\n  get id(): string {\r\n    return this.options.id || this.dataSource.id;\r\n  }\r\n\r\n  get alias(): string {\r\n    return this.options.alias;\r\n  }\r\n\r\n  get title(): string {\r\n    return this.options.title;\r\n  }\r\n\r\n  set title(title: string) {\r\n    this.options.title = title;\r\n  }\r\n\r\n  get zIndex(): number {\r\n    return this.ol.getZIndex();\r\n  }\r\n\r\n  set zIndex(zIndex: number) {\r\n    this.ol.setZIndex(zIndex);\r\n  }\r\n\r\n  get baseLayer(): boolean {\r\n    return this.options.baseLayer;\r\n  }\r\n\r\n  set baseLayer(baseLayer: boolean) {\r\n    this.options.baseLayer = baseLayer;\r\n  }\r\n\r\n  get visible(): boolean {\r\n    return this.ol.get('visible');\r\n  }\r\n\r\n  set visible(visibility: boolean) {\r\n    this.ol.setVisible(visibility);\r\n  }\r\n\r\n  get opacity(): number {\r\n    return this.ol.get('opacity');\r\n  }\r\n\r\n  set opacity(opacity: number) {\r\n    this.ol.setOpacity(opacity);\r\n  }\r\n\r\n  get isInResolutionsRange(): boolean {\r\n    if (!this.map) {\r\n      return false;\r\n    }\r\n\r\n    const resolution = this.map.viewController.getResolution();\r\n    const minResolution = this.ol.getMinResolution();\r\n    const maxResolution = this.ol.getMaxResolution();\r\n\r\n    return resolution >= minResolution && resolution <= maxResolution;\r\n  }\r\n\r\n  get showInLayerList(): boolean { return this.options.showInLayerList !== false; }\r\n\r\n  constructor(options: LayerOptions) {\r\n    this.options = options;\r\n    this.dataSource = this.options.source;\r\n\r\n    this.ol = this.createOlLayer();\r\n    if (this.options.zIndex !== undefined) {\r\n      this.zIndex = this.options.zIndex;\r\n    }\r\n\r\n    if (this.options.baseLayer && this.options.visible === undefined) {\r\n      this.options.visible = false;\r\n    }\r\n    this.visible =\r\n      this.options.visible === undefined ? true : this.options.visible;\r\n    this.opacity =\r\n      this.options.opacity === undefined ? 1 : this.options.opacity;\r\n\r\n    this.ol.set('_layer', this, true);\r\n  }\r\n\r\n  protected abstract createOlLayer(): olLayer;\r\n\r\n  setMap(map: IgoMap | undefined) {\r\n    this.map = map;\r\n  }\r\n}\r\n","import olLayer from 'ol/layer/Layer';\r\n\r\nimport { DataSource } from '../../../datasource/shared/datasources/datasource';\r\nimport { DataSourceOptions } from '../../../datasource/shared/datasources/datasource.interface';\r\n\r\nexport interface LayerOptions {\r\n  source?: DataSource;\r\n  sourceOptions?: DataSourceOptions;\r\n  title?: string;\r\n  id?: string;\r\n  alias?: string;\r\n  baseLayer?: boolean;\r\n  opacity?: number;\r\n  visible?: boolean;\r\n  extent?: [number, number, number, number];\r\n  zIndex?: number;\r\n  minResolution?: number;\r\n  maxResolution?: number;\r\n  showInLayerList?: boolean;\r\n  removable?: boolean;\r\n  ol?: olLayer;\r\n  tooltip?: TooltipContent;\r\n}\r\n\r\nexport interface GroupLayers {\r\n  title: string;\r\n  layers?: LayerOptions;\r\n  collapsed?: boolean;\r\n}\r\n\r\nexport interface LayerLegend {\r\n  title: string;\r\n  url: string;\r\n  image: string;\r\n}\r\n\r\nexport interface TooltipContent {\r\n  type?: TooltipType;\r\n  text?: string;\r\n}\r\nexport enum TooltipType {\r\n  TITLE = 'title',\r\n  ABSTRACT = 'abstract',\r\n  CUSTOM = 'custom'\r\n}\r\n","import olSourceImage from 'ol/source/Image';\r\nimport { uuid, Watcher, SubjectStatus } from '@igo2/utils';\r\n\r\nimport { ImageLayer } from '../shared/layers/image-layer';\r\n\r\nexport class ImageWatcher extends Watcher {\r\n  protected id: string;\r\n  protected loaded = 0;\r\n  protected loading = 0;\r\n\r\n  private source: olSourceImage;\r\n\r\n  constructor(layer: ImageLayer) {\r\n    super();\r\n    this.source = layer.options.source.ol;\r\n    this.id = uuid();\r\n  }\r\n\r\n  protected watch() {\r\n    this.source.on(`imageloadstart`, e => this.handleLoadStart(e));\r\n    this.source.on(`imageloadend`, e => this.handleLoadEnd(e));\r\n    this.source.on(`imageloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  protected unwatch() {\r\n    this.source.un(`imageloadstart`, e => this.handleLoadStart(e));\r\n    this.source.un(`imageloadend`, e => this.handleLoadEnd(e));\r\n    this.source.un(`imageloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  private handleLoadStart(event: any) {\r\n    if (!event.image.__watchers__) {\r\n      event.image.__watchers__ = [];\r\n    }\r\n    event.image.__watchers__.push(this.id);\r\n\r\n    this.loading += 1;\r\n    this.status = SubjectStatus.Working;\r\n  }\r\n\r\n  private handleLoadEnd(event) {\r\n    if (!event.image.__watchers__) {\r\n      return;\r\n    }\r\n\r\n    const watcherIndex = event.image.__watchers__.indexOf(this.id);\r\n    if (watcherIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    event.image.__watchers__.splice(watcherIndex, 1);\r\n\r\n    this.loaded += 1;\r\n\r\n    const loading = this.loading;\r\n    if (this.loaded >= loading) {\r\n      if (loading === this.loading) {\r\n        this.status = SubjectStatus.Done;\r\n        this.loaded = this.loading = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import olSourceTile from 'ol/source/Tile';\r\nimport { uuid, Watcher, SubjectStatus } from '@igo2/utils';\r\n\r\nimport { TileLayer } from '../shared/layers/tile-layer';\r\n\r\nexport class TileWatcher extends Watcher {\r\n  private id: string;\r\n  private loaded = 0;\r\n  private loading = 0;\r\n\r\n  private source: olSourceTile;\r\n\r\n  constructor(layer: TileLayer) {\r\n    super();\r\n    this.source = layer.options.source.ol;\r\n    this.id = uuid();\r\n  }\r\n\r\n  protected watch() {\r\n    this.source.on(`tileloadstart`, e => this.handleLoadStart(e));\r\n    this.source.on(`tileloadend`, e => this.handleLoadEnd(e));\r\n    this.source.on(`tileloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  protected unwatch() {\r\n    this.source.un(`tileloadstart`, e => this.handleLoadStart(e));\r\n    this.source.un(`tileloadend`, e => this.handleLoadEnd(e));\r\n    this.source.un(`tileloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  private handleLoadStart(event: any) {\r\n    // This is to avoid increasing\r\n    // the number of loaded tiles if a tile was loading\r\n    // before subscribing to this watcher\r\n    if (!event.tile.__watchers__) {\r\n      event.tile.__watchers__ = [];\r\n    }\r\n    event.tile.__watchers__.push(this.id);\r\n\r\n    this.loading += 1;\r\n    this.status = SubjectStatus.Working;\r\n  }\r\n\r\n  private handleLoadEnd(event) {\r\n    if (!event.tile.__watchers__) {\r\n      return;\r\n    }\r\n\r\n    const watcherIndex = event.tile.__watchers__.indexOf(this.id);\r\n    if (watcherIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    event.tile.__watchers__.splice(watcherIndex, 1);\r\n\r\n    this.loaded += 1;\r\n\r\n    const loading = this.loading;\r\n    if (this.loaded >= loading) {\r\n      if (loading === this.loading) {\r\n        this.status = SubjectStatus.Done;\r\n        this.loaded = this.loading = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Layer } from '../shared/layers/layer';\r\nimport { LayerLegend } from '../shared/layers/layer.interface';\r\n\r\n/**\r\n * Get all the layers legend\r\n * @return Array of legend\r\n */\r\nexport function getLayersLegends(layers: Layer[], scale?: number): LayerLegend[] {\r\n  const legends = [];\r\n  const newCanvas = document.createElement('canvas');\r\n  const newContext = newCanvas.getContext('2d');\r\n  newContext.font = '20px Calibri';\r\n\r\n  let heightPos = 0;\r\n  for (const layer of layers) {\r\n    if (layer.visible === false) { continue; }\r\n\r\n    const legendUrls = layer.dataSource.getLegend(scale) || [];\r\n    for (const legendUrl of legendUrls) {\r\n      if (legendUrl.url === undefined) { continue; }\r\n\r\n      const title = layer.title;\r\n      // Create an image for the legend\r\n      const legendImage = new Image();\r\n      legendImage.crossOrigin = 'Anonymous';\r\n      legendImage.src = legendUrl.url;\r\n      legendImage.onload = () => {\r\n        newContext.fillText(title, 0, heightPos);\r\n        newContext.drawImage(legendImage, 0, heightPos + 20);\r\n        heightPos += legendImage.height + 5;\r\n      };\r\n      // Add legend info to the list\r\n      legends.push({\r\n        title,\r\n        url: legendUrl.url,\r\n        image: legendImage\r\n      });\r\n    }\r\n  }\r\n\r\n  return legends;\r\n}\r\n","import olLayerImage from 'ol/layer/Image';\r\nimport olSourceImage from 'ol/source/Image';\r\n\r\nimport { ImageWatcher } from '../../utils';\r\nimport { IgoMap } from '../../../map';\r\n\r\nimport { WMSDataSource } from '../../../datasource/shared/datasources/wms-datasource';\r\n\r\nimport { Layer } from './layer';\r\nimport { ImageLayerOptions } from './image-layer.interface';\r\n\r\nexport class ImageLayer extends Layer {\r\n  public dataSource: WMSDataSource;\r\n  public options: ImageLayerOptions;\r\n  public ol: olLayerImage;\r\n\r\n  private watcher: ImageWatcher;\r\n\r\n  constructor(options: ImageLayerOptions) {\r\n    super(options);\r\n\r\n    this.watcher = new ImageWatcher(this);\r\n    this.status$ = this.watcher.status$;\r\n  }\r\n\r\n  protected createOlLayer(): olLayerImage {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceImage\r\n    });\r\n\r\n    const image = new olLayerImage(olOptions);\r\n    const token = this.options.token;\r\n    if (token) {\r\n      (image.getSource() as any).setImageLoadFunction((tile, src) => {\r\n        this.customLoader(tile, src, token);\r\n      });\r\n    }\r\n\r\n    return image;\r\n  }\r\n\r\n  public setMap(map: IgoMap | undefined) {\r\n    if (map === undefined) {\r\n      this.watcher.unsubscribe();\r\n    } else {\r\n      this.watcher.subscribe(() => {});\r\n    }\r\n    super.setMap(map);\r\n  }\r\n\r\n  private customLoader(tile, src, token?) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', src);\r\n\r\n    xhr.setRequestHeader('Authorization', 'Bearer ' + token);\r\n    xhr.responseType = 'arraybuffer';\r\n\r\n    xhr.onload = function() {\r\n      const arrayBufferView = new Uint8Array((this as any).response);\r\n      const blob = new Blob([arrayBufferView], { type: 'image/png' });\r\n      const urlCreator = window.URL;\r\n      const imageUrl = urlCreator.createObjectURL(blob);\r\n      tile.getImage().src = imageUrl;\r\n    };\r\n    xhr.send();\r\n  }\r\n}\r\n","import olLayerTile from 'ol/layer/Tile';\r\nimport olSourceTile from 'ol/source/Tile';\r\n\r\nimport { TileWatcher } from '../../utils';\r\nimport { IgoMap } from '../../../map';\r\n\r\nimport { OSMDataSource } from '../../../datasource/shared/datasources/osm-datasource';\r\nimport { WMTSDataSource } from '../../../datasource/shared/datasources/wmts-datasource';\r\nimport { XYZDataSource } from '../../../datasource/shared/datasources/xyz-datasource';\r\nimport { CartoDataSource } from '../../../datasource/shared/datasources/carto-datasource';\r\nimport { TileArcGISRestDataSource } from '../../../datasource/shared/datasources/tilearcgisrest-datasource';\r\n\r\nimport { Layer } from './layer';\r\nimport { TileLayerOptions } from './tile-layer.interface';\r\n\r\nexport class TileLayer extends Layer {\r\n  public dataSource:\r\n    | OSMDataSource\r\n    | WMTSDataSource\r\n    | XYZDataSource\r\n    | CartoDataSource\r\n    | TileArcGISRestDataSource;\r\n  public options: TileLayerOptions;\r\n  public ol: olLayerTile;\r\n\r\n  private watcher: TileWatcher;\r\n\r\n  constructor(options: TileLayerOptions) {\r\n    super(options);\r\n\r\n    this.watcher = new TileWatcher(this);\r\n    this.status$ = this.watcher.status$;\r\n  }\r\n\r\n  protected createOlLayer(): olLayerTile {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceTile\r\n    });\r\n\r\n    return new olLayerTile(olOptions);\r\n  }\r\n\r\n  public setMap(map: IgoMap | undefined) {\r\n    if (map === undefined) {\r\n      this.watcher.unsubscribe();\r\n    } else {\r\n      this.watcher.subscribe(() => {});\r\n    }\r\n    super.setMap(map);\r\n  }\r\n}\r\n","import olLayerVector from 'ol/layer/Vector';\r\nimport olSourceVector from 'ol/source/Vector';\r\nimport { unByKey } from 'ol/Observable';\r\nimport { easeOut } from 'ol/easing';\r\nimport { asArray as ColorAsArray } from 'ol/color';\r\n\r\nimport { FeatureDataSource } from '../../../datasource/shared/datasources/feature-datasource';\r\nimport { WFSDataSource } from '../../../datasource/shared/datasources/wfs-datasource';\r\nimport { ArcGISRestDataSource } from '../../../datasource/shared/datasources/arcgisrest-datasource';\r\nimport { WebSocketDataSource } from '../../../datasource/shared/datasources/websocket-datasource';\r\nimport { ClusterDataSource } from '../../../datasource/shared/datasources/cluster-datasource';\r\n\r\nimport { Layer } from './layer';\r\nimport { VectorLayerOptions } from './vector-layer.interface';\r\n\r\nexport class VectorLayer extends Layer {\r\n  public dataSource:\r\n    | FeatureDataSource\r\n    | WFSDataSource\r\n    | ArcGISRestDataSource\r\n    | WebSocketDataSource\r\n    | ClusterDataSource;\r\n  public options: VectorLayerOptions;\r\n  public ol: olLayerVector;\r\n\r\n  get browsable(): boolean {\r\n    return this.options.browsable !== false;\r\n  }\r\n\r\n  get exportable(): boolean {\r\n    return this.options.exportable !== false;\r\n  }\r\n\r\n  constructor(options: VectorLayerOptions) {\r\n    super(options);\r\n  }\r\n\r\n  protected createOlLayer(): olLayerVector {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceVector\r\n    });\r\n\r\n    if (this.options.animation) {\r\n      this.dataSource.ol.on(\r\n        'addfeature',\r\n        function(e) {\r\n          this.flash(e.feature);\r\n        }.bind(this)\r\n      );\r\n    }\r\n\r\n    return new olLayerVector(olOptions);\r\n  }\r\n\r\n  protected flash(feature) {\r\n    const start = new Date().getTime();\r\n    const listenerKey = this.map.ol.on('postcompose', animate.bind(this));\r\n\r\n    function animate(event) {\r\n      const vectorContext = event.vectorContext;\r\n      const frameState = event.frameState;\r\n      const flashGeom = feature.getGeometry().clone();\r\n      const elapsed = frameState.time - start;\r\n      const elapsedRatio = elapsed / this.options.animation.duration;\r\n      const opacity = easeOut(1 - elapsedRatio);\r\n      const newColor = ColorAsArray(this.options.animation.color || 'red');\r\n      newColor[3] = opacity;\r\n      const style = this.ol.getStyleFunction().call(this, feature)[0];\r\n      const styleClone = style.clone();\r\n\r\n      switch (feature.getGeometry().getType()) {\r\n        case 'Point':\r\n          const radius =\r\n            easeOut(elapsedRatio) * (styleClone.getImage().getRadius() * 3);\r\n          styleClone.getImage().setRadius(radius);\r\n          styleClone.getImage().setOpacity(opacity);\r\n          break;\r\n        case 'LineString':\r\n          // TODO\r\n          if (styleClone.getImage().getStroke()) {\r\n            styleClone\r\n              .getImage()\r\n              .getStroke()\r\n              .setColor(newColor);\r\n            styleClone\r\n              .getImage()\r\n              .getStroke()\r\n              .setWidth(\r\n                easeOut(elapsedRatio) *\r\n                  (styleClone\r\n                    .getImage()\r\n                    .getStroke()\r\n                    .getWidth() *\r\n                    3)\r\n              );\r\n          }\r\n          if (styleClone.getStroke()) {\r\n            styleClone.getStroke().setColor(newColor);\r\n            styleClone\r\n              .getStroke()\r\n              .setWidth(\r\n                easeOut(elapsedRatio) * (styleClone.getStroke().getWidth() * 3)\r\n              );\r\n          }\r\n          break;\r\n        case 'Polygon':\r\n          // TODO\r\n          if (styleClone.getImage().getFill()) {\r\n            styleClone\r\n              .getImage()\r\n              .getFill()\r\n              .setColor(newColor);\r\n          }\r\n          if (styleClone.getFill()) {\r\n            styleClone.getFill().setColor(newColor);\r\n          }\r\n          break;\r\n      }\r\n\r\n      vectorContext.setStyle(styleClone);\r\n      vectorContext.drawGeometry(flashGeom);\r\n\r\n      if (elapsed > this.options.animation.duration) {\r\n        unByKey(listenerKey);\r\n        // remove last geometry\r\n        // there is a little flash before feature disappear, better solution ?\r\n        this.map.ol.render();\r\n        return;\r\n      }\r\n      // tell OpenLayers to continue postcompose animation\r\n      this.map.ol.render();\r\n    }\r\n  }\r\n}\r\n","import olLayerVectorTile from 'ol/layer/VectorTile';\r\nimport olSourceVectorTile from 'ol/source/VectorTile';\r\n\r\nimport { MVTDataSource } from '../../../datasource/shared/datasources/mvt-datasource';\r\n\r\nimport { Layer } from './layer';\r\nimport { VectorTileLayerOptions } from './vectortile-layer.interface';\r\n\r\nexport class VectorTileLayer extends Layer {\r\n  public dataSource:\r\n    | MVTDataSource;\r\n  public options: VectorTileLayerOptions;\r\n  public ol: olLayerVectorTile;\r\n\r\n  constructor(options: VectorTileLayerOptions) {\r\n    super(options);\r\n  }\r\n\r\n  protected createOlLayer(): olLayerVectorTile {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceVectorTile\r\n\r\n    });\r\n\r\n    return new olLayerVectorTile(olOptions);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport * as olstyle from 'ol/style';\r\nimport { StyleByAttribute } from './stylebyattribute';\r\nimport { ClusterParam } from './clusterParam';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StyleService {\r\n  constructor() {}\r\n\r\n  createStyle(options: { [key: string]: any }) {\r\n    return this.parseStyle('style', options);\r\n  }\r\n\r\n  private parseStyle(key: string, value: any): olstyle {\r\n    const styleOptions = {};\r\n    const olCls = this.getOlCls(key);\r\n\r\n    if (olCls && value instanceof Object) {\r\n      Object.keys(value).forEach(_key => {\r\n        const olKey = this.getOlKey(_key);\r\n        styleOptions[olKey] = this.parseStyle(_key, value[_key]);\r\n      });\r\n      return new olCls(styleOptions);\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  private getOlKey(key: any) {\r\n    let olKey = key.toLowerCase();\r\n    switch (olKey) {\r\n      case 'circle':\r\n      case 'regularshape':\r\n      case 'icon':\r\n        olKey = 'image';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return olKey;\r\n  }\r\n\r\n  private getOlCls(key: any) {\r\n    let olCls = olstyle[key.charAt(0).toUpperCase() + key.slice(1)];\r\n    if (key === 'regularshape') {\r\n      olCls = olstyle.RegularShape;\r\n    }\r\n\r\n    return olCls;\r\n  }\r\n\r\n  createStyleByAttribute(feature, styleByAttribute: StyleByAttribute) {\r\n    let style;\r\n    const type = styleByAttribute.type;\r\n    const attribute = styleByAttribute.attribute;\r\n    const data = styleByAttribute.data;\r\n    const stroke = styleByAttribute.stroke;\r\n    const width = styleByAttribute.width;\r\n    const fill = styleByAttribute.fill;\r\n    const radius = styleByAttribute.radius;\r\n    const icon = styleByAttribute.icon;\r\n    const scale = styleByAttribute.scale;\r\n    const size = data.length;\r\n    const label = styleByAttribute.label;\r\n    const baseStyle = styleByAttribute.baseStyle;\r\n    if (type === 'circle') {\r\n      for (let i = 0; i < size; i++) {\r\n        if (feature.get(attribute) === data[i]) {\r\n          if (icon) {\r\n           style = [new olstyle.Style({\r\n             image: new olstyle.Icon({\r\n               src: icon[i],\r\n               scale: scale ? scale[i] : 1\r\n             })\r\n           })];\r\n           return style;\r\n          }\r\n          style = [new olstyle.Style({\r\n            image: new olstyle.Circle({\r\n              radius: radius ? radius[i] : 4,\r\n              stroke: new olstyle.Stroke({\r\n                color: stroke ? stroke[i] : 'black'\r\n              }),\r\n              fill: new olstyle.Fill({\r\n                color: fill ? fill[i] : 'black'\r\n              })\r\n            })\r\n          })];\r\n          return style;\r\n        }\r\n      }\r\n      if (!feature.getStyle()) {\r\n       style = [new olstyle.Style({\r\n         image: new olstyle.Circle({\r\n           radius: 4,\r\n           stroke: new olstyle.Stroke({\r\n             color: 'black'\r\n           }),\r\n           fill: new olstyle.Fill({\r\n             color: '#bbbbf2'\r\n           })\r\n         })\r\n       })];\r\n       return style;\r\n     }\r\n     } else if (type === 'regular') {\r\n        for (let i = 0; i < size; i++) {\r\n          if (feature.get(attribute) === data[i]) {\r\n            style = [new olstyle.Style({\r\n              stroke: new olstyle.Stroke({\r\n                color: stroke ? stroke[i] : 'black',\r\n                width: width ? width[i] : 1\r\n              }),\r\n              fill: new olstyle.Fill({\r\n                color: fill ? fill[i] : 'rgba(255,255,255,0.4)'\r\n              }),\r\n              text: new olstyle.Text({\r\n                text: feature.get(label),\r\n                stroke: new olstyle.Stroke({\r\n                  color: 'black'\r\n                })\r\n              })\r\n            })];\r\n            return style;\r\n           }\r\n         }\r\n        if (!feature.getStyle()) {\r\n          if (baseStyle) {\r\n            style = this.createStyle(baseStyle);\r\n            return style;\r\n          }\r\n          style = [new olstyle.Style({\r\n            stroke: new olstyle.Stroke({\r\n              color: 'black'\r\n            }),\r\n            fill: new olstyle.Fill({\r\n              color: '#bbbbf2'\r\n            })\r\n          })];\r\n          return style;\r\n        }\r\n       }\r\n   }\r\n\r\n   createClusterStyle(feature, clusterParam: ClusterParam) {\r\n    let style;\r\n    const range = clusterParam.clusterRange;\r\n    const icon = clusterParam.clusterIcon;\r\n    const iconScale = clusterParam.clusterScale;\r\n    const size = feature.get('features').length;\r\n    let color;\r\n    if (size !== 1) {\r\n      if (range) {\r\n        if (size >= range[1]) {\r\n            color = 'red';\r\n        } else if (size < range[1] && size >= range[0]) {\r\n            color = 'orange';\r\n        } else if (size < range[0]) {\r\n            color = 'green';\r\n        }\r\n      }\r\n      style = [new olstyle.Style({\r\n        image: new olstyle.Circle({\r\n            radius: 2 * size + 3.4,\r\n            stroke: new olstyle.Stroke({\r\n                color: 'black'\r\n            }),\r\n            fill: new olstyle.Fill({\r\n                color: range ? color : 'blue'\r\n            })\r\n        }),\r\n        text: new olstyle.Text({\r\n            text: size.toString(),\r\n            fill: new olstyle.Fill({\r\n                color: '#fff'\r\n            })\r\n        })\r\n      })];\r\n    } else {\r\n      if (icon) {\r\n        style = [new olstyle.Style({\r\n          image: new olstyle.Icon({\r\n            src: icon,\r\n            scale: iconScale\r\n          })\r\n        })];\r\n      } else {\r\n        style = [new olstyle.Style({\r\n          image: new olstyle.Circle({\r\n              radius: 2 * size + 3.4,\r\n              stroke: new olstyle.Stroke({\r\n                  color: 'black'\r\n              }),\r\n              fill: new olstyle.Fill({\r\n                  color: 'blue'\r\n              })\r\n          })\r\n        })];\r\n      }\r\n    }\r\n    return style;\r\n  }\r\n}\r\n","import OlLayer from 'ol/layer/Layer';\r\n\r\nimport { AnyLayer } from '../../layer/shared/layers/any-layer';\r\nimport { QueryableDataSource } from './query.interfaces';\r\n\r\n/**\r\n * Whether a layer is queryable\r\n * @param layer Layer\r\n * @returns True if the layer s squeryable\r\n */\r\nexport function layerIsQueryable(layer: AnyLayer): boolean {\r\n  const dataSource = layer.dataSource as QueryableDataSource;\r\n  return dataSource.options.queryable === true;\r\n}\r\n\r\n/**\r\n * Whether an OL layer is queryable\r\n * @param layer Layer\r\n * @returns True if the ol layer is queryable\r\n */\r\nexport function olLayerIsQueryable(olLayer: OlLayer): boolean {\r\n  const layer = olLayer.get('_layer');\r\n  return layer === undefined ? false : layerIsQueryable(layer);\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\n\r\nimport { MetadataLayerOptions } from '../../metadata/shared/metadata.interface';\r\nimport { layerIsQueryable } from '../../query/shared/query.utils';\r\nimport { Layer, TooltipType } from '../shared/layers';\r\n\r\n@Component({\r\n  selector: 'igo-layer-item',\r\n  templateUrl: './layer-item.component.html',\r\n  styleUrls: ['./layer-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LayerItemComponent implements OnInit, OnDestroy {\r\n\r\n  showLegend$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  inResolutionRange$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  queryBadgeHidden$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  tooltipText: string;\r\n\r\n  private resolution$$: Subscription;\r\n\r\n  @Input() layer: Layer;\r\n\r\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\r\n\r\n  @Input() expandLegendIfVisible: boolean = false;\r\n\r\n  @Input() updateLegendOnResolutionChange: boolean = false;\r\n\r\n  @Input() orderable: boolean = true;\r\n\r\n  @Input() queryBadge: boolean = false;\r\n\r\n  get removable(): boolean { return this.layer.options.removable !== false; }\r\n\r\n  get opacity() { return this.layer.opacity * 100; }\r\n  set opacity(opacity: number) { this.layer.opacity = opacity / 100; }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  ngOnInit() {\r\n    const legend = this.layer.dataSource.options.legend || {};\r\n    let legendCollapsed = legend.collapsed === false ? false : true;\r\n    if (this.layer.visible && this.expandLegendIfVisible) {\r\n      legendCollapsed = false;\r\n    }\r\n    this.toggleLegend(legendCollapsed);\r\n    this.updateQueryBadge();\r\n\r\n    const resolution$ = this.layer.map.viewController.resolution$;\r\n    this.resolution$$ = resolution$.subscribe((resolution: number) => {\r\n      this.onResolutionChange(resolution);\r\n    });\r\n    this.tooltipText = this.computeTooltip();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.resolution$$.unsubscribe();\r\n  }\r\n\r\n  toggleLegend(collapsed: boolean) {\r\n    this.showLegend$.next(!collapsed);\r\n  }\r\n\r\n  toggleVisibility() {\r\n    this.layer.visible = !this.layer.visible;\r\n    if (this.toggleLegendOnVisibilityChange) {\r\n      this.toggleLegend(!this.layer.visible);\r\n    }\r\n    this.updateQueryBadge();\r\n  }\r\n\r\n  computeTooltip(): string {\r\n    const layerOptions = this.layer.options;\r\n    if (!layerOptions.tooltip) {\r\n      return this.layer.title;\r\n    }\r\n    const layerTooltip = layerOptions.tooltip;\r\n    const layerMetadata = (layerOptions as MetadataLayerOptions).metadata;\r\n    switch (layerOptions.tooltip.type) {\r\n      case TooltipType.TITLE:\r\n        return this.layer.title;\r\n      case TooltipType.ABSTRACT:\r\n        if (layerMetadata && layerMetadata.abstract) {\r\n          return layerMetadata.abstract;\r\n        } else {\r\n          return this.layer.title;\r\n        }\r\n      case TooltipType.CUSTOM:\r\n        if (layerTooltip && layerTooltip.text) {\r\n          return layerTooltip.text;\r\n        } else {\r\n          return this.layer.title;\r\n        }\r\n      default:\r\n        return this.layer.title;\r\n    }\r\n  }\r\n\r\n  private onResolutionChange(resolution: number) {\r\n    const inResolutionRange = this.layer.isInResolutionsRange;\r\n    if (inResolutionRange === false && this.updateLegendOnResolutionChange === true) {\r\n      this.toggleLegend(true);\r\n    }\r\n    this.inResolutionRange$.next(inResolutionRange);\r\n  }\r\n\r\n  private updateQueryBadge() {\r\n    const hidden = this.queryBadge === false ||\r\n      this.layer.visible === false ||\r\n      !layerIsQueryable(this.layer);\r\n    this.queryBadgeHidden$.next(hidden);\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Subscription, BehaviorSubject, of, Observable } from 'rxjs';\r\n\r\nimport { DataSourceLegendOptions } from '../../datasource/shared/datasources/datasource.interface';\r\nimport { Layer } from '../shared/layers';\r\nimport { CapabilitiesService } from '../../datasource/shared/capabilities.service';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'igo-layer-legend',\r\n  templateUrl: './layer-legend.component.html',\r\n  styleUrls: ['./layer-legend.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LayerLegendComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() updateLegendOnResolutionChange: boolean = false;\r\n\r\n  /**\r\n   * Observable of the legend items\r\n   */\r\n  legendItems$: BehaviorSubject<DataSourceLegendOptions[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * Subscription to the map's resolution\r\n   */\r\n  private resolution$$: Subscription;\r\n  /**\r\n   * Layer\r\n   */\r\n  @Input() layer: Layer;\r\n\r\n  constructor(private capabilitiesService: CapabilitiesService) {}\r\n\r\n  /**\r\n   * On init, subscribe to the map's resolution and update the legend accordingly\r\n   */\r\n  ngOnInit() {\r\n    if (this.updateLegendOnResolutionChange === true) {\r\n      const resolution$ = this.layer.map.viewController.resolution$;\r\n      this.resolution$$ = resolution$.subscribe((resolution: number) => this.onResolutionChange(resolution));\r\n    } else {\r\n      this.updateLegend(undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On destroy, unsubscribe to the map,s resolution\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.resolution$$ !== undefined) {\r\n      this.resolution$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  computeItemTitle(layerLegend): Observable<string> {\r\n    const layerOptions = this.layer.dataSource.options as any;\r\n    if (layerOptions.type !== 'wms') {\r\n      return of(layerLegend.title);\r\n    }\r\n\r\n    const layers = layerOptions.params.layers.split(',');\r\n    const localLayerOptions = JSON.parse(JSON.stringify(layerOptions)); // to avoid to alter the original options.\r\n    localLayerOptions.params.layers = layers.find(layer => layer === layerLegend.title);\r\n    return this.capabilitiesService\r\n      .getWMSOptions(localLayerOptions)\r\n      .pipe(map(wmsDataSourceOptions => {\r\n        return wmsDataSourceOptions._layerOptionsFromCapabilities.title;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * On resolution change, compute the effective scale level and update the\r\n   * legend accordingly.\r\n   * @param resolutione Map resolution\r\n   */\r\n  private onResolutionChange(resolution: number) {\r\n    const scale = this.layer.map.viewController.getScale();\r\n    this.updateLegend(scale);\r\n  }\r\n\r\n  /**\r\n   * Update the legend according the scale level\r\n   * @param scale Map scale level\r\n   */\r\n  private updateLegend(scale: number | undefined) {\r\n    const legendItems = this.layer.dataSource.getLegend(scale);\r\n    if (legendItems.length === 0 && this.legendItems$.value.length === 0) {\r\n      return;\r\n    }\r\n    this.legendItems$.next(legendItems);\r\n  }\r\n}\r\n","export enum LayerListControlsEnum {\r\n  always = 'always',\r\n  never = 'never',\r\n  default = 'default'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LayerListService {\r\n  public keyword: string;\r\n  public sortedAlpha = false;\r\n  public onlyVisible = false;\r\n  public onlyInRange = false;\r\n  public keywordInitialized = false;\r\n  public sortedAlphaInitialized = false;\r\n  public onlyVisibleInitialized = false;\r\n  public onlyInRangeInitialized = false;\r\n\r\n  constructor() {}\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  TemplateRef,\r\n  ContentChild,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { FloatLabelType } from '@angular/material';\r\n\r\nimport { Layer } from '../shared';\r\nimport { LayerListControlsEnum } from './layer-list.enum';\r\nimport { LayerListService } from './layer-list.service';\r\nimport { BehaviorSubject, ReplaySubject, Subscription, EMPTY, timer } from 'rxjs';\r\nimport { debounce } from 'rxjs/operators';\r\nimport { MetadataOptions, MetadataLayerOptions } from '../../metadata/shared/metadata.interface';\r\n\r\n// TODO: This class could use a clean up. Also, some methods could be moved ealsewhere\r\n@Component({\r\n  selector: 'igo-layer-list',\r\n  templateUrl: './layer-list.component.html',\r\n  styleUrls: ['./layer-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LayerListComponent implements OnInit, OnDestroy {\r\n\r\n  hasLayerNotVisible = false;\r\n  hasLayerOutOfRange = false;\r\n  orderable = true;\r\n  thresholdToFilterAndSort = 5;\r\n\r\n  layers$: BehaviorSubject<Layer[]> = new BehaviorSubject([]);\r\n\r\n  change$ = new ReplaySubject<void>(1);\r\n\r\n  showToolbar$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  private change$$: Subscription;\r\n\r\n  @ContentChild('igoLayerItemToolbar') templateLayerToolbar: TemplateRef<any>;\r\n\r\n  @Input()\r\n  set layers(value: Layer[]) {\r\n    this.setLayers(value);\r\n    this.next();\r\n  }\r\n  get layers(): Layer[] { return this._layers; }\r\n  private _layers: Layer[];\r\n\r\n  @Input() placeholder: string = '';\r\n\r\n  @Input() floatLabel: FloatLabelType = 'auto';\r\n\r\n  @Input() layerFilterAndSortOptions: any = {};\r\n\r\n  @Input() excludeBaseLayers: boolean = false;\r\n\r\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\r\n\r\n  @Input() expandLegendOfVisibleLayers: boolean = false;\r\n\r\n  @Input() updateLegendOnResolutionChange: boolean = false;\r\n\r\n  @Input() queryBadge: boolean = false;\r\n\r\n  get keyword(): string { return this.layerListService.keyword; }\r\n  set keyword(value: string) {\r\n    this.layerListService.keyword = value;\r\n    this.next();\r\n  }\r\n\r\n  get keywordInitialized(): boolean { return this.layerListService.keywordInitialized; }\r\n  set keywordInitialized(value: boolean) { this.layerListService.keywordInitialized = value; }\r\n\r\n  get onlyVisible(): boolean { return this.layerListService.onlyVisible; }\r\n  set onlyVisible(value: boolean) {\r\n    this.layerListService.onlyVisible = value;\r\n    this.next();\r\n  }\r\n\r\n  get onlyVisibleInitialized(): boolean { return this.layerListService.onlyVisibleInitialized; }\r\n  set onlyVisibleInitialized(value: boolean) { this.layerListService.onlyVisibleInitialized = value; }\r\n\r\n  get onlyInRange(): boolean { return this.layerListService.onlyInRange; }\r\n  set onlyInRange(value: boolean) {\r\n    this.layerListService.onlyInRange = value;\r\n    this.next();\r\n  }\r\n\r\n  get onlyInRangeInitialized(): boolean { return this.layerListService.onlyInRangeInitialized; }\r\n  set onlyInRangeInitialized(value: boolean) { this.layerListService.onlyInRangeInitialized = value; }\r\n\r\n  get sortedAlpha(): boolean { return this.layerListService.sortedAlpha; }\r\n  set sortedAlpha(value: boolean) {\r\n    this.layerListService.sortedAlpha = value;\r\n    this.next();\r\n  }\r\n\r\n  get sortedAlphaInitialized(): boolean { return this.layerListService.sortedAlphaInitialized; }\r\n  set sortedAlphaInitialized(value: boolean) { this.layerListService.sortedAlphaInitialized = value; }\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private layerListService: LayerListService\r\n  ) {}\r\n\r\n  /**\r\n   * Subscribe to the search term stream and trigger researches\r\n   * @internal\r\n   */\r\n  ngOnInit(): void {\r\n    this.change$$ = this.change$\r\n      .pipe(\r\n        debounce(() => {\r\n          return this.layers.length === 0 ? EMPTY : timer(50);\r\n        })\r\n      ).subscribe(() => {\r\n        this.showToolbar$.next(this.computeShowToolbar());\r\n        this.layers$.next(this.computeLayers(this.layers.slice(0)));\r\n      });\r\n\r\n    this.initLayerFilterAndSortOptions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.change$$.unsubscribe();\r\n  }\r\n\r\n  toggleOnlyVisible() {\r\n    this.onlyVisible = !this.onlyVisible;\r\n  }\r\n\r\n  toggleOnlyInRange() {\r\n    this.onlyInRange = !this.onlyInRange;\r\n  }\r\n\r\n  toggleSort(sortAlpha: boolean) {\r\n    this.sortedAlpha = sortAlpha;\r\n  }\r\n\r\n  clearKeyword() {\r\n    this.keyword = undefined;\r\n  }\r\n\r\n  private next() {\r\n    this.change$.next();\r\n  }\r\n\r\n  private computeLayers(layers: Layer[]): Layer[] {\r\n    let layersOut = this.filterLayers(layers);\r\n    if (this.sortedAlpha) {\r\n      layersOut = this.sortLayersByTitle(layersOut);\r\n    } else {\r\n      layersOut = this.sortLayersByZindex(layersOut);\r\n    }\r\n    return layersOut;\r\n  }\r\n\r\n  private filterLayers(layers: Layer[]): Layer[] {\r\n    const keyword = this.keyword;\r\n    if (this.layerFilterAndSortOptions.showToolbar === LayerListControlsEnum.never) {\r\n      return layers;\r\n    }\r\n    if (!keyword && !this.onlyInRange && !this.onlyVisible) {\r\n      return layers;\r\n    }\r\n\r\n    const keepLayerIds = layers.map((layer: Layer) => layer.id);\r\n\r\n    layers.forEach((layer: Layer) => {\r\n      const layerOptions = layer.options as MetadataLayerOptions || {};\r\n      const dataSourceOptions = layer.dataSource.options || {};\r\n      const metadata = layerOptions.metadata || {} as MetadataOptions;\r\n      const keywords = metadata.keywordList || [] ;\r\n      const layerKeywords = keywords.map((kw: string) => {\r\n        return kw.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n      });\r\n\r\n      if (keyword) {\r\n        const localKeyword = keyword.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n        const layerTitle = layer.title.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n        const dataSourceType = dataSourceOptions.type || '';\r\n        const keywordRegex = new RegExp(localKeyword, 'gi');\r\n        const keywordInList = layerKeywords.find((kw: string) => keywordRegex.test(kw)) !== undefined;\r\n        if (\r\n          !keywordRegex.test(layerTitle) &&\r\n          !(keyword.toLowerCase() === dataSourceType.toLowerCase()) &&\r\n          !keywordInList\r\n        ) {\r\n          const index = keepLayerIds.indexOf(layer.id);\r\n          if (index > -1) {\r\n            keepLayerIds.splice(index, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.onlyVisible && layer.visible === false) {\r\n        const index = keepLayerIds.indexOf(layer.id);\r\n        if (index > -1) {\r\n          keepLayerIds.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      if (this.onlyInRange && layer.isInResolutionsRange === false) {\r\n        const index = keepLayerIds.indexOf(layer.id);\r\n        if (index > -1) {\r\n          keepLayerIds.splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n\r\n    return layers.filter((layer: Layer) => keepLayerIds.indexOf(layer.id) !== -1);\r\n  }\r\n\r\n  private sortLayersByZindex(layers: Layer[]) {\r\n    return layers.sort((layer1, layer2) => layer2.zIndex - layer1.zIndex);\r\n  }\r\n\r\n  private sortLayersByTitle(layers: Layer[]) {\r\n    return layers.sort((a, b) => {\r\n      if (a.title < b.title) {\r\n        return -1;\r\n      }\r\n      if (a.title > b.title) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  private computeOrderable(): boolean {\r\n    if (this.onlyInRange || this.onlyVisible ||\r\n      this.sortedAlpha || this.keyword) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  private computeShowToolbar(): boolean {\r\n    switch (this.layerFilterAndSortOptions.showToolbar) {\r\n      case LayerListControlsEnum.always:\r\n        return true;\r\n      case LayerListControlsEnum.never:\r\n        return false;\r\n      default:\r\n        if (this.layers.length >= this.thresholdToFilterAndSort ||\r\n          this.keyword ||\r\n          this.onlyInRange ||\r\n          this.onlyVisible) {\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private initLayerFilterAndSortOptions() {\r\n    if (this.layerFilterAndSortOptions.toolbarThreshold) {\r\n      this.thresholdToFilterAndSort = this.layerFilterAndSortOptions.toolbarThreshold;\r\n    }\r\n\r\n    if (this.layerFilterAndSortOptions.keyword && !this.keywordInitialized) {\r\n      this.keyword = this.layerFilterAndSortOptions.keyword;\r\n      this.keywordInitialized = true;\r\n    }\r\n    if (this.layerFilterAndSortOptions.sortedAlpha && !this.sortedAlphaInitialized) {\r\n      this.sortedAlpha = this.layerFilterAndSortOptions.sortedAlpha;\r\n      this.sortedAlphaInitialized = true;\r\n    }\r\n    if (this.layerFilterAndSortOptions.onlyVisible && !this.onlyVisibleInitialized &&\r\n      this.hasLayerNotVisible) {\r\n      this.onlyVisible = this.layerFilterAndSortOptions.onlyVisible;\r\n      this.onlyVisibleInitialized = true;\r\n    }\r\n    if (this.layerFilterAndSortOptions.onlyInRange && !this.onlyInRangeInitialized &&\r\n      this.hasLayerOutOfRange) {\r\n      this.onlyInRange = this.layerFilterAndSortOptions.onlyInRange;\r\n      this.onlyInRangeInitialized = true;\r\n    }\r\n  }\r\n\r\n  private setLayers(layers: Layer[]) {\r\n    this._layers = layers;\r\n\r\n    this.orderable = this.computeOrderable();\r\n\r\n    if (this.excludeBaseLayers) {\r\n      this.hasLayerNotVisible = layers.find(l => l.visible === false && !l.baseLayer) !== undefined;\r\n      this.hasLayerOutOfRange = layers.find(l => l.isInResolutionsRange === false && !l.baseLayer) !== undefined;\r\n    } else {\r\n      this.hasLayerNotVisible = layers.find(l => l.visible === false) !== undefined;\r\n      this.hasLayerOutOfRange = layers.find(l => l.isInResolutionsRange === false) !== undefined;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IgoMap } from './map';\r\n\r\n/**\r\n * MapService\r\n *\r\n * This service tracks the IgoMap instance, if any.\r\n * Currently, only one map instance is supported\r\n * but support for multiple maps may be added in the future.\r\n * This will impact other services such as the OverlayService\r\n * because these maps won't be sharing overlayed features.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  private map: IgoMap;\r\n\r\n  constructor() {}\r\n\r\n  getMap(): IgoMap {\r\n    return this.map;\r\n  }\r\n\r\n  setMap(map: IgoMap) {\r\n    this.map = map;\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy, AfterViewInit, Optional } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { RouteService } from '@igo2/core';\r\nimport { MapService } from '../../map/shared/map.service';\r\nimport { LayerListComponent } from './layer-list.component';\r\nimport { LayerListService } from './layer-list.service';\r\nimport { Layer } from '../shared/layers/layer';\r\n\r\n@Directive({\r\n  selector: '[igoLayerListBinding]'\r\n})\r\nexport class LayerListBindingDirective implements OnInit, AfterViewInit, OnDestroy {\r\n  private component: LayerListComponent;\r\n  private layers$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() component: LayerListComponent,\r\n    private mapService: MapService,\r\n    private layerListService: LayerListService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input layers\r\n    this.component.layers = [];\r\n\r\n    this.layers$$ = this.mapService\r\n      .getMap()\r\n      .layers$.subscribe((layers: Layer[]) => {\r\n        this.component.layers = layers.filter((layer: Layer) => {\r\n          return layer.showInLayerList === true;\r\n        });\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initRoutes();\r\n  }\r\n\r\n  private initRoutes() {\r\n    if (\r\n      this.route &&\r\n      (this.route.options.llcKKey || this.route.options.llcAKey ||\r\n        this.route.options.llcVKey || this.route.options.llcVKey)) {\r\n      this.route.queryParams.subscribe(params => {\r\n\r\n        const keywordFromUrl = params[this.route.options.llcKKey as string];\r\n        const sortedAplhaFromUrl = params[this.route.options.llcAKey as string];\r\n        const onlyVisibleFromUrl = params[this.route.options.llcVKey as string];\r\n        const onlyInRangeFromUrl = params[this.route.options.llcRKey as string];\r\n        if (keywordFromUrl && !this.layerListService.keywordInitialized) {\r\n          this.layerListService.keyword = keywordFromUrl;\r\n          this.layerListService.keywordInitialized = true;\r\n        }\r\n        if (sortedAplhaFromUrl && !this.layerListService.sortedAlphaInitialized) {\r\n          this.layerListService.sortedAlpha = sortedAplhaFromUrl === '1' ? true : false;\r\n          this.layerListService.sortedAlphaInitialized = true;\r\n        }\r\n        if (onlyVisibleFromUrl &&\r\n          !this.layerListService.onlyVisibleInitialized &&\r\n          this.component.hasLayerNotVisible) {\r\n          this.layerListService.onlyVisible = onlyVisibleFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyVisibleInitialized = true;\r\n        }\r\n        if (onlyInRangeFromUrl &&\r\n          !this.layerListService.onlyInRangeInitialized &&\r\n          this.component.hasLayerOutOfRange) {\r\n          this.layerListService.onlyInRange = onlyInRangeFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyInRangeInitialized = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n\r\n}\r\n","import { FeatureStoreStrategyOptions } from '../feature.interfaces';\r\nimport { FeatureStore } from '../store';\r\n\r\n/**\r\n * Strategies or responsible of synchronizing a feature store and a layer.\r\n * A strategy can be shared among multiple stores. Sharing a strategy\r\n * is a good idea when multiple strategies would have on cancelling effect\r\n * on each other.\r\n *\r\n * At creation, strategy is inactive and needs to be manually activated.\r\n */\r\nexport class FeatureStoreStrategy {\r\n\r\n  /**\r\n   * Feature store\r\n   * @internal\r\n   */\r\n  protected stores: FeatureStore[] = [];\r\n\r\n  /**\r\n   * Whether this strategy is active\r\n   * @internal\r\n   */\r\n  protected active = false;\r\n\r\n  constructor(protected options: FeatureStoreStrategyOptions = {}) {\r\n    this.options = options;\r\n  }\r\n\r\n  /**\r\n   * Whether this strategy is active\r\n   */\r\n  isActive(): boolean { return this.active; }\r\n\r\n  /**\r\n   * Activate the strategy. If it's already active, it'll be deactivated\r\n   * and activated again.\r\n   */\r\n  activate() {\r\n    if (this.active === true) {\r\n      this.doDeactivate();\r\n    }\r\n    this.active = true;\r\n    this.doActivate();\r\n  }\r\n\r\n  /**\r\n   * Activate the strategy. If it's already active, it'll be deactivated\r\n   * and activated again.\r\n   */\r\n  deactivate() {\r\n    this.active = false;\r\n    this.doDeactivate();\r\n  }\r\n\r\n  /**\r\n   * Bind this strategy to a store\r\n   * @param store Feature store\r\n   */\r\n  bindStore(store: FeatureStore) {\r\n    if (this.stores.indexOf(store) < 0) {\r\n      this.stores.push(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind this strategy from store\r\n   * @param store Feature store\r\n   */\r\n  unbindStore(store: FeatureStore) {\r\n    const index = this.stores.indexOf(store);\r\n    if (index >= 0) {\r\n      this.stores.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Do the stataegy activation\r\n   * @internal\r\n   */\r\n  protected doActivate() {}\r\n\r\n  /**\r\n   * Do the strategy deactivation\r\n   * @internal\r\n   */\r\n  protected doDeactivate() {}\r\n\r\n}\r\n","import { Subscription } from 'rxjs';\r\n\r\nimport { FeatureMotion } from '../feature.enums';\r\nimport { Feature, FeatureStoreLoadingStrategyOptions } from '../feature.interfaces';\r\nimport { FeatureStore } from '../store';\r\nimport { FeatureStoreStrategy } from './strategy';\r\n\r\n/**\r\n * This strategy loads a store's features into it's layer counterpart.\r\n * The store -> layer binding is a one-way binding. That means any entity\r\n * added to the store will be added to the layer but the opposite is false.\r\n *\r\n * Important: This strategy observes filtered entities, not raw entities. This\r\n * is not configurable yet.\r\n */\r\nexport class FeatureStoreLoadingStrategy extends FeatureStoreStrategy {\r\n\r\n  /**\r\n   * Subscription to the store's features\r\n   */\r\n  private stores$$ = new Map<FeatureStore, Subscription>();\r\n\r\n  constructor(protected options: FeatureStoreLoadingStrategyOptions) {\r\n    super(options);\r\n  }\r\n\r\n  /**\r\n   * Bind this strategy to a store and start watching for entities changes\r\n   * @param store Feature store\r\n   */\r\n  bindStore(store: FeatureStore) {\r\n    super.bindStore(store);\r\n    if (this.isActive() === true) {\r\n      this.watchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind this strategy from a store and stop watching for entities changes\r\n   * @param store Feature store\r\n   */\r\n  unbindStore(store: FeatureStore) {\r\n    super.unbindStore(store);\r\n    if (this.isActive() === true) {\r\n      this.unwatchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start watching all stores already bound to that strategy at once.\r\n   * @internal\r\n   */\r\n  protected doActivate() {\r\n    this.stores.forEach((store: FeatureStore) => this.watchStore(store));\r\n  }\r\n\r\n  /**\r\n   * Stop watching all stores bound to that strategy\r\n   * @internal\r\n   */\r\n  protected doDeactivate() {\r\n    this.unwatchAll();\r\n  }\r\n\r\n  /**\r\n   * Watch for entities changes in a store.\r\n   * Important: Never observe a store's sorted entities. It makes no sense\r\n   * to display sorted entities (instead of unsorted) on a layer and it\r\n   * would potentially result in a lot of useless computation.\r\n   * @param store Feature store\r\n   */\r\n  private watchStore(store: FeatureStore) {\r\n    if (this.stores$$.has(store)) {\r\n      return;\r\n    }\r\n\r\n    const subscription = store.view.all$()\r\n      .subscribe((features: Feature[]) => this.onFeaturesChange(features, store));\r\n    this.stores$$.set(store, subscription);\r\n  }\r\n\r\n  /**\r\n   * Stop watching for entities changes in a store.\r\n   * @param store Feature store\r\n   */\r\n  private unwatchStore(store: FeatureStore) {\r\n    const subscription = this.stores$$.get(store);\r\n    if (subscription !== undefined) {\r\n      subscription.unsubscribe();\r\n      this.stores$$.delete(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop watching for entities changes in all stores.\r\n   */\r\n  private unwatchAll() {\r\n    Array.from(this.stores$$.entries()).forEach((entries: [FeatureStore, Subscription]) => {\r\n      entries[1].unsubscribe();\r\n    });\r\n    this.stores$$.clear();\r\n  }\r\n\r\n  /**\r\n   * Load features into a layer or clear the layer if the array of features is empty.\r\n   * @param features Store filtered features\r\n   * @param store Feature store\r\n   */\r\n  private onFeaturesChange(features: Feature[], store: FeatureStore) {\r\n    if (features.length === 0) {\r\n      store.clearLayer();\r\n    } else {\r\n      store.setLayerFeatures(\r\n        features,\r\n        this.selectMotion(store),\r\n        this.options.viewScale,\r\n        this.options.areaRatio,\r\n        this.options.getFeatureId\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects the best motion\r\n   * @param store A FeatureStore to apply the motion\r\n   * @returns The motion selected\r\n   */\r\n  private selectMotion(store: FeatureStore) {\r\n    if (this.options.motion !== undefined) { return this.options.motion; }\r\n\r\n    if (store.pristine === true) {\r\n      // If features have just been loaded into the store, move/zoom on them\r\n      return FeatureMotion.Default;\r\n    } else if (store.count > store.view.count) {\r\n      // If features have been filtered, move/zoom on the remaining ones\r\n      return FeatureMotion.Default;\r\n    } else {\r\n      // On insert, update or delete, do nothing\r\n      return FeatureMotion.None;\r\n    }\r\n  }\r\n}\r\n","import { unByKey } from 'ol/Observable';\r\nimport { OlEvent } from 'ol/events/Event';\r\n\r\nimport { FeatureStore } from '../store';\r\nimport { FeatureStoreLoadingLayerStrategyOptions } from '../feature.interfaces';\r\nimport { FeatureStoreStrategy } from './strategy';\r\n\r\n/**\r\n * This strategy loads a layer's features into it's store counterpart.\r\n * The layer -> store binding is a one-way binding. That means any OL feature\r\n * added to the layer will be added to the store but the opposite is false.\r\n *\r\n * Important: In it's current state, this strategy is to meant to be combined\r\n * with a standard Loading strategy and it would probably cause recursion issues.\r\n */\r\nexport class FeatureStoreLoadingLayerStrategy extends FeatureStoreStrategy {\r\n\r\n  /**\r\n   * Subscription to the store's OL source changes\r\n   */\r\n  private stores$$ = new Map<FeatureStore, string>();\r\n\r\n  constructor(protected options: FeatureStoreLoadingLayerStrategyOptions) {\r\n    super(options);\r\n  }\r\n\r\n  /**\r\n   * Bind this strategy to a store and start watching for Ol source changes\r\n   * @param store Feature store\r\n   */\r\n  bindStore(store: FeatureStore) {\r\n    super.bindStore(store);\r\n    if (this.isActive() === true) {\r\n      this.watchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind this strategy from a store and stop watching for Ol source changes\r\n   * @param store Feature store\r\n   */\r\n  unbindStore(store: FeatureStore) {\r\n    super.unbindStore(store);\r\n    if (this.isActive() === true) {\r\n      this.unwatchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start watching all stores already bound to that strategy at once.\r\n   * @internal\r\n   */\r\n  protected doActivate() {\r\n    this.stores.forEach((store: FeatureStore) => this.watchStore(store));\r\n  }\r\n\r\n  /**\r\n   * Stop watching all stores bound to that strategy\r\n   * @internal\r\n   */\r\n  protected doDeactivate() {\r\n    this.unwatchAll();\r\n  }\r\n\r\n  /**\r\n   * Watch for a store's  OL source changes\r\n   * @param store Feature store\r\n   */\r\n  private watchStore(store: FeatureStore) {\r\n    if (this.stores$$.has(store)) {\r\n      return;\r\n    }\r\n\r\n    this.onSourceChanges(store);\r\n    const olSource = store.layer.ol.getSource();\r\n    olSource.on('change', (event: OlEvent) => {\r\n      this.onSourceChanges(store);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stop watching for a store's OL source changes\r\n   * @param store Feature store\r\n   */\r\n  private unwatchStore(store: FeatureStore) {\r\n    const key = this.stores$$.get(store);\r\n    if (key !== undefined) {\r\n      unByKey(key);\r\n      this.stores$$.delete(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop watching for OL source changes in all stores.\r\n   */\r\n  private unwatchAll() {\r\n    Array.from(this.stores$$.entries()).forEach((entries: [FeatureStore, string]) => {\r\n      unByKey(entries[1]);\r\n    });\r\n    this.stores$$.clear();\r\n  }\r\n\r\n  /**\r\n   * Load features from an OL source into a  store or clear the store if the source is empty\r\n   * @param features Store filtered features\r\n   * @param store Feature store\r\n   */\r\n  private onSourceChanges(store: FeatureStore) {\r\n    const olFeatures = store.layer.ol.getSource().getFeatures();\r\n    if (olFeatures.length === 0) {\r\n      store.clear();\r\n    } else {\r\n      store.setStoreOlFeatures(olFeatures);\r\n    }\r\n  }\r\n}\r\n","import OlFeature from 'ol/Feature';\r\n\r\nimport {\r\n  getEntityId,\r\n  EntityKey,\r\n  EntityStore\r\n} from '@igo2/common';\r\n\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { FeatureMotion } from './feature.enums';\r\nimport { Feature, FeatureStoreOptions } from './feature.interfaces';\r\nimport { featureFromOl, featureToOl, moveToOlFeatures } from './feature.utils';\r\nimport { FeatureStoreStrategy } from './strategies/strategy';\r\n\r\n/**\r\n * The class is a specialized version of an EntityStore that stores\r\n * features and the map layer to display them on. Synchronization\r\n * between the store and the layer is handled by strategies.\r\n */\r\nexport class FeatureStore<T extends Feature = Feature> extends EntityStore<T> {\r\n\r\n  /**\r\n   * Feature store strategies responsible of synchronizing the store\r\n   * and the layer\r\n   */\r\n  strategies: FeatureStoreStrategy[] = [];\r\n\r\n  /**\r\n   * Vector layer to display the features on\r\n   */\r\n  layer: VectorLayer;\r\n\r\n  /**\r\n   * The map the layer is bound to\r\n   */\r\n  readonly map: IgoMap;\r\n\r\n  /**\r\n   * The layer's data source\r\n   */\r\n  get source(): FeatureDataSource {\r\n    return this.layer ? this.layer.dataSource as FeatureDataSource : undefined;\r\n  }\r\n\r\n  constructor(entities: T[], options: FeatureStoreOptions) {\r\n    super(entities, options);\r\n    this.map = options.map;\r\n  }\r\n\r\n  /**\r\n   * Bind this store to a vector layer\r\n   * @param layer Vector layer\r\n   * @returns Feature store\r\n   */\r\n  bindLayer(layer: VectorLayer): FeatureStore {\r\n    this.layer = layer;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Add a strategy to this store\r\n   * @param strategy Feature store strategy\r\n   * @returns Feature store\r\n   */\r\n  addStrategy(strategy: FeatureStoreStrategy, activate: boolean = false): FeatureStore {\r\n    const existingStrategy = this.strategies.find((_strategy: FeatureStoreStrategy) => {\r\n      return strategy.constructor === _strategy.constructor;\r\n    });\r\n    if (existingStrategy !== undefined) {\r\n      throw new Error('A strategy of this type already exists on that FeatureStore.');\r\n    }\r\n\r\n    this.strategies.push(strategy);\r\n    strategy.bindStore(this);\r\n\r\n    if (activate === true) {\r\n      strategy.activate();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Remove a strategy from this store\r\n   * @param strategy Feature store strategy\r\n   * @returns Feature store\r\n   */\r\n  removeStrategy(strategy: FeatureStoreStrategy): FeatureStore {\r\n    const index = this.strategies.indexOf(strategy);\r\n    if (index >= 0) {\r\n      this.strategies.splice(index, 1);\r\n      strategy.unbindStore(this);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Return strategies of a given type\r\n   * @param type Feature store strategy class\r\n   * @returns Strategies\r\n   */\r\n  getStrategyOfType(type: typeof FeatureStoreStrategy): FeatureStoreStrategy {\r\n    return this.strategies.find((strategy: FeatureStoreStrategy) => {\r\n      return strategy instanceof type;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Activate strategies of a given type\r\n   * @param type Feature store strategy class\r\n   */\r\n  activateStrategyOfType(type: typeof FeatureStoreStrategy) {\r\n    const strategy = this.getStrategyOfType(type);\r\n    if (strategy !== undefined) {\r\n      strategy.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deactivate strategies of a given type\r\n   * @param type Feature store strategy class\r\n   */\r\n  deactivateStrategyOfType(type: typeof FeatureStoreStrategy) {\r\n    const strategy = this.getStrategyOfType(type);\r\n    if (strategy !== undefined) {\r\n      strategy.deactivate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the layer's features and perform a motion to make them visible. Strategies\r\n   * make extensive use of that method.\r\n   * @param features Features\r\n   * @param motion Optional: The type of motion to perform\r\n   */\r\n  setLayerFeatures(\r\n    features: Feature[],\r\n    motion: FeatureMotion = FeatureMotion.Default,\r\n    viewScale?: [number, number, number, number],\r\n    areaRatio?: number,\r\n    getId?: (Feature) => EntityKey\r\n  ) {\r\n    getId = getId ? getId : getEntityId;\r\n    this.checkLayer();\r\n\r\n    const olFeatures = features\r\n      .map((feature: Feature) => featureToOl(feature, this.map.projection, getId));\r\n    this.setLayerOlFeatures(olFeatures, motion, viewScale, areaRatio);\r\n  }\r\n\r\n  /**\r\n   * Set the store's features from an array of OL features.\r\n   * @param olFeatures Ol features\r\n   */\r\n  setStoreOlFeatures(olFeatures: OlFeature[]) {\r\n    this.checkLayer();\r\n\r\n    const features = olFeatures.map((olFeature: OlFeature) => {\r\n      olFeature.set('_featureStore', this, true);\r\n      return featureFromOl(olFeature, this.layer.map.projection);\r\n    });\r\n    this.load(features as T[]);\r\n  }\r\n\r\n  /**\r\n   * Remove all features from the layer\r\n   */\r\n  clearLayer() {\r\n    this.checkLayer();\r\n    this.source.ol.clear();\r\n  }\r\n\r\n  /**\r\n   * Check wether a layer is bound or not and throw an error if not.\r\n   */\r\n  private checkLayer() {\r\n    if (this.layer === undefined) {\r\n      throw new Error('This FeatureStore is not bound to a layer.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the layer's features and perform a motion to make them visible.\r\n   * @param features Openlayers feature objects\r\n   * @param motion Optional: The type of motion to perform\r\n   */\r\n  private setLayerOlFeatures(\r\n    olFeatures: OlFeature[],\r\n    motion: FeatureMotion = FeatureMotion.Default,\r\n    viewScale?: [number, number, number, number],\r\n    areaRatio?: number\r\n  ) {\r\n    const olFeaturesMap = new Map();\r\n    olFeatures.forEach((olFeature: OlFeature) => {\r\n      olFeaturesMap.set(olFeature.getId(), olFeature);\r\n    });\r\n\r\n    const olFeaturesToRemove = [];\r\n    this.source.ol.forEachFeature((olFeature: OlFeature) => {\r\n      const newOlFeature = olFeaturesMap.get(olFeature.getId());\r\n      if (newOlFeature === undefined) {\r\n        olFeaturesToRemove.push(olFeature);\r\n      } else if (newOlFeature.get('_entityRevision') !== olFeature.get('_entityRevision')) {\r\n        olFeaturesToRemove.push(olFeature);\r\n      } else {\r\n        olFeaturesMap.delete(newOlFeature.getId());\r\n      }\r\n    });\r\n\r\n    const olFeaturesToAddIds = Array.from(olFeaturesMap.keys());\r\n    const olFeaturesToAdd = olFeatures.filter((olFeature: OlFeature) => {\r\n      return olFeaturesToAddIds.indexOf(olFeature.getId()) >= 0;\r\n    });\r\n\r\n    if (olFeaturesToRemove.length > 0) {\r\n      this.removeOlFeaturesFromLayer(olFeaturesToRemove);\r\n    }\r\n    if (olFeaturesToAdd.length > 0) {\r\n      this.addOlFeaturesToLayer(olFeaturesToAdd);\r\n    }\r\n\r\n    if (olFeaturesToAdd.length > 0) {\r\n      // If features are added, do a motion toward the newly added features\r\n      moveToOlFeatures(this.map, olFeaturesToAdd, motion, viewScale, areaRatio);\r\n    } else if (olFeatures.length > 0) {\r\n      // Else, do a motion toward all the features\r\n      moveToOlFeatures(this.map, olFeatures, motion, viewScale, areaRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add features to the the layer\r\n   * @param features Openlayers feature objects\r\n   */\r\n  private addOlFeaturesToLayer(olFeatures: OlFeature[]) {\r\n    olFeatures.forEach((olFeature: OlFeature) => {\r\n      olFeature.set('_featureStore', this, true);\r\n    });\r\n    this.source.ol.addFeatures(olFeatures);\r\n  }\r\n\r\n  /**\r\n   * Remove features from the the layer\r\n   * @param features Openlayers feature objects\r\n   */\r\n  private removeOlFeaturesFromLayer(olFeatures: OlFeature[]) {\r\n    olFeatures.forEach((olFeature: OlFeature) => {\r\n      this.source.ol.removeFeature(olFeature);\r\n    });\r\n  }\r\n\r\n}\r\n","import OlFeature from 'ol/Feature';\r\nimport OlDragBoxInteraction from 'ol/interaction/DragBox';\r\nimport { DragBoxEvent as OlDragBoxEvent } from 'ol/interaction/DragBox';\r\nimport { ListenerFunction } from 'ol/events';\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { map, debounceTime, skip } from 'rxjs/operators';\r\n\r\nimport { EntityKey, EntityRecord } from '@igo2/common';\r\n\r\nimport { FeatureDataSource } from '../../../datasource';\r\nimport { VectorLayer } from '../../../layer';\r\nimport { IgoMap, ctrlKeyDown } from '../../../map';\r\n\r\nimport { Feature, FeatureStoreSelectionStrategyOptions } from '../feature.interfaces';\r\nimport { FeatureStore } from '../store';\r\nimport { FeatureStoreStrategy } from './strategy';\r\nimport { FeatureMotion } from '../feature.enums';\r\n\r\nclass OlDragSelectInteraction extends OlDragBoxInteraction {\r\n  constructor(options) {\r\n    super(options);\r\n  }\r\n}\r\n\r\n/**\r\n * This strategy synchronizes a store and a layer selected entities.\r\n * The store <-> layer binding is a two-way binding.\r\n *\r\n * In many cases, a single strategy bound to multiple stores\r\n * will yield better results that multiple strategies with each their\r\n * own store. In the latter scenario, a click on overlapping features\r\n * would trigger the strategy of each layer and they would cancel\r\n * each other as well as move the map view around needlessly.\r\n */\r\nexport class FeatureStoreSelectionStrategy extends FeatureStoreStrategy {\r\n\r\n  /**\r\n   * Listener to the map click event that allows selecting a feature\r\n   * by clicking on the map\r\n   */\r\n  private mapClickListener: ListenerFunction;\r\n\r\n  private olDragSelectInteraction: OlDragSelectInteraction;\r\n\r\n  private olDragSelectInteractionEndKey: string;\r\n\r\n  /**\r\n   * A feature store that'll contain the selected features. It has it's own\r\n   * layer, shared by all the stores this staretgy is bound to.\r\n   */\r\n  private overlayStore: FeatureStore;\r\n\r\n  /**\r\n   * Subscription to all stores selected entities\r\n   */\r\n  private stores$$: Subscription;\r\n\r\n  /**\r\n   * The map the layers belong to\r\n   */\r\n  get map(): IgoMap { return this.options.map; }\r\n\r\n  constructor(protected options: FeatureStoreSelectionStrategyOptions) {\r\n    super(options);\r\n    this.overlayStore = this.createOverlayStore();\r\n  }\r\n\r\n  /**\r\n   * Bind this strategy to a store and force this strategy's\r\n   * reactivation to properly setup watchers.\r\n   * @param store Feature store\r\n   */\r\n  bindStore(store: FeatureStore) {\r\n    super.bindStore(store);\r\n    if (this.isActive() === true) {\r\n      // Force reactivation\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind this strategy from a store and force this strategy's\r\n   * reactivation to properly setup watchers.\r\n   * @param store Feature store\r\n   */\r\n  unbindStore(store: FeatureStore) {\r\n    super.unbindStore(store);\r\n    if (this.isActive() === true) {\r\n      // Force reactivation\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unselect all entities, from all stores\r\n   */\r\n  unselectAll() {\r\n    this.stores.forEach((store: FeatureStore) => {\r\n      store.state.updateAll({selected: false});\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.overlayStore.source.ol.clear();\r\n    this.overlayStore.clear();\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer, setup the map click lsitener and\r\n   * start watching for stores selection\r\n   * @internal\r\n   */\r\n  protected doActivate() {\r\n    this.addOverlayLayer();\r\n    this.listenToMapClick();\r\n    if (this.options.dragBox === true) {\r\n      this.addDragBoxInteraction();\r\n    }\r\n    this.watchAll();\r\n  }\r\n\r\n  /**\r\n   * Remove the overlay layer, remove the map click lsitener and\r\n   * stop watching for stores selection\r\n   * @internal\r\n   */\r\n  protected doDeactivate() {\r\n    this.unlistenToMapClick();\r\n    this.removeDragBoxInteraction();\r\n    this.unwatchAll();\r\n    this.removeOverlayLayer();\r\n  }\r\n\r\n  /**\r\n   * Create a single observable of all the stores. With a single observable,\r\n   * features can be added all at once to the overlay layer and a single\r\n   * motion can be performed. Multiple observable would have\r\n   * a cancelling effect on each other.\r\n   */\r\n  private watchAll() {\r\n    this.unwatchAll();\r\n\r\n    const stores$ = this.stores.map((store: FeatureStore) => {\r\n      return store.stateView.manyBy$((record: EntityRecord<Feature>) => {\r\n        return record.state.selected === true;\r\n      }).pipe(\r\n        map((records: EntityRecord<Feature>[]) => records.map(record => record.entity))\r\n      );\r\n    });\r\n    this.stores$$ = combineLatest(...stores$)\r\n      .pipe(\r\n        debounceTime(25),\r\n        skip(1), // Skip intial selection\r\n        map((features: Array<Feature[]>) => features.reduce((a, b) => a.concat(b)))\r\n      ).subscribe((features: Feature[]) => this.onSelectFromStore(features));\r\n  }\r\n\r\n  /**\r\n   * Stop watching for selection in all stores.\r\n   */\r\n  private unwatchAll() {\r\n    if (this.stores$$ !== undefined) {\r\n      this.stores$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a 'singleclick' listener to the map that'll allow selecting\r\n   * features by clicking on the map. The selection will be performed\r\n   * only on the layers bound to this strategy.\r\n   */\r\n  private listenToMapClick() {\r\n    this.mapClickListener = this.map.ol.on('singleclick', (event: OlMapBrowserPointerEvent) => {\r\n      this.onMapClick(event);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove the map click listener\r\n   */\r\n  private unlistenToMapClick() {\r\n    if (this.mapClickListener !== undefined) {\r\n      this.map.ol.un(\r\n        this.mapClickListener.type,\r\n        this.mapClickListener.listener\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On map click, select feature at pixel\r\n   * @param event OL MapBrowserPointerEvent\r\n   */\r\n  private onMapClick(event: OlMapBrowserPointerEvent) {\r\n    const exclusive = !ctrlKeyDown(event);\r\n    const reverse = !exclusive;\r\n    const olFeatures = event.map.getFeaturesAtPixel(event.pixel, {\r\n      hitTolerance: this.options.hitTolerance || 0,\r\n      layerFilter: (olLayer) => {\r\n        const storeOlLayer = this.stores.find((store: FeatureStore) => {\r\n          return store.layer.ol === olLayer;\r\n        });\r\n        return storeOlLayer !== undefined;\r\n      }\r\n    });\r\n    this.onSelectFromMap(olFeatures, exclusive, reverse);\r\n  }\r\n\r\n  /**\r\n   * Add a drag box interaction and, on drag box end, select features\r\n   */\r\n  private addDragBoxInteraction() {\r\n    let olDragSelectInteraction;\r\n    const olInteractions = this.map.ol.getInteractions().getArray();\r\n\r\n    // There can only be one dragbox interaction, so find the current one, if any\r\n    // Don't keep a reference to the current dragbox because we don't want\r\n    // to remove it when this startegy is deactivated\r\n    for (const olInteraction of olInteractions) {\r\n      if (olInteraction instanceof OlDragSelectInteraction) {\r\n        olDragSelectInteraction = olInteraction;\r\n        break;\r\n      }\r\n    }\r\n    // If no drag box interaction is found, create a new one and add it to the map\r\n    if (olDragSelectInteraction === undefined) {\r\n      olDragSelectInteraction = new OlDragSelectInteraction({\r\n        condition: ctrlKeyDown\r\n      });\r\n      this.map.ol.addInteraction(olDragSelectInteraction);\r\n      this.olDragSelectInteraction = olDragSelectInteraction;\r\n    }\r\n\r\n    this.olDragSelectInteractionEndKey = olDragSelectInteraction.on(\r\n      'boxend',\r\n      (event: OlMapBrowserPointerEvent) => this.onDragBoxEnd(event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove drag box interaction\r\n   */\r\n  private removeDragBoxInteraction() {\r\n    if (this.olDragSelectInteractionEndKey !== undefined) {\r\n      unByKey(this.olDragSelectInteractionEndKey);\r\n    }\r\n    if (this.olDragSelectInteraction !== undefined) {\r\n      this.map.ol.removeInteraction(this.olDragSelectInteraction);\r\n    }\r\n    this.olDragSelectInteraction = undefined;\r\n  }\r\n\r\n  /**\r\n   * On dragbox end, select features in drag box\r\n   * @param event OL MapBrowserPointerEvent\r\n   */\r\n  private onDragBoxEnd(event: OlDragBoxEvent) {\r\n    const exclusive = !ctrlKeyDown(event.mapBrowserEvent);\r\n    const extent = event.target.getGeometry().getExtent();\r\n    const olFeatures = this.stores.reduce((acc: OlFeature[], store: FeatureStore) => {\r\n      const olSource = store.layer.ol.getSource();\r\n      acc.push(...olSource.getFeaturesInExtent(extent));\r\n      return acc;\r\n    }, []);\r\n    this.onSelectFromMap(olFeatures, exclusive, false);\r\n  }\r\n\r\n  /**\r\n   * When features are selected from the store, add\r\n   * them to this startegy's overlay layer (select on map)\r\n   * @param features Store features\r\n   */\r\n  private onSelectFromStore(features: Feature[]) {\r\n    const motion = this.options ? this.options.motion : undefined;\r\n    const olOverlayFeatures = this.overlayStore.layer.ol.getSource().getFeatures();\r\n    const overlayFeaturesKeys = olOverlayFeatures.map((olFeature: OlFeature) => olFeature.getId());\r\n    const featuresKeys = features.map(this.overlayStore.getKey);\r\n    const doMotion = overlayFeaturesKeys.length !== featuresKeys.length ||\r\n      !overlayFeaturesKeys.every((key: EntityKey) => featuresKeys.indexOf(key) >= 0);\r\n\r\n    this.overlayStore.setLayerFeatures(\r\n      features,\r\n      doMotion ? motion : FeatureMotion.None,\r\n      this.options.viewScale,\r\n      this.options.areaRatio,\r\n      this.options.getFeatureId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * When features are selected from the map, also select them\r\n   * in their store.\r\n   * @param olFeatures OL feature objects\r\n   */\r\n  private onSelectFromMap(olFeatures: OlFeature[], exclusive: boolean, reverse: boolean) {\r\n    const groupedFeatures = this.groupFeaturesByStore(olFeatures);\r\n\r\n    this.stores.forEach((store: FeatureStore) => {\r\n      const features = groupedFeatures.get(store);\r\n      if (features === undefined && exclusive === true) {\r\n        this.unselectAllFeaturesFromStore(store);\r\n      } else if (features === undefined && exclusive === false) {\r\n        // Do nothing\r\n      } else {\r\n        this.selectFeaturesFromStore(store, features, exclusive, reverse);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Select features in store\r\n   * @param store: Feature store\r\n   * @param features Features\r\n   */\r\n  private selectFeaturesFromStore(store: FeatureStore, features: Feature[], exclusive: boolean, reverse: boolean) {\r\n    if (reverse === true) {\r\n      store.state.reverseMany(features, ['selected']);\r\n    } else {\r\n      store.state.updateMany(features, {selected: true}, exclusive);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unselect all features from store\r\n   * @param store: Feature store\r\n   */\r\n  private unselectAllFeaturesFromStore(store: FeatureStore) {\r\n    store.state.updateAll({selected: false});\r\n  }\r\n\r\n  /**\r\n   * This method returns a store -> features mapping from a list\r\n   * of OL selected features. OL features keep a reference to the store\r\n   * they are from.\r\n   * @param olFeatures: OL feature objects\r\n   * @returns Store -> features mapping\r\n   */\r\n  private groupFeaturesByStore(olFeatures: OlFeature[]): Map<FeatureStore, Feature[]> {\r\n    const groupedFeatures = new Map<FeatureStore, Feature[]>();\r\n    if (olFeatures === null || olFeatures === undefined) {\r\n      return groupedFeatures;\r\n    }\r\n\r\n    olFeatures.forEach((olFeature: OlFeature) => {\r\n      const store = olFeature.get('_featureStore');\r\n      if (store === undefined) { return; }\r\n\r\n      let features = groupedFeatures.get(store);\r\n      if (features === undefined) {\r\n        features = [];\r\n        groupedFeatures.set(store, features);\r\n      }\r\n\r\n      const feature = store.get(olFeature.getId());\r\n      if (feature !== undefined) {\r\n        features.push(feature);\r\n      }\r\n    });\r\n\r\n    return groupedFeatures;\r\n  }\r\n\r\n  /**\r\n   * Create an overlay store that'll contain the selected features.\r\n   * @returns Overlay store\r\n   */\r\n  private createOverlayStore(): FeatureStore {\r\n    const overlayLayer = this.options.layer\r\n      ? this.options.layer\r\n      : this.createOverlayLayer();\r\n    return new FeatureStore([], {map: this.map}).bindLayer(overlayLayer);\r\n  }\r\n\r\n  /**\r\n   * Create an overlay store that'll contain the selected features.\r\n   * @returns Overlay layer\r\n   */\r\n  private createOverlayLayer(): VectorLayer {\r\n    return new VectorLayer({\r\n      zIndex: 300,\r\n      source: new FeatureDataSource(),\r\n      style: undefined,\r\n      showInLayerList: false,\r\n      exportable: false,\r\n      browsable: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add the overlay store's layer to the map to display the selected\r\n   * features.\r\n   */\r\n  private addOverlayLayer() {\r\n    if (this.overlayStore.layer.map === undefined) {\r\n      this.map.addLayer(this.overlayStore.layer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the overlay layer from the map\r\n   */\r\n  private removeOverlayLayer() {\r\n    this.overlayStore.source.ol.clear();\r\n    this.map.removeLayer(this.overlayStore.layer);\r\n  }\r\n}\r\n","import * as olextent from 'ol/extent';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olstyle from 'ol/style';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\r\nimport OlLayer from 'ol/layer/Layer';\r\n\r\nimport {\r\n  EntityKey,\r\n  getEntityId,\r\n  getEntityTitle,\r\n  getEntityRevision,\r\n  getEntityProperty\r\n} from '@igo2/common';\r\n\r\nimport { IgoMap } from '../../map';\r\nimport { VectorLayer } from '../../layer';\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { FEATURE, FeatureMotion } from './feature.enums';\r\nimport { Feature } from './feature.interfaces';\r\nimport { FeatureStore } from './store';\r\nimport {\r\n  FeatureStoreLoadingStrategy,\r\n  FeatureStoreSelectionStrategy\r\n} from './strategies';\r\n\r\n/**\r\n * Create an Openlayers feature object out of a feature definition.\r\n * The output object has a reference to the feature id.\r\n * @param feature Feature definition\r\n * @param projectionOut Feature object projection\r\n * @returns OpenLayers feature object\r\n */\r\nexport function featureToOl(\r\n  feature: Feature,\r\n  projectionOut: string,\r\n  getId?: (Feature) => EntityKey\r\n): OlFeature {\r\n  getId = getId ? getId : getEntityId;\r\n\r\n  const olFormat = new OlFormatGeoJSON();\r\n  const olFeature = olFormat.readFeature(feature, {\r\n    dataProjection: feature.projection,\r\n    featureProjection: projectionOut\r\n  });\r\n\r\n  olFeature.setId(getId(feature));\r\n\r\n  const title = getEntityTitle(feature);\r\n  if (title !== undefined) {\r\n    olFeature.set('_title', title, true);\r\n  }\r\n\r\n  if (feature.extent !== undefined) {\r\n    olFeature.set('_extent', feature.extent, true);\r\n  }\r\n\r\n  if (feature.projection !== undefined) {\r\n    olFeature.set('_projection', feature.projection, true);\r\n  }\r\n\r\n  if (feature.extent !== undefined) {\r\n    olFeature.set('_extent', feature.extent, true);\r\n  }\r\n\r\n  const mapTitle = getEntityProperty(feature, 'meta.mapTitle');\r\n  if (mapTitle !== undefined) {\r\n    olFeature.set('_mapTitle', mapTitle, true);\r\n  }\r\n\r\n  olFeature.set('_entityRevision', getEntityRevision(feature), true);\r\n\r\n  return olFeature;\r\n}\r\n\r\n/**\r\n * Create a feature object out of an OL feature\r\n * The output object has a reference to the feature id.\r\n * @param olFeature OL Feature\r\n * @param projectionIn OL feature projection\r\n * @param projectionOut Feature projection\r\n * @returns Feature\r\n */\r\nexport function featureFromOl(\r\n  olFeature: OlFeature,\r\n  projectionIn: string,\r\n  olLayer?: OlLayer,\r\n  projectionOut = 'EPSG:4326'\r\n): Feature {\r\n  let title;\r\n  let typeSource;\r\n  const olFormat = new OlFormatGeoJSON();\r\n\r\n  const keys = olFeature.getKeys().filter((key: string) => {\r\n    return !key.startsWith('_') && key !== 'geometry';\r\n  });\r\n  const properties = keys.reduce((acc: object, key: string) => {\r\n    acc[key] = olFeature.get(key);\r\n    return acc;\r\n  }, {});\r\n\r\n  const geometry = olFormat.writeGeometryObject(olFeature.getGeometry(), {\r\n    dataProjection: projectionOut,\r\n    featureProjection: projectionIn\r\n  });\r\n\r\n  if (olLayer) {\r\n    title = olLayer.get('title');\r\n    typeSource = olLayer.get('sourceOptions').type;\r\n  } else {\r\n    title = olFeature.get('_title');\r\n  }\r\n\r\n  const mapTitle = olFeature.get('_mapTitle');\r\n  const id = olFeature.getId();\r\n\r\n  return {\r\n    type: FEATURE,\r\n    projection: projectionOut,\r\n    extent: olFeature.get('_extent'),\r\n    meta: {\r\n      id,\r\n      title: title ? title : (mapTitle ? mapTitle : id),\r\n      mapTitle,\r\n      typeSource,\r\n      revision: olFeature.getRevision()\r\n    },\r\n    properties,\r\n    geometry\r\n  };\r\n}\r\n\r\n/**\r\n * Compute an OL feature extent in it's map projection\r\n * @param map Map\r\n * @param olFeature OL feature\r\n * @returns Extent in the map projection\r\n */\r\nexport function computeOlFeatureExtent(\r\n  map: IgoMap,\r\n  olFeature: OlFeature\r\n): [number, number, number, number] {\r\n  let olExtent = olextent.createEmpty();\r\n\r\n  const olFeatureExtent = olFeature.get('_extent');\r\n  const olFeatureProjection = olFeature.get('_projection');\r\n  if (olFeatureExtent !== undefined && olFeatureProjection !== undefined) {\r\n    olExtent = olproj.transformExtent(\r\n      olFeatureExtent,\r\n      olFeatureProjection,\r\n      map.projection\r\n    );\r\n  } else {\r\n    const olGeometry = olFeature.getGeometry();\r\n    if (olGeometry !== null) {\r\n      olExtent = olGeometry.getExtent();\r\n    }\r\n  }\r\n\r\n  return olExtent;\r\n}\r\n\r\n/**\r\n * Compute a multiple OL features extent in their map projection\r\n * @param map Map\r\n * @param olFeatures OL features\r\n * @returns Extent in the map projection\r\n */\r\nexport function computeOlFeaturesExtent(\r\n  map: IgoMap,\r\n  olFeatures: OlFeature[]\r\n): [number, number, number, number] {\r\n  const extent = olextent.createEmpty();\r\n\r\n  olFeatures.forEach((olFeature: OlFeature) => {\r\n    const featureExtent = computeOlFeatureExtent(map, olFeature);\r\n    olextent.extend(extent, featureExtent);\r\n  });\r\n\r\n  return extent;\r\n}\r\n\r\n/**\r\n * Scale an extent.\r\n * @param extent Extent\r\n * @param Scaling factors for top, right, bottom and left directions, in that order\r\n * @returns Scaled extent\r\n */\r\nexport function scaleExtent(\r\n  extent: [number, number, number, number],\r\n  scale: [number, number, number, number]\r\n): [number, number, number, number] {\r\n  const [width, height] = olextent.getSize(extent);\r\n  return [\r\n    scale[3] ? extent[0] - width * scale[3] : extent[0],\r\n    scale[2] ? extent[1] - height * scale[2] : extent[1],\r\n    scale[1] ? extent[2] + width * scale[1] : extent[2],\r\n    scale[0] ? extent[3] + height * scale[0] : extent[3]\r\n  ];\r\n}\r\n\r\n/**\r\n * Return true if features are out of view.\r\n * If features are too close to the edge, they are considered out of view.\r\n * We define the edge as 5% of the extent size.\r\n * @param map Map\r\n * @param featuresExtent The features's extent\r\n * @returns Return true if features are out of view\r\n */\r\nexport function featuresAreOutOfView(\r\n  map: IgoMap,\r\n  featuresExtent: [number, number, number, number]\r\n) {\r\n  const mapExtent = map.getExtent();\r\n  const edgeRatio = 0.05;\r\n  const scale = [-1, -1, -1, -1].map(x => x * edgeRatio);\r\n  const viewExtent = scaleExtent(mapExtent, scale as [number, number, number, number]);\r\n\r\n  return !olextent.containsExtent(viewExtent, featuresExtent);\r\n}\r\n\r\n/**\r\n * Return true if features are too deep into the view. This results\r\n * in features being too small.\r\n * Features are considered too small if their extent occupies less than\r\n * 1% of the map extent.\r\n * @param map Map\r\n * @param featuresExtent The features's extent\r\n * @param areaRatio The features extent to view extent acceptable ratio\r\n * @returns Return true if features are too deep in the view\r\n */\r\nexport function featuresAreTooDeepInView(\r\n  map: IgoMap,\r\n  featuresExtent: [number, number, number, number],\r\n  areaRatio?: number\r\n) {\r\n  // An area ratio of 0.004 means that the feature extent's width and height\r\n  // should be about 1/16 of the map extent's width and height\r\n  areaRatio = areaRatio ? areaRatio : 0.004;\r\n  const mapExtent = map.getExtent();\r\n  const mapExtentArea = olextent.getArea(mapExtent);\r\n  const featuresExtentArea = olextent.getArea(featuresExtent);\r\n\r\n  return featuresExtentArea / mapExtentArea < areaRatio;\r\n}\r\n\r\n/**\r\n * Fit view to include the features extent.\r\n * By default, this method will let the features occupy about 50% of the viewport.\r\n * @param map Map\r\n * @param olFeatures OL features\r\n * @param motion To motion to the new map view\r\n * @param scale If this is defined, the original view will be scaled\r\n *  by that factor before any logic is applied.\r\n */\r\nexport function moveToOlFeatures(\r\n  map: IgoMap,\r\n  olFeatures: OlFeature[],\r\n  motion: FeatureMotion = FeatureMotion.Default,\r\n  scale?: [number, number, number, number],\r\n  areaRatio?: number\r\n) {\r\n  const featuresExtent = computeOlFeaturesExtent(map, olFeatures);\r\n  let viewExtent = featuresExtent;\r\n  if (scale !== undefined) {\r\n    viewExtent = scaleExtent(viewExtent, scale);\r\n  }\r\n\r\n  if (motion === FeatureMotion.Zoom) {\r\n    map.viewController.zoomToExtent(viewExtent);\r\n  } else if (motion === FeatureMotion.Move) {\r\n    map.viewController.moveToExtent(viewExtent);\r\n  } else if (motion === FeatureMotion.Default) {\r\n    if (\r\n      featuresAreOutOfView(map, featuresExtent) ||\r\n      featuresAreTooDeepInView(map, featuresExtent, areaRatio)\r\n    ) {\r\n      map.viewController.zoomToExtent(viewExtent);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Hide an OL feature\r\n * @param olFeature OL feature\r\n */\r\nexport function hideOlFeature(olFeature: OlFeature) {\r\n  olFeature.setStyle(new olstyle.Style({}));\r\n}\r\n\r\n/**\r\n * Try to bind a layer to a store if none is bound already.\r\n * The layer will also be added to the store's map.\r\n * If no layer is given to that function, a basic one will be created.\r\n * @param store The store to bind the layer\r\n * @param layer An optional VectorLayer\r\n */\r\nexport function tryBindStoreLayer(store: FeatureStore, layer?: VectorLayer) {\r\n  if (store.layer !== undefined) {\r\n    if (store.layer.map === undefined) {\r\n      store.map.addLayer(store.layer);\r\n    }\r\n    return;\r\n  }\r\n\r\n  layer = layer ? layer : new VectorLayer({\r\n    source: new FeatureDataSource()\r\n  });\r\n  store.bindLayer(layer);\r\n  if (store.layer.map === undefined) {\r\n    store.map.addLayer(store.layer);\r\n  }\r\n}\r\n\r\n/**\r\n * Try to add a loading strategy to a store and activate it.\r\n * If no strategy is given to that function, a basic one will be created.\r\n * @param store The store to bind the loading strategy\r\n * @param strategy An optional loading strategy\r\n */\r\nexport function tryAddLoadingStrategy(store: FeatureStore, strategy?: FeatureStoreLoadingStrategy) {\r\n  if (store.getStrategyOfType(FeatureStoreLoadingStrategy) !== undefined) {\r\n    store.activateStrategyOfType(FeatureStoreLoadingStrategy);\r\n    return;\r\n  }\r\n\r\n  strategy = strategy ? strategy : new FeatureStoreLoadingStrategy({});\r\n  store.addStrategy(strategy);\r\n  strategy.activate();\r\n}\r\n\r\n/**\r\n * Try to add a selection strategy to a store and activate it.\r\n * If no strategy is given to that function, a basic one will be created.\r\n * @param store The store to bind the selection strategy\r\n * @param [strategy] An optional selection strategy\r\n */\r\nexport function tryAddSelectionStrategy(store: FeatureStore, strategy?: FeatureStoreSelectionStrategy) {\r\n  if (store.getStrategyOfType(FeatureStoreSelectionStrategy) !== undefined) {\r\n    store.activateStrategyOfType(FeatureStoreSelectionStrategy);\r\n    return;\r\n  }\r\n  strategy = strategy ? strategy : new FeatureStoreSelectionStrategy({\r\n    map: store.map\r\n  });\r\n  store.addStrategy(strategy);\r\n  strategy.activate();\r\n}\r\n","import * as olstyle from 'ol/style';\r\nimport OlFeature from 'ol/Feature';\r\n\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { VectorLayer } from '../../layer';\r\n\r\n/**\r\n * Create an overlay layer and it's source\r\n * @returns Overlay layer\r\n */\r\nexport function createOverlayLayer(): VectorLayer {\r\n  const overlayDataSource = new FeatureDataSource();\r\n  return new VectorLayer({\r\n    title: 'Overlay',\r\n    zIndex: 300,\r\n    source: overlayDataSource,\r\n    style: createOverlayLayerStyle()\r\n  });\r\n}\r\n\r\n/**\r\n * Create an overlay style with markers for points and a basic stroke/fill\r\n * combination for lines and polygons\r\n * @returns Style function\r\n */\r\nfunction createOverlayLayerStyle(): (olFeature: OlFeature) => olstyle.Style {\r\n  const defaultStyle = createOverlayDefaultStyle();\r\n  const markerStyle = createOverlayMarkerStyle();\r\n  const bufferStyle = createBufferStyle();\r\n  let style;\r\n\r\n  return (olFeature: OlFeature) => {\r\n    console.log(olFeature.getId());\r\n    if (olFeature.getId() === 'bufferFeature') {\r\n      style = createBufferStyle(olFeature.get('bufferStroke'), 2, olFeature.get('bufferFill'), olFeature.get('bufferText'));\r\n      console.log(style);\r\n    } else {\r\n      const geometryType = olFeature.getGeometry().getType();\r\n      style = geometryType === 'Point' ? markerStyle : defaultStyle;\r\n      style.getText().setText(olFeature.get('_mapTitle'));\r\n      return style;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a basic style for lines and polygons\r\n * @returns Style\r\n */\r\nfunction createOverlayDefaultStyle(): olstyle.Style {\r\n  const stroke = new olstyle.Stroke({\r\n    width: 2,\r\n    color: [0, 161, 222, 1]\r\n  });\r\n\r\n  const fill = new olstyle.Stroke({\r\n    color: [0, 161, 222, 0.15]\r\n  });\r\n\r\n  return new olstyle.Style({\r\n    stroke,\r\n    fill,\r\n    image: new olstyle.Circle({\r\n      radius: 5,\r\n      stroke,\r\n      fill\r\n    }),\r\n    text: new olstyle.Text({\r\n      font: '12px Calibri,sans-serif',\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 }),\r\n      overflow: true\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Create a marker style for points\r\n * @returns Style\r\n */\r\nexport function createOverlayMarkerStyle(color = 'blue'): olstyle.Style {\r\n  let iconColor;\r\n  switch (color) {\r\n    case 'blue':\r\n    case 'red':\r\n    case 'yellow':\r\n    case 'green':\r\n      iconColor = color;\r\n      break;\r\n    default:\r\n      iconColor = 'blue';\r\n      break;\r\n  }\r\n  return new olstyle.Style({\r\n    image: new olstyle.Icon({\r\n      src: './assets/igo2/geo/icons/place_' + iconColor + '_36px.svg',\r\n      imgSize: [36, 36], // for ie\r\n      anchor: [0.5, 1]\r\n    }),\r\n    text: new olstyle.Text({\r\n      font: '12px Calibri,sans-serif',\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 }),\r\n      overflow: true\r\n    })\r\n  });\r\n}\r\n\r\nfunction createBufferStyle(\r\n  strokeRGBA: [number, number, number, number] = [0, 161, 222, 1],\r\n  strokeWidth: number = 2,\r\n  fillRGBA: [number, number, number, number] = [0, 161, 222, 0.15],\r\n  text?\r\n): olstyle.Style {\r\n  const stroke = new olstyle.Stroke({\r\n    color: strokeRGBA,\r\n    width: strokeWidth\r\n  });\r\n\r\n  const fill = new olstyle.Fill({\r\n    color: fillRGBA\r\n  });\r\n\r\n  return new olstyle.Style({\r\n    stroke: stroke,\r\n    fill: fill,\r\n    image: new olstyle.Circle({\r\n      radius: 5,\r\n      stroke: stroke,\r\n      fill: fill\r\n    }),\r\n    text: new olstyle.Text({\r\n      font: '12px Calibri,sans-serif',\r\n      text: text,\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 })\r\n    })\r\n  });\r\n}\r\n","import OlFeature from 'ol/Feature';\r\n\r\nimport {\r\n  Feature,\r\n  FeatureMotion,\r\n  featureToOl,\r\n  moveToOlFeatures\r\n} from '../../feature';\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { createOverlayLayer } from './overlay.utils';\r\n\r\n/**\r\n * This class is simply a shortcut for adding features to a map.\r\n * It does nothing more than a standard layer but it's shipped with\r\n * a defautl style based on the geometry type of the features it contains.\r\n * @todo Enhance that by using a FeatureStore and strategies.\r\n */\r\nexport class Overlay {\r\n  /**\r\n   * The map to add the layer to\r\n   */\r\n  private map: IgoMap;\r\n\r\n  /**\r\n   * Overlay layer\r\n   */\r\n  private layer: VectorLayer;\r\n\r\n  /**\r\n   * Overlay layer's data source\r\n   */\r\n  get dataSource(): FeatureDataSource {\r\n    return this.layer.dataSource as FeatureDataSource;\r\n  }\r\n\r\n  constructor(map?: IgoMap) {\r\n    this.layer = createOverlayLayer();\r\n    this.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * Bind this to a map and add the overlay layer to that map\r\n   * @param map Map\r\n   */\r\n  setMap(map: IgoMap) {\r\n    if (map === undefined) {\r\n      if (this.map !== undefined) {\r\n        this.map.ol.removeLayer(this.layer.ol);\r\n      }\r\n    } else {\r\n      map.ol.addLayer(this.layer.ol);\r\n    }\r\n    this.map = map;\r\n  }\r\n\r\n  /**\r\n   * Set the overlay features and, optionally, move to them\r\n   * @param features Features\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  setFeatures(\r\n    features: Feature[],\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    this.clear();\r\n    this.addFeatures(features, motion);\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the  overlay and, optionally, move to it\r\n   * @param feature Feature\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addFeature(feature: Feature, motion: FeatureMotion = FeatureMotion.Default) {\r\n    this.addFeatures([feature], motion);\r\n  }\r\n\r\n  /**\r\n   * Add features to the  overlay and, optionally, move to them\r\n   * @param features Features\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addFeatures(\r\n    features: Feature[],\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    const olFeatures = [];\r\n    features.forEach((feature: Feature) => {\r\n      const olFeature = featureToOl(feature, this.map.projection);\r\n      const olGeometry = olFeature.getGeometry();\r\n      if (olGeometry === null) {\r\n        return;\r\n      }\r\n      olFeatures.push(olFeature);\r\n    });\r\n\r\n    this.addOlFeatures(olFeatures, motion);\r\n  }\r\n\r\n  /**\r\n   * Add a OpenLayers feature to the  overlay and, optionally, move to it\r\n   * @param olFeature OpenLayers Feature\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addOlFeature(\r\n    olFeature: OlFeature,\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    this.addOlFeatures([olFeature], motion);\r\n  }\r\n\r\n  /**\r\n   * Add OpenLayers features to the overlay and, optionally, move to them\r\n   * @param olFeatures OpenLayers Features\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addOlFeatures(\r\n    olFeatures: OlFeature[],\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    this.dataSource.ol.addFeatures(olFeatures);\r\n    moveToOlFeatures(this.map, olFeatures, motion);\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay\r\n   */\r\n  clear() {\r\n    this.dataSource.ol.clear();\r\n  }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { Watcher, SubjectStatus } from '@igo2/utils';\r\nimport { Layer } from '../../layer/shared/layers';\r\n\r\nexport class LayerWatcher extends Watcher {\r\n  private loaded = 0;\r\n  private loading = 0;\r\n  private layers: Layer[] = [];\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  watch() {}\r\n\r\n  unwatch() {\r\n    this.layers.forEach(layer => this.unwatchLayer(layer), this);\r\n  }\r\n\r\n  watchLayer(layer: Layer) {\r\n    if (layer.status$ === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.layers.push(layer);\r\n\r\n    const layer$$ = layer.status$\r\n      .pipe(distinctUntilChanged())\r\n      .subscribe(status => {\r\n        if (status === SubjectStatus.Working) {\r\n          this.loading += 1;\r\n        } else if (status === SubjectStatus.Done) {\r\n          this.loaded += 1;\r\n        }\r\n\r\n        if (this.loaded >= this.loading) {\r\n          this.loading = this.loaded = 0;\r\n          this.status = SubjectStatus.Done;\r\n        } else if (this.loading > 0) {\r\n          this.status = SubjectStatus.Working;\r\n        }\r\n      });\r\n\r\n    this.subscriptions.push(layer$$);\r\n  }\r\n\r\n  unwatchLayer(layer: Layer) {\r\n    const index = this.layers.indexOf(layer);\r\n    if (index >= 0) {\r\n      const status = (layer as any).watcher.status;\r\n      if (\r\n        [SubjectStatus.Working, SubjectStatus.Waiting].indexOf(status) !== -1\r\n      ) {\r\n        this.loaded += 1;\r\n      }\r\n      this.subscriptions[index].unsubscribe();\r\n      this.subscriptions.splice(index, 1);\r\n      this.layers.splice(index, 1);\r\n    }\r\n  }\r\n}\r\n","export enum MapViewAction {\r\n  Move,\r\n  Zoom\r\n}\r\n","import * as olproj from 'ol/proj';\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { MAC } from 'ol/has';\r\n\r\nimport { MapViewState } from './map.interface';\r\n\r\n/**\r\n * This method extracts a [lon, lat] tuple from a string.\r\n * @param str Any string\r\n * @returns A [lon, lat] tuple if one is found in the string\r\n * @todo Reproject coordinates\r\n */\r\nexport function stringToLonLat(str: string): [number, number] | undefined {\r\n  const coordPattern =  '[-+]?[\\\\d]{1,8}(\\\\.)?(\\\\d+)?';\r\n  const projectionPattern = '(;[\\\\d]{4,5})';\r\n  const lonLatPattern = `^${coordPattern},(\\\\s)*${coordPattern}${projectionPattern}?`;\r\n  const lonLatRegex = new RegExp(lonLatPattern, 'g');\r\n\r\n  if (!lonLatRegex.test(str)) {\r\n    return undefined;\r\n  }\r\n\r\n  let lonLatStr = str;\r\n  let projectionStr;\r\n\r\n  const projectionRegex = new RegExp(projectionPattern, 'g');\r\n  if (projectionRegex.test(str)) {\r\n    [lonLatStr, projectionStr] = str.split(';');\r\n  }\r\n\r\n  const [lonStr, latStr] = lonLatStr.split(',');\r\n  const lonLat = [parseFloat(lonStr), parseFloat(latStr)] as [number, number];\r\n\r\n  if (projectionStr !== undefined) {\r\n    // TODO Reproject coordinates\r\n  }\r\n\r\n  return lonLat;\r\n}\r\n\r\n/**\r\n * Return true of two view states are equal.\r\n * @param state1 View state\r\n * @param state2 View state\r\n * @returns True if the view states are equal\r\n */\r\nexport function viewStatesAreEqual(state1: MapViewState, state2: MapViewState): boolean {\r\n  if (state1 === undefined || state2 === undefined) {\r\n    return false;\r\n  }\r\n\r\n  const tolerance = 1 / 10000;\r\n  return state1.zoom === state2.zoom &&\r\n    Math.trunc(state1.center[0] / tolerance) === Math.trunc(state2.center[0] / tolerance) &&\r\n    Math.trunc(state1.center[1] / tolerance) === Math.trunc(state2.center[1] / tolerance);\r\n}\r\n\r\n/**\r\n * Format the scale to a human readable text\r\n * @param Scale of the map\r\n * @returns Human readable scale text\r\n */\r\nexport function formatScale(scale) {\r\n  scale = Math.round(scale);\r\n  if (scale < 10000) { return scale + ''; }\r\n\r\n  scale = Math.round(scale / 1000);\r\n  if (scale < 1000) { return scale + 'K'; }\r\n\r\n  scale = Math.round(scale / 1000);\r\n  return scale + 'M';\r\n}\r\n\r\n/**\r\n * Return the resolution from a scale denom\r\n * @param scale Scale denom\r\n * @param dpi DPI\r\n * @returns Resolution\r\n */\r\nexport function getResolutionFromScale(scale: number, dpi: number = 72): number {\r\n  return scale / (39.37 * dpi);\r\n}\r\n\r\n/**\r\n * Return the resolution from a scale denom\r\n * @param Scale denom\r\n * @returns Resolution\r\n */\r\nexport function getScaleFromResolution(resolution: number, unit: string = 'm', dpi: number = 72): number {\r\n  return resolution * olproj.METERS_PER_UNIT[unit] * 39.37 * dpi;\r\n}\r\n\r\n/**\r\n * Returns true if the CTRL key is pushed during an Ol MapBrowserPointerEvent\r\n * @param event OL MapBrowserPointerEvent\r\n * @returns Whether the CTRL key is pushed\r\n */\r\nexport function ctrlKeyDown(event: OlMapBrowserPointerEvent): boolean {\r\n  const originalEvent = event.originalEvent;\r\n  return (\r\n    !originalEvent.altKey &&\r\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\n/**\r\n * Base map controller\r\n */\r\nexport class MapController {\r\n\r\n  /**\r\n   * OL Map\r\n   */\r\n  protected olMap: OlMap;\r\n\r\n  /**\r\n   * Array of observer keys\r\n   */\r\n  protected observerKeys: string[] = [];\r\n\r\n  /**\r\n   * Return the OL map this controller is bound to\r\n   * @returns OL Map\r\n   */\r\n  getOlMap(): OlMap {\r\n    return this.olMap;\r\n  }\r\n\r\n  /**\r\n   * Add or remove this controller to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap !== undefined && this.getOlMap() !== undefined) {\r\n      throw new Error('This controller is already bound to a map.');\r\n    }\r\n\r\n    if (olMap === undefined) {\r\n      this.teardownObservers();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n  }\r\n\r\n  /**\r\n   * Teardown any observers\r\n   */\r\n  teardownObservers() {\r\n    this.observerKeys.forEach((key: string) => unByKey(key));\r\n    this.observerKeys = [];\r\n  }\r\n\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlMapEvent from 'ol/MapEvent';\r\n\r\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport * as oleasing from 'ol/easing';\r\nimport * as olproj from 'ol/proj';\r\nimport OlProjection from 'ol/proj/Projection';\r\nimport OlView from 'ol/View';\r\n\r\nimport { MapViewAction } from '../map.enums';\r\nimport { MapExtent, MapViewState } from '../map.interface';\r\nimport { getScaleFromResolution, viewStatesAreEqual } from '../map.utils';\r\nimport { MapController } from './controller';\r\n\r\nexport interface MapViewControllerOptions {\r\n  stateHistory: boolean;\r\n}\r\n\r\n/**\r\n * Controller to handle map view interactions\r\n */\r\nexport class MapViewController extends MapController {\r\n\r\n  /**\r\n   * Observable of the current resolution\r\n   */\r\n  resolution$ = new BehaviorSubject<number>(undefined);\r\n\r\n  /**\r\n   * Observable of the current state\r\n   */\r\n  state$ = new BehaviorSubject<MapViewState>(undefined);\r\n\r\n  /**\r\n   * Extent stream\r\n   */\r\n  private extent$ = new Subject<{extent: MapExtent, action: MapViewAction}>();\r\n\r\n  /**\r\n   * Subscription to the movement stream\r\n   */\r\n  private extent$$: Subscription;\r\n\r\n  /**\r\n   * History of states\r\n   */\r\n  private states: MapViewState[] = [];\r\n\r\n  /**\r\n   * Current state index\r\n   */\r\n  private stateIndex: number = 0;\r\n\r\n  /**\r\n   * Whether the view controller should keep the view's state history\r\n   */\r\n  get stateHistory(): boolean {\r\n    return this.options ? this.options.stateHistory === true : false;\r\n  }\r\n\r\n  /**\r\n   * OL View\r\n   */\r\n  get olView(): OlView { return this.olMap.getView(); }\r\n\r\n  constructor(private options?: MapViewControllerOptions) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Add or remove this controller to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    super.setOlMap(olMap);\r\n    this.setupObservers();\r\n  }\r\n\r\n  /**\r\n   * Observe move moveend and subscribe to the extent stream\r\n   */\r\n  setupObservers() {\r\n    if (this.stateHistory === true) {\r\n      this.observerKeys.push(\r\n        this.olMap.on('moveend', (event: OlMapEvent) => this.onMoveEnd(event))\r\n      );\r\n    }\r\n\r\n    this.extent$$ = this.extent$\r\n      .pipe(debounceTime(25))\r\n      .subscribe((value: {extent: MapExtent, action: MapViewAction}) => {\r\n        this.setExtent(value.extent, value.action);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Teardown any observers\r\n   */\r\n  teardownObservers() {\r\n    super.teardownObservers();\r\n    if (this.extent$$ !== undefined) {\r\n      this.extent$$.unsubscribe();\r\n      this.extent$$ = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the view's OL projection\r\n   * @returns OL projection\r\n   */\r\n  getOlProjection(): OlProjection {\r\n    return this.olView.getProjection();\r\n  }\r\n\r\n  /**\r\n   * Get the current map view center\r\n   * @param projection Output projection\r\n   * @returns Center\r\n   */\r\n  getCenter(projection?: string | OlProjection): [number, number] {\r\n    let center = this.olView.getCenter();\r\n    if (projection && center) {\r\n      center = olproj.transform(center, this.getOlProjection(), projection);\r\n    }\r\n    return center;\r\n  }\r\n\r\n  /**\r\n   * Get the current view extent\r\n   * @param projection Output projection\r\n   * @returns Extent\r\n   */\r\n  getExtent(projection?: string | OlProjection): MapExtent {\r\n    let extent = this.olView.calculateExtent(this.olMap.getSize());\r\n    if (projection && extent) {\r\n      extent = olproj.transformExtent(extent, this.getOlProjection(), projection);\r\n    }\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * Get the current scale\r\n   * @param dpi Dot per inches\r\n   * @returns View scale\r\n   */\r\n  getScale(dpi = 72) {\r\n    return getScaleFromResolution(\r\n      this.getResolution(),\r\n      this.getOlProjection().getUnits(),\r\n      dpi\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the current resolution\r\n   * @returns Projection denominator\r\n   */\r\n  getResolution(): number {\r\n    return this.olView.getResolution();\r\n  }\r\n\r\n  /**\r\n   * Get the current zoom level\r\n   * @returns Zoom level\r\n   */\r\n  getZoom(): number {\r\n    return Math.round(this.olView.getZoom());\r\n  }\r\n\r\n  /**\r\n   * Zoom in\r\n   */\r\n  zoomIn() {\r\n    this.zoomTo(this.olView.getZoom() + 1);\r\n  }\r\n\r\n  /**\r\n   * Zoom out\r\n   */\r\n  zoomOut() {\r\n    this.zoomTo(this.olView.getZoom() - 1);\r\n  }\r\n\r\n  /**\r\n   * Zoom to specific zoom level\r\n   * @param zoom Zoom level\r\n   */\r\n  zoomTo(zoom: number) {\r\n    this.olView.animate({\r\n      zoom,\r\n      duration: 250,\r\n      easing: oleasing.easeOut\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Move to extent after a short delay (100ms) unless\r\n   * a new movement gets registered in the meantime.\r\n   * @param extent Extent to move to\r\n   */\r\n  moveToExtent(extent: [number, number, number, number]) {\r\n    this.extent$.next({extent, action: MapViewAction.Move});\r\n  }\r\n\r\n  /**\r\n   * Zoom to extent after a short delay (100ms) unless\r\n   * a new movement gets registered in the meantime.\r\n   * @param extent Extent to zoom to\r\n   */\r\n  zoomToExtent(extent: [number, number, number, number]) {\r\n    this.extent$.next({extent, action: MapViewAction.Zoom});\r\n  }\r\n\r\n  /**\r\n   * Return the current view rotation\r\n   * @returns Rotation angle in degrees\r\n   */\r\n  getRotation(): number {\r\n    return this.olView.getRotation();\r\n  }\r\n\r\n  /**\r\n   * Reset the view rotation to 0\r\n   */\r\n  resetRotation() {\r\n    this.olView.setRotation(0);\r\n  }\r\n\r\n  /**\r\n   * Whether the view has a previous state\r\n   * @returns True if the view has a previous state\r\n   */\r\n  hasPreviousState(): boolean {\r\n    return this.states.length > 1 && this.stateIndex > 0;\r\n  }\r\n\r\n  /**\r\n   * Whether the view has a next state\r\n   * @returns True if the view has a next state\r\n   */\r\n  hasNextState(): boolean {\r\n    return this.states.length > 1 && this.stateIndex < this.states.length - 1;\r\n  }\r\n\r\n  /**\r\n   * Restore the previous view state\r\n   */\r\n  previousState() {\r\n    if (this.hasPreviousState()) {\r\n      this.setStateIndex(this.stateIndex - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restore the next view state\r\n   */\r\n  nextState() {\r\n    if (this.hasNextState()) {\r\n      this.setStateIndex(this.stateIndex + 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the state history\r\n   */\r\n  clearStateHistory() {\r\n    this.states = [];\r\n    this.stateIndex = 0;\r\n  }\r\n\r\n  /**\r\n   * Update the the view to it's intial state\r\n   */\r\n  setInitialState() {\r\n    if (this.states.length > 0) {\r\n      this.setStateIndex(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move to the extent retrieved from the stream\r\n   * @param extent Extent\r\n   * @param action Either zoom or move\r\n   */\r\n  private setExtent(extent: MapExtent, action: MapViewAction) {\r\n    const olView = this.olView;\r\n    if (action === MapViewAction.Zoom) {\r\n      olView.fit(extent, {maxZoom: 17});\r\n    } else if (action === MapViewAction.Move) {\r\n      olView.fit(extent, {maxZoom: olView.getZoom()});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the view state index\r\n   * @param index State index\r\n   */\r\n  private setStateIndex(index: number) {\r\n    this.stateIndex = index;\r\n    this.setState(this.states[index]);\r\n  }\r\n\r\n  /**\r\n   * Set the view state\r\n   * @param state View state\r\n   */\r\n  private setState(state: MapViewState) {\r\n    this.olView.animate({\r\n      resolution: state.resolution,\r\n      center: state.center,\r\n      duration: 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On move end, get the view state and record it.\r\n   * @param event Map event\r\n   */\r\n  private onMoveEnd(event: OlMapEvent) {\r\n    const resolution = this.getResolution();\r\n    if (this.resolution$.value !== resolution) {\r\n      this.resolution$.next(resolution);\r\n    }\r\n\r\n    const state = {\r\n      resolution,\r\n      center: this.getCenter(),\r\n      zoom: this.getZoom()\r\n    };\r\n\r\n    if (this.stateHistory === true) {\r\n      const stateIndex = this.stateIndex;\r\n      const stateAtIndex = this.states.length === 0 ? undefined : this.states[stateIndex];\r\n      if (!viewStatesAreEqual(state, stateAtIndex)) {\r\n        this.states = this.states.slice(0, stateIndex + 1).concat([state]);\r\n        this.stateIndex = this.states.length - 1;\r\n      }\r\n    }\r\n\r\n    this.state$.next(state);\r\n  }\r\n}\r\n","import olMap from 'ol/Map';\r\nimport olView from 'ol/View';\r\nimport olFeature from 'ol/Feature';\r\nimport olGeolocation from 'ol/Geolocation';\r\nimport olControlAttribution from 'ol/control/Attribution';\r\nimport olControlScaleLine from 'ol/control/ScaleLine';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olproj4 from 'ol/proj/proj4';\r\nimport OlProjection from 'ol/proj/Projection';\r\nimport * as olinteraction from 'ol/interaction';\r\nimport olCircle from 'ol/geom/Circle';\r\nimport * as olstyle from 'ol/style';\r\n\r\nimport proj4 from 'proj4';\r\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\n\r\nimport { Layer, VectorLayer } from '../../layer/shared/layers';\r\nimport { Overlay } from '../../overlay/shared/overlay';\r\n\r\nimport { LayerWatcher } from '../utils/layer-watcher';\r\nimport {\r\n  MapViewOptions,\r\n  MapOptions,\r\n  MapAttributionOptions,\r\n  MapScaleLineOptions,\r\n  MapExtent\r\n} from './map.interface';\r\nimport { MapViewController } from './controllers/view';\r\nimport { FeatureDataSource } from '../../datasource/shared/datasources/feature-datasource';\r\n\r\n// TODO: This class is messy. Clearly define it's scope and the map browser's.\r\n// Move some stuff into controllers.\r\nexport class IgoMap {\r\n  public ol: olMap;\r\n  public layers$ = new BehaviorSubject<Layer[]>([]);\r\n  public status$: Subject<SubjectStatus>;\r\n  public geolocation$ = new BehaviorSubject<olGeolocation>(undefined);\r\n  public geolocationFeature: olFeature;\r\n  public bufferGeom: olCircle;\r\n  public bufferFeature: olFeature;\r\n  public buffer: Overlay;\r\n  public overlay: Overlay;\r\n  public viewController: MapViewController;\r\n\r\n  public bufferStyle: olstyle.Style;\r\n  public bufferDataSource: FeatureDataSource;\r\n\r\n  private layerWatcher: LayerWatcher;\r\n  private geolocation: olGeolocation;\r\n  private geolocation$$: Subscription;\r\n\r\n  private options: MapOptions;\r\n  private defaultOptions: Partial<MapOptions> = {\r\n    controls: { attribution: false }\r\n  };\r\n\r\n  get layers(): Layer[] {\r\n    return this.layers$.value;\r\n  }\r\n\r\n  get projection(): string {\r\n    return this.viewController.getOlProjection().getCode();\r\n  }\r\n\r\n  constructor(options?: MapOptions) {\r\n    this.options = Object.assign({}, this.defaultOptions, options);\r\n    this.layerWatcher = new LayerWatcher();\r\n    this.status$ = this.layerWatcher.status$;\r\n    olproj4.register(proj4);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const controls = [];\r\n    if (this.options.controls) {\r\n      if (this.options.controls.attribution) {\r\n        const attributionOpt = (this.options.controls.attribution === true\r\n          ? {}\r\n          : this.options.controls.attribution) as MapAttributionOptions;\r\n        controls.push(new olControlAttribution(attributionOpt));\r\n      }\r\n      if (this.options.controls.scaleLine) {\r\n        const scaleLineOpt = (this.options.controls.scaleLine === true\r\n          ? {}\r\n          : this.options.controls.scaleLine) as MapScaleLineOptions;\r\n        controls.push(new olControlScaleLine(scaleLineOpt));\r\n      }\r\n    }\r\n    let interactions = {};\r\n    if (this.options.interactions === false) {\r\n      interactions = {\r\n        altShiftDragRotate: false,\r\n        doubleClickZoom: false,\r\n        keyboard: false,\r\n        mouseWheelZoom: false,\r\n        shiftDragZoom: false,\r\n        dragPan: false,\r\n        pinchRotate: false,\r\n        pinchZoom: false\r\n      };\r\n    }\r\n\r\n    this.ol = new olMap({\r\n      interactions: olinteraction.defaults(interactions),\r\n      controls\r\n    });\r\n\r\n    this.setView(this.options.view || {});\r\n    this.viewController = new MapViewController({\r\n      stateHistory: true\r\n    });\r\n    this.viewController.setOlMap(this.ol);\r\n    this.overlay = new Overlay(this);\r\n    this.buffer = new Overlay(this);\r\n  }\r\n\r\n  setTarget(id: string) {\r\n    this.ol.setTarget(id);\r\n    if (id !== undefined) {\r\n      this.layerWatcher.subscribe(() => {}, null);\r\n    } else {\r\n      this.layerWatcher.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateView(options: MapViewOptions) {\r\n    const currentView = this.ol.getView();\r\n    const viewOptions = Object.assign(\r\n      {\r\n        zoom: currentView.getZoom()\r\n      },\r\n      currentView.getProperties()\r\n    );\r\n\r\n    this.setView(Object.assign(viewOptions, options));\r\n  }\r\n\r\n  /**\r\n   * Set the map view\r\n   * @param options Map view options\r\n   */\r\n  setView(options: MapViewOptions) {\r\n    if (this.viewController !== undefined) {\r\n      this.viewController.clearStateHistory();\r\n    }\r\n\r\n    const view = new olView(options);\r\n    this.ol.setView(view);\r\n\r\n    this.unsubscribeGeolocate();\r\n    if (options) {\r\n      if (options.center) {\r\n        const projection = view.getProjection().getCode();\r\n        const center = olproj.fromLonLat(options.center, projection);\r\n        view.setCenter(center);\r\n      }\r\n\r\n      if (options.geolocate) {\r\n        this.geolocate(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  // TODO: Move to ViewController and update every place it's used\r\n  getCenter(projection?: string | OlProjection): [number, number] {\r\n    return this.viewController.getCenter();\r\n  }\r\n\r\n  // TODO: Move to ViewController and update every place it's used\r\n  getExtent(projection?: string | OlProjection): MapExtent {\r\n    return this.viewController.getExtent();\r\n  }\r\n\r\n  // TODO: Move to ViewController and update every place it's used\r\n  getZoom(): number {\r\n    return this.viewController.getZoom();\r\n  }\r\n\r\n  changeBaseLayer(baseLayer: Layer) {\r\n    if (!baseLayer) {\r\n      return;\r\n    }\r\n\r\n    for (const bl of this.getBaseLayers()) {\r\n      bl.visible = false;\r\n    }\r\n\r\n    baseLayer.visible = true;\r\n  }\r\n\r\n  getBaseLayers(): Layer[] {\r\n    return this.layers.filter((layer: Layer) => layer.baseLayer === true);\r\n  }\r\n\r\n  getLayerById(id: string): Layer {\r\n    return this.layers.find((layer: Layer) => layer.id && layer.id === id);\r\n  }\r\n\r\n  getLayerByAlias(alias: string): Layer {\r\n    return this.layers.find((layer: Layer) => layer.alias && layer.alias === alias);\r\n  }\r\n\r\n  /**\r\n   * Add a single layer\r\n   * @param layer Layer to add\r\n   * @param push DEPRECATED\r\n   */\r\n  addLayer(layer: Layer, push = true) {\r\n    this.addLayers([layer]);\r\n  }\r\n\r\n  /**\r\n   * Add many layers\r\n   * @param layers Layers to add\r\n   * @param push DEPRECATED\r\n   */\r\n  addLayers(layers: Layer[], push = true) {\r\n    const addedLayers = layers\r\n      .map((layer: Layer) => this.doAddLayer(layer))\r\n      .filter((layer: Layer | undefined) => layer !== undefined);\r\n    this.setLayers([].concat(this.layers, addedLayers));\r\n  }\r\n\r\n  addBuffer(feature: olFeature) {\r\n    const geometry = feature.getGeometry();\r\n    if (geometry === null) {\r\n      return;\r\n    }\r\n\r\n    this.bufferDataSource.ol.addFeature(feature);\r\n  }\r\n\r\n  /**\r\n   * Remove a single layer\r\n   * @param layer Layer to remove\r\n   */\r\n  removeLayer(layer: Layer) {\r\n    this.removeLayers([layer]);\r\n  }\r\n\r\n  /**\r\n   * Remove many layers\r\n   * @param layers Layers to remove\r\n   */\r\n  removeLayers(layers: Layer[]) {\r\n    const newLayers = this.layers$.value.slice(0);\r\n    const layersToRemove = [];\r\n    layers.forEach((layer: Layer) => {\r\n      const index = this.getLayerIndex(layer);\r\n      if (index >= 0) {\r\n        layersToRemove.push(layer);\r\n        newLayers.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    layersToRemove.forEach((layer: Layer) => this.doRemoveLayer(layer));\r\n    this.setLayers(newLayers);\r\n  }\r\n\r\n  /**\r\n   * Remove all layers\r\n   */\r\n  removeAllLayers() {\r\n    this.layers.forEach((layer: Layer) => this.doRemoveLayer(layer));\r\n    this.layers$.next([]);\r\n  }\r\n\r\n  raiseLayer(layer: Layer) {\r\n    const index = this.getLayerIndex(layer);\r\n    if (index > 0) {\r\n      this.moveLayer(layer, index, index - 1);\r\n    }\r\n  }\r\n\r\n  lowerLayer(layer: Layer) {\r\n    const index = this.getLayerIndex(layer);\r\n    if (index < this.layers.length - 1) {\r\n      this.moveLayer(layer, index, index + 1);\r\n    }\r\n  }\r\n\r\n  moveLayer(layer: Layer, from: number, to: number) {\r\n    const layerTo = this.layers[to];\r\n    const zIndexTo = layerTo.zIndex;\r\n    const zIndexFrom = layer.zIndex;\r\n\r\n    layer.zIndex = zIndexTo;\r\n    layerTo.zIndex = zIndexFrom;\r\n\r\n    this.layers[to] = layer;\r\n    this.layers[from] = layerTo;\r\n    this.layers$.next(this.layers.slice(0));\r\n  }\r\n\r\n  /**\r\n   * Add a layer to the OL map and start watching. If the layer is already\r\n   * added to this map, make it visible but don't add it one again.\r\n   * @param layer Layer\r\n   * @returns The layer added, if any\r\n   */\r\n  private doAddLayer(layer: Layer) {\r\n    if (layer.baseLayer && layer.visible) {\r\n      this.changeBaseLayer(layer);\r\n    }\r\n\r\n    const existingLayer = this.getLayerById(layer.id);\r\n    if (existingLayer !== undefined) {\r\n      existingLayer.visible = true;\r\n      return;\r\n    }\r\n\r\n    if (layer.zIndex === undefined || layer.zIndex === 0) {\r\n      const offset = layer.baseLayer ? 1 : 10;\r\n      layer.zIndex = this.layers.length + offset;\r\n    }\r\n\r\n    layer.setMap(this);\r\n    this.layerWatcher.watchLayer(layer);\r\n    this.ol.addLayer(layer.ol);\r\n\r\n    return layer;\r\n  }\r\n\r\n  /**\r\n   * Remove a layer from the OL map and stop watching\r\n   * @param layer Layer\r\n   */\r\n  private doRemoveLayer(layer: Layer) {\r\n    this.layerWatcher.unwatchLayer(layer);\r\n    this.ol.removeLayer(layer.ol);\r\n    layer.setMap(undefined);\r\n  }\r\n\r\n  /**\r\n   * Update the layers observable\r\n   * @param layers Layers\r\n   */\r\n  private setLayers(layers: Layer[]) {\r\n    this.layers$.next(this.sortLayersByZIndex(layers).slice(0));\r\n  }\r\n\r\n  /**\r\n   * Sort layers by descending zIndex\r\n   * @param layers Array of layers\r\n   * @returns The original array, sorted by zIndex\r\n   */\r\n  private sortLayersByZIndex(layers: Layer[]) {\r\n    // Sort by descending zIndex\r\n    return layers.sort((layer1: Layer, layer2: Layer) => layer2.zIndex - layer1.zIndex);\r\n  }\r\n\r\n  /**\r\n   * Get layer index in the map's inenr array of layers\r\n   * @param layer Layer\r\n   * @returns The layer index\r\n   */\r\n  private getLayerIndex(layer: Layer) {\r\n    return this.layers.findIndex((_layer: Layer) => _layer === layer);\r\n  }\r\n\r\n  // TODO: Create a GeolocationController with everything below\r\n  geolocate(track = false) {\r\n    let first = true;\r\n    if (this.geolocation$$) {\r\n      track = this.geolocation.getTracking();\r\n      this.unsubscribeGeolocate();\r\n    }\r\n    this.startGeolocation();\r\n\r\n    this.geolocation$$ = this.geolocation$.subscribe(geolocation => {\r\n      if (!geolocation) {\r\n        return;\r\n      }\r\n      const accuracy = geolocation.getAccuracy();\r\n      if (accuracy < 4140000) {\r\n        const geometry = geolocation.getAccuracyGeometry();\r\n        const extent = geometry.getExtent();\r\n        if (\r\n          this.geolocationFeature &&\r\n          this.overlay.dataSource.ol.getFeatureById(\r\n            this.geolocationFeature.getId()\r\n          )\r\n        ) {\r\n          this.overlay.dataSource.ol.removeFeature(this.geolocationFeature);\r\n        }\r\n        this.geolocationFeature = new olFeature({ geometry });\r\n        this.geolocationFeature.setId('geolocationFeature');\r\n        this.overlay.addOlFeature(this.geolocationFeature);\r\n\r\n        if (this.ol.getView().options_.buffer) {\r\n          const bufferRadius = this.ol.getView().options_.buffer.bufferRadius;\r\n          const coordinates = geolocation.getPosition();\r\n          this.bufferGeom = new olCircle(coordinates, bufferRadius);\r\n          const bufferStroke = this.ol.getView().options_.buffer.bufferStroke;\r\n          const bufferFill = this.ol.getView().options_.buffer.bufferFill;\r\n\r\n          let bufferText;\r\n          if (this.ol.getView().options_.buffer.showBufferRadius) {\r\n            bufferText = bufferRadius.toString() + 'm';\r\n          } else {\r\n            bufferText = '';\r\n          }\r\n\r\n          this.bufferFeature = new olFeature(this.bufferGeom);\r\n          this.bufferFeature.setId('bufferFeature');\r\n          this.bufferFeature.set('bufferStroke', bufferStroke);\r\n          this.bufferFeature.set('bufferFill', bufferFill);\r\n          this.bufferFeature.set('bufferText', bufferText);\r\n          console.log(this.bufferFeature);\r\n          this.buffer.addOlFeature(this.bufferFeature);\r\n        }\r\n\r\n        if (first) {\r\n          this.viewController.zoomToExtent(extent);\r\n        }\r\n      } else if (first) {\r\n        const view = this.ol.getView();\r\n        const coordinates = geolocation.getPosition();\r\n        view.setCenter(coordinates);\r\n        view.setZoom(14);\r\n      }\r\n      if (track) {\r\n        this.unsubscribeGeolocate();\r\n      }\r\n      first = false;\r\n    });\r\n  }\r\n\r\n  unsubscribeGeolocate() {\r\n    this.stopGeolocation();\r\n    if (this.geolocation$$) {\r\n      this.geolocation$$.unsubscribe();\r\n      this.geolocation$$ = undefined;\r\n    }\r\n  }\r\n\r\n  private startGeolocation() {\r\n    if (!this.geolocation) {\r\n      this.geolocation = new olGeolocation({\r\n        projection: this.projection,\r\n        tracking: true\r\n      });\r\n\r\n      this.geolocation.on('change', evt => {\r\n        this.geolocation$.next(this.geolocation);\r\n      });\r\n    } else {\r\n      this.geolocation.setTracking(true);\r\n    }\r\n  }\r\n\r\n  private stopGeolocation() {\r\n    if (this.geolocation) {\r\n      this.geolocation.setTracking(false);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport proj4 from 'proj4';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olproj4 from 'ol/proj/proj4';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { Projection } from './projection.interfaces';\r\n\r\n/**\r\n * When injected, this service automatically registers and\r\n * projection defined in the application config. A custom projection\r\n * needs to be registered to be usable by OL.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectionService {\r\n\r\n  constructor(private config: ConfigService) {\r\n    const projections = this.config.getConfig('projections') || [];\r\n    projections.forEach((projection: Projection) => {\r\n      this.registerProjection(projection);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Define a proj4 projection and register it in OL\r\n   * @param projection Projection\r\n   */\r\n  registerProjection(projection: Projection) {\r\n    proj4.defs(projection.code, projection.def);\r\n    olproj4.register(proj4);\r\n    olproj.get(projection.code).setExtent(projection.extent);\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  AfterViewInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\nimport { ActivityService } from '@igo2/core';\r\n\r\nimport { IgoMap, MapViewOptions } from '../shared';\r\n\r\n@Component({\r\n  selector: 'igo-map-browser',\r\n  templateUrl: './map-browser.component.html',\r\n  styleUrls: ['./map-browser.component.scss']\r\n})\r\nexport class MapBrowserComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  private activityId: string;\r\n  private status$$: Subscription;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input()\r\n  get view(): MapViewOptions { return this._view; }\r\n  set view(value: MapViewOptions) {\r\n    this._view = value;\r\n    if (this.map !== undefined) {\r\n      this.map.updateView(value);\r\n    }\r\n  }\r\n  private _view: MapViewOptions;\r\n\r\n  public id = `igo-map-target-${new Date().getTime()}`;\r\n\r\n  constructor(private activityService: ActivityService) {}\r\n\r\n  ngOnInit() {\r\n    this.status$$ = this.map.status$.subscribe(status =>\r\n      this.handleStatusChange(status)\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.map.setTarget(this.id);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.setTarget(undefined);\r\n    this.activityService.unregister(this.activityId);\r\n    this.status$$.unsubscribe();\r\n  }\r\n\r\n  private handleStatusChange(status: SubjectStatus) {\r\n    if (status === SubjectStatus.Working && this.activityId === undefined) {\r\n      this.activityId = this.activityService.register();\r\n    } else if (status === SubjectStatus.Done && this.activityId !== undefined) {\r\n      this.activityService.unregister(this.activityId);\r\n      this.activityId = undefined;\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-zoom-button',\r\n  templateUrl: './zoom-button.component.html',\r\n  styleUrls: ['./zoom-button.component.scss']\r\n})\r\nexport class ZoomButtonComponent {\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() color: string;\r\n\r\n  get zoom(): number { return this.map.viewController.getZoom(); }\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-geolocate-button',\r\n  templateUrl: './geolocate-button.component.html',\r\n  styleUrls: ['./geolocate-button.component.scss']\r\n})\r\nexport class GeolocateButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  constructor() {}\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function baseLayersSwitcherSlideInOut(): AnimationTriggerMetadata {\r\n  return trigger('baseLayerSwitcherState', [\r\n    state(\r\n      'collapseIcon',\r\n      style({\r\n        height: '40px',\r\n        width: '40px',\r\n        overflow: 'hidden'\r\n      })\r\n    ),\r\n    state(\r\n      'collapseMap',\r\n      style({\r\n        height: '85px',\r\n        overflow: 'hidden'\r\n      })\r\n    ),\r\n    state(\r\n      'expand',\r\n      style({\r\n        overflow: 'hidden'\r\n      })\r\n    ),\r\n    transition('collapse => expand', animate('200ms')),\r\n    transition('expand => collapse', animate('200ms'))\r\n  ]);\r\n}\r\n","import { Component, Input, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MediaService, Media } from '@igo2/core';\r\nimport { Layer } from '../../layer';\r\nimport { IgoMap } from '../shared';\r\nimport { baseLayersSwitcherSlideInOut } from './baselayers-switcher.animation';\r\n\r\n@Component({\r\n  selector: 'igo-baselayers-switcher',\r\n  templateUrl: './baselayers-switcher.component.html',\r\n  styleUrls: ['./baselayers-switcher.component.scss'],\r\n  animations: [baseLayersSwitcherSlideInOut()]\r\n})\r\nexport class BaseLayersSwitcherComponent implements AfterViewInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get useStaticIcon(): boolean {\r\n    return this._useStaticIcon;\r\n  }\r\n  set useStaticIcon(value: boolean) {\r\n    this._useStaticIcon = value;\r\n  }\r\n  private _useStaticIcon: boolean;\r\n\r\n  public _baseLayers: Layer[] = [];\r\n  public expand = false;\r\n  public showButton = true;\r\n\r\n  private layers$$: Subscription;\r\n\r\n  constructor(private mediaService: MediaService) {\r\n    const media = this.mediaService.media$.value;\r\n    if (media === Media.Mobile && this.useStaticIcon === undefined) {\r\n      this.useStaticIcon = true;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.layers$$ = this.map.layers$.subscribe(arrayLayers => {\r\n      this._baseLayers = arrayLayers.filter(l => l.baseLayer);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n\r\n  collapseOrExpand() {\r\n    if (this.baseLayers.length > 1 || this.useStaticIcon) {\r\n      this.expand = !this.expand;\r\n    } else {\r\n      this.expand = false;\r\n    }\r\n  }\r\n\r\n  get baseLayers(): Layer[] {\r\n    const mapResolution = this.map.viewController.getResolution();\r\n\r\n    const bl = this._baseLayers.filter(l => {\r\n      return (\r\n        (!l.options.maxResolution ||\r\n          mapResolution <= l.options.maxResolution) &&\r\n        (!l.options.minResolution || mapResolution >= l.options.minResolution)\r\n      );\r\n    });\r\n\r\n    const blHidden = bl.filter(l => !l.visible);\r\n    return blHidden.length + 1 === bl.length ? blHidden : bl;\r\n  }\r\n}\r\n","import { Component, Input, AfterViewInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared';\r\nimport { LayerService } from '../../layer/shared/layer.service';\r\nimport { IgoMap } from '../shared';\r\n\r\n@Component({\r\n  selector: 'igo-mini-basemap',\r\n  templateUrl: './mini-basemap.component.html',\r\n  styleUrls: ['./mini-basemap.component.scss']\r\n})\r\nexport class MiniBaseMapComponent implements AfterViewInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n    this.handleMoveEnd();\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get baseLayer(): Layer {\r\n    return this._baseLayer;\r\n  }\r\n  set baseLayer(value: Layer) {\r\n    this._baseLayer = value;\r\n    this.handleBaseLayerChanged(value);\r\n  }\r\n  private _baseLayer: Layer;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  @Input()\r\n  get display(): boolean {\r\n    return this._display;\r\n  }\r\n  set display(value: boolean) {\r\n    this._display = value;\r\n  }\r\n  private _display: boolean;\r\n\r\n  public basemap = new IgoMap({\r\n    controls: {},\r\n    interactions: false\r\n  });\r\n\r\n  constructor(private layerService: LayerService) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.map.ol.on('moveend', () => this.handleMoveEnd());\r\n    this.handleMoveEnd();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.ol.un('moveend', () => this.handleMoveEnd());\r\n  }\r\n\r\n  changeBaseLayer(baseLayer: Layer) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    this.map.changeBaseLayer(baseLayer);\r\n  }\r\n\r\n  private handleMoveEnd() {\r\n    this.basemap.ol.setView(this.map.ol.getView());\r\n  }\r\n\r\n  private handleBaseLayerChanged(baselayer) {\r\n    this.basemap.removeAllLayers();\r\n\r\n    const options: any = Object.assign(\r\n      Object.create(baselayer.options),\r\n      baselayer.options\r\n    );\r\n    options.visible = true;\r\n\r\n    const layer = this.layerService.createLayer(options);\r\n    this.basemap.addLayer(layer);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-rotation-button',\r\n  templateUrl: './rotation-button.component.html',\r\n  styleUrls: ['./rotation-button.component.scss']\r\n})\r\nexport class RotationButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  constructor() {}\r\n\r\n  rotationStyle(radians): {} {\r\n    const rotation = 'rotate(' + radians + 'rad)';\r\n    return {\r\n      transform: rotation\r\n    };\r\n  }\r\n}\r\n","import * as olstyle from 'ol/style';\r\nimport * as olproj from 'ol/proj';\r\n\r\nexport class EsriStyleGenerator {\r\n  public _converters: any;\r\n  public _renderers: any;\r\n\r\n  constructor() {\r\n    this._converters = {};\r\n    this._converters.esriPMS = EsriStyleGenerator._convertEsriPMS;\r\n    this._converters.esriSFS = EsriStyleGenerator._convertEsriSFS;\r\n    this._converters.esriSLS = EsriStyleGenerator._convertEsriSLS;\r\n    this._converters.esriSMS = EsriStyleGenerator._convertEsriSMS;\r\n    this._converters.esriTS = EsriStyleGenerator._convertEsriTS;\r\n    this._renderers = {};\r\n    this._renderers.uniqueValue = this._renderUniqueValue;\r\n    this._renderers.simple = this._renderSimple;\r\n    this._renderers.classBreaks = this._renderClassBreaks;\r\n  }\r\n  static _convertPointToPixel(point) {\r\n    return point / 0.75;\r\n  }\r\n  static _transformColor(color): [number, number, number, number] {\r\n    // alpha channel is different, runs from 0-255 but in ol3 from 0-1\r\n    return [color[0], color[1], color[2], color[3] / 255];\r\n  }\r\n\r\n  static _getResolutionForScale(scale, units) {\r\n    const dpi = 25.4 / 0.28;\r\n    const mpu = olproj.METERS_PER_UNIT[units];\r\n    const inchesPerMeter = 39.37;\r\n    return parseFloat(scale) / (mpu * inchesPerMeter * dpi);\r\n  }\r\n\r\n  /* convert an Esri Text Symbol */\r\n  static _convertEsriTS(symbol) {\r\n    const rotation = EsriStyleGenerator._transformAngle(symbol.angle);\r\n    const text = symbol.text !== undefined ? symbol.text : undefined;\r\n    return new olstyle.Style({\r\n      text: new olstyle.Text({\r\n        fill: new olstyle.Fill({\r\n          color: EsriStyleGenerator._transformColor(symbol.color)\r\n        }),\r\n        font:\r\n          symbol.font.style +\r\n          ' ' +\r\n          symbol.font.weight +\r\n          ' ' +\r\n          symbol.font.size +\r\n          ' px ' +\r\n          symbol.font.family,\r\n        textBaseline: symbol.verticalAlignment,\r\n        textAlign: symbol.horizontalAlignment,\r\n        offsetX: EsriStyleGenerator._convertPointToPixel(symbol.xoffset),\r\n        offsetY: EsriStyleGenerator._convertPointToPixel(symbol.yoffset),\r\n        rotation,\r\n        text\r\n      })\r\n    });\r\n  }\r\n  /* convert an Esri Picture Marker Symbol */\r\n  static _convertEsriPMS(symbol) {\r\n    const src = 'data:' + symbol.contentType + ';base64, ' + symbol.imageData;\r\n    const rotation = EsriStyleGenerator._transformAngle(symbol.angle);\r\n\r\n    return new olstyle.Style({\r\n      image: new olstyle.Icon({\r\n        src,\r\n        rotation\r\n      })\r\n    });\r\n  }\r\n  /* convert an Esri Simple Fill Symbol */\r\n  static _convertEsriSFS(symbol) {\r\n    // there is no support in openlayers currently for fill patterns, so style is not interpreted\r\n    const fill = new olstyle.Fill({\r\n      color: EsriStyleGenerator._transformColor(symbol.color)\r\n    });\r\n    const stroke = symbol.outline\r\n      ? EsriStyleGenerator._convertOutline(symbol.outline)\r\n      : undefined;\r\n    return new olstyle.Style({\r\n      fill,\r\n      stroke\r\n    });\r\n  }\r\n  static _convertOutline(outline) {\r\n    let lineDash;\r\n    const color = EsriStyleGenerator._transformColor(outline.color);\r\n    if (outline.style === 'esriSLSDash') {\r\n      lineDash = [5];\r\n    } else if (outline.style === 'esriSLSDashDot') {\r\n      lineDash = [5, 5, 1, 2];\r\n    } else if (outline.style === 'esriSLSDashDotDot') {\r\n      lineDash = [5, 5, 1, 2, 1, 2];\r\n    } else if (outline.style === 'esriSLSDot') {\r\n      lineDash = [1, 2];\r\n    } else if (outline.style === 'esriSLSNull') {\r\n      // line not visible, make color fully transparent\r\n      color[3] = 0;\r\n    }\r\n    return new olstyle.Stroke({\r\n      color,\r\n      lineDash,\r\n      width: EsriStyleGenerator._convertPointToPixel(outline.width)\r\n    });\r\n  }\r\n  /* convert an Esri Simple Line Symbol */\r\n  static _convertEsriSLS(symbol) {\r\n    return new olstyle.Style({\r\n      stroke: EsriStyleGenerator._convertOutline(symbol)\r\n    });\r\n  }\r\n  static _transformAngle(angle) {\r\n    if (angle === 0 || angle === undefined) {\r\n      return undefined;\r\n    }\r\n    const normalRad = (angle * Math.PI) / 180;\r\n    const ol3Rad = -normalRad + Math.PI / 2;\r\n    if (ol3Rad < 0) {\r\n      return 2 * Math.PI + ol3Rad;\r\n    } else {\r\n      return ol3Rad;\r\n    }\r\n  }\r\n  /* convert an Esri Simple Marker Symbol */\r\n  static _convertEsriSMS(symbol) {\r\n    const fill = new olstyle.Fill({\r\n      color: EsriStyleGenerator._transformColor(symbol.color)\r\n    });\r\n    const stroke = symbol.outline\r\n      ? EsriStyleGenerator._convertOutline(symbol.outline)\r\n      : undefined;\r\n    const radius = EsriStyleGenerator._convertPointToPixel(symbol.size) / 2;\r\n    const rotation = EsriStyleGenerator._transformAngle(symbol.angle);\r\n    if (symbol.style === 'esriSMSCircle') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.Circle({\r\n          radius,\r\n          fill,\r\n          stroke\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSCross') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          radius2: 0,\r\n          angle: 0,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSDiamond') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSSquare') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          angle: Math.PI / 4,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSX') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          radius2: 0,\r\n          angle: Math.PI / 4,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSTriangle') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 3,\r\n          radius,\r\n          angle: 0,\r\n          rotation\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  _convertLabelingInfo(labelingInfo, mapUnits) {\r\n    const styles = [];\r\n    for (let i = 0, ii = labelingInfo.length; i < ii; ++i) {\r\n      const labelExpression = labelingInfo[i].labelExpression;\r\n      // only limited support for label expressions\r\n      const field = labelExpression.substr(\r\n        labelExpression.indexOf('[') + 1,\r\n        labelExpression.indexOf(']') - 1\r\n      );\r\n      const symbol = labelingInfo[i].symbol;\r\n      const maxScale = labelingInfo[i].maxScale;\r\n      const minScale = labelingInfo[i].minScale;\r\n      let minResolution = null;\r\n      if (maxScale !== 0) {\r\n        minResolution = EsriStyleGenerator._getResolutionForScale(\r\n          maxScale,\r\n          mapUnits\r\n        );\r\n      }\r\n      let maxResolution = null;\r\n      if (minScale !== 0) {\r\n        maxResolution = EsriStyleGenerator._getResolutionForScale(\r\n          minScale,\r\n          mapUnits\r\n        );\r\n      }\r\n      const style = this._converters[symbol.type].call(this, symbol);\r\n      styles.push(\r\n        (() => {\r\n          return function(feature, resolution) {\r\n            let visible = true;\r\n            if (this.minResolution !== null && this.maxResolution !== null) {\r\n              visible =\r\n                resolution < this.maxResolution &&\r\n                resolution >= this.minResolution;\r\n            } else if (this.minResolution !== null) {\r\n              visible = resolution >= this.minResolution;\r\n            } else if (this.maxResolution !== null) {\r\n              visible = resolution < this.maxResolution;\r\n            }\r\n            if (visible) {\r\n              const value = feature.get(this.field);\r\n              this.style.getText().setText(value);\r\n              return [this.style];\r\n            }\r\n          };\r\n        })().bind({\r\n          minResolution,\r\n          maxResolution,\r\n          field,\r\n          style\r\n        })\r\n      );\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  _renderSimple(renderer) {\r\n    const style = this._converters[renderer.symbol.type].call(\r\n      this,\r\n      renderer.symbol\r\n    );\r\n    return (() => {\r\n      return () => {\r\n        return [style];\r\n      };\r\n    })();\r\n  }\r\n  _renderClassBreaks(renderer) {\r\n    const defaultSymbol = renderer.defaultSymbol;\r\n    const defaultStyle = this._converters[defaultSymbol.type].call(\r\n      this,\r\n      defaultSymbol\r\n    );\r\n    const field = renderer.field;\r\n    const classes = [];\r\n    for (let i = 0, ii = renderer.classBreakInfos.length; i < ii; ++i) {\r\n      const classBreakInfo = renderer.classBreakInfos[i];\r\n      let min;\r\n      if (\r\n        classBreakInfo.classMinValue === null ||\r\n        classBreakInfo.classMinValue === undefined\r\n      ) {\r\n        if (i === 0) {\r\n          min = renderer.minValue;\r\n        } else {\r\n          min = renderer.classBreakInfos[i - 1].classMaxValue;\r\n        }\r\n      } else {\r\n        min = classBreakInfo.classMinValue;\r\n      }\r\n      const max = classBreakInfo.classMaxValue;\r\n      const symbol = classBreakInfo.symbol;\r\n      const style = this._converters[symbol.type].call(this, symbol);\r\n      classes.push({ min, max, style });\r\n    }\r\n    return (() => {\r\n      return (feature) => {\r\n        const value = feature.get(field);\r\n        for (let i = 0, ii = classes.length; i < ii; ++i) {\r\n          let condition;\r\n          if (i === 0) {\r\n            condition = value >= classes[i].min && value <= classes[i].max;\r\n          } else {\r\n            condition = value > classes[i].min && value <= classes[i].max;\r\n          }\r\n          if (condition) {\r\n            return [classes[i].style];\r\n          }\r\n        }\r\n        return [defaultStyle];\r\n      };\r\n    })();\r\n  }\r\n  _renderUniqueValue(renderer) {\r\n    const defaultSymbol = renderer.defaultSymbol;\r\n    let defaultStyle = [];\r\n    if (defaultSymbol) {\r\n      defaultStyle = [\r\n        this._converters[defaultSymbol.type].call(this, defaultSymbol)\r\n      ];\r\n    }\r\n    const field = renderer.field1;\r\n    const infos = renderer.uniqueValueInfos;\r\n    const me = this;\r\n    return (() => {\r\n      const hash = {};\r\n      for (let i = 0, ii = infos.length; i < ii; ++i) {\r\n        const info = infos[i];\r\n        const symbol = info.symbol;\r\n        hash[info.value] = [me._converters[symbol.type].call(me, symbol)];\r\n      }\r\n\r\n      return (feature) => {\r\n        const style = hash[feature.get(field)];\r\n        return style ? style : defaultStyle;\r\n      };\r\n    })();\r\n  }\r\n  generateStyle(layerInfo, mapUnits) {\r\n    const drawingInfo = layerInfo.drawingInfo;\r\n    let styleFunctions = [];\r\n    const drawingInfoStyle = this._renderers[drawingInfo.renderer.type].call(\r\n      this,\r\n      drawingInfo.renderer\r\n    );\r\n    if (drawingInfoStyle !== undefined) {\r\n      styleFunctions.push(drawingInfoStyle);\r\n    }\r\n    if (layerInfo.labelingInfo) {\r\n      const labelingInfoStyleFunctions = this._convertLabelingInfo(\r\n        layerInfo.labelingInfo,\r\n        mapUnits\r\n      );\r\n      styleFunctions = styleFunctions.concat(labelingInfoStyleFunctions);\r\n    }\r\n    if (styleFunctions.length === 1) {\r\n      return styleFunctions[0];\r\n    } else {\r\n      return (() => {\r\n        return (feature, resolution) => {\r\n          let styles = [];\r\n          for (let i = 0, ii = styleFunctions.length; i < ii; ++i) {\r\n            const result = styleFunctions[i].call(null, feature, resolution);\r\n            if (result) {\r\n              styles = styles.concat(result);\r\n            }\r\n          }\r\n          return styles;\r\n        };\r\n      })();\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Cacheable } from 'ngx-cacheable';\r\n\r\nimport { WMSCapabilities, WMTSCapabilities } from 'ol/format';\r\nimport { optionsFromCapabilities } from 'ol/source/WMTS.js';\r\nimport olAttribution from 'ol/control/Attribution';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { getResolutionFromScale } from '../../map';\r\nimport { EsriStyleGenerator } from '../utils/esri-style-generator';\r\n\r\nimport {\r\n  WMTSDataSourceOptions,\r\n  WMSDataSourceOptions,\r\n  CartoDataSourceOptions,\r\n  ArcGISRestDataSourceOptions,\r\n  TileArcGISRestDataSourceOptions\r\n} from './datasources';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CapabilitiesService {\r\n  private capabilitiesStore: any[] = [];\r\n  private parsers = {\r\n    wms: new WMSCapabilities(),\r\n    wmts: new WMTSCapabilities()\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getWMSOptions(\r\n    baseOptions: WMSDataSourceOptions\r\n  ): Observable<WMSDataSourceOptions> {\r\n    const url = baseOptions.url;\r\n    const version = (baseOptions.params as any).version;\r\n\r\n    return this.getCapabilities('wms', url, version).pipe(\r\n      map((capabilities: any) =>\r\n        this.parseWMSOptions(baseOptions, capabilities)\r\n      )\r\n    );\r\n  }\r\n\r\n  getWMTSOptions(\r\n    baseOptions: WMTSDataSourceOptions\r\n  ): Observable<WMTSDataSourceOptions> {\r\n    const url = baseOptions.url;\r\n    const version = baseOptions.version;\r\n\r\n    const options = this.getCapabilities('wmts', url, version).pipe(\r\n      map((capabilities: any) =>\r\n        this.parseWMTSOptions(baseOptions, capabilities)\r\n      )\r\n    );\r\n\r\n    return options;\r\n  }\r\n\r\n  getCartoOptions(\r\n    baseOptions: CartoDataSourceOptions\r\n  ): Observable<CartoDataSourceOptions> {\r\n    const baseUrl =\r\n      'https://' +\r\n      baseOptions.account +\r\n      '.carto.com/api/v2/viz/' +\r\n      baseOptions.mapId +\r\n      '/viz.json';\r\n\r\n    return this.http\r\n      .jsonp(baseUrl, 'callback')\r\n      .pipe(\r\n        map((cartoOptions: any) =>\r\n          this.parseCartoOptions(baseOptions, cartoOptions)\r\n        )\r\n      );\r\n  }\r\n\r\n  getArcgisOptions(\r\n    baseOptions: ArcGISRestDataSourceOptions\r\n  ): Observable<ArcGISRestDataSourceOptions> {\r\n    const baseUrl = baseOptions.url + '/' + baseOptions.layer + '?f=json';\r\n    const modifiedUrl = baseOptions.url.replace('FeatureServer', 'MapServer');\r\n    const legendUrl = modifiedUrl + '/legend?f=json';\r\n    const arcgisOptions = this.http.get(baseUrl);\r\n    const legend = this.http.get(legendUrl).pipe(\r\n      map((res: any) => res),\r\n      catchError(err => {\r\n        console.log('No legend associated with this Feature Service');\r\n        return of(err);\r\n      })\r\n    );\r\n    return forkJoin([arcgisOptions, legend]).pipe(\r\n      map((res: any) => {\r\n        return this.parseArcgisOptions(baseOptions, res[0], res[1]);\r\n      })\r\n    );\r\n  }\r\n\r\n  getTileArcgisOptions(\r\n    baseOptions: TileArcGISRestDataSourceOptions\r\n  ): Observable<TileArcGISRestDataSourceOptions> {\r\n    const baseUrl = baseOptions.url + '/' + baseOptions.layer + '?f=json';\r\n    const legendUrl = baseOptions.url + '/legend?f=json';\r\n    const arcgisOptions = this.http.get(baseUrl);\r\n    const legendInfo = this.http.get(legendUrl);\r\n\r\n    return forkJoin([arcgisOptions, legendInfo]).pipe(\r\n      map((res: any) =>\r\n        this.parseTileArcgisOptions(baseOptions, res[0], res[1])\r\n      )\r\n    );\r\n  }\r\n\r\n  @Cacheable()\r\n  getCapabilities(\r\n    service: 'wms' | 'wmts',\r\n    baseUrl: string,\r\n    version?: string\r\n  ): Observable<any> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        request: 'GetCapabilities',\r\n        service,\r\n        version: version || '1.3.0'\r\n      }\r\n    });\r\n\r\n    const request = this.http.get(baseUrl, {\r\n      params,\r\n      responseType: 'text'\r\n    });\r\n\r\n    return request.pipe(\r\n      map(res => {\r\n        const capabilities = this.parsers[service].read(res);\r\n        return capabilities;\r\n      })\r\n    );\r\n  }\r\n\r\n  private parseWMSOptions(\r\n    baseOptions: WMSDataSourceOptions,\r\n    capabilities: any\r\n  ): WMSDataSourceOptions {\r\n    const layers = (baseOptions.params as any).layers;\r\n    const layer = this.findDataSourceInCapabilities(\r\n      capabilities.Capability.Layer,\r\n      layers\r\n    );\r\n\r\n    if (!layer) {\r\n      return baseOptions;\r\n    }\r\n    const metadata = layer.DataURL ? layer.DataURL[0] : undefined;\r\n    const abstract = layer.Abstract ? layer.Abstract : undefined;\r\n    const keywordList = layer.KeywordList ? layer.KeywordList : undefined;\r\n    const queryable = layer.queryable;\r\n    const timeFilter = this.getTimeFilter(layer);\r\n    const timeFilterable = timeFilter && Object.keys(timeFilter).length > 0;\r\n\r\n    const options: WMSDataSourceOptions = ObjectUtils.removeUndefined({\r\n      _layerOptionsFromCapabilities: {\r\n        title: layer.Title,\r\n        maxResolution:\r\n          getResolutionFromScale(layer.MaxScaleDenominator) || Infinity,\r\n        minResolution:\r\n          getResolutionFromScale(layer.MinScaleDenominator) || 0,\r\n        metadata: {\r\n          url: metadata ? metadata.OnlineResource : undefined,\r\n          extern: metadata ? true : undefined,\r\n          abstract,\r\n          keywordList\r\n        }\r\n      },\r\n      queryable,\r\n      timeFilter: timeFilterable ? timeFilter : undefined,\r\n      timeFilterable: timeFilterable ? true : undefined\r\n    });\r\n\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private parseWMTSOptions(\r\n    baseOptions: WMTSDataSourceOptions,\r\n    capabilities: any\r\n  ): WMTSDataSourceOptions {\r\n    const options = optionsFromCapabilities(capabilities, baseOptions);\r\n    return Object.assign(options, baseOptions);\r\n  }\r\n\r\n  private parseCartoOptions(\r\n    baseOptions: CartoDataSourceOptions,\r\n    cartoOptions: any\r\n  ): CartoDataSourceOptions {\r\n    const layers = [];\r\n    const params = cartoOptions.layers[1].options.layer_definition;\r\n    params.layers.forEach(element => {\r\n      layers.push({\r\n        type: element.type.toLowerCase(),\r\n        options: element.options,\r\n        legend: element.legend\r\n      });\r\n    });\r\n    const options = ObjectUtils.removeUndefined({\r\n      config: {\r\n        version: params.version,\r\n        layers\r\n      }\r\n    });\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private parseArcgisOptions(\r\n    baseOptions: ArcGISRestDataSourceOptions,\r\n    arcgisOptions: any,\r\n    legend?: any\r\n  ): ArcGISRestDataSourceOptions {\r\n    const legendInfo = legend.layers ? legend : undefined;\r\n    const styleGenerator = new EsriStyleGenerator();\r\n    const units = arcgisOptions.units === 'esriMeters' ? 'm' : 'degrees';\r\n    const style = styleGenerator.generateStyle(arcgisOptions, units);\r\n    const attributions = new olAttribution({\r\n      html: arcgisOptions.copyrightText\r\n    });\r\n    let timeExtent;\r\n    let timeFilter;\r\n    if (arcgisOptions.timeInfo) {\r\n      const time = arcgisOptions.timeInfo.timeExtent;\r\n      timeExtent = time[0] + ',' + time[1];\r\n      const min = new Date();\r\n      min.setTime(time[0]);\r\n      const max = new Date();\r\n      max.setTime(time[1]);\r\n      timeFilter = {\r\n        min: min.toUTCString(),\r\n        max: max.toUTCString(),\r\n        range: true,\r\n        type: 'datetime',\r\n        style: 'calendar'\r\n      };\r\n    }\r\n    const params = Object.assign(\r\n      {},\r\n      {\r\n        legendInfo,\r\n        style,\r\n        timeFilter,\r\n        timeExtent,\r\n        attributions\r\n      }\r\n    );\r\n    const options = ObjectUtils.removeUndefined({\r\n      params\r\n    });\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private parseTileArcgisOptions(\r\n    baseOptions: TileArcGISRestDataSourceOptions,\r\n    arcgisOptions: any,\r\n    legend: any\r\n  ): TileArcGISRestDataSourceOptions {\r\n    const legendInfo = legend.layers ? legend : undefined;\r\n    const attributions = new olAttribution({\r\n      html: arcgisOptions.copyrightText\r\n    });\r\n    let timeExtent;\r\n    let timeFilter;\r\n    if (arcgisOptions.timeInfo) {\r\n      const time = arcgisOptions.timeInfo.timeExtent;\r\n      timeExtent = time[0] + ',' + time[1];\r\n      const min = new Date();\r\n      min.setTime(time[0]);\r\n      const max = new Date();\r\n      max.setTime(time[1]);\r\n      timeFilter = {\r\n        min: min.toUTCString(),\r\n        max: max.toUTCString(),\r\n        range: true,\r\n        type: 'datetime',\r\n        style: 'calendar'\r\n      };\r\n    }\r\n    const params = Object.assign(\r\n      {},\r\n      {\r\n        layers: 'show:' + baseOptions.layer,\r\n        time: timeExtent\r\n      }\r\n    );\r\n    const options = ObjectUtils.removeUndefined({\r\n      params,\r\n      legendInfo,\r\n      timeFilter,\r\n      attributions\r\n    });\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private findDataSourceInCapabilities(layerArray, name): any {\r\n    if (Array.isArray(layerArray)) {\r\n      let layer;\r\n      layerArray.find(value => {\r\n        layer = this.findDataSourceInCapabilities(value, name);\r\n        return layer !== undefined;\r\n      }, this);\r\n\r\n      return layer;\r\n    } else if (layerArray.Layer) {\r\n      return this.findDataSourceInCapabilities(layerArray.Layer, name);\r\n    } else {\r\n      if (layerArray.Name && layerArray.Name === name) {\r\n        return layerArray;\r\n      }\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  getTimeFilter(layer) {\r\n    let dimension;\r\n\r\n    if (layer.Dimension) {\r\n      const timeFilter: any = {};\r\n      dimension = layer.Dimension[0];\r\n\r\n      if (dimension.values) {\r\n        const minMaxDim = dimension.values.split('/');\r\n        timeFilter.min = minMaxDim[0] !== undefined ? minMaxDim[0] : undefined;\r\n        timeFilter.max = minMaxDim[1] !== undefined ? minMaxDim[1] : undefined;\r\n        timeFilter.step = minMaxDim[2] !== undefined ? minMaxDim[2] : undefined;\r\n      }\r\n\r\n      if (dimension.default) {\r\n        timeFilter.value = dimension.default;\r\n      }\r\n      return timeFilter;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CapabilitiesService } from './capabilities.service';\r\nimport { WFSService } from './datasources/wfs.service';\r\nimport { NetworkService } from '@igo2/core';\r\nimport {\r\n  DataSource,\r\n  OSMDataSource,\r\n  OSMDataSourceOptions,\r\n  FeatureDataSource,\r\n  FeatureDataSourceOptions,\r\n  XYZDataSource,\r\n  XYZDataSourceOptions,\r\n  WFSDataSource,\r\n  WFSDataSourceOptions,\r\n  WMTSDataSource,\r\n  WMTSDataSourceOptions,\r\n  WMSDataSource,\r\n  WMSDataSourceOptions,\r\n  CartoDataSource,\r\n  CartoDataSourceOptions,\r\n  ArcGISRestDataSource,\r\n  ArcGISRestDataSourceOptions,\r\n  TileArcGISRestDataSource,\r\n  TileArcGISRestDataSourceOptions,\r\n  WebSocketDataSource,\r\n  AnyDataSourceOptions,\r\n  MVTDataSource,\r\n  MVTDataSourceOptions,\r\n  ClusterDataSource,\r\n  ClusterDataSourceOptions\r\n} from './datasources';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSourceService {\r\n  public datasources$ = new BehaviorSubject<DataSource[]>([]);\r\n\r\n  constructor(\r\n    private capabilitiesService: CapabilitiesService,\r\n    private wfsDataSourceService: WFSService,\r\n    public networkService: NetworkService\r\n  ) {}\r\n\r\n  createAsyncDataSource(context: AnyDataSourceOptions): Observable<DataSource> {\r\n    if (!context.type) {\r\n      console.error(context);\r\n      throw new Error('Datasource needs a type');\r\n    }\r\n    let dataSource;\r\n    switch (context.type.toLowerCase()) {\r\n      case 'osm':\r\n        dataSource = this.createOSMDataSource(context as OSMDataSourceOptions);\r\n        break;\r\n      case 'vector':\r\n        dataSource = this.createFeatureDataSource(\r\n          context as FeatureDataSourceOptions\r\n        );\r\n        break;\r\n      case 'wfs':\r\n        dataSource = this.createWFSDataSource(context as WFSDataSourceOptions);\r\n        break;\r\n      case 'wms':\r\n        dataSource = this.createWMSDataSource(context as WMSDataSourceOptions);\r\n        break;\r\n      case 'wmts':\r\n        dataSource = this.createWMTSDataSource(\r\n          context as WMTSDataSourceOptions\r\n        );\r\n        break;\r\n      case 'xyz':\r\n        dataSource = this.createXYZDataSource(context as XYZDataSourceOptions);\r\n        break;\r\n      case 'carto':\r\n        dataSource = this.createCartoDataSource(\r\n          context as CartoDataSourceOptions\r\n        );\r\n        break;\r\n      case 'arcgisrest':\r\n        dataSource = this.createArcGISRestDataSource(\r\n          context as ArcGISRestDataSourceOptions\r\n        );\r\n        break;\r\n      case 'websocket':\r\n        dataSource = this.createWebSocketDataSource(\r\n          context as FeatureDataSourceOptions\r\n        );\r\n        break;\r\n      case 'mvt':\r\n        dataSource = this.createMVTDataSource(\r\n          context as MVTDataSourceOptions\r\n        );\r\n        break;\r\n      case 'tilearcgisrest':\r\n        dataSource = this.createTileArcGISRestDataSource(\r\n          context as TileArcGISRestDataSourceOptions\r\n        );\r\n        break;\r\n      case 'cluster':\r\n        dataSource = this.createClusterDataSource(\r\n          context as ClusterDataSourceOptions\r\n        );\r\n        break;\r\n      default:\r\n        console.error(context);\r\n        throw new Error('Invalid datasource type');\r\n    }\r\n\r\n    this.datasources$.next(this.datasources$.value.concat([dataSource]));\r\n\r\n    return dataSource;\r\n  }\r\n\r\n  private createOSMDataSource(\r\n    context: OSMDataSourceOptions\r\n  ): Observable<OSMDataSource> {\r\n    return new Observable(d => d.next(new OSMDataSource(context, this.networkService)));\r\n  }\r\n\r\n  private createFeatureDataSource(\r\n    context: FeatureDataSourceOptions\r\n  ): Observable<FeatureDataSource> {\r\n    return new Observable(d => d.next(new FeatureDataSource(context, this.networkService)));\r\n  }\r\n\r\n  private createWebSocketDataSource(\r\n    context: FeatureDataSourceOptions\r\n  ): Observable<WebSocketDataSource> {\r\n    return new Observable(d => d.next(new WebSocketDataSource(context, this.networkService)));\r\n  }\r\n\r\n  private createWFSDataSource(\r\n    context: WFSDataSourceOptions\r\n  ): Observable<WFSDataSource> {\r\n    return new Observable(d =>\r\n      d.next(new WFSDataSource(context, this.networkService, this.wfsDataSourceService))\r\n    );\r\n  }\r\n\r\n  private createWMSDataSource(\r\n    context: WMSDataSourceOptions\r\n  ): Observable<WMSDataSource> {\r\n    if (context.optionsFromCapabilities) {\r\n      return this.capabilitiesService\r\n        .getWMSOptions(context)\r\n        .pipe(\r\n          map(\r\n            (options: WMSDataSourceOptions) =>\r\n              new WMSDataSource(context, this.networkService, this.wfsDataSourceService)\r\n          )\r\n        );\r\n    }\r\n\r\n    return new Observable(d =>\r\n      d.next(new WMSDataSource(context, this.networkService, this.wfsDataSourceService))\r\n    );\r\n  }\r\n\r\n  private createWMTSDataSource(\r\n    context: WMTSDataSourceOptions\r\n  ): Observable<WMTSDataSource> {\r\n    if (context.optionsFromCapabilities) {\r\n      return this.capabilitiesService\r\n        .getWMTSOptions(context)\r\n        .pipe(\r\n          map((options: WMTSDataSourceOptions) => new WMTSDataSource(options, this.networkService))\r\n        );\r\n    }\r\n\r\n    return new Observable(d => d.next(new WMTSDataSource(context, this.networkService)));\r\n  }\r\n\r\n  private createXYZDataSource(\r\n    context: XYZDataSourceOptions\r\n  ): Observable<XYZDataSource> {\r\n    return new Observable(d => d.next(new XYZDataSource(context, this.networkService)));\r\n  }\r\n\r\n  private createCartoDataSource(\r\n    context: CartoDataSourceOptions\r\n  ): Observable<CartoDataSource> {\r\n    if (context.mapId) {\r\n      return this.capabilitiesService\r\n        .getCartoOptions(context)\r\n        .pipe(\r\n          map((options: CartoDataSourceOptions) => new CartoDataSource(options, this.networkService))\r\n        );\r\n    }\r\n    return new Observable(d => d.next(new CartoDataSource(context, this.networkService)));\r\n  }\r\n\r\n  private createArcGISRestDataSource(\r\n    context: ArcGISRestDataSourceOptions\r\n  ): Observable<ArcGISRestDataSource> {\r\n    return this.capabilitiesService\r\n      .getArcgisOptions(context)\r\n      .pipe(\r\n        map(\r\n          (options: ArcGISRestDataSourceOptions) =>\r\n            new ArcGISRestDataSource(options, this.networkService)\r\n        )\r\n      );\r\n  }\r\n\r\n  private createTileArcGISRestDataSource(\r\n    context: TileArcGISRestDataSourceOptions\r\n  ): Observable<TileArcGISRestDataSource> {\r\n    return this.capabilitiesService\r\n      .getTileArcgisOptions(context)\r\n      .pipe(\r\n        map(\r\n          (options: TileArcGISRestDataSourceOptions) =>\r\n            new TileArcGISRestDataSource(options, this.networkService)\r\n        )\r\n      );\r\n  }\r\n  private createMVTDataSource(\r\n    context: MVTDataSourceOptions\r\n  ): Observable<MVTDataSource> {\r\n    return new Observable(d => d.next(new MVTDataSource(context, this.networkService)));\r\n  }\r\n\r\n  private createClusterDataSource(\r\n    context: ClusterDataSourceOptions\r\n  ): Observable<ClusterDataSource> {\r\n    return new Observable(d => d.next(new ClusterDataSource(context, this.networkService)));\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport {\r\n  OSMDataSource,\r\n  FeatureDataSource,\r\n  XYZDataSource,\r\n  WFSDataSource,\r\n  WMTSDataSource,\r\n  WMSDataSource,\r\n  CartoDataSource,\r\n  ArcGISRestDataSource,\r\n  TileArcGISRestDataSource,\r\n  WebSocketDataSource,\r\n  MVTDataSource,\r\n  ClusterDataSource\r\n} from '../../datasource';\r\n\r\nimport { DataSourceService } from '../../datasource/shared/datasource.service';\r\n\r\nimport {\r\n  Layer,\r\n  ImageLayer,\r\n  ImageLayerOptions,\r\n  TileLayer,\r\n  TileLayerOptions,\r\n  VectorLayer,\r\n  VectorLayerOptions,\r\n  AnyLayerOptions,\r\n  VectorTileLayer,\r\n  VectorTileLayerOptions\r\n} from './layers';\r\n\r\nimport { StyleService } from './style.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LayerService {\r\n  private tokenKey: string;\r\n\r\n  constructor(\r\n    private styleService: StyleService,\r\n    private dataSourceService: DataSourceService,\r\n    @Optional() private config: ConfigService\r\n  ) {\r\n    if (this.config) {\r\n      this.tokenKey = this.config.getConfig('auth.tokenKey');\r\n    }\r\n  }\r\n\r\n  createLayer(layerOptions: AnyLayerOptions): Layer {\r\n    if (!layerOptions.source) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      layerOptions.source.options &&\r\n      layerOptions.source.options.optionsFromCapabilities\r\n    ) {\r\n      layerOptions = ObjectUtils.mergeDeep(\r\n        (layerOptions.source.options as any)._layerOptionsFromCapabilities || {},\r\n        layerOptions || {}\r\n      );\r\n    }\r\n\r\n    let layer;\r\n    switch (layerOptions.source.constructor) {\r\n      case OSMDataSource:\r\n      case WMTSDataSource:\r\n      case XYZDataSource:\r\n      case CartoDataSource:\r\n      case TileArcGISRestDataSource:\r\n        layer = this.createTileLayer(layerOptions as TileLayerOptions);\r\n        break;\r\n      case FeatureDataSource:\r\n      case WFSDataSource:\r\n      case ArcGISRestDataSource:\r\n      case WebSocketDataSource:\r\n      case ClusterDataSource:\r\n        layer = this.createVectorLayer(layerOptions as VectorLayerOptions);\r\n        break;\r\n      case WMSDataSource:\r\n        layer = this.createImageLayer(layerOptions as ImageLayerOptions);\r\n        break;\r\n      case MVTDataSource:\r\n        layer = this.createVectorTileLayer(layerOptions as VectorTileLayerOptions);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return layer;\r\n  }\r\n\r\n  createAsyncLayer(layerOptions: AnyLayerOptions): Observable<Layer> {\r\n    if (layerOptions.source) {\r\n      return new Observable(d => d.next(this.createLayer(layerOptions)));\r\n    }\r\n\r\n    return this.dataSourceService\r\n      .createAsyncDataSource(layerOptions.sourceOptions)\r\n      .pipe(\r\n        map(source => {\r\n          layerOptions.source = source;\r\n          return this.createLayer(layerOptions);\r\n        })\r\n      );\r\n  }\r\n\r\n  private createImageLayer(layerOptions: ImageLayerOptions): ImageLayer {\r\n    if (this.tokenKey) {\r\n      layerOptions.token = localStorage.getItem(this.tokenKey);\r\n    }\r\n\r\n    return new ImageLayer(layerOptions);\r\n  }\r\n\r\n  private createTileLayer(layerOptions: TileLayerOptions): TileLayer {\r\n    return new TileLayer(layerOptions);\r\n  }\r\n\r\n  private createVectorLayer(layerOptions: VectorLayerOptions): VectorLayer {\r\n    let style;\r\n    if (layerOptions.style !== undefined) {\r\n      style = this.styleService.createStyle(layerOptions.style);\r\n    }\r\n\r\n    if (layerOptions.source instanceof ArcGISRestDataSource) {\r\n      const source = layerOptions.source as ArcGISRestDataSource;\r\n      style = source.options.params.style;\r\n    }\r\n\r\n    if (layerOptions.source instanceof ClusterDataSource) {\r\n      const serviceStyle = this.styleService;\r\n      layerOptions.style = (feature) => {\r\n        return serviceStyle.createClusterStyle(feature, layerOptions.clusterParam);\r\n      };\r\n      return new VectorLayer(layerOptions);\r\n    }\r\n\r\n    if (layerOptions.styleByAttribute) {\r\n      const serviceStyle = this.styleService;\r\n      layerOptions.style = (feature) => {\r\n        return serviceStyle.createStyleByAttribute(feature, layerOptions.styleByAttribute);\r\n      };\r\n      return new VectorLayer(layerOptions);\r\n    }\r\n\r\n    const layerOptionsOl = Object.assign({}, layerOptions, {\r\n      style\r\n    });\r\n\r\n    return new VectorLayer(layerOptionsOl);\r\n  }\r\n\r\n  private createVectorTileLayer(layerOptions: VectorTileLayerOptions): VectorTileLayer {\r\n    let style;\r\n    if (layerOptions.style !== undefined) {\r\n      style = this.styleService.createStyle(layerOptions.style);\r\n    }\r\n\r\n    if (layerOptions.styleByAttribute) {\r\n      const serviceStyle = this.styleService;\r\n      layerOptions.style = (feature) => {\r\n        return serviceStyle.createStyleByAttribute(feature, layerOptions.styleByAttribute);\r\n      };\r\n      return new VectorTileLayer(layerOptions);\r\n    }\r\n\r\n    const layerOptionsOl = Object.assign({}, layerOptions, {\r\n      style\r\n    });\r\n    return new VectorTileLayer(layerOptionsOl);\r\n  }\r\n}\r\n","export enum CatalogItemType {\r\n  Layer = 'layer',\r\n  Group = 'group'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport * as olformat from 'ol/format';\r\nimport * as olextent from 'ol/extent';\r\nimport olFormatGML2 from 'ol/format/GML2';\r\nimport olFormatGML3 from 'ol/format/GML3';\r\nimport olFormatEsriJSON from 'ol/format/EsriJSON';\r\nimport olFeature from 'ol/Feature';\r\n\r\nimport { uuid } from '@igo2/utils';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { FEATURE } from '../../feature/shared/feature.enums';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport {\r\n  WMSDataSource,\r\n  CartoDataSource,\r\n  TileArcGISRestDataSource\r\n} from '../../datasource';\r\n\r\nimport { QueryFormat, QueryHtmlTarget } from './query.enums';\r\nimport { QueryOptions, QueryableDataSource } from './query.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QueryService {\r\n  public queryEnabled = true;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  query(layers: Layer[], options: QueryOptions): Observable<Feature[]>[] {\r\n    return layers\r\n      .filter((layer: Layer) => layer.visible && layer.isInResolutionsRange)\r\n      .map((layer: Layer) => this.queryLayer(layer, options));\r\n  }\r\n\r\n  queryLayer(layer: Layer, options: QueryOptions): Observable<Feature[]> {\r\n    const url = this.getQueryUrl(layer.dataSource, options);\r\n    if (!url) {\r\n      return of([]);\r\n    }\r\n\r\n    const request = this.http.get(url, { responseType: 'text' });\r\n    return request.pipe(map(res => this.extractData(res, layer, options, url)));\r\n  }\r\n\r\n  private extractData(\r\n    res,\r\n    layer: Layer,\r\n    options: QueryOptions,\r\n    url: string\r\n  ): Feature[] {\r\n    const queryDataSource = layer.dataSource as QueryableDataSource;\r\n\r\n    let allowedFieldsAndAlias;\r\n    if (\r\n      layer.options &&\r\n      layer.options.sourceOptions &&\r\n      layer.options.sourceOptions.sourceFields &&\r\n      layer.options.sourceOptions.sourceFields.length >= 1\r\n    ) {\r\n      allowedFieldsAndAlias = {};\r\n      layer.options.sourceOptions.sourceFields.forEach(sourceField => {\r\n        const alias = sourceField.alias ? sourceField.alias : sourceField.name;\r\n        allowedFieldsAndAlias[sourceField.name] = alias;\r\n      });\r\n    }\r\n    let features = [];\r\n    switch (queryDataSource.options.queryFormat) {\r\n      case QueryFormat.GML3:\r\n        features = this.extractGML3Data(\r\n          res,\r\n          layer.zIndex,\r\n          allowedFieldsAndAlias\r\n        );\r\n        break;\r\n      case QueryFormat.JSON:\r\n      case QueryFormat.GEOJSON:\r\n        features = this.extractGeoJSONData(res);\r\n        break;\r\n      case QueryFormat.ESRIJSON:\r\n        features = this.extractEsriJSONData(res, layer.zIndex);\r\n        break;\r\n      case QueryFormat.TEXT:\r\n        features = this.extractTextData(res);\r\n        break;\r\n      case QueryFormat.HTML:\r\n        features = this.extractHtmlData(\r\n          res,\r\n          queryDataSource.queryHtmlTarget,\r\n          url\r\n        );\r\n        break;\r\n      case QueryFormat.GML2:\r\n      default:\r\n        features = this.extractGML2Data(res, layer, allowedFieldsAndAlias);\r\n        break;\r\n    }\r\n\r\n    return features.map((feature: Feature, index: number) => {\r\n      let title = feature.properties[queryDataSource.queryTitle];\r\n      if (!title && features.length > 1) {\r\n        title = `${layer.title} (${index + 1})`;\r\n      } else if (!title) {\r\n        title = layer.title;\r\n      }\r\n      const meta = Object.assign({}, feature.meta || {}, {\r\n        id: uuid(),\r\n        title,\r\n        mapTitle: title,\r\n        sourceTitle: layer.title,\r\n        order: 1000 - layer.zIndex\r\n      });\r\n\r\n      return Object.assign(feature, {\r\n        meta,\r\n        projection:\r\n          queryDataSource.options.type === 'carto'\r\n            ? 'EPSG:4326'\r\n            : options.projection\r\n      });\r\n    });\r\n  }\r\n\r\n  private extractGML2Data(res, zIndex, allowedFieldsAndAlias?) {\r\n    let parser = new olFormatGML2();\r\n    let features = parser.readFeatures(res);\r\n    // Handle non standard GML output (MapServer)\r\n    if (features.length === 0) {\r\n      parser = new olformat.WMSGetFeatureInfo();\r\n      features = parser.readFeatures(res);\r\n    }\r\n\r\n    return features.map(feature =>\r\n      this.featureToResult(feature, zIndex, allowedFieldsAndAlias)\r\n    );\r\n  }\r\n\r\n  private extractGML3Data(res, zIndex, allowedFieldsAndAlias?) {\r\n    const parser = new olFormatGML3();\r\n    const features = parser.readFeatures(res);\r\n    return features.map(feature =>\r\n      this.featureToResult(feature, zIndex, allowedFieldsAndAlias)\r\n    );\r\n  }\r\n\r\n  private extractGeoJSONData(res) {\r\n    let features = [];\r\n    try {\r\n      features = JSON.parse(res).features;\r\n    } catch (e) {\r\n      console.warn('query.service: Unable to parse geojson', '\\n', res);\r\n    }\r\n    return features;\r\n  }\r\n\r\n  private extractEsriJSONData(res, zIndex) {\r\n    const parser = new olFormatEsriJSON();\r\n    const features = parser.readFeatures(res);\r\n\r\n    return features.map(feature => this.featureToResult(feature, zIndex));\r\n  }\r\n\r\n  private extractTextData(res) {\r\n    // TODO\r\n    return [];\r\n  }\r\n\r\n  private extractHtmlData(res, htmlTarget: QueryHtmlTarget, url) {\r\n    // _blank , iframe or undefined\r\n    const searchParams: any = this.getQueryParams(url.toLowerCase());\r\n    const bboxRaw = searchParams.bbox;\r\n    const width = parseInt(searchParams.width, 10);\r\n    const height = parseInt(searchParams.height, 10);\r\n    const xPosition = parseInt(searchParams.i || searchParams.x, 10);\r\n    const yPosition = parseInt(searchParams.j || searchParams.y, 10);\r\n    const projection = searchParams.crs || searchParams.srs || 'EPSG:3857';\r\n\r\n    const bbox = bboxRaw.split(',');\r\n    let threshold =\r\n      (Math.abs(parseFloat(bbox[0])) - Math.abs(parseFloat(bbox[2]))) * 0.05;\r\n\r\n    // for context in degree (EPSG:4326,4269...)\r\n    if (Math.abs(parseFloat(bbox[0])) < 180) {\r\n      threshold = 0.045;\r\n    }\r\n\r\n    const clickx =\r\n      parseFloat(bbox[0]) +\r\n      (Math.abs(parseFloat(bbox[0]) - parseFloat(bbox[2])) * xPosition) /\r\n        width -\r\n      threshold;\r\n    const clicky =\r\n      parseFloat(bbox[1]) +\r\n      (Math.abs(parseFloat(bbox[1]) - parseFloat(bbox[3])) * yPosition) /\r\n        height -\r\n      threshold;\r\n    const clickx1 = clickx + threshold * 2;\r\n    const clicky1 = clicky + threshold * 2;\r\n\r\n    const wktPoly =\r\n      'POLYGON((' +\r\n      clickx +\r\n      ' ' +\r\n      clicky +\r\n      ', ' +\r\n      clickx +\r\n      ' ' +\r\n      clicky1 +\r\n      ', ' +\r\n      clickx1 +\r\n      ' ' +\r\n      clicky1 +\r\n      ', ' +\r\n      clickx1 +\r\n      ' ' +\r\n      clicky +\r\n      ', ' +\r\n      clickx +\r\n      ' ' +\r\n      clicky +\r\n      '))';\r\n\r\n    const format = new olformat.WKT();\r\n    const tenPercentWidthGeom = format.readFeature(wktPoly);\r\n    const f = tenPercentWidthGeom.getGeometry() as any;\r\n\r\n    if (\r\n      htmlTarget !== QueryHtmlTarget.BLANK &&\r\n      htmlTarget !== QueryHtmlTarget.IFRAME\r\n    ) {\r\n      htmlTarget = QueryHtmlTarget.IFRAME;\r\n    }\r\n\r\n    const bodyTagStart = res.toLowerCase().indexOf('<body>');\r\n    const bodyTagEnd = res.toLowerCase().lastIndexOf('</body>') + 7;\r\n    // replace \\r \\n  and ' ' with '' to validate if the body is really empty.\r\n    const body = res.slice(bodyTagStart, bodyTagEnd).replace(/(\\r|\\n|\\s)/g, '');\r\n    if (body === '<body></body>' || res === '') {\r\n      return [];\r\n    }\r\n\r\n    return [\r\n      {\r\n        type: FEATURE,\r\n        projection,\r\n        properties: { target: htmlTarget, body: res, url },\r\n        geometry: { type: f.getType(), coordinates: f.getCoordinates() }\r\n      }\r\n    ];\r\n  }\r\n\r\n  private getQueryParams(url) {\r\n    const queryString = url.split('?');\r\n    if (!queryString[1]) {\r\n      return;\r\n    }\r\n    const pairs = queryString[1].split('&');\r\n\r\n    const result = {};\r\n    pairs.forEach(pair => {\r\n      pair = pair.split('=');\r\n      result[pair[0]] = decodeURIComponent(pair[1] || '');\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private featureToResult(\r\n    featureOL: olFeature,\r\n    zIndex: number,\r\n    allowedFieldsAndAlias?\r\n  ): Feature {\r\n    const featureGeometry = featureOL.getGeometry() as any;\r\n    const properties: any = Object.assign({}, featureOL.getProperties());\r\n    delete properties.geometry;\r\n    delete properties.boundedBy;\r\n    delete properties.shape;\r\n    delete properties.SHAPE;\r\n    delete properties.the_geom;\r\n\r\n    let geometry;\r\n    if (featureGeometry !== undefined) {\r\n      geometry = {\r\n        type: featureGeometry.getType(),\r\n        coordinates: featureGeometry.getCoordinates()\r\n      };\r\n    }\r\n\r\n    return {\r\n      type: FEATURE,\r\n      projection: undefined,\r\n      properties,\r\n      geometry,\r\n      meta: {\r\n        id: uuid(),\r\n        order: 1000 - zIndex,\r\n        alias: allowedFieldsAndAlias\r\n      }\r\n    };\r\n  }\r\n\r\n  private getQueryUrl(\r\n    datasource: QueryableDataSource,\r\n    options: QueryOptions\r\n  ): string {\r\n    let url;\r\n    switch (datasource.constructor) {\r\n      case WMSDataSource:\r\n        const wmsDatasource = datasource as WMSDataSource;\r\n        url = wmsDatasource.ol.getGetFeatureInfoUrl(\r\n          options.coordinates,\r\n          options.resolution,\r\n          options.projection,\r\n          {\r\n            INFO_FORMAT:\r\n              wmsDatasource.params.info_format ||\r\n              this.getMimeInfoFormat(datasource.options.queryFormat),\r\n            QUERY_LAYERS: wmsDatasource.params.layers,\r\n            FEATURE_COUNT: wmsDatasource.params.feature_count || '5'\r\n          }\r\n        );\r\n        if (wmsDatasource.params.version !== '1.3.0') {\r\n          url = url.replace('&I=', '&X=');\r\n          url = url.replace('&J=', '&Y=');\r\n        }\r\n        break;\r\n      case CartoDataSource:\r\n        const cartoDatasource = datasource as CartoDataSource;\r\n        const baseUrl =\r\n          'https://' +\r\n          cartoDatasource.options.account +\r\n          '.carto.com/api/v2/sql?';\r\n        const format = 'format=GeoJSON';\r\n        const sql =\r\n          '&q=' + cartoDatasource.options.config.layers[0].options.sql;\r\n        const clause =\r\n          ' WHERE ST_Intersects(the_geom_webmercator,ST_BUFFER(ST_SetSRID(ST_POINT(';\r\n        const metres = cartoDatasource.options.queryPrecision\r\n          ? cartoDatasource.options.queryPrecision\r\n          : '1000';\r\n        const coordinates =\r\n          options.coordinates[0] +\r\n          ',' +\r\n          options.coordinates[1] +\r\n          '),3857),' +\r\n          metres +\r\n          '))';\r\n\r\n        url = `${baseUrl}${format}${sql}${clause}${coordinates}`;\r\n        break;\r\n      case TileArcGISRestDataSource:\r\n        const tileArcGISRestDatasource = datasource as TileArcGISRestDataSource;\r\n        let extent = olextent.boundingExtent([options.coordinates]);\r\n        if (tileArcGISRestDatasource.options.queryPrecision) {\r\n          extent = olextent.buffer(\r\n            extent,\r\n            tileArcGISRestDatasource.options.queryPrecision\r\n          );\r\n        }\r\n        const serviceUrl =\r\n          tileArcGISRestDatasource.options.url +\r\n          '/' +\r\n          tileArcGISRestDatasource.options.layer +\r\n          '/query/';\r\n        const geometry = encodeURIComponent(\r\n          '{\"xmin\":' +\r\n            extent[0] +\r\n            ',\"ymin\":' +\r\n            extent[1] +\r\n            ',\"xmax\":' +\r\n            extent[2] +\r\n            ',\"ymax\":' +\r\n            extent[3] +\r\n            ',\"spatialReference\":{\"wkid\":102100}}'\r\n        );\r\n        const params = [\r\n          'f=json',\r\n          `geometry=${geometry}`,\r\n          'geometryType=esriGeometryEnvelope',\r\n          'inSR=102100',\r\n          'spatialRel=esriSpatialRelIntersects',\r\n          'outFields=*',\r\n          'returnGeometry=true',\r\n          'outSR=102100'\r\n        ];\r\n        url = `${serviceUrl}?${params.join('&')}`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  private getMimeInfoFormat(queryFormat) {\r\n    let mime;\r\n    switch (queryFormat) {\r\n      case QueryFormat.GML2:\r\n        mime = 'application/vnd.ogc.gml';\r\n        break;\r\n      case QueryFormat.GML3:\r\n        mime = 'application/vnd.ogc.gml/3.1.1';\r\n        break;\r\n      case QueryFormat.JSON:\r\n        mime = 'application/json';\r\n        break;\r\n      case QueryFormat.GEOJSON:\r\n        mime = 'application/geojson';\r\n        break;\r\n      case QueryFormat.TEXT:\r\n        mime = 'text/plain';\r\n        break;\r\n      case QueryFormat.HTML:\r\n        mime = 'text/html';\r\n        break;\r\n      default:\r\n        mime = 'application/vnd.ogc.gml';\r\n        break;\r\n    }\r\n\r\n    return mime;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n  Self\r\n} from '@angular/core';\r\n\r\nimport { Subscription, Observable, of, zip } from 'rxjs';\r\n\r\nimport OlFeature from 'ol/Feature';\r\nimport OlLayer from 'ol/layer/Layer';\r\n\r\nimport OlDragBoxInteraction from 'ol/interaction/DragBox';\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { ListenerFunction } from 'ol/events';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { featureFromOl } from '../../feature/shared/feature.utils';\r\nimport { QueryService } from './query.service';\r\nimport { layerIsQueryable, olLayerIsQueryable } from './query.utils';\r\n\r\n/**\r\n * This directive makes a map queryable with a click of with a drag box.\r\n * By default, all layers are queryable but this cna ben controlled at\r\n * the layer level.\r\n */\r\n@Directive({\r\n  selector: '[igoQuery]'\r\n})\r\nexport class QueryDirective implements AfterViewInit, OnDestroy {\r\n  /**\r\n   * Subscriptions to ongoing queries\r\n   */\r\n  private queries$$: Subscription[] = [];\r\n\r\n  /**\r\n   * Listener to the map click event\r\n   */\r\n  private mapClickListener: ListenerFunction;\r\n\r\n  /**\r\n   * OL drag box interaction\r\n   */\r\n  private olDragBoxInteraction: OlDragBoxInteraction;\r\n\r\n  /**\r\n   * Ol drag box \"end\" event key\r\n   */\r\n  private olDragBoxInteractionEndKey: string;\r\n\r\n  /**\r\n   * Whter to query features or not\r\n   */\r\n  @Input() queryFeatures: boolean = true;\r\n\r\n  /**\r\n   * Feature query hit tolerance\r\n   */\r\n  @Input() queryFeaturesHitTolerance: number = 0;\r\n\r\n  /**\r\n   * Feature query hit tolerance\r\n   */\r\n  @Input() queryFeaturesCondition: (olLayer: OlLayer) => true;\r\n\r\n  /**\r\n   * Whether all query should complete before emitting an event\r\n   */\r\n  @Input() waitForAllQueries: boolean = false;\r\n\r\n  /**\r\n   * Event emitted when a query (or all queries) complete\r\n   */\r\n  @Output() query = new EventEmitter<{\r\n    features: Feature[] | Feature[][];\r\n    event: OlMapBrowserPointerEvent;\r\n  }>();\r\n\r\n  /**\r\n   * IGO map\r\n   * @internal\r\n   */\r\n  get map(): IgoMap {\r\n    return (this.component.map as any) as IgoMap;\r\n  }\r\n\r\n  constructor(\r\n    @Self() private component: MapBrowserComponent,\r\n    private queryService: QueryService\r\n  ) {}\r\n\r\n  /**\r\n   * Start listening to click and drag box events\r\n   * @internal\r\n   */\r\n  ngAfterViewInit() {\r\n    this.listenToMapClick();\r\n  }\r\n\r\n  /**\r\n   * Stop listening to click and drag box events and cancel ongoind requests\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.cancelOngoingQueries();\r\n    this.unlistenToMapClick();\r\n  }\r\n\r\n  /**\r\n   * On map click, issue queries\r\n   */\r\n  private listenToMapClick() {\r\n    this.mapClickListener = this.map.ol.on(\r\n      'singleclick',\r\n      (event: OlMapBrowserPointerEvent) => this.onMapEvent(event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stop listenig for map clicks\r\n   */\r\n  private unlistenToMapClick() {\r\n    this.map.ol.un(this.mapClickListener.type, this.mapClickListener.listener);\r\n    this.mapClickListener = undefined;\r\n  }\r\n\r\n  /**\r\n   * Issue queries from a map event and emit events with the results\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private onMapEvent(event: OlMapBrowserPointerEvent) {\r\n    this.cancelOngoingQueries();\r\n    if (!this.queryService.queryEnabled) {\r\n      return;\r\n    }\r\n\r\n    const queries$ = [];\r\n    if (this.queryFeatures) {\r\n      queries$.push(this.doQueryFeatures(event));\r\n    }\r\n    console.log(queries$);\r\n\r\n    const resolution = this.map.ol.getView().getResolution();\r\n    const queryLayers = this.map.layers.filter(layerIsQueryable);\r\n    queries$.push(...this.queryService.query(queryLayers, {\r\n      coordinates: event.coordinate,\r\n      projection: this.map.projection,\r\n      resolution\r\n    }));\r\n\r\n    if (queries$.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.waitForAllQueries) {\r\n      this.queries$$.push(\r\n        zip(...queries$).subscribe((results: Feature[][]) => {\r\n          const features = [].concat(...results);\r\n          console.log(results);\r\n          console.log(features);\r\n          this.query.emit({ features, event });\r\n        })\r\n      );\r\n    } else {\r\n      this.queries$$ = queries$.map((query$: Observable<Feature[]>) => {\r\n        return query$.subscribe((features: Feature[]) => {\r\n          console.log(features);\r\n          this.query.emit({ features, event });\r\n        });\r\n      });\r\n    }\r\n    console.log(this.queries$$);\r\n    console.log(this.query);\r\n  }\r\n\r\n  /**\r\n   * Query features already present on the map\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private doQueryFeatures(event: OlMapBrowserPointerEvent): Observable<Feature[]> {\r\n\r\n    let feature;\r\n    let featuresTileCoverage;\r\n    const clickedFeatures = [];\r\n\r\n    this.map.ol.forEachFeatureAtPixel(\r\n      event.pixel,\r\n      (featureOL: OlFeature, layerOL: OlLayer) => {\r\n        if (featureOL) {\r\n          if (featureOL.get('features')) {\r\n            featureOL = featureOL.get('features')[0];\r\n            console.log(featureOL);\r\n            if (featureOL.length > 1) {\r\n              return;\r\n            }\r\n          }\r\n          feature = featureFromOl(featureOL, this.map.projection, layerOL);\r\n          clickedFeatures.push(feature);\r\n          console.log(layerOL);\r\n\r\n          if (feature.meta.typeSource === 'mvt') {\r\n            const sameDataTileFeatures = this.sameDataTilesFeature(feature, layerOL);\r\n            for (const sameDataTileFeature of sameDataTileFeatures) {\r\n              featuresTileCoverage = featureFromOl(sameDataTileFeature, this.map.projection);\r\n              clickedFeatures.push(featuresTileCoverage);\r\n            }\r\n          }\r\n\r\n        } else {\r\n          feature = featureFromOl(featureOL, this.map.projection, layerOL);\r\n          clickedFeatures.push(feature);\r\n        }\r\n        console.log(layerOL);\r\n        console.log(feature);\r\n      },\r\n    {\r\n      hitTolerance: this.queryFeaturesHitTolerance || 0,\r\n      layerFilter: this.queryFeaturesCondition ? this.queryFeaturesCondition : olLayerIsQueryable\r\n    });\r\n\r\n    const clickedFeature = clickedFeatures.shift();\r\n    clickedFeatures.shift();\r\n    clickedFeatures.push(clickedFeature);\r\n\r\n    console.log(clickedFeatures);\r\n    return of(clickedFeatures);\r\n  }\r\n\r\n  /**\r\n   * Cancel ongoing requests, if any\r\n   */\r\n  private cancelOngoingQueries() {\r\n    this.queries$$.forEach((sub: Subscription) => sub.unsubscribe());\r\n    this.queries$$ = [];\r\n  }\r\n\r\n  private getTiles(tileCacheEntries, olFeature, data): Feature[] {\r\n    let tile;\r\n    const list = [];\r\n    Object.keys(tileCacheEntries).forEach(tileCoord => {\r\n      tile = tileCacheEntries[tileCoord];\r\n      if (tile.features_ !== null) {\r\n        tile.features_.forEach(feature => {\r\n          if (feature.get(data) === olFeature.properties[data]) {\r\n            list.push(feature);\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return list;\r\n  }\r\n\r\n  private sameDataTilesFeature(feature: Feature, layer: any): Feature[] {\r\n    let sameDataTilesFeature;\r\n    let tileCacheEntries;\r\n    const data = layer.values_.sourceOptions.key;\r\n    tileCacheEntries = layer.values_.source.tileCache.entries_;\r\n    const tile = Object.keys(tileCacheEntries)[0];\r\n    tileCacheEntries = tileCacheEntries[tile].value_.sourceTiles_;\r\n    sameDataTilesFeature = this.getTiles(tileCacheEntries, feature, data);\r\n\r\n    console.log(sameDataTilesFeature);\r\n    return sameDataTilesFeature;\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport {\r\n  SearchSourceOptions,\r\n  TextSearchOptions,\r\n  ReverseSearchOptions\r\n} from './source.interfaces';\r\n\r\n/**\r\n * Base search source class\r\n */\r\nexport class SearchSource {\r\n  /**\r\n   * Search source ID\r\n   * @internal\r\n   */\r\n  static id = '';\r\n\r\n  /**\r\n   * Search source type\r\n   * @internal\r\n   */\r\n  static type = '';\r\n\r\n  /**\r\n   * Search source options\r\n   * @internal\r\n   */\r\n  protected options: SearchSourceOptions;\r\n\r\n  /**\r\n   * Get search source's id\r\n   * @returns Search source's id\r\n   */\r\n  getId(): string {\r\n    throw new Error('You have to implement the method \"getId\".');\r\n  }\r\n\r\n  /**\r\n   * Get search source's default options\r\n   * @returns Search source default options\r\n   */\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    throw new Error('You have to implement the method \"getDefaultOptions\".');\r\n  }\r\n\r\n  /**\r\n   * Search source's title\r\n   */\r\n  get title(): string {\r\n    return this.options.title;\r\n  }\r\n\r\n  /**\r\n   * Whether the search source is available\r\n   */\r\n  get available(): boolean {\r\n    return this.options.available !== false;\r\n  }\r\n\r\n  /**\r\n   * Whether the search source is enabled\r\n   */\r\n  set enabled(value: boolean) {\r\n    this.options.enabled = value;\r\n  }\r\n  get enabled(): boolean {\r\n    return this.available && this.options.enabled !== false;\r\n  }\r\n\r\n  /**\r\n   * Search url\r\n   */\r\n  get searchUrl(): string {\r\n    return this.options.searchUrl;\r\n  }\r\n\r\n  /**\r\n   * Search query params\r\n   */\r\n  get params(): { [key: string]: string } {\r\n    return this.options.params === undefined ? {} : this.options.params;\r\n  }\r\n\r\n  /**\r\n   * Search results display order\r\n   */\r\n  get displayOrder(): number {\r\n    return this.options.order === undefined ? 99 : this.options.order;\r\n  }\r\n\r\n  constructor(options: SearchSourceOptions) {\r\n    this.options = Object.assign({}, this.getDefaultOptions(), options);\r\n  }\r\n}\r\n\r\n/**\r\n * Search sources that allow searching by text implement this class\r\n */\r\nexport interface TextSearch {\r\n  /**\r\n   * Search by text\r\n   * @param term Text\r\n   * @returns Observable or search results\r\n   */\r\n  search(\r\n    term: string | undefined,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult[]>;\r\n}\r\n\r\n/**\r\n * Search sources that allow searching by coordinates implement this class\r\n */\r\nexport interface ReverseSearch {\r\n  /**\r\n   * Search by text\r\n   * @param lonLat Coordinates\r\n   * @param distance Optional: Search radius arounf lonLat\r\n   * @returns Observable or search results\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): Observable<SearchResult[]>;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { FEATURE } from '../../feature/shared/feature.enums';\r\nimport { SearchSource } from '../../search/shared/sources/source';\r\nimport { SearchSourceOptions } from '../../search/shared/sources/source.interfaces';\r\n/**\r\n * Map search source. For now it has no search capability. All it does\r\n * is act as a placeholder for the map query results' \"search source\".\r\n */\r\n@Injectable()\r\nexport class QuerySearchSource extends SearchSource {\r\n  static id = 'map';\r\n  static type = FEATURE;\r\n\r\n  constructor(@Inject('options') options: SearchSourceOptions) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return QuerySearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Carte'\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { EMPTY, Observable, of, concat } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { LanguageService, ConfigService } from '@igo2/core';\r\nimport {\r\n  CapabilitiesService,\r\n  WMSDataSourceOptions,\r\n  WMTSDataSourceOptions,\r\n  generateIdFromSourceOptions\r\n} from '../../datasource';\r\nimport { LayerOptions, ImageLayerOptions, TooltipContent, TooltipType } from '../../layer';\r\nimport { getResolutionFromScale } from '../../map';\r\n\r\nimport {\r\n  Catalog,\r\n  CatalogItem,\r\n  CatalogItemLayer,\r\n  CatalogItemGroup\r\n} from './catalog.interface';\r\nimport { CatalogItemType } from './catalog.enum';\r\nimport { QueryHtmlTarget, QueryFormat } from '../../query';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CatalogService {\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private config: ConfigService,\r\n    private languageService: LanguageService,\r\n    private capabilitiesService: CapabilitiesService\r\n  ) {}\r\n\r\n  loadCatalogs(): Observable<Catalog[]> {\r\n    const contextConfig = this.config.getConfig('context') || {};\r\n    const catalogConfig = this.config.getConfig('catalog') || {};\r\n    const apiUrl = catalogConfig.url || contextConfig.url;\r\n    const catalogsFromConfig = catalogConfig.sources || [];\r\n\r\n    if (apiUrl === undefined) {\r\n      return of(catalogsFromConfig);\r\n    }\r\n\r\n    const observables$ = [];\r\n\r\n    // Base layers catalog\r\n    if (catalogConfig.baseLayers) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant('igo.geo.catalog.baseLayers');\r\n      const baseLayersCatalog = {\r\n        id: 'catalog.baselayers',\r\n        title,\r\n        url: `${apiUrl}/baselayers`,\r\n        type: 'baselayers'\r\n      };\r\n      observables$.push(of(baseLayersCatalog));\r\n    }\r\n\r\n    // Catalogs from API\r\n    const catalogsFromApi$ = this.http\r\n      .get<Catalog[]>(`${apiUrl}/catalogs`)\r\n      .pipe(\r\n        catchError((response: HttpErrorResponse) => EMPTY)\r\n      );\r\n    observables$.push(catalogsFromApi$);\r\n\r\n    // Catalogs from config\r\n    if (catalogsFromConfig.length > 0) {\r\n      observables$.push(of(catalogsFromConfig));\r\n    }\r\n\r\n    return concat(...observables$) as Observable<Catalog[]>;\r\n  }\r\n\r\n  loadCatalogItems(catalog: Catalog): Observable<CatalogItem[]> {\r\n    if (catalog.type === 'baselayers') {\r\n      return this.loadCatalogBaseLayerItems(catalog);\r\n    } else if (catalog.type === 'wmts') {\r\n      return this.loadCatalogWMTSLayerItems(catalog);\r\n    }\r\n    return this.loadCatalogWMSLayerItems(catalog);\r\n  }\r\n\r\n  private loadCatalogBaseLayerItems(catalog: Catalog): Observable<CatalogItemGroup[]> {\r\n    // TODO: I'm not sure this works\r\n    return this.getCatalogBaseLayersOptions(catalog)\r\n      .pipe(\r\n        map((layersOptions: LayerOptions[]) => {\r\n          const items = layersOptions.map((layerOptions: LayerOptions) => {\r\n            return {\r\n              id: generateIdFromSourceOptions(layerOptions.sourceOptions),\r\n              title: layerOptions.title,\r\n              type: CatalogItemType.Layer,\r\n              options: layerOptions\r\n            } as CatalogItemLayer;\r\n          });\r\n          return [{\r\n            id: 'catalog.group.baselayers',\r\n            type: CatalogItemType.Group,\r\n            title: catalog.title,\r\n            items\r\n          }];\r\n        })\r\n      );\r\n  }\r\n\r\n  private getCatalogBaseLayersOptions(catalog: Catalog): Observable<LayerOptions[]> {\r\n    return this.http.get<LayerOptions[]>(catalog.url);\r\n  }\r\n\r\n  private loadCatalogWMSLayerItems(catalog: Catalog): Observable<CatalogItem[]> {\r\n    return this.getCatalogWMSCapabilities(catalog)\r\n      .pipe(\r\n        map((capabilities: any) => {\r\n          const items = [];\r\n          this.includeRecursiveItems(catalog, capabilities.Capability.Layer, items);\r\n          return items;\r\n        })\r\n      );\r\n  }\r\n\r\n  private loadCatalogWMTSLayerItems(catalog: Catalog): Observable<CatalogItem[]> {\r\n    return this.getCatalogWMTSCapabilities(catalog)\r\n      .pipe(\r\n        map((capabilities: any) => this.getWMTSItems(catalog, capabilities))\r\n      );\r\n  }\r\n\r\n  private getCatalogWMSCapabilities(catalog: Catalog): Observable<any> {\r\n    return this.capabilitiesService.getCapabilities('wms', catalog.url, catalog.version);\r\n  }\r\n\r\n  private getCatalogWMTSCapabilities(catalog: Catalog): Observable<any> {\r\n    return this.capabilitiesService.getCapabilities('wmts', catalog.url, catalog.version);\r\n  }\r\n\r\n  private includeRecursiveItems(catalog: Catalog, layerList: any, items: CatalogItem[]) {\r\n    // Dig all levels until last level (layer object are not defined on last level)\r\n    const regexes = (catalog.regFilters || []).map((pattern: string) => new RegExp(pattern));\r\n\r\n    for (const group of layerList.Layer) {\r\n      if (group.Layer !== undefined) {\r\n        // recursive, check next level\r\n        this.includeRecursiveItems(catalog, group, items);\r\n        continue;\r\n      }\r\n      const catalogTooltipType = this.retrieveTooltipType(catalog);\r\n      const layersQueryFormat = this.findCatalogInfoFormat(catalog);\r\n      // TODO: Slice that into multiple methods\r\n      // Define object of group layer\r\n      const groupItem = {\r\n        id: `catalog.group.${layerList.Name}`,\r\n        type: CatalogItemType.Group,\r\n        title: layerList.Title,\r\n        items: layerList.Layer.reduce((layers: CatalogItemLayer<ImageLayerOptions>[], layer: any) => {\r\n          const configuredQueryFormat = this.retriveLayerInfoFormat(layer.Name, layersQueryFormat);\r\n\r\n          if (this.testLayerRegexes(layer.Name, regexes) === false) {\r\n            return layers;\r\n          }\r\n\r\n          const metadata = layer.DataURL ? layer.DataURL[0] : undefined;\r\n          const abstract = layer.Abstract ? layer.Abstract : undefined;\r\n          const keywordList = layer.KeywordList ? layer.KeywordList : undefined;\r\n          const timeFilter = this.capabilitiesService.getTimeFilter(layer);\r\n          const timeFilterable = timeFilter && Object.keys(timeFilter).length > 0 ? true : false;\r\n\r\n          const sourceOptions = {\r\n            type: 'wms',\r\n            url: catalog.url,\r\n            params: {\r\n              layers: layer.Name,\r\n              feature_count:  catalog.count\r\n            },\r\n            timeFilter: { ...timeFilter, ...catalog.timeFilter },\r\n            timeFilterable: timeFilterable ? true : false,\r\n            queryable: layer.queryable,\r\n            queryFormat: configuredQueryFormat,\r\n            queryHtmlTarget: catalog.queryHtmlTarget || QueryHtmlTarget.IFRAME\r\n          } as WMSDataSourceOptions;\r\n\r\n          layers.push({\r\n            id: generateIdFromSourceOptions(sourceOptions),\r\n            type: CatalogItemType.Layer,\r\n            title: layer.Title,\r\n            options: {\r\n              title: layer.Title,\r\n              maxResolution:\r\n                getResolutionFromScale(layer.MaxScaleDenominator) || Infinity,\r\n              minResolution:\r\n                getResolutionFromScale(layer.MinScaleDenominator) || 0,\r\n              metadata: {\r\n                url: metadata ? metadata.OnlineResource : undefined,\r\n                extern: metadata ? true : undefined,\r\n                abstract,\r\n                keywordList\r\n              },\r\n              tooltip: { type: catalogTooltipType } as TooltipContent,\r\n              sourceOptions\r\n            }\r\n          });\r\n          return layers;\r\n\r\n        }, [])\r\n\r\n      };\r\n\r\n      if (groupItem.items.length !== 0) {\r\n        items.push(groupItem);\r\n      }\r\n\r\n      // Break the group (don't add a group of layer for each of their layer!)\r\n      break;\r\n    }\r\n  }\r\n\r\n  private getWMTSItems(catalog: Catalog, capabilities: {[key: string]: any}): CatalogItemLayer[] {\r\n    const layers = capabilities.Contents.Layer;\r\n    const regexes = (catalog.regFilters || []).map((pattern: string) => new RegExp(pattern));\r\n\r\n    return layers.map((layer: any) => {\r\n      if (this.testLayerRegexes(layer.Identifier, regexes) === false) {\r\n        return undefined;\r\n      }\r\n\r\n      const sourceOptions = {\r\n        type: 'wmts',\r\n        url: catalog.url,\r\n        layer: layer.Identifier,\r\n        matrixSet: catalog.matrixSet,\r\n        optionsFromCapabilities: true,\r\n        requestEncoding: catalog.requestEncoding || 'KVP',\r\n        style: 'default',\r\n        params: {\r\n          version: '1.0.0'\r\n        }\r\n      } as WMTSDataSourceOptions;\r\n\r\n      return {\r\n        id: generateIdFromSourceOptions(sourceOptions),\r\n        type: CatalogItemType.Layer,\r\n        title: layer.Title,\r\n        options: {\r\n          title: layer.Title,\r\n          sourceOptions\r\n        }\r\n      };\r\n    })\r\n    .filter((item: CatalogItemLayer | undefined) => item !== undefined);\r\n  }\r\n\r\n  private testLayerRegexes(layerName, regexes): boolean {\r\n    if (regexes.length === 0) {\r\n      return true;\r\n    }\r\n    return regexes.find((regex: RegExp) => regex.test(layerName)) !== undefined;\r\n  }\r\n\r\n  private retriveLayerInfoFormat(\r\n    layerNameFromCatalog: string,\r\n    layersQueryFormat: { layer: string, queryFormat: QueryFormat }[]\r\n  ): QueryFormat {\r\n\r\n    const currentLayerInfoFormat = layersQueryFormat.find(f => f.layer === layerNameFromCatalog);\r\n    const baseInfoFormat = layersQueryFormat.find(f => f.layer === '*');\r\n    let queryFormat: QueryFormat;\r\n    if (currentLayerInfoFormat) {\r\n      queryFormat = currentLayerInfoFormat.queryFormat;\r\n    } else if (baseInfoFormat) {\r\n      queryFormat = baseInfoFormat.queryFormat;\r\n    }\r\n    return queryFormat;\r\n  }\r\n\r\n  private retrieveTooltipType(catalog: Catalog): TooltipType {\r\n    if (!catalog.tooltipType) {\r\n      return TooltipType.TITLE;\r\n    }\r\n    return catalog.tooltipType;\r\n  }\r\n\r\n  private findCatalogInfoFormat(catalog: Catalog): {layer: string, queryFormat: QueryFormat}[] {\r\n    const layersQueryFormat: {layer: string, queryFormat: QueryFormat}[] = [];\r\n    if (!catalog.queryFormat) {\r\n      return layersQueryFormat;\r\n    }\r\n    Object.keys(catalog.queryFormat).forEach(configuredInfoFormat => {\r\n      if (catalog.queryFormat[configuredInfoFormat] instanceof Array) {\r\n        catalog.queryFormat[configuredInfoFormat].forEach(layerName => {\r\n          if (!layersQueryFormat.find(specific => specific.layer === layerName)) {\r\n            layersQueryFormat.push({ layer: layerName, queryFormat: configuredInfoFormat as QueryFormat });\r\n          }\r\n        });\r\n      } else {\r\n        if (!layersQueryFormat.find(specific => specific.layer === catalog.queryFormat[configuredInfoFormat])) {\r\n          layersQueryFormat.push({ layer: catalog.queryFormat[configuredInfoFormat], queryFormat: configuredInfoFormat as QueryFormat });\r\n        }\r\n      }\r\n    });\r\n    return layersQueryFormat;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { zip } from 'rxjs';\r\n\r\nimport { EntityStore, EntityStoreWatcher } from '@igo2/common';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { LayerService } from '../../layer/shared/layer.service';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport {\r\n  Catalog,\r\n  CatalogItem,\r\n  CatalogItemLayer,\r\n  CatalogItemGroup,\r\n  CatalogItemState,\r\n  CatalogItemType\r\n} from '../shared';\r\n\r\n/**\r\n * Component to browse a catalog's groups and layers and display them on a map.\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-browser',\r\n  templateUrl: './catalog-browser.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogBrowserComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Catalog items store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<CatalogItem>;\r\n\r\n  /**\r\n   * Catalog\r\n   */\r\n  @Input() catalog: Catalog;\r\n\r\n  /**\r\n   * Store holding the catalog's items\r\n   */\r\n  @Input() store: EntityStore<CatalogItem, CatalogItemState>;\r\n\r\n  /**\r\n   * Map to add the catalog items to\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  constructor(\r\n    private layerService: LayerService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    const currentItems = this.map.layers.map((layer: Layer) => {\r\n      return {\r\n        id: layer.id,\r\n        title: layer.title,\r\n        type: CatalogItemType.Layer\r\n      };\r\n    });\r\n    this.store.state.updateMany(currentItems, { added: true }, true);\r\n    if (this.catalog && this.catalog.sortDirection !== undefined) {\r\n      this.store.view.sort({\r\n        direction: this.catalog.sortDirection,\r\n        valueAccessor: (item: CatalogItem) => item.title\r\n      });\r\n    }\r\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isGroup(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Group;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isLayer(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Layer;\r\n  }\r\n\r\n  /**\r\n   * When a layer is added or removed, add or remove it from the map\r\n   * @internal\r\n   * @param event Layer added event\r\n   */\r\n  onLayerAddedChange(event: { added: boolean; layer: CatalogItemLayer }) {\r\n    const layer = event.layer;\r\n    this.store.state.update(layer, { added: event.added }, false);\r\n    event.added ? this.addLayerToMap(layer) : this.removeLayerFromMap(layer);\r\n  }\r\n\r\n  /**\r\n   * When a froup is added or removed, add or remove it from the map\r\n   * @internal\r\n   * @param event Group added event\r\n   */\r\n  onGroupAddedChange(event: { added: boolean; group: CatalogItemGroup }) {\r\n    const group = event.group;\r\n    this.store.state.update(group, { added: event.added }, false);\r\n    event.added ? this.addGroupToMap(group) : this.removeGroupFromMap(group);\r\n  }\r\n\r\n  /**\r\n   * Add layer to map\r\n   * @param layer Catalog layer\r\n   */\r\n  private addLayerToMap(layer: CatalogItemLayer) {\r\n    this.addLayersToMap([layer]);\r\n  }\r\n\r\n  /**\r\n   * Remove layer from map\r\n   * @param layer Catalog layer\r\n   */\r\n  private removeLayerFromMap(layer: CatalogItemLayer) {\r\n    this.removeLayersFromMap([layer]);\r\n  }\r\n\r\n  /**\r\n   * Add multiple layers to map\r\n   * @param layers Catalog layers\r\n   */\r\n  private addLayersToMap(layers: CatalogItemLayer[]) {\r\n    const layers$ = layers.map((layer: CatalogItemLayer) => {\r\n      return this.layerService.createAsyncLayer(layer.options);\r\n    });\r\n\r\n    zip(...layers$).subscribe((oLayers: Layer[]) => {\r\n      this.store.state.updateMany(layers, { added: true });\r\n      this.map.addLayers(oLayers);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove multiple layers from map\r\n   * @param layers Catalog layers\r\n   */\r\n  private removeLayersFromMap(layers: CatalogItemLayer[]) {\r\n    layers.forEach((layer: CatalogItemLayer) => {\r\n      this.store.state.update(layer, { added: false });\r\n      const oLayer = this.map.getLayerById(layer.id);\r\n      if (oLayer !== undefined) {\r\n        this.map.removeLayer(oLayer);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add all the layers of a group to map\r\n   * @param group Catalog group\r\n   */\r\n  private addGroupToMap(group: CatalogItemGroup) {\r\n    const layers = group.items.filter((item: CatalogItem) => {\r\n      const added = this.store.state.get(item).added || false;\r\n      return this.isLayer(item) && added === false;\r\n    });\r\n    this.addLayersToMap(layers as CatalogItemLayer[]);\r\n  }\r\n\r\n  /**\r\n   * Remove all the layers of a groufrom map\r\n   * @param group Catalog group\r\n   */\r\n  private removeGroupFromMap(group: CatalogItemGroup) {\r\n    const layers = group.items.filter((item: CatalogItem) => {\r\n      const added = this.store.state.get(item).added || false;\r\n      return this.isLayer(item) && added === true;\r\n    });\r\n    this.removeLayersFromMap(layers as CatalogItemLayer[]);\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { getEntityTitle, getEntityIcon } from '@igo2/common';\r\n\r\nimport { CatalogItemLayer } from '../shared';\r\n\r\n/**\r\n * Catalog browser layer item\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-browser-layer',\r\n  templateUrl: './catalog-browser-layer.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogBrowserLayerComponent {\r\n\r\n  /**\r\n   * Catalog layer\r\n   */\r\n  @Input() layer: CatalogItemLayer;\r\n\r\n  /**\r\n   * Whether the layer is already added to the map\r\n   */\r\n  @Input() added: boolean;\r\n\r\n  /**\r\n   * Event emitted when the add/remove button is clicked\r\n   */\r\n  @Output() addedChange = new EventEmitter<{\r\n    added: boolean;\r\n    layer: CatalogItemLayer;\r\n  }>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string { return getEntityTitle(this.layer); }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get icon(): string { return getEntityIcon(this.layer) || 'layers'; }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * On toggle button click, emit the added change event\r\n   * @internal\r\n   */\r\n  onToggleClick() {\r\n    this.added ? this.remove() : this.add();\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = true\r\n   */\r\n  private add() {\r\n    this.added = true;\r\n    this.addedChange.emit({added: true, layer: this.layer});\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = false\r\n   */\r\n  private remove() {\r\n    this.added = false;\r\n    this.addedChange.emit({added: false, layer: this.layer});\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { EntityStateManager, EntityStore } from '@igo2/common';\r\n\r\nimport {\r\n  Catalog,\r\n  CatalogItem,\r\n  CatalogItemGroup,\r\n  CatalogItemLayer,\r\n  CatalogItemState,\r\n  CatalogItemType\r\n} from '../shared';\r\n\r\n/**\r\n * Catalog browser group item\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-browser-group',\r\n  templateUrl: './catalog-browser-group.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogBrowserGroupComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Group's items store\r\n   * @internal\r\n   */\r\n  store = new EntityStore<CatalogItem, CatalogItemState>([]);\r\n\r\n  /**\r\n   * Whether all the layers of the group are added\r\n   * @internal\r\n   */\r\n  added$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * Catalog\r\n   */\r\n  @Input() catalog: Catalog;\r\n\r\n  /**\r\n   * Catalog group\r\n   */\r\n  @Input() group: CatalogItemGroup;\r\n\r\n  /**\r\n   * Parent catalog's items store state. Groups share a unique\r\n   * EntityState that tracks the group and it's layers state (whether they are added or not).\r\n   * Sharing a unique state would also allow us to expand this component to allow\r\n   * the selection of a layer while unselecting any layer already selected in another group.\r\n   * This could be useful to display some layer info before adding it, for example.\r\n   */\r\n  @Input() state: EntityStateManager<CatalogItem, CatalogItemState>;\r\n\r\n  /**\r\n   * Event emitted when the add/remove button of the group is clicked\r\n   */\r\n  @Output() addedChange = new EventEmitter<{\r\n    added: boolean;\r\n    group: CatalogItemGroup;\r\n  }>();\r\n\r\n  /**\r\n   * Event emitted when the add/remove button of a layer is clicked\r\n   */\r\n  @Output() layerAddedChange = new EventEmitter<{\r\n    added: boolean;\r\n    layer: CatalogItemLayer;\r\n  }>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string {\r\n    return this.group.title;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.store.load(this.group.items);\r\n    this.evaluateAdded();\r\n    if (this.catalog && this.catalog.sortDirection !== undefined) {\r\n      this.store.view.sort({\r\n        direction: this.catalog.sortDirection,\r\n        valueAccessor: (item: CatalogItem) => item.title\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.store.destroy();\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isGroup(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Group;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isLayer(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Layer;\r\n  }\r\n\r\n  /**\r\n   * On toggle button click, emit the added change event\r\n   * @internal\r\n   */\r\n  onToggleClick() {\r\n    this.added$.value ? this.remove() : this.add();\r\n  }\r\n\r\n  /**\r\n   * When a layer is added or removed, evaluate if all the layers of the group\r\n   * are now added or removed. If so, consider that the group itself is added\r\n   * or removed.\r\n   * @internal\r\n   * @param event Layer added change event\r\n   */\r\n  onLayerAddedChange(event: { added: boolean; layer: CatalogItemLayer }) {\r\n    this.layerAddedChange.emit(event);\r\n    this.tryToggleGroup(event);\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = true\r\n   */\r\n  private add() {\r\n    this.added$.next(true);\r\n    this.addedChange.emit({\r\n      added: true,\r\n      group: this.group\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = true\r\n   */\r\n  private remove() {\r\n    this.added$.next(false);\r\n    this.addedChange.emit({\r\n      added: false,\r\n      group: this.group\r\n    });\r\n  }\r\n\r\n  /**\r\n   * If all the layers of the group added or removed, add or remove the group itself.\r\n   * @param event The last layer added change event to occur\r\n   */\r\n  private tryToggleGroup(event: { added: boolean; layer: CatalogItemLayer }) {\r\n    const added = event.added;\r\n    const layer = event.layer;\r\n\r\n    const layersAdded = this.store.view\r\n      .all()\r\n      .filter((item: CatalogItem) => item.id !== layer.id)\r\n      .map((item: CatalogItem) => this.state.get(item).added || false);\r\n\r\n    if (layersAdded.every(value => value === added)) {\r\n      added ? this.add() : this.remove();\r\n    } else if (this.added$.value === true) {\r\n      this.added$.next(false);\r\n    }\r\n  }\r\n\r\n  private evaluateAdded() {\r\n    const added = this.store.all().every((item: CatalogItem) => {\r\n      return (this.state.get(item).added || false) === true;\r\n    });\r\n    this.added$.next(added);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatListModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoCollapsibleModule,\r\n  IgoListModule\r\n} from '@igo2/common';\r\n\r\nimport { CatalogBrowserComponent } from './catalog-browser.component';\r\nimport { CatalogBrowserLayerComponent } from './catalog-browser-layer.component';\r\nimport { CatalogBrowserGroupComponent } from './catalog-browser-group.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule,\r\n    IgoListModule,\r\n    IgoCollapsibleModule\r\n  ],\r\n  exports: [\r\n    CatalogBrowserComponent\r\n  ],\r\n  declarations: [\r\n    CatalogBrowserComponent,\r\n    CatalogBrowserGroupComponent,\r\n    CatalogBrowserLayerComponent\r\n  ]\r\n})\r\nexport class IgoCatalogBrowserModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { EntityStore } from '@igo2/common';\r\nimport { IgoMap } from '../../map';\r\nimport { Catalog } from '../shared/catalog.interface';\r\n\r\n/**\r\n * Component to browse a list of available catalogs\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-library',\r\n  templateUrl: './catalog-library.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogLibaryComponent implements OnInit {\r\n\r\n  /**\r\n   * Store holding the catalogs\r\n   */\r\n  @Input() store: EntityStore<Catalog>;\r\n\r\n  /**\r\n   * Map to add the catalog items to\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * Event emitted a catalog is selected or unselected\r\n   */\r\n  @Output() catalogSelectChange = new EventEmitter<{\r\n    selected: boolean;\r\n    catalog: Catalog;\r\n  }>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.store.state.clear();\r\n  }\r\n\r\n  /**\r\n   * When a catalog is selected, update it's state in the store\r\n   * and emit the catalog select change event\r\n   * @internal\r\n   */\r\n  onCatalogSelect(catalog: Catalog) {\r\n    this.store.state.update(catalog, {\r\n      selected: true,\r\n      focused: true\r\n    }, true);\r\n    this.catalogSelectChange.emit({selected: true, catalog});\r\n  }\r\n\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { getEntityTitle, getEntityIcon } from '@igo2/common';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { Catalog } from '../shared/catalog.interface';\r\n\r\n/**\r\n * Catalog library item\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-library-item',\r\n  templateUrl: './catalog-library-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogLibaryItemComponent {\r\n\r\n  /**\r\n   * Catalog\r\n   */\r\n  @Input() catalog: Catalog;\r\n\r\n  /**\r\n   * Map to add the catalog items to\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string { return getEntityTitle(this.catalog); }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get icon(): string { return getEntityIcon(this.catalog) || 'image-multiple'; }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatListModule\r\n} from '@angular/material';\r\n\r\nimport { IgoListModule } from '@igo2/common';\r\n\r\nimport { CatalogLibaryComponent, } from './catalog-library.component';\r\nimport { CatalogLibaryItemComponent } from './catalog-library-item.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    IgoListModule\r\n  ],\r\n  exports: [\r\n    CatalogLibaryComponent\r\n  ],\r\n  declarations: [\r\n    CatalogLibaryComponent,\r\n    CatalogLibaryItemComponent\r\n  ]\r\n})\r\nexport class IgoCatalogLibraryModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoListModule, IgoCollapsibleModule } from '@igo2/common';\r\n\r\nimport { IgoCatalogBrowserModule } from './catalog-browser/catalog-browser.module';\r\nimport { IgoCatalogLibraryModule } from './catalog-library/catalog-library.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    IgoListModule,\r\n    IgoCollapsibleModule\r\n  ],\r\n  exports: [\r\n    IgoCatalogBrowserModule,\r\n    IgoCatalogLibraryModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoCatalogModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [],\r\n  declarations: []\r\n})\r\nexport class IgoDataSourceModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoDataSourceModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { DataSource } from '../../datasource/shared/datasources/datasource';\r\n\r\nimport { OgcFilterableDataSource } from './ogc-filter.interface';\r\nimport { TimeFilterableDataSource } from './time-filter.interface';\r\n\r\n@Pipe({\r\n  name: 'filterableDataSource'\r\n})\r\nexport class FilterableDataSourcePipe implements PipeTransform {\r\n  transform(value: Layer[], arg: string): Layer[] {\r\n    let layers;\r\n\r\n    if (arg === 'time') {\r\n      layers = value.filter((layer: Layer) => {\r\n        const datasource = layer.dataSource as TimeFilterableDataSource;\r\n        return (\r\n          this.isTimeFilterable(datasource) &&\r\n          datasource.options.timeFilter !== undefined &&\r\n          Object.keys(datasource.options.timeFilter).length\r\n        );\r\n      });\r\n    }\r\n    if (arg === 'ogc') {\r\n      layers = value.filter((layer: Layer) => {\r\n        const datasource = layer.dataSource as OgcFilterableDataSource;\r\n        return this.isOgcFilterable(datasource);\r\n      });\r\n    }\r\n    return layers;\r\n  }\r\n\r\n  private isTimeFilterable(dataSource: TimeFilterableDataSource) {\r\n    if (dataSource.options.type !== 'wms') {\r\n      return false;\r\n    }\r\n    return dataSource.options.timeFilterable;\r\n  }\r\n\r\n  private isOgcFilterable(dataSource: OgcFilterableDataSource) {\r\n    if (\r\n      dataSource.options.ogcFilters &&\r\n      dataSource.options.ogcFilters.enabled\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { WMSDataSource } from '../../datasource/shared/datasources/wms-datasource';\r\nimport { TileArcGISRestDataSource } from '../../datasource/shared/datasources/tilearcgisrest-datasource';\r\n\r\n@Injectable()\r\nexport class TimeFilterService {\r\n  constructor() {}\r\n\r\n  filterByDate(\r\n    datasource: WMSDataSource | TileArcGISRestDataSource,\r\n    date: Date | [Date, Date]\r\n  ) {\r\n    let time;\r\n    let newdateform;\r\n    let newdateformStart;\r\n    let newdateformEnd;\r\n\r\n    if (Array.isArray(date)) {\r\n      const dates = [];\r\n      if (date[0]) {\r\n        newdateformStart = this.reformatDateTime(date[0]);\r\n        dates.push(date[0]);\r\n      }\r\n      if (date[1]) {\r\n        newdateformEnd = this.reformatDateTime(date[1]);\r\n        dates.push(date[1]);\r\n      }\r\n      if (dates.length === 2 && newdateformStart !== newdateformEnd) {\r\n        if (datasource instanceof TileArcGISRestDataSource) {\r\n          time = newdateformStart + ',' + newdateformEnd;\r\n        } else {\r\n          time = newdateformStart + '/' + newdateformEnd;\r\n        }\r\n      }\r\n      if (newdateformStart === newdateformEnd) {\r\n        time = newdateformStart;\r\n      }\r\n    } else if (date) {\r\n      newdateform = this.reformatDateTime(date);\r\n      time = newdateform;\r\n    }\r\n\r\n    const params = { time };\r\n    datasource.ol.updateParams(params);\r\n  }\r\n\r\n  filterByYear(\r\n    datasource: WMSDataSource | TileArcGISRestDataSource,\r\n    year: string | [string, string]\r\n  ) {\r\n    let time;\r\n    let newdateformStart;\r\n    let newdateformEnd;\r\n\r\n    if (Array.isArray(year)) {\r\n      const years = [];\r\n      if (year[0]) {\r\n        newdateformStart = year[0];\r\n        years.push(year[0]);\r\n      }\r\n      if (year[1]) {\r\n        newdateformEnd = year[1];\r\n        years.push(year[1]);\r\n      }\r\n      if (years.length === 2 && newdateformStart !== newdateformEnd) {\r\n        if (datasource instanceof TileArcGISRestDataSource) {\r\n          time = newdateformStart + ',' + newdateformEnd;\r\n        } else {\r\n          time = newdateformStart + '/' + newdateformEnd;\r\n        }\r\n      }\r\n      if (newdateformStart === newdateformEnd) {\r\n        time = newdateformStart;\r\n      }\r\n    } else if (year) {\r\n      time = year;\r\n    }\r\n\r\n    const params = { time };\r\n    datasource.ol.updateParams(params);\r\n  }\r\n\r\n  private reformatDateTime(value) {\r\n    const year = value.getFullYear();\r\n    let month = value.getMonth() + 1;\r\n    let day = value.getUTCDate();\r\n    let hour = value.getUTCHours();\r\n    let minute = value.getUTCMinutes();\r\n\r\n    if (Number(month) < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    if (Number(day) < 10) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (Number(hour) < 10) {\r\n      hour = '0' + hour;\r\n    }\r\n\r\n    if (Number(minute) < 10) {\r\n      minute = '0' + minute;\r\n    }\r\n\r\n    return year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':00Z';\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { WMSDataSource } from '../../datasource/shared/datasources/wms-datasource';\r\nimport { WFSDataSourceOptions } from '../../datasource/shared/datasources/wfs-datasource.interface';\r\nimport { OgcFilterWriter } from './ogc-filter';\r\nimport { OgcFilterableDataSource } from './ogc-filter.interface';\r\n\r\n@Injectable()\r\nexport class OGCFilterService {\r\n  constructor() {}\r\n\r\n  public filterByOgc(wmsDatasource: WMSDataSource, filterString: string) {\r\n    const appliedFilter = wmsDatasource.formatProcessedOgcFilter(filterString, wmsDatasource.options.params.layers);\r\n    const wmsFilterValue = appliedFilter.length > 0\r\n        ? appliedFilter.replace('filter=', '')\r\n        : undefined;\r\n    wmsDatasource.ol.updateParams({ filter: wmsFilterValue });\r\n  }\r\n\r\n  public setOgcWFSFiltersOptions(wfsDatasource: OgcFilterableDataSource) {\r\n    const options: any = wfsDatasource.options;\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n\r\n    if (options.ogcFilters.enabled && options.ogcFilters.filters) {\r\n      options.ogcFilters.filters = ogcFilterWriter.checkIgoFiltersProperties(\r\n        options.ogcFilters.filters,\r\n        options.paramsWFS.fieldNameGeometry,\r\n        true\r\n      );\r\n      if (!options.ogcFilters.interfaceOgcFilters) {\r\n        options.ogcFilters.interfaceOgcFilters = ogcFilterWriter.defineInterfaceFilterSequence(\r\n          options.ogcFilters.filters,\r\n          options.paramsWFS.fieldNameGeometry\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public setOgcWMSFiltersOptions(wmsDatasource: OgcFilterableDataSource) {\r\n    const options: any = wmsDatasource.options;\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n\r\n    if (options.ogcFilters.enabled && options.ogcFilters.filters) {\r\n      options.ogcFilters.filters = ogcFilterWriter.checkIgoFiltersProperties(\r\n        options.ogcFilters.filters,\r\n        options.fieldNameGeometry,\r\n        true\r\n      );\r\n      if (!options.ogcFilters.interfaceOgcFilters) {\r\n        options.ogcFilters.interfaceOgcFilters = ogcFilterWriter.defineInterfaceFilterSequence(\r\n          // With some wms server, this param must be set to make spatials call.\r\n          options.ogcFilters.filters,\r\n          options.fieldNameGeometry\r\n        );\r\n      }\r\n      this.filterByOgc(\r\n        wmsDatasource as WMSDataSource,\r\n        ogcFilterWriter.buildFilter(options.ogcFilters.filters)\r\n      );\r\n      options.filtered = true;\r\n    } else {\r\n      options.ogcFilters.filters = undefined;\r\n      options.ogcFilters.interfaceOgcFilters = [];\r\n      options.filtered = false;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport olProjection from 'ol/proj/Projection';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { Layer } from '../../layer/shared';\r\nimport { OgcFilterWriter } from '../../filter/shared';\r\n\r\nimport { DataSourceOptions } from '../../datasource/shared/datasources/datasource.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n  private ogcFilterWriter: OgcFilterWriter;\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.ogcFilterWriter = new OgcFilterWriter();\r\n  }\r\n\r\n  open(layer: Layer) {\r\n    const translate = this.languageService.translate;\r\n    const title = translate.instant('igo.geo.download.title');\r\n    this.messageService.success(\r\n      translate.instant('igo.geo.download.start'),\r\n      title\r\n    );\r\n\r\n    const DSOptions: DataSourceOptions = layer.dataSource.options;\r\n    if (Object.keys(DSOptions.download).length > 0) {\r\n      if (\r\n        DSOptions.download.dynamicUrl &&\r\n        DSOptions.download.url === undefined\r\n      ) {\r\n        let wfsOptions;\r\n        if (\r\n          (layer.dataSource.options as any).paramsWFS &&\r\n          Object.keys((layer.dataSource.options as any).paramsWFS).length > 0\r\n        ) {\r\n          wfsOptions = (layer.dataSource.options as any).paramsWFS;\r\n        } else {\r\n          wfsOptions = (layer.dataSource.options as any).params;\r\n        }\r\n\r\n        const outputFormatDownload =\r\n          wfsOptions.outputFormatDownload === undefined\r\n            ? 'outputformat=' + wfsOptions.outputFormat\r\n            : 'outputformat=' + wfsOptions.outputFormatDownload;\r\n\r\n        const baseurl = DSOptions.download.dynamicUrl\r\n          .replace(/&?outputformat=[^&]*/gi, '')\r\n          .replace(/&?filter=[^&]*/gi, '')\r\n          .replace(/&?bbox=[^&]*/gi, '');\r\n\r\n        const rebuildFilter = this.ogcFilterWriter.buildFilter(\r\n          (layer.dataSource.options as any).ogcFilters.filters,\r\n          layer.map.getExtent(),\r\n          new olProjection({ code: layer.map.projection }),\r\n          wfsOptions.fieldNameGeometry\r\n        );\r\n        window.open(\r\n          `${baseurl}&${rebuildFilter}&${outputFormatDownload}`,\r\n          '_blank'\r\n        );\r\n      } else if (DSOptions.download) {\r\n        window.open(DSOptions.download.url, '_blank');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\nimport { DownloadDataSourceOptions } from '../shared/download.interface';\r\nimport { DownloadService } from '../shared/download.service';\r\n\r\n@Component({\r\n  selector: 'igo-download-button',\r\n  templateUrl: './download-button.component.html',\r\n  styleUrls: ['./download-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DownloadButtonComponent {\r\n  @Input()\r\n  get layer(): Layer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: Layer) {\r\n    this._layer = value;\r\n  }\r\n  private _layer: Layer;\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  constructor(private downloadService: DownloadService) {}\r\n\r\n  openDownload(layer: Layer) {\r\n    this.downloadService.open(layer);\r\n  }\r\n\r\n  get options(): DownloadDataSourceOptions {\r\n    if (!this.layer) {\r\n      return;\r\n    }\r\n    return this.layer.dataSource.options;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { DownloadButtonComponent } from './download-button/download-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [DownloadButtonComponent],\r\n  declarations: [DownloadButtonComponent]\r\n})\r\nexport class IgoDownloadModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoDownloadModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nimport { getEntityTitle, getEntityIcon } from '@igo2/common';\r\n\r\nimport { Feature } from '../shared';\r\n\r\nimport { MapService } from '../../map/shared/map.service';\r\n\r\n@Component({\r\n  selector: 'igo-feature-details',\r\n  templateUrl: './feature-details.component.html',\r\n  styleUrls: ['./feature-details.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeatureDetailsComponent {\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _feature: Feature;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string {\r\n    return getEntityTitle(this.feature);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get icon(): string {\r\n    return getEntityIcon(this.feature) || 'link';\r\n  }\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private sanitizer: DomSanitizer,\r\n    private mapService: MapService\r\n  ) {}\r\n\r\n  htmlSanitizer(value): SafeResourceUrl {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n  }\r\n\r\n  isObject(value) {\r\n    return typeof value === 'object';\r\n  }\r\n\r\n  isUrl(value) {\r\n    if (typeof value === 'string') {\r\n      return (\r\n        value.slice(0, 8) === 'https://' || value.slice(0, 7) === 'http://'\r\n      );\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  filterFeatureProperties(feature) {\r\n    const allowedFieldsAndAlias = feature.meta ? feature.meta.alias : undefined;\r\n    const properties = Object.assign({}, feature.properties);\r\n    const layerName = feature.meta.title;\r\n    const layers = this.mapService.getMap().layers$.value;\r\n\r\n    if (allowedFieldsAndAlias) {\r\n      Object.keys(properties).forEach(property => {\r\n        if (Object.keys(allowedFieldsAndAlias).indexOf(property) === -1) {\r\n          delete properties[property];\r\n        } else {\r\n          properties[allowedFieldsAndAlias[property]] = properties[property];\r\n          if (allowedFieldsAndAlias[property] !== property) {\r\n            delete properties[property];\r\n          }\r\n        }\r\n      });\r\n      return properties;\r\n    } else {\r\n      layers.forEach(layer => {\r\n        if (layer.dataSource.options.excludeAttribute) {\r\n          const exclude = layer.dataSource.options.excludeAttribute;\r\n          exclude.forEach(attribute => {\r\n            if (layerName === layer.title) {\r\n                delete feature.properties[attribute];\r\n            }\r\n          });\r\n        } else if (layer.dataSource.options.excludeAttributeOffline) {\r\n          const excludeAttributeOffline = layer.dataSource.options.excludeAttributeOffline;\r\n          excludeAttributeOffline.forEach(attribute => {\r\n            if (layerName === layer.title) {\r\n                delete feature.properties[attribute];\r\n            }\r\n          });\r\n        }\r\n      });\r\n      return feature.properties;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoKeyValueModule } from '@igo2/common';\r\n\r\nimport { FeatureDetailsComponent } from './feature-details.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    IgoLanguageModule,\r\n    IgoKeyValueModule\r\n  ],\r\n  exports: [FeatureDetailsComponent],\r\n  declarations: [FeatureDetailsComponent]\r\n})\r\nexport class IgoFeatureDetailsModule {}\r\n","import * as olstyle from 'ol/style';\r\n\r\nimport {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnChanges,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  SimpleChanges\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { Form, getEntityRevision } from '@igo2/common';\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { FEATURE } from '../shared/feature.enums';\r\nimport { Feature, FeatureMeta } from '../shared/feature.interfaces';\r\nimport { FeatureStore } from '../shared/store';\r\nimport { FeatureStoreSelectionStrategy } from '../shared/strategies/selection';\r\n\r\n/**\r\n * A configurable form, optionnally bound to a feature.\r\n * This component creates an entity form and, on submit,\r\n * returns a feature made out of the submitted data. It also\r\n * does things like managing the feature visibility while it's being updated\r\n * as well as disabling the selection of another feature.\r\n */\r\n@Component({\r\n  selector: 'igo-feature-form',\r\n  templateUrl: './feature-form.component.html',\r\n  styleUrls: ['./feature-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeatureFormComponent implements OnChanges, OnDestroy {\r\n  public feature$: BehaviorSubject<Feature> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Form\r\n   */\r\n  @Input() form: Form;\r\n\r\n  /**\r\n   * Feature to update\r\n   */\r\n  @Input() feature: Feature | undefined;\r\n\r\n  /**\r\n   * The store the feature belongs to. Required to manage the\r\n   * visiblity and selection.\r\n   */\r\n  @Input() store: FeatureStore | undefined;\r\n\r\n  /**\r\n   * Event emitted when the form is submitted\r\n   */\r\n  @Output() submitForm = new EventEmitter<Feature>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const store = changes.store;\r\n    if (store && store.currentValue !== store.previousValue) {\r\n      this.setStore(store.currentValue);\r\n    }\r\n\r\n    const feature = changes.feature;\r\n    if (feature && feature.currentValue !== feature.previousValue) {\r\n      this.feature$.next(feature.currentValue);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show the original feature and reactivate the selection\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.setStore(undefined);\r\n  }\r\n\r\n  /**\r\n   * Transform the form data to a feature and emit an event\r\n   * @param event Form submit event\r\n   * @internal\r\n   */\r\n  onSubmit(data: { [key: string]: any }) {\r\n    const feature = this.formDataToFeature(data);\r\n    this.submitForm.emit(feature);\r\n  }\r\n\r\n  /**\r\n   * Transform the form data to a feature\r\n   * @param data Form data\r\n   * @returns A feature\r\n   */\r\n  private formDataToFeature(data: { [key: string]: any }): Feature {\r\n    const properties = {};\r\n    const meta = {};\r\n    if (this.feature === undefined) {\r\n      (meta as any).id = uuid();\r\n    } else {\r\n      Object.assign(properties, this.feature.properties);\r\n      Object.assign(meta, this.feature.meta, {\r\n        revision: getEntityRevision(this.feature) + 1\r\n      });\r\n    }\r\n\r\n    const propertyPrefix = 'properties.';\r\n    Object.entries(data).forEach((entry: [string, any]) => {\r\n      const [key, value] = entry;\r\n      if (key.startsWith(propertyPrefix)) {\r\n        const property = key.substr(propertyPrefix.length);\r\n        properties[property] = value;\r\n      }\r\n    });\r\n\r\n    let geometry = data.geometry;\r\n    if (geometry === undefined && this.feature !== undefined) {\r\n      geometry = this.feature.geometry;\r\n    }\r\n\r\n    return {\r\n      meta: meta as FeatureMeta,\r\n      type: FEATURE,\r\n      geometry,\r\n      projection: 'EPSG:4326',\r\n      properties\r\n    };\r\n  }\r\n\r\n  private setStore(store: FeatureStore) {\r\n    if (this.store !== undefined) {\r\n      this.activateStoreSelection(this.store);\r\n    }\r\n    if (store !== undefined) {\r\n      this.deactivateStoreSelection(store);\r\n    }\r\n    this.store = store;\r\n  }\r\n\r\n  /**\r\n   * Deactivate feature selection from the store and from the map\r\n   */\r\n  private deactivateStoreSelection(store: FeatureStore) {\r\n    const selectionStrategy = store.getStrategyOfType(\r\n      FeatureStoreSelectionStrategy\r\n    );\r\n    if (selectionStrategy !== undefined) {\r\n      selectionStrategy.deactivate();\r\n      (selectionStrategy as FeatureStoreSelectionStrategy).unselectAll();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reactivate feature selection from the store and from the map\r\n   */\r\n  private activateStoreSelection(store: FeatureStore) {\r\n    // TODO: maybe we should recativate the strategies only if they\r\n    // were active in the first place\r\n    store.activateStrategyOfType(FeatureStoreSelectionStrategy);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoFormModule } from '@igo2/common';\r\n\r\nimport { FeatureFormComponent } from './feature-form.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoFormModule\r\n  ],\r\n  exports: [\r\n    IgoFormModule,\r\n    FeatureFormComponent\r\n  ],\r\n  declarations: [\r\n    FeatureFormComponent\r\n  ]\r\n})\r\nexport class IgoFeatureFormModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoFeatureDetailsModule } from './feature-details/feature-details.module';\r\nimport { IgoFeatureFormModule } from './feature-form/feature-form.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoFeatureDetailsModule,\r\n    IgoFeatureFormModule\r\n  ],\r\n  declarations: [],\r\n  providers: []\r\n})\r\nexport class IgoFeatureModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { MatSlider } from '@angular/material';\r\nimport * as moment from 'moment';\r\n\r\nimport { TimeFilterOptions } from '../shared/time-filter.interface';\r\n\r\n@Component({\r\n  selector: 'igo-time-filter-form',\r\n  templateUrl: './time-filter-form.component.html',\r\n  styleUrls: ['./time-filter-form.component.scss']\r\n})\r\nexport class TimeFilterFormComponent implements OnInit {\r\n  @Input()\r\n  get options(): TimeFilterOptions {\r\n    return this._options;\r\n  }\r\n  set options(value: TimeFilterOptions) {\r\n    this._options = value;\r\n  }\r\n  private _options: TimeFilterOptions;\r\n\r\n  public date: Date;\r\n  public startDate: Date;\r\n  public endDate: Date;\r\n  public year: any;\r\n  public startYear: any;\r\n  public endYear: any;\r\n  public initStartYear: any;\r\n  public initEndYear: any;\r\n  public listYears: Array<string> = [];\r\n  public startListYears: Array<string> = [];\r\n  public endListYears: Array<string> = [];\r\n\r\n  @Input()\r\n  set currentValue(value: string) {\r\n    if (value) {\r\n      if (this.type !== 'year') {\r\n        const valueArray = value.split('/');\r\n        if (valueArray.length > 0) {\r\n          const startDate = new Date(valueArray[0]);\r\n          const endDate = new Date(valueArray[1]);\r\n          if (!isNaN(startDate.valueOf())) {\r\n            this.startDate = startDate;\r\n          }\r\n          if (!isNaN(endDate.valueOf())) {\r\n            this.endDate = endDate;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public interval: any;\r\n  public playIcon = 'play_circle_filled';\r\n\r\n  @Output() change: EventEmitter<Date | [Date, Date]> = new EventEmitter();\r\n  @Output()\r\n  yearChange: EventEmitter<string | [string, string]> = new EventEmitter();\r\n  @ViewChild(MatSlider) mySlider;\r\n\r\n  get type(): 'date' | 'time' | 'datetime' | 'year' {\r\n    return this.options.type === undefined ? 'date' : this.options.type;\r\n  }\r\n\r\n  get isRange(): boolean {\r\n    return this.options.range === undefined || this.options.style === 'slider'\r\n      ? false\r\n      : this.options.range;\r\n  }\r\n\r\n  get style(): string {\r\n    return this.options.style === undefined ? 'slider' : this.options.style;\r\n  }\r\n\r\n  get step(): number {\r\n    let step = 10800000;\r\n    if (this.options.step === undefined) {\r\n      switch (this.type) {\r\n        case 'date':\r\n        case 'datetime':\r\n          step = 10800000;\r\n          break;\r\n        case 'time':\r\n          step = 3600000;\r\n          break;\r\n        case 'year':\r\n          step = 31536000000;\r\n          break;\r\n        default:\r\n          step = 10800000;\r\n      }\r\n    } else {\r\n      step = this.getStepDefinition(this.options.step);\r\n    }\r\n\r\n    return step;\r\n  }\r\n\r\n  get timeInterval(): number {\r\n    return this.options.timeInterval === undefined\r\n      ? 2000\r\n      : this.options.timeInterval;\r\n  }\r\n\r\n  get min(): Date {\r\n    return this.options.min === undefined\r\n      ? undefined\r\n      : new Date(this.options.min);\r\n  }\r\n\r\n  get max(): Date {\r\n    return this.options.max === undefined\r\n      ? undefined\r\n      : new Date(this.options.max);\r\n  }\r\n\r\n  get is(): boolean {\r\n    return this.options.range === undefined ? false : this.options.range;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.startDate === undefined) {\r\n      const utcmin = new Date(this.min);\r\n      this.startDate = new Date(\r\n        utcmin.getTime() + utcmin.getTimezoneOffset() * 60000\r\n      );\r\n    }\r\n    if (this.endDate === undefined) {\r\n      const utcmax = new Date(this.max);\r\n      this.endDate = new Date(\r\n        utcmax.getTime() + utcmax.getTimezoneOffset() * 60000\r\n      );\r\n    }\r\n    if (this.startYear === undefined) {\r\n      this.startYear = new Date(this.startDate).getFullYear();\r\n      this.initStartYear = this.startYear;\r\n    }\r\n    if (this.endYear === undefined) {\r\n      this.endYear = new Date(this.endDate).getFullYear();\r\n      this.initEndYear = this.endYear;\r\n    }\r\n\r\n    if (!this.isRange) {\r\n      for (let i = this.startYear; i <= this.endYear + 1; i++) {\r\n        this.listYears.push(i);\r\n      }\r\n    } else {\r\n      for (let i = this.startYear; i < this.endYear; i++) {\r\n        this.startListYears.push(i);\r\n      }\r\n      for (let i = this.startYear + 1; i <= this.endYear; i++) {\r\n        this.endListYears.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDateChange(event: any) {\r\n    this.setupDateOutput();\r\n    this.applyTypeChange();\r\n\r\n    // Only if is range, use 2 dates to make the range\r\n    if (this.isRange) {\r\n      this.change.emit([this.startDate, this.endDate]);\r\n    } else {\r\n      this.change.emit(this.startDate);\r\n    }\r\n  }\r\n\r\n  handleYearChange(event: any) {\r\n    if (this.isRange) {\r\n      this.endListYears = [];\r\n      for (let i = this.startYear + 1; i <= this.initEndYear; i++) {\r\n        this.endListYears.push(i);\r\n      }\r\n      this.startListYears = [];\r\n      for (let i = this.initStartYear + 1; i < this.endYear; i++) {\r\n        this.startListYears.push(i);\r\n      }\r\n      this.yearChange.emit([this.startYear, this.endYear]);\r\n    } else {\r\n      this.yearChange.emit(this.year);\r\n    }\r\n  }\r\n\r\n  handleListYearChange(event: any) {\r\n    this.handleYearChange([this.startYear, this.endYear]);\r\n  }\r\n\r\n  handleListYearStartChange(event: any) {\r\n    this.change.emit([this.startDate, this.endDate]);\r\n  }\r\n\r\n  dateToNumber(date: Date): number {\r\n    let newDate;\r\n    if (date) {\r\n      newDate = new Date(date);\r\n    } else {\r\n      newDate = new Date(this.min);\r\n    }\r\n\r\n    return newDate.getTime();\r\n  }\r\n\r\n  setSliderThumbLabel(label: string) {\r\n    const thumbLabel = this.findThumbLabel(\r\n      this.mySlider._elementRef.nativeElement.childNodes\r\n    );\r\n    if (thumbLabel) {\r\n      thumbLabel.textContent = label;\r\n    }\r\n  }\r\n\r\n  findThumbLabel(test: any[]): any {\r\n    let thumbLabel;\r\n\r\n    test.forEach(value => {\r\n      if (value.className === 'mat-slider-thumb-label-text') {\r\n        thumbLabel = value;\r\n      }\r\n\r\n      if (value.children.length > 0 && !thumbLabel) {\r\n        thumbLabel = this.findThumbLabel(value.childNodes);\r\n      }\r\n    }, this);\r\n    return thumbLabel;\r\n  }\r\n\r\n  playFilter(event: any) {\r\n    if (this.interval) {\r\n      this.stopFilter();\r\n    } else {\r\n      this.playIcon = 'pause_circle_filled';\r\n      this.interval = setInterval(\r\n        (that) => {\r\n          let newMinDateNumber;\r\n          const maxDateNumber = new Date(that.max);\r\n\r\n          newMinDateNumber =\r\n            that.date === undefined ? that.min.getTime() : that.date.getTime();\r\n          newMinDateNumber += that.mySlider.step;\r\n          that.date = new Date(newMinDateNumber);\r\n\r\n          if (newMinDateNumber > maxDateNumber.getTime()) {\r\n            that.stopFilter();\r\n          }\r\n\r\n          that.handleDateChange({ value: that.date, date: that.date });\r\n        },\r\n        this.timeInterval,\r\n        this\r\n      );\r\n    }\r\n  }\r\n\r\n  stopFilter() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n    this.interval = undefined;\r\n    this.playIcon = 'play_circle_filled';\r\n  }\r\n\r\n  handleSliderDateChange(event: any) {\r\n    this.date = new Date(event.value);\r\n    this.setSliderThumbLabel(this.handleSliderTooltip());\r\n    this.handleDateChange(event);\r\n  }\r\n\r\n  handleSliderValue(): number {\r\n    if (this.options.current === true || !this.min) {\r\n      const currentDate = new Date();\r\n      this.date = this.getRoundedDate(currentDate);\r\n    }\r\n    return this.date === undefined ? this.min.getTime() : this.date.getTime();\r\n  }\r\n\r\n  handleSliderTooltip() {\r\n    let label: string;\r\n\r\n    switch (this.type) {\r\n      case 'date':\r\n        label =\r\n          this.date === undefined\r\n            ? this.min.toDateString()\r\n            : this.date.toDateString();\r\n        break;\r\n      case 'time':\r\n        label =\r\n          this.date === undefined\r\n            ? this.min.toTimeString()\r\n            : this.date.toTimeString();\r\n        break;\r\n      // datetime\r\n      default:\r\n        label =\r\n          this.date === undefined\r\n            ? this.min.toUTCString()\r\n            : this.date.toUTCString();\r\n        break;\r\n    }\r\n\r\n    return label;\r\n  }\r\n\r\n  setupDateOutput() {\r\n    if (this.style === 'slider') {\r\n      this.startDate = new Date(this.date);\r\n      this.startDate.setSeconds(-(this.step / 1000));\r\n      this.endDate = new Date(this.startDate);\r\n      this.endDate.setSeconds(this.step / 1000);\r\n    } else if (!this.isRange && !!this.date) {\r\n      this.endDate = new Date(this.date);\r\n      this.startDate = new Date(this.date);\r\n    } else if (this.isRange && (!!this.date || !this.date)) {\r\n      this.startDate =\r\n        this.startDate === undefined ? new Date(this.min) : this.startDate;\r\n      this.endDate =\r\n        this.endDate === undefined ? new Date(this.max) : this.endDate;\r\n    } else if (!this.date) {\r\n      this.startDate =\r\n        this.startDate === undefined ? new Date(this.min) : this.startDate;\r\n      this.endDate =\r\n        this.endDate === undefined ? new Date(this.max) : this.endDate;\r\n    }\r\n  }\r\n\r\n  applyTypeChange() {\r\n    switch (this.type) {\r\n      case 'date':\r\n        if (this.startDate !== undefined || this.endDate !== undefined) {\r\n          this.startDate.setHours(0);\r\n          this.startDate.setMinutes(0);\r\n          this.startDate.setSeconds(0);\r\n          this.endDate.setHours(23);\r\n          this.endDate.setMinutes(59);\r\n          this.endDate.setSeconds(59);\r\n        }\r\n        break;\r\n      case 'time':\r\n        if (this.style === 'calendar') {\r\n          if (this.startDate.getDay() !== this.min.getDay()) {\r\n            const selectedHour = this.startDate.getHours();\r\n            const selectedMinute = this.startDate.getMinutes();\r\n            this.startDate = this.min;\r\n            this.startDate.setHours(selectedHour);\r\n            this.startDate.setMinutes(selectedMinute);\r\n          }\r\n\r\n          if (this.endDate.getDay() !== this.min.getDay()) {\r\n            const selectedHour = this.endDate.getHours();\r\n            const selectedMinute = this.endDate.getMinutes();\r\n            this.endDate = this.min;\r\n            this.endDate.setHours(selectedHour);\r\n            this.endDate.setMinutes(selectedMinute);\r\n          }\r\n        }\r\n\r\n        if (!this.isRange && this.step > 60 * 60 * 1000) {\r\n          this.startDate.setMinutes(0);\r\n          this.startDate.setSeconds(0);\r\n          this.endDate.setMinutes(59);\r\n          this.endDate.setSeconds(59);\r\n        }\r\n        break;\r\n      // datetime\r\n      default:\r\n      // do nothing\r\n    }\r\n  }\r\n\r\n  getRangeMinDate(): Date {\r\n    return this.startDate === undefined ? this.min : this.startDate;\r\n  }\r\n\r\n  getRangeMaxDate(): Date {\r\n    return this.endDate === undefined ? this.max : this.endDate;\r\n  }\r\n\r\n  /**\r\n   * Round date at a certain time, 10 minutes by Default\r\n   * @param date - Date to Round\r\n   * @param atMinute - round to closest 'atMinute' minute, rounded 10 by default\r\n   * @return the rounded date\r\n   */\r\n  getRoundedDate(date, atMinute = 10) {\r\n    const coeff = 1000 * 60 * atMinute;\r\n    return new Date(Math.round(date.getTime() / coeff) * coeff);\r\n  }\r\n\r\n  /**\r\n   * Get the step (period) definition from the layer dimension tag\r\n   * @param step The step as ISO 8601 example: PT10M for 10 Minutes\r\n   * @return the duration in milliseconds\r\n   */\r\n  getStepDefinition(step) {\r\n    return moment.duration(step).asMilliseconds();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { TimeFilterableDataSource } from '../shared/time-filter.interface';\r\nimport { TimeFilterService } from '../shared/time-filter.service';\r\n\r\n@Component({\r\n  selector: 'igo-time-filter-item',\r\n  templateUrl: './time-filter-item.component.html',\r\n  styleUrls: ['./time-filter-item.component.scss']\r\n})\r\nexport class TimeFilterItemComponent {\r\n  @Input()\r\n  get layer(): Layer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: Layer) {\r\n    this._layer = value;\r\n  }\r\n  private _layer: Layer;\r\n\r\n  get datasource(): TimeFilterableDataSource {\r\n    return this.layer.dataSource as TimeFilterableDataSource;\r\n  }\r\n  constructor(private timeFilterService: TimeFilterService) {}\r\n\r\n  handleYearChange(year: string | [string, string]) {\r\n    this.timeFilterService.filterByYear(this.datasource, year);\r\n  }\r\n\r\n  handleDateChange(date: Date | [Date, Date]) {\r\n    this.timeFilterService.filterByDate(this.datasource, date);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\n@Component({\r\n  selector: 'igo-time-filter-list',\r\n  templateUrl: './time-filter-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimeFilterListComponent {\r\n  @Input()\r\n  get layers(): Layer[] {\r\n    return this._layers;\r\n  }\r\n  set layers(value: Layer[]) {\r\n    this._layers = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _layers: Layer[] = [];\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MapService } from '../../map/shared/map.service';\r\nimport { TimeFilterListComponent } from './time-filter-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoTimeFilterListBinding]'\r\n})\r\nexport class TimeFilterListBindingDirective implements OnInit, OnDestroy {\r\n  private component: TimeFilterListComponent;\r\n  private layers$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() component: TimeFilterListComponent,\r\n    private mapService: MapService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input layers\r\n    this.component.layers = [];\r\n\r\n    this.layers$$ = this.mapService.getMap().layers$.subscribe(layers => {\r\n      this.component.layers = layers;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport * as olproj from 'ol/proj';\r\nimport olWKT from 'ol/format/WKT';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WktService {\r\n  constructor() {}\r\n\r\n  public wktToFeature(wkt, wktProj, featureProj = 'EPSG:3857') {\r\n    return new olWKT().readFeature(wkt, {\r\n      dataProjection: wktProj,\r\n      featureProjection: featureProj\r\n    });\r\n  }\r\n  public extentToWkt(epsgTO, extent, extentProj) {\r\n    let currentExtent = olproj.transformExtent(extent, extentProj, epsgTO);\r\n    currentExtent = this.roundCoordinateArray(currentExtent, epsgTO, 0);\r\n    const wktPoly = `POLYGON((\r\n      ${extent[0]} ${extent[1]},\r\n      ${extent[0]} ${extent[3]},\r\n      ${extent[2]} ${extent[3]},\r\n      ${extent[2]} ${extent[1]},\r\n      ${extent[0]} ${extent[1]}))`;\r\n    const wktLine = `LINESTRING(\r\n      ${extent[0]} ${extent[1]},\r\n      ${extent[0]} ${extent[3]},\r\n      ${extent[2]} ${extent[3]},\r\n      ${extent[2]} ${extent[1]},\r\n      ${extent[0]} ${extent[1]})`;\r\n    const wktMultiPoints = `MULTIPOINT(\r\n        ${extent[0]} ${extent[1]},\r\n        ${extent[0]} ${extent[3]},\r\n        ${extent[2]} ${extent[3]},\r\n        ${extent[2]} ${extent[1]})`;\r\n    return {\r\n      wktPoly,\r\n      wktLine,\r\n      wktMultiPoints\r\n    };\r\n  }\r\n\r\n  private roundCoordinateArray(coordinateArray, projection, decimal = 0) {\r\n    const lproj = olproj.get(projection);\r\n    const units = lproj.getUnits();\r\n    const olUnits = ['ft', 'm', 'us-ft'];\r\n    if (olUnits.indexOf(units) !== -1) {\r\n      coordinateArray = this.roundArray(coordinateArray, decimal);\r\n    }\r\n    return coordinateArray;\r\n  }\r\n\r\n  private roundArray(array, decimal = 0) {\r\n    let x = 0;\r\n    while (x < array.length) {\r\n      array[x] = array[x].toFixed(decimal);\r\n      x++;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  public snrcToWkt(snrc, epsgTO = 'EPSG:3857') {\r\n    snrc = snrc.toLowerCase();\r\n    let wktPoly;\r\n    const ew = {\r\n      1: { from: -56, to: -64 },\r\n      2: { from: -64, to: -72 },\r\n      3: { from: -72, to: -80 },\r\n      4: { from: -80, to: -88 },\r\n      5: { from: -88, to: -96 },\r\n      6: { from: -96, to: -104 },\r\n      7: { from: -104, to: -112 },\r\n      8: { from: -112, to: -120 },\r\n      9: { from: -120, to: -128 },\r\n      10: { from: -128, to: -136 }\r\n    };\r\n    const sn = {\r\n      1: { from: 44, to: 48 },\r\n      2: { from: 48, to: 52 },\r\n      3: { from: 52, to: 56 },\r\n      4: { from: 56, to: 60 },\r\n      5: { from: 60, to: 64 },\r\n      6: { from: 64, to: 68 },\r\n      7: { from: 68, to: 72 },\r\n      8: { from: 72, to: 76 },\r\n      9: { from: 76, to: -128 }\r\n    };\r\n    const snrc250kIndex = [\r\n      ['m', 'n', 'o', 'p'],\r\n      ['l', 'k', 'j', 'i'],\r\n      ['e', 'f', 'g', 'h'],\r\n      ['d', 'c', 'b', 'a']\r\n    ];\r\n\r\n    const snrc50kIndex = [\r\n      ['13', '14', '15', '16'],\r\n      ['12', '11', '10', '09'],\r\n      ['05', '06', '07', '08'],\r\n      ['04', '03', '02', '01']\r\n    ];\r\n    const checkSNRC50k = /\\d{2,3}[a-p][0,1][0-9]/gi;\r\n    const checkSNRC250k = /\\d{2,3}[a-p]/gi;\r\n    const checkSNRC1m = /\\d{2,3}/gi;\r\n\r\n    let snrc1m = false;\r\n    let snrc250k = false;\r\n    let snrc50k = false;\r\n\r\n    if (checkSNRC50k.test(snrc)) {\r\n      snrc50k = true;\r\n    } else {\r\n      if (checkSNRC250k.test(snrc)) {\r\n        snrc250k = true;\r\n      } else {\r\n        if (checkSNRC1m.test(snrc)) {\r\n          snrc1m = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (snrc1m) {\r\n      snrc += 'a01';\r\n    } else if (snrc250k) {\r\n      snrc += '01';\r\n    }\r\n    if (/\\d{2,3}[a-p][0,1][0-9]/gi.test(snrc)) {\r\n      const regex1m = /(?=[a-p])/gi;\r\n      const ar1m = snrc.split(regex1m);\r\n      const part1m = ar1m[0];\r\n      const part250k = ar1m[1][0];\r\n      const part50k = ar1m[1].split(part250k)[1];\r\n      let separator = 1;\r\n      if (part1m.length === 3) {\r\n        separator = 2;\r\n      }\r\n      const partEW = part1m.substring(0, separator);\r\n      const partSN = part1m.substring(separator);\r\n      const unit1mEW = 8;\r\n      const unit1mSN = 4;\r\n      const unit250kEW = 2;\r\n      const unit250kSN = 1;\r\n      const unit50kEW = 0.5;\r\n      const unit50kSN = 0.25;\r\n      let index250kEW = 0;\r\n      let index250kSN = 0;\r\n      let index50kEW = 0;\r\n      let index50kSN = 0;\r\n      snrc250kIndex.forEach(element => {\r\n        if (element.indexOf(part250k) !== -1) {\r\n          index250kSN = snrc250kIndex.indexOf(element);\r\n          index250kEW = element.indexOf(part250k);\r\n        }\r\n      });\r\n      snrc50kIndex.forEach(element => {\r\n        if (element.indexOf(part50k) !== -1) {\r\n          index50kSN = snrc50kIndex.indexOf(element);\r\n          index50kEW = element.indexOf(part50k);\r\n        }\r\n      });\r\n\r\n      let increment250kEW = 0;\r\n      let increment250kSN = 0;\r\n      let increment50kEW = 0;\r\n      let increment50kSN = 0;\r\n      let unitPerTypeEW = unit1mEW;\r\n      let unitPerTypeSN = unit1mSN;\r\n      if (snrc250k) {\r\n        increment250kEW = index250kEW * unit250kEW;\r\n        increment250kSN = index250kSN * unit250kSN;\r\n        increment50kEW = 0;\r\n        increment50kSN = 0;\r\n        unitPerTypeEW = unit250kEW;\r\n        unitPerTypeSN = unit250kSN;\r\n      } else if (snrc50k) {\r\n        increment250kEW = index250kEW * unit250kEW;\r\n        increment250kSN = index250kSN * unit250kSN;\r\n        increment50kEW = index50kEW * unit50kEW;\r\n        increment50kSN = index50kSN * unit50kSN;\r\n        unitPerTypeEW = unit50kEW;\r\n        unitPerTypeSN = unit50kSN;\r\n      }\r\n\r\n      const coord: {ul?: any, lr?: any, ur?: any, ll?: any} = {\r\n        ul: [\r\n          ew[partEW].to + increment250kEW + increment50kEW,\r\n          sn[partSN].to - increment250kSN - increment50kSN\r\n        ]\r\n      };\r\n\r\n      coord.lr = [\r\n        coord.ul[0] + unitPerTypeEW,\r\n        coord.ul[1] - unitPerTypeSN\r\n      ];\r\n      coord.ur = [coord.ul[0], coord.ul[1] - unitPerTypeSN];\r\n      coord.ll = [coord.ul[0] + unitPerTypeEW, coord.ul[1]];\r\n\r\n      coord.ul = olproj.transform(\r\n        [coord.ul[0], coord.ul[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n      coord.lr = olproj.transform(\r\n        [coord.lr[0], coord.lr[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n      coord.ur = olproj.transform(\r\n        [coord.ur[0], coord.ur[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n      coord.ll = olproj.transform(\r\n        [coord.ll[0], coord.ll[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n\r\n      // Rounded coordinate to shorten url in get\r\n      coord.ul = this.roundCoordinateArray(coord.ul, epsgTO, 0);\r\n      coord.lr = this.roundCoordinateArray(coord.lr, epsgTO, 0);\r\n      coord.ur = this.roundCoordinateArray(coord.ur, epsgTO, 0);\r\n      coord.ll = this.roundCoordinateArray(coord.ll, epsgTO, 0);\r\n\r\n      wktPoly =\r\n        'POLYGON((' +\r\n        [\r\n          coord.ul.join(' '),\r\n          coord.ur.join(' '),\r\n          coord.lr.join(' '),\r\n          coord.ll.join(' '),\r\n          coord.ul.join(' ')\r\n        ].join(',') +\r\n        '))';\r\n      const wktLine =\r\n        'LINESTRING(' +\r\n        [\r\n          coord.ul.join(' '),\r\n          coord.ur.join(' '),\r\n          coord.lr.join(' '),\r\n          coord.ll.join(' '),\r\n          coord.ul.join(' ')\r\n        ].join(',') +\r\n        ')';\r\n\r\n      const wktMultiPoints =\r\n        'MULTIPOINT(' +\r\n        [\r\n          coord.ul.join(' '),\r\n          coord.ur.join(' '),\r\n          coord.lr.join(' '),\r\n          coord.ll.join(' ')\r\n        ].join(',') +\r\n        ')';\r\n      return {\r\n        wktPoly,\r\n        wktLine,\r\n        wktMultiPoints\r\n      };\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectorRef,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\n\r\nimport * as olstyle from 'ol/style';\r\n\r\nimport {\r\n  OgcInterfaceFilterOptions,\r\n  OgcFilterableDataSource,\r\n  OgcFiltersOptions\r\n} from '../../filter/shared/ogc-filter.interface';\r\nimport { OgcFilterWriter } from '../../filter/shared/ogc-filter';\r\nimport { WktService } from '../../wkt/shared/wkt.service';\r\nimport { IgoMap } from '../../map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filter-form',\r\n  templateUrl: './ogc-filter-form.component.html',\r\n  styleUrls: ['./ogc-filter-form.component.scss']\r\n})\r\nexport class OgcFilterFormComponent implements AfterContentChecked {\r\n  private ogcFilterWriter: OgcFilterWriter;\r\n  private _dataSource: OgcFilterableDataSource;\r\n  private _currentFilter: any = {};\r\n  public operators;\r\n  public igoSpatialSelectors;\r\n  public value = '';\r\n  public inputOperator;\r\n  public fields: any[];\r\n  public values: any[];\r\n  public color = 'primary';\r\n  public snrc = '';\r\n  public disabled;\r\n  private _map: IgoMap;\r\n  public baseOverlayName = 'ogcFilterOverlay_';\r\n  private _showFeatureOnMap: boolean;\r\n\r\n  // tslint:disable-next-line:ban-types\r\n  @Input() refreshFilters: Function;\r\n\r\n  @Input()\r\n  get datasource(): OgcFilterableDataSource {\r\n    return this._dataSource;\r\n  }\r\n  set datasource(value: OgcFilterableDataSource) {\r\n    this._dataSource = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  @Input()\r\n  get showFeatureOnMap(): boolean {\r\n    return this._showFeatureOnMap;\r\n  }\r\n  set showFeatureOnMap(value: boolean) {\r\n    this._showFeatureOnMap = value;\r\n  }\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n\r\n  @Input()\r\n  get currentFilter(): any {\r\n    return this._currentFilter;\r\n  }\r\n  set currentFilter(value: any) {\r\n    this._currentFilter = value;\r\n  }\r\n\r\n  get activeFilters() {\r\n    this.updateField();\r\n    return this.datasource.options.ogcFilters.interfaceOgcFilters.filter(\r\n      f => f.active === true\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private wktService: WktService\r\n  ) {\r\n    this.ogcFilterWriter = new OgcFilterWriter();\r\n    // TODO: Filter permitted operator based on wfscapabilities\r\n    // Need to work on regex on XML capabilities because\r\n    // comaparison operator's name varies between WFS servers...\r\n    // Ex: IsNull vs PropertyIsNull vs IsNil ...\r\n    this.operators = this.ogcFilterWriter.operators;\r\n    this.igoSpatialSelectors = [\r\n      {\r\n        type: 'fixedExtent'\r\n      },\r\n      {\r\n        type: 'snrc'\r\n      }\r\n    ];\r\n    // TODO: selectFeature & drawFeature\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    if (this.map) {\r\n      this.activeFilters\r\n        .filter(\r\n          af => ['Contains', 'Intersects', 'Within'].indexOf(af.operator) !== -1\r\n        )\r\n        .forEach(activeFilterSpatial => {\r\n          if (activeFilterSpatial.wkt_geometry) {\r\n            this.addWktAsOverlay(\r\n              activeFilterSpatial.wkt_geometry,\r\n              activeFilterSpatial.filterid,\r\n              this.map.projection\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  updateField(init = true) {\r\n    if (!this.datasource.options.sourceFields) {\r\n      return;\r\n    }\r\n    this.fields = this.datasource.options.sourceFields.sort((a, b) => {\r\n      if (a.name < b.name) {\r\n        return -1;\r\n      } else if (a.name > b.name) {\r\n        return 1;\r\n      } else {\r\n        return 0;\r\n      }\r\n    });\r\n    this.datasource.options.sourceFields\r\n      .filter(f => f.name === this.currentFilter.propertyName)\r\n      .forEach(element => {\r\n        this.values = element.values !== undefined ? element.values.sort() : [];\r\n      });\r\n  }\r\n\r\n  private addWktAsOverlay(wkt, filterid, projection) {\r\n    const wktAsFeature = this.wktService.wktToFeature(wkt, projection);\r\n    wktAsFeature.setId(this.baseOverlayName + filterid);\r\n    let opacity = 0;\r\n    if (this.showFeatureOnMap) {\r\n      opacity = 0.5;\r\n    }\r\n\r\n    const stroke = new olstyle.Stroke({\r\n      width: 2,\r\n      color: [125, 136, 140, opacity]\r\n    });\r\n\r\n    return new olstyle.Style({\r\n      stroke,\r\n      image: new olstyle.Circle({\r\n        radius: 5,\r\n        stroke\r\n      })\r\n    });\r\n\r\n    this.map.overlay.addOlFeature(wktAsFeature);\r\n  }\r\n\r\n  toggleFilterState(event, filter: OgcInterfaceFilterOptions, property) {\r\n    this.updateField();\r\n    const mapProjection = this.map.projection;\r\n    if (event.checked) {\r\n      if (filter.wkt_geometry !== '') {\r\n        this.addWktAsOverlay(\r\n          filter.wkt_geometry,\r\n          filter.filterid,\r\n          mapProjection\r\n        );\r\n      }\r\n      this.datasource.options.ogcFilters.interfaceOgcFilters\r\n        .filter(f => f.filterid === filter.filterid)\r\n        .forEach(element => {\r\n          element[property] = true;\r\n        });\r\n    } else {\r\n      this.removeOverlayByID(filter.filterid);\r\n      this.datasource.options.ogcFilters.interfaceOgcFilters\r\n        .filter(f => f.filterid === filter.filterid)\r\n        .forEach(element => {\r\n          element[property] = false;\r\n        });\r\n    }\r\n    this.refreshFilters();\r\n  }\r\n\r\n  deleteFilter(filter: OgcInterfaceFilterOptions) {\r\n    const ogcFilters: OgcFiltersOptions = this.datasource.options.ogcFilters;\r\n    ogcFilters.interfaceOgcFilters = ogcFilters.interfaceOgcFilters.filter(\r\n      f => f.filterid !== filter.filterid\r\n    );\r\n    this.removeOverlayByID(filter.filterid);\r\n\r\n    this.refreshFilters();\r\n  }\r\n\r\n  changeNumericProperty(filter: OgcInterfaceFilterOptions, property, value) {\r\n    this.changeProperty(filter, property, parseFloat(value));\r\n    this.refreshFilters();\r\n  }\r\n\r\n  private removeOverlayByID(id) {\r\n    const overlayId = this.baseOverlayName + id;\r\n    if (this.map.overlay.dataSource.ol.getFeatureById(overlayId)) {\r\n      this.map.overlay.dataSource.ol.removeFeature(\r\n        this.map.overlay.dataSource.ol.getFeatureById(overlayId)\r\n      );\r\n    }\r\n  }\r\n\r\n  changeOperator(filter) {\r\n    if (this.operators[filter.operator].spatial === false) {\r\n      this.removeOverlayByID(filter.filterid);\r\n    }\r\n    this.refreshFilters();\r\n  }\r\n\r\n  changeProperty(filter: OgcInterfaceFilterOptions, property, value) {\r\n    this.datasource.options.ogcFilters.interfaceOgcFilters\r\n      .filter(f => f.filterid === filter.filterid)\r\n      .forEach(element => {\r\n        element[property] = value;\r\n      });\r\n    this.refreshFilters();\r\n  }\r\n\r\n  changeGeometry(filter, value?) {\r\n    const checkSNRC50k = /\\d{2,3}[a-l][0,1][0-9]/gi;\r\n    const checkSNRC250k = /\\d{2,3}[a-p]/gi;\r\n    const checkSNRC1m = /\\d{2,3}/gi;\r\n    const mapProjection = this.map.projection;\r\n    this.removeOverlayByID(filter.filterid);\r\n    this.datasource.options.ogcFilters.interfaceOgcFilters\r\n      .filter(f => f.filterid === filter.filterid)\r\n      .forEach(element => {\r\n        let wktPoly;\r\n        if (filter.igoSpatialSelector === 'snrc') {\r\n          if (value === '' && this.snrc !== '') {\r\n            wktPoly = this.wktService.snrcToWkt(this.snrc).wktPoly;\r\n            element.wkt_geometry = wktPoly;\r\n          } else if (\r\n            value !== '' &&\r\n            (checkSNRC1m.test(value) ||\r\n              checkSNRC250k.test(value) ||\r\n              checkSNRC50k.test(value))\r\n          ) {\r\n            wktPoly = this.wktService.snrcToWkt(value).wktPoly;\r\n            element.wkt_geometry = wktPoly;\r\n          }\r\n        } else if (filter.igoSpatialSelector === 'fixedExtent') {\r\n          wktPoly = this.wktService.extentToWkt(\r\n            mapProjection,\r\n            this.map.getExtent(),\r\n            mapProjection\r\n          ).wktPoly;\r\n          element.wkt_geometry = wktPoly;\r\n        }\r\n        if (wktPoly) {\r\n          this.addWktAsOverlay(wktPoly, filter.filterid, mapProjection);\r\n        }\r\n      });\r\n    this.refreshFilters();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { OgcFilterableDataSource } from '../shared/ogc-filter.interface';\r\nimport { IgoMap } from '../../map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filterable-form',\r\n  templateUrl: './ogc-filterable-form.component.html'\r\n})\r\nexport class OgcFilterableFormComponent {\r\n  @Input()\r\n  get datasource(): OgcFilterableDataSource {\r\n    return this._dataSource;\r\n  }\r\n  set datasource(value: OgcFilterableDataSource) {\r\n    this._dataSource = value;\r\n  }\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n\r\n  // tslint:disable-next-line:ban-types\r\n  @Input() refreshFilters: Function;\r\n\r\n  get refreshFunc() {\r\n    return this.refreshFilters;\r\n  }\r\n  @Input()\r\n  get showFeatureOnMap(): boolean {\r\n    return this._showFeatureOnMap;\r\n  }\r\n  set showFeatureOnMap(value: boolean) {\r\n    this._showFeatureOnMap = value;\r\n  }\r\n\r\n  private _showFeatureOnMap: boolean;\r\n  private _map: IgoMap;\r\n  private _dataSource: OgcFilterableDataSource;\r\n\r\n  public color = 'primary';\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport * as olstyle from 'ol/style';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { MapService } from '../../map/shared/map.service';\r\nimport { DownloadService } from '../../download/shared/download.service';\r\nimport { WMSDataSource } from '../../datasource/shared/datasources/wms-datasource';\r\nimport { WFSDataSourceOptionsParams } from '../../datasource/shared/datasources/wfs-datasource.interface';\r\n\r\nimport {\r\n  OgcFilterableDataSource,\r\n  OgcFiltersOptions,\r\n  OgcInterfaceFilterOptions\r\n} from '../shared/ogc-filter.interface';\r\nimport { OGCFilterService } from '../shared/ogc-filter.service';\r\nimport { IgoMap } from '../../map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filterable-item',\r\n  templateUrl: './ogc-filterable-item.component.html',\r\n  styleUrls: ['./ogc-filterable-item.component.scss']\r\n})\r\nexport class OgcFilterableItemComponent implements OnInit {\r\n  public color = 'primary';\r\n  private lastRunOgcFilter;\r\n  private defaultLogicalParent = 'And';\r\n  public hasActiveSpatialFilter = false;\r\n  public filtersAreEditable = true;\r\n  public filtersCollapsed = true;\r\n\r\n  @Input()\r\n  get layer(): Layer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: Layer) {\r\n    this._layer = value;\r\n  }\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n\r\n  get refreshFunc() {\r\n    return this.refreshFilters.bind(this);\r\n  }\r\n  @Input()\r\n  get showFeatureOnMap(): boolean {\r\n    return this._showFeatureOnMap;\r\n  }\r\n  set showFeatureOnMap(value: boolean) {\r\n    this._showFeatureOnMap = value;\r\n  }\r\n\r\n  public _showFeatureOnMap = false;\r\n  private _map: IgoMap;\r\n  private _layer: Layer;\r\n\r\n  get datasource(): OgcFilterableDataSource {\r\n    return this.layer.dataSource as OgcFilterableDataSource;\r\n  }\r\n\r\n  @Input()\r\n  get ogcFiltersHeaderShown(): boolean {\r\n    return this._ogcFiltersHeaderShown;\r\n  }\r\n  set ogcFiltersHeaderShown(value: boolean) {\r\n    this._ogcFiltersHeaderShown = value;\r\n  }\r\n  private _ogcFiltersHeaderShown: boolean;\r\n\r\n  constructor(\r\n    private ogcFilterService: OGCFilterService,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    switch (this.datasource.options.type) {\r\n      case 'wms':\r\n        this.ogcFilterService.setOgcWMSFiltersOptions(this.datasource);\r\n        break;\r\n      case 'wfs':\r\n        this.ogcFilterService.setOgcWFSFiltersOptions(this.datasource);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (this.datasource.options.ogcFilters) {\r\n      if (this.datasource.options.ogcFilters.interfaceOgcFilters) {\r\n        this.lastRunOgcFilter = JSON.parse(\r\n          JSON.stringify(this.datasource.options.ogcFilters.interfaceOgcFilters)\r\n        );\r\n        if (\r\n          this.datasource.options.ogcFilters.interfaceOgcFilters.filter(\r\n            f => f.wkt_geometry\r\n          ).length >= 1\r\n        ) {\r\n          this.hasActiveSpatialFilter = true;\r\n        }\r\n      }\r\n\r\n      this.filtersAreEditable = this.datasource.options.ogcFilters.editable\r\n        ? this.datasource.options.ogcFilters.editable\r\n        : false;\r\n    }\r\n  }\r\n\r\n  private getOverlayByID(id) {\r\n    this.map.overlay.dataSource.ol.getFeatureById(id);\r\n  }\r\n\r\n  toggleShowFeatureOnMap() {\r\n    this.showFeatureOnMap = !this.showFeatureOnMap;\r\n    this.datasource.options.ogcFilters.interfaceOgcFilters.forEach(filter => {\r\n      let drawnFeature;\r\n      let drawnStrokeColor = [125, 136, 140, 0] as [\r\n        number,\r\n        number,\r\n        number,\r\n        number\r\n      ];\r\n      let drawStrokeWidth = 2;\r\n      let drawnFillColor = [125, 136, 140, 0] as [\r\n        number,\r\n        number,\r\n        number,\r\n        number\r\n      ];\r\n\r\n      drawnFeature = this.getOverlayByID('ogcFilterOverlay_' + filter.filterid);\r\n      if (this.showFeatureOnMap !== false) {\r\n        drawnStrokeColor = [125, 136, 140, 0.5];\r\n        drawStrokeWidth = 2;\r\n        drawnFillColor = [125, 136, 140, 0];\r\n      }\r\n\r\n      const stroke = new olstyle.Stroke({\r\n        width: drawStrokeWidth,\r\n        color: drawnStrokeColor\r\n      });\r\n\r\n      const fill = new olstyle.Stroke({\r\n        color: drawnFillColor\r\n      });\r\n\r\n      const olStyle = new olstyle.Style({\r\n        stroke,\r\n        fill,\r\n        image: new olstyle.Circle({\r\n          radius: 5,\r\n          stroke,\r\n          fill\r\n        })\r\n      });\r\n\r\n      if (drawnFeature) {\r\n        drawnFeature.setStyle(olStyle);\r\n      }\r\n    });\r\n  }\r\n\r\n  addFilterToSequence() {\r\n    this.filtersCollapsed = false;\r\n    const interfaceOgcFilters: OgcInterfaceFilterOptions[] = this.datasource.options.ogcFilters.interfaceOgcFilters;\r\n    const arr = interfaceOgcFilters || [];\r\n    const lastLevel = arr.length === 0 ? 0 : arr[arr.length - 1].level;\r\n    let firstFieldName = '';\r\n    if (this.datasource.options.sourceFields.length > 0) {\r\n      firstFieldName =\r\n        this.datasource.options.sourceFields[0].name === undefined\r\n          ? ''\r\n          : this.datasource.options.sourceFields[0].name;\r\n    }\r\n    let fieldNameGeometry;\r\n    const datasourceOptions = this.datasource\r\n      .options as WFSDataSourceOptionsParams;\r\n    if (datasourceOptions.fieldNameGeometry) {\r\n      fieldNameGeometry = datasourceOptions.fieldNameGeometry;\r\n    } else if (\r\n      (this.datasource.options as any).paramsWFS &&\r\n      (this.datasource.options as any).paramsWFS.fieldNameGeometry\r\n    ) {\r\n      fieldNameGeometry = (this.datasource.options as any).paramsWFS\r\n        .fieldNameGeometry;\r\n    }\r\n    const status = arr.length === 0 ? true : false;\r\n    arr.push(\r\n      (this.datasource as any).ogcFilterWriter.addInterfaceFilter(\r\n        {\r\n          propertyName: firstFieldName,\r\n          operator: 'PropertyIsEqualTo',\r\n          active: status,\r\n          igoSpatialSelector: 'fixedExtent'\r\n        },\r\n        fieldNameGeometry,\r\n        lastLevel,\r\n        this.defaultLogicalParent\r\n      )\r\n    );\r\n    this.datasource.options.ogcFilters.interfaceOgcFilters = arr;\r\n  }\r\n\r\n  openDownload() {\r\n    this.downloadService.open(this.layer);\r\n  }\r\n\r\n  refreshFilters() {\r\n    const ogcFilters: OgcFiltersOptions = this.datasource.options.ogcFilters;\r\n    const activeFilters = ogcFilters.interfaceOgcFilters.filter(\r\n      f => f.active === true\r\n    );\r\n    if (activeFilters.length === 0) {\r\n      ogcFilters.filters = undefined;\r\n      ogcFilters.filtered = false;\r\n    }\r\n    if (activeFilters.length > 1) {\r\n      activeFilters[0].parentLogical = activeFilters[1].parentLogical;\r\n    }\r\n    if (\r\n      activeFilters.filter(\r\n        af => ['Contains', 'Intersects', 'Within'].indexOf(af.operator) !== -1\r\n      ).length === 0\r\n    ) {\r\n      this.hasActiveSpatialFilter = false;\r\n    } else {\r\n      this.hasActiveSpatialFilter = true;\r\n    }\r\n\r\n    if (\r\n      !(JSON.stringify(this.lastRunOgcFilter) === JSON.stringify(activeFilters))\r\n    ) {\r\n      if (this.layer.dataSource.options.type === 'wfs') {\r\n        const ogcDataSource: any = this.layer.dataSource;\r\n        const ogcLayer: OgcFiltersOptions = ogcDataSource.options.ogcFilters;\r\n        const writer = ogcDataSource.ogcFilterWriter;\r\n        ogcLayer.filters = writer.rebuiltIgoOgcFilterObjectFromSequence(\r\n          activeFilters\r\n        );\r\n        this.layer.dataSource.ol.clear();\r\n      } else if (\r\n        this.layer.dataSource.options.type === 'wms' &&\r\n        ogcFilters.enabled\r\n      ) {\r\n        let rebuildFilter = '';\r\n        if (activeFilters.length >= 1) {\r\n          const ogcDataSource: any = this.layer.dataSource;\r\n          const ogcLayer: OgcFiltersOptions = ogcDataSource.options.ogcFilters;\r\n          const writer = ogcDataSource.ogcFilterWriter;\r\n          ogcLayer.filters = writer.rebuiltIgoOgcFilterObjectFromSequence(\r\n            activeFilters\r\n          );\r\n          rebuildFilter = (this.layer\r\n            .dataSource as any).ogcFilterWriter.buildFilter(\r\n            ogcLayer.filters,\r\n            undefined,\r\n            undefined,\r\n            (this.layer.dataSource.options as any).fieldNameGeometry\r\n          );\r\n        }\r\n        this.ogcFilterService.filterByOgc(\r\n          this.datasource as WMSDataSource,\r\n          rebuildFilter\r\n        );\r\n        this.datasource.options.ogcFilters.filtered =\r\n          activeFilters.length === 0 ? false : true;\r\n      }\r\n\r\n      this.lastRunOgcFilter = JSON.parse(JSON.stringify(activeFilters));\r\n    } else {\r\n      // identical filter. Nothing triggered\r\n    }\r\n  }\r\n\r\n  get downloadable() {\r\n    return (this.datasource.options as any).download;\r\n  }\r\n\r\n  public setVisible() {\r\n    this.layer.visible = true;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { IgoMap } from '../../map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filterable-list',\r\n  templateUrl: './ogc-filterable-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OgcFilterableListComponent {\r\n  @Input()\r\n  get layers(): Layer[] {\r\n    return this._layers;\r\n  }\r\n  set layers(value: Layer[]) {\r\n    this._layers = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n\r\n  private _map: IgoMap;\r\n  private _layers: Layer[] = [];\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MapService } from '../../map/shared/map.service';\r\nimport { OgcFilterableListComponent } from './ogc-filterable-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoOgcFilterableListBinding]'\r\n})\r\nexport class OgcFilterableListBindingDirective implements OnInit, OnDestroy {\r\n  private component: OgcFilterableListComponent;\r\n  private layers$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() component: OgcFilterableListComponent,\r\n    private mapService: MapService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input layers\r\n    this.component.layers = [];\r\n\r\n    this.layers$$ = this.mapService.getMap().layers$.subscribe(layers => {\r\n      this.component.layers = layers;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { IgoMap } from '../../map';\r\nimport { OgcFilterableDataSourceOptions } from '../shared/ogc-filter.interface';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filter-button',\r\n  templateUrl: './ogc-filter-button.component.html',\r\n  styleUrls: ['./ogc-filter-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OgcFilterButtonComponent {\r\n  @Input()\r\n  get layer(): Layer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: Layer) {\r\n    this._layer = value;\r\n  }\r\n  private _layer: Layer;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  public ogcFilterCollapse = false;\r\n\r\n  @Input()\r\n  get ogcFiltersInLayers(): boolean {\r\n    return this._ogcFiltersInLayers;\r\n  }\r\n  set ogcFiltersInLayers(value: boolean) {\r\n    this._ogcFiltersInLayers = value;\r\n  }\r\n  private _ogcFiltersInLayers = false;\r\n\r\n  constructor() {}\r\n\r\n  toggleOgcFilter() {\r\n    if (this.layer.isInResolutionsRange) {\r\n      this.ogcFilterCollapse = !this.ogcFilterCollapse;\r\n    }\r\n  }\r\n\r\n  get options(): OgcFilterableDataSourceOptions {\r\n    if (!this.layer) {\r\n      return;\r\n    }\r\n    return this.layer.dataSource.options;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatListModule,\r\n  MatTooltipModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MAT_DATE_LOCALE\r\n} from '@angular/material';\r\n\r\n// import {\r\n//   MatDatetimepickerModule,\r\n//   MatNativeDatetimeModule\r\n// } from '@mat-datetimepicker/core';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoCollapsibleModule,\r\n  IgoListModule,\r\n  IgoKeyValueModule\r\n} from '@igo2/common';\r\n\r\nimport { FilterableDataSourcePipe } from './shared/filterable-datasource.pipe';\r\nimport { TimeFilterFormComponent } from './time-filter-form/time-filter-form.component';\r\nimport { TimeFilterItemComponent } from './time-filter-item/time-filter-item.component';\r\nimport { TimeFilterListBindingDirective } from './time-filter-list/time-filter-list-binding.directive';\r\nimport { TimeFilterListComponent } from './time-filter-list/time-filter-list.component';\r\nimport { TimeFilterService } from './shared/time-filter.service';\r\n\r\nimport { OgcFilterFormComponent } from './ogc-filter-form/ogc-filter-form.component';\r\nimport { OgcFilterableFormComponent } from './ogc-filterable-form/ogc-filterable-form.component';\r\nimport { OgcFilterableItemComponent } from './ogc-filterable-item/ogc-filterable-item.component';\r\nimport { OgcFilterableListBindingDirective } from './ogc-filterable-list/ogc-filterable-list-binding.directive';\r\nimport { OgcFilterableListComponent } from './ogc-filterable-list/ogc-filterable-list.component';\r\nimport { OgcFilterButtonComponent } from './ogc-filter-button/ogc-filter-button.component';\r\nimport { OGCFilterService } from './shared/ogc-filter.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    // MatDatetimepickerModule,\r\n    // MatNativeDatetimeModule,\r\n    IgoLanguageModule,\r\n    IgoCollapsibleModule,\r\n    IgoListModule,\r\n    IgoKeyValueModule\r\n  ],\r\n  exports: [\r\n    FilterableDataSourcePipe,\r\n    TimeFilterFormComponent,\r\n    TimeFilterItemComponent,\r\n    TimeFilterListComponent,\r\n    TimeFilterListBindingDirective,\r\n    OgcFilterFormComponent,\r\n    OgcFilterButtonComponent,\r\n    OgcFilterableFormComponent,\r\n    OgcFilterableItemComponent,\r\n    OgcFilterableListComponent,\r\n    OgcFilterableListBindingDirective\r\n  ],\r\n  declarations: [\r\n    FilterableDataSourcePipe,\r\n    TimeFilterFormComponent,\r\n    TimeFilterItemComponent,\r\n    TimeFilterListComponent,\r\n    TimeFilterListBindingDirective,\r\n    OgcFilterFormComponent,\r\n    OgcFilterButtonComponent,\r\n    OgcFilterableFormComponent,\r\n    OgcFilterableItemComponent,\r\n    OgcFilterableListComponent,\r\n    OgcFilterableListBindingDirective\r\n  ],\r\n  providers: [TimeFilterService, OGCFilterService]\r\n})\r\nexport class IgoFilterModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoFilterModule,\r\n      providers: [\r\n        {\r\n          provide: MAT_DATE_LOCALE,\r\n          useValue: 'fr'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport OlGeometryType from 'ol/geom/GeometryType';\r\n\r\nimport { FormFieldComponent } from '@igo2/common';\r\n\r\nimport { IgoMap } from '../../map';\r\nimport { GeoJSONGeometry } from '../shared/geometry.interfaces';\r\n\r\n/**\r\n * This input allows a user to draw a new geometry or to edit\r\n * an existing one on a map.\r\n */\r\n@FormFieldComponent('geometry')\r\n@Component({\r\n  selector: 'igo-geometry-form-field',\r\n  templateUrl: './geometry-form-field.component.html',\r\n  styleUrls: ['./geometry-form-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GeometryFormFieldComponent implements OnInit, OnDestroy {\r\n\r\n  geometryType$: BehaviorSubject<OlGeometryType> = new BehaviorSubject(undefined);\r\n  drawGuide$: BehaviorSubject<number> = new BehaviorSubject(0);\r\n  value$: BehaviorSubject<GeoJSONGeometry> = new BehaviorSubject(undefined);\r\n\r\n  private value$$: Subscription;\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * The map to draw the geometry on\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * The geometry type\r\n   */\r\n  @Input() geometryType: OlGeometryType;\r\n\r\n  /**\r\n   * Whether a geometry type toggle should be displayed\r\n   */\r\n  @Input() geometryTypeField: boolean = false;\r\n\r\n  /**\r\n   * Available geometry types\r\n   */\r\n  @Input() geometryTypes: string[] = ['Point', 'LineString', 'Polygon'];\r\n\r\n  /**\r\n   * Whether a draw guide field should be displayed\r\n   */\r\n  @Input() drawGuideField: boolean = false;\r\n\r\n  /**\r\n   * The drawGuide around the mouse pointer to help drawing\r\n   */\r\n  @Input() drawGuide: number = 0;\r\n\r\n  /**\r\n   * Draw guide placeholder\r\n   */\r\n  @Input() drawGuidePlaceholder: string = '';\r\n\r\n  /**\r\n   * Whether a measure tooltip should be displayed\r\n   */\r\n  @Input() measure: boolean = false;\r\n\r\n  /**\r\n   * The geometry type model\r\n   */\r\n  set geometryTypeModel(value: OlGeometryType) {this.geometryType$.next(value); }\r\n  get geometryTypeModel(): OlGeometryType { return this.geometryType$.value; }\r\n\r\n  /**\r\n   * The draw guide model\r\n   */\r\n  set drawGuideModel(value: number) {this.drawGuide$.next(value); }\r\n  get drawGuideModel(): number { return this.drawGuide$.value; }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Set up a value stream\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.geometryType$.next(this.geometryType);\r\n    this.drawGuide$.next(this.drawGuide);\r\n    this.value$.next(this.formControl.value ? this.formControl.value : undefined);\r\n    this.value$$ = this.formControl.valueChanges.subscribe((value: GeoJSONGeometry) => {\r\n      this.value$.next(value ? value : undefined);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the value stream\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.value$$.unsubscribe();\r\n  }\r\n\r\n  onGeometryTypeChange(geometryType: OlGeometryType) {\r\n    if (this.value$.value !== undefined) {\r\n      return;\r\n    }\r\n    this.geometryType$.next(geometryType);\r\n  }\r\n\r\n  onDrawGuideChange(value: number) {\r\n    this.drawGuide$.next(value);\r\n  }\r\n\r\n}\r\n","\r\nexport const MEASURE_UNIT_AUTO = 'auto';\r\n\r\nexport enum MeasureType {\r\n  Length = 'length',\r\n  Area = 'area'\r\n}\r\n\r\nexport enum MeasureLengthUnit {\r\n  Meters = 'meters',\r\n  Kilometers = 'kilometers',\r\n  Miles = 'miles',\r\n  Feet = 'feet'\r\n}\r\n\r\nexport const MeasureLengthUnitAbbreviation = {\r\n  [MeasureLengthUnit.Meters]: 'm',\r\n  [MeasureLengthUnit.Kilometers]: 'km',\r\n  [MeasureLengthUnit.Miles]: 'mi',\r\n  [MeasureLengthUnit.Feet]: 'ft'\r\n};\r\n\r\nexport enum MeasureAreaUnit {\r\n  SquareMeters = 'squareMeters',\r\n  SquareKilometers = 'squareKilometers',\r\n  SquareMiles = 'squareMiles',\r\n  SquareFeet = 'squareFeet',\r\n  Hectares = 'hectares',\r\n  Acres = 'acres'\r\n}\r\n\r\nexport const MeasureAreaUnitAbbreviation = {\r\n  [MeasureAreaUnit.SquareMeters]: 'mÂ²',\r\n  [MeasureAreaUnit.SquareKilometers]: 'kmÂ²',\r\n  [MeasureAreaUnit.SquareMiles]: 'miÂ²',\r\n  [MeasureAreaUnit.SquareFeet]: 'ftÂ²',\r\n  [MeasureAreaUnit.Hectares]: 'ha',\r\n  [MeasureAreaUnit.Acres]: 'ac'\r\n};\r\n","import * as olstyle from 'ol/style';\r\nimport OlGeometry from 'ol/geom/Geometry';\r\nimport OlPoint from 'ol/geom/Point';\r\nimport OlLineString from 'ol/geom/LineString';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlOverlay from 'ol/Overlay';\r\nimport { getCenter as olGetCenter } from 'ol/extent';\r\nimport {\r\n  getLength as olGetLength,\r\n  getArea as olGetArea\r\n} from 'ol/sphere';\r\n\r\nimport { Measure } from './measure.interfaces';\r\nimport {\r\n  MeasureAreaUnit,\r\n  MeasureAreaUnitAbbreviation,\r\n  MeasureLengthUnit,\r\n  MeasureLengthUnitAbbreviation\r\n} from './measure.enum';\r\n\r\n/**\r\n * Convert value from meters to kilometers\r\n * @param value Value in meters\r\n * @returns Value in kilometers\r\n */\r\nexport function metersToKilometers(value: number): number {\r\n  return value * 0.001;\r\n}\r\n\r\n/**\r\n * Convert value from meters to feet\r\n * @param value Value in meters\r\n * @returns Value in feet\r\n */\r\nexport function metersToFeet(value: number): number {\r\n  return value * 3.2808;\r\n}\r\n\r\n/**\r\n * Convert value from meters to miles\r\n * @param value Value in meters\r\n * @returns Value in miles\r\n */\r\nexport function metersToMiles(value: number): number {\r\n  return value * 0.000621;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to square kilometers\r\n * @param value Value in square meters\r\n * @returns Value in square kilometers\r\n */\r\nexport function squareMetersToSquareKilometers(value: number): number {\r\n  return value * 0.000001;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to square miles\r\n * @param value Value in square meters\r\n * @returns Value in square miles\r\n */\r\nexport function squareMetersToSquareMiles(value: number): number {\r\n  return value * 0.0000003861;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to square feet\r\n * @param value Value in square meters\r\n * @returns Value in square feet\r\n */\r\nexport function squareMetersToSquareFeet(value: number): number {\r\n  return value * 10.764;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to hectares\r\n * @param value Value in square meters\r\n * @returns Value in hectares\r\n */\r\nexport function squareMetersToHectares(value: number): number {\r\n  return value * 0.0001;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to acres\r\n * @param value Value in square meters\r\n * @returns Value in acres\r\n */\r\nexport function squareMetersToAcres(value: number): number {\r\n  return value * 0.00024711;\r\n}\r\n\r\n/**\r\n * Convert value from meters to the specified length unit\r\n * @param value Value in meters\r\n * @param unit Length unit\r\n * @returns Value in unit\r\n */\r\nexport function metersToUnit(value: number, unit: MeasureLengthUnit): number | undefined {\r\n  const conversionMapper = new Map([\r\n    [MeasureLengthUnit.Meters, (val: number) => val],\r\n    [MeasureLengthUnit.Kilometers, metersToKilometers],\r\n    [MeasureLengthUnit.Miles, metersToMiles],\r\n    [MeasureLengthUnit.Feet, metersToFeet],\r\n  ]);\r\n  const conversion = conversionMapper.get(unit);\r\n\r\n  return conversion ? conversion(value) : undefined;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to the specified area unit\r\n * @param value Value in meters\r\n * @param unit Area unit\r\n * @returns Value in unit\r\n */\r\nexport function squareMetersToUnit(value: number, unit: MeasureAreaUnit): number | undefined {\r\n  const conversionMapper = new Map([\r\n    [MeasureAreaUnit.SquareMeters, (val: number) => val],\r\n    [MeasureAreaUnit.SquareKilometers, squareMetersToSquareKilometers],\r\n    [MeasureAreaUnit.SquareMiles, squareMetersToSquareMiles],\r\n    [MeasureAreaUnit.SquareFeet, squareMetersToSquareFeet],\r\n    [MeasureAreaUnit.Hectares, squareMetersToHectares],\r\n    [MeasureAreaUnit.Acres, squareMetersToAcres],\r\n  ]);\r\n  const conversion = conversionMapper.get(unit);\r\n\r\n  return conversion ? conversion(value) : undefined;\r\n}\r\n\r\n/**\r\n * This method format a measure to a readable format\r\n * @param measure Measure\r\n * @param options Formatting options\r\n * @returns Formatted measure\r\n */\r\nexport function formatMeasure(measure: number, options?: {\r\n  decimal?: number;\r\n  unit?: MeasureAreaUnit | MeasureLengthUnit;\r\n  unitAbbr?: boolean;\r\n  locale?: string;\r\n}) {\r\n  let decimal = options.decimal;\r\n  if (decimal === undefined || decimal < 0) {\r\n    decimal = 1;\r\n  }\r\n\r\n  const parts = [];\r\n  if (options.locale !== undefined) {\r\n    parts.push(measure.toLocaleString(options.locale, {\r\n      minimumFractionDigits: decimal,\r\n      maximumFractionDigits: decimal\r\n    }));\r\n  } else {\r\n    parts.push(measure.toFixed(decimal).toString());\r\n  }\r\n\r\n  if (options.unit !== undefined && options.unitAbbr === true) {\r\n    parts.push(\r\n      MeasureLengthUnitAbbreviation[options.unit] ||\r\n      MeasureAreaUnitAbbreviation[options.unit]\r\n    );\r\n  }\r\n\r\n  return parts.filter(p => p !== undefined).join(' ');\r\n}\r\n\r\n/**\r\n * Compute best length measure unit for a given measure in meters\r\n * @param value Value in meters\r\n * @returns Measure unit\r\n */\r\nexport function computeBestLengthUnit(value: number): MeasureLengthUnit {\r\n  let unit = MeasureLengthUnit.Meters;\r\n  let converted = value;\r\n  const possibleUnits = [MeasureLengthUnit.Kilometers];\r\n  while (converted > 1000 && possibleUnits.length > 0) {\r\n    unit = possibleUnits.pop();\r\n    converted = metersToUnit(value, unit);\r\n  }\r\n  return unit;\r\n}\r\n\r\n/**\r\n * Compute best length measure unit for a given measure in square meters\r\n * @param value Value in meters\r\n * @returns Measure unit\r\n */\r\nexport function computeBestAreaUnit(value: number): MeasureAreaUnit {\r\n  let unit = MeasureAreaUnit.SquareMeters;\r\n  let converted = value;\r\n  const possibleUnits = [MeasureAreaUnit.SquareKilometers];\r\n  while (converted > 1000000 && possibleUnits.length > 0) {\r\n    unit = possibleUnits.pop();\r\n    converted = squareMetersToUnit(value, unit);\r\n  }\r\n  return unit;\r\n}\r\n\r\n/**\r\n * Create a default style for a measure interaction\r\n * @returns OL style\r\n */\r\nexport function createMeasureInteractionStyle(): olstyle.Style {\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color: '#ffcc33',\r\n      lineDash: [10, 10],\r\n      width: 2\r\n    }),\r\n    fill:  new olstyle.Fill({\r\n      color: 'rgba(255, 255, 255, 0.2)'\r\n    }),\r\n    image: new olstyle.Circle({\r\n      radius: 5,\r\n      stroke: new olstyle.Stroke({\r\n        color: '#ffcc33',\r\n      }),\r\n      fill: new olstyle.Fill({\r\n        color: 'rgba(255, 255, 255, 0.2)'\r\n      })\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Create a default style for a measure layer\r\n * @returns OL style\r\n */\r\nexport function createMeasureLayerStyle(): olstyle.Style {\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color: '#ffcc33',\r\n      width: 2\r\n    }),\r\n    fill:  new olstyle.Fill({\r\n      color: 'rgba(255, 255, 255, 0.2)'\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Compute the length in meters of an OL geometry with a given projection\r\n * @param olGeometry Ol geometry\r\n * @param projection olGeometry's projection\r\n * @returns Length in meters\r\n */\r\nexport function measureOlGeometryLength(olGeometry: OlGeometry, projection: string): number | undefined {\r\n  if (olGeometry instanceof OlPoint) {\r\n    return undefined;\r\n  }\r\n  if (olGeometry.getFlatCoordinates().length === 0) {\r\n    return undefined;\r\n  }\r\n  return olGetLength(olGeometry, {projection});\r\n}\r\n\r\n/**\r\n * Compute the area in square meters of an OL geometry with a given projection\r\n * @param olGeometry Ol geometry\r\n * @param projection olGeometry's projection\r\n * @returns Area in square meters\r\n */\r\nexport function measureOlGeometryArea(olGeometry: OlGeometry, projection: string): number | undefined {\r\n  if (olGeometry instanceof OlPoint || olGeometry instanceof OlLineString) {\r\n    return undefined;\r\n  }\r\n  if (olGeometry.getFlatCoordinates().length === 0) {\r\n    return undefined;\r\n  }\r\n  return olGetArea(olGeometry, {projection});\r\n}\r\n\r\n/**\r\n * Compute the area (square meters), length (meters) and last length (meters)\r\n * of an OL geometry with a given projection.\r\n * @param olGeometry Ol geometry\r\n * @param projection olGeometry's projection\r\n * @returns Computed measure\r\n */\r\nexport function measureOlGeometry(olGeometry: OlGeometry, projection: string): Measure {\r\n  const length = measureOlGeometryLength(olGeometry, projection);\r\n  const area = measureOlGeometryArea(olGeometry, projection);\r\n\r\n  const lengths = [];\r\n  const coordinates = olGeometry.flatCoordinates;\r\n  const coordinatesLength = coordinates.length;\r\n  for (let i = 0; i <= coordinatesLength - 4; i += 2) {\r\n    const olSegment = new OlLineString([\r\n      [coordinates[i], coordinates[i + 1]],\r\n      [coordinates[i + 2], coordinates[i + 3]]\r\n    ]);\r\n\r\n    lengths.push(measureOlGeometryLength(olSegment, projection));\r\n  }\r\n\r\n  return {\r\n    area,\r\n    length,\r\n    lengths\r\n  };\r\n}\r\n\r\n/**\r\n * Update an OL geometry midpoints and return an array of those points\r\n * @param olGeometry OL Geometry\r\n * @returns OL points\r\n */\r\nexport function updateOlGeometryMidpoints(olGeometry: OlLineString | OlPolygon): OlPoint[] {\r\n  const olMidpoints = getOlGeometryMidpoints(olGeometry);\r\n\r\n  // TODO: handle multi geometries\r\n  const coordinates = olGeometry.flatCoordinates;\r\n  const midpointsLength = olMidpoints.length;\r\n  for (let i = 0; i < midpointsLength; i++) {\r\n    const j = i * 2;\r\n    const olSegment = new OlLineString([\r\n      [coordinates[j], coordinates[j + 1]],\r\n      [coordinates[j + 2], coordinates[j + 3]]\r\n    ]);\r\n\r\n    const midpointCoordinate = olSegment.getCoordinateAt(0.5);\r\n    const olMidpoint = olMidpoints[i];\r\n    if (olMidpoint !== undefined) {\r\n      olMidpoint.setCoordinates(midpointCoordinate);\r\n    } else {\r\n      olMidpoints[i] = new OlPoint(midpointCoordinate);\r\n    }\r\n  }\r\n  return olMidpoints;\r\n}\r\n\r\n/**\r\n * Clear an OL geometry midpoints and return an array of those points\r\n * @param olGeometry OL Geometry\r\n */\r\nexport function clearOlGeometryMidpoints(olGeometry: OlLineString | OlPolygon) {\r\n  const olMidpoints = olGeometry.get('_midpoints') || [];\r\n  const midpointsLength = olMidpoints.length;\r\n  for (let i = 0; i < midpointsLength; i++) {\r\n    const olMidpoint = olMidpoints[i];\r\n    if (olMidpoint !== undefined) {\r\n      if (olMidpoint !== undefined) {\r\n        clearOlMidpointTooltip(olMidpoint);\r\n      }\r\n    }\r\n  }\r\n\r\n  olGeometry.set('_midpoints', undefined, true);\r\n\r\n  return olMidpoints;\r\n}\r\n\r\n/**\r\n * Return an array of  OL geometry midpoints, if any\r\n * @param olGeometry OL Geometry\r\n * @returns OL points\r\n */\r\nfunction getOlGeometryMidpoints(olGeometry: OlLineString | OlPolygon): OlPoint[] {\r\n  const expectedNumber = Math.max((olGeometry.flatCoordinates.length / 2) - 1, 0);\r\n\r\n  // TODO: This works but it's quite messy. If time permits,\r\n  // clean this. Maybe a Tooltip class could handle that\r\n  let olMidpoints = olGeometry.get('_midpoints');\r\n  if (olMidpoints === undefined) {\r\n    olMidpoints = new Array(expectedNumber);\r\n    olGeometry.set('_midpoints', olMidpoints, true);\r\n    return olMidpoints;\r\n  }\r\n\r\n  if (expectedNumber === olMidpoints.length) {\r\n    return olMidpoints;\r\n  }\r\n\r\n  if (expectedNumber > olMidpoints.length) {\r\n    olMidpoints.push(...new Array(expectedNumber - olMidpoints.length));\r\n    return olMidpoints;\r\n  }\r\n\r\n  for (let i = expectedNumber; i < olMidpoints.length; i++) {\r\n    const olMidpoint = olMidpoints[expectedNumber];\r\n    if (olMidpoint !== undefined) {\r\n      clearOlMidpointTooltip(olMidpoint);\r\n    }\r\n  }\r\n  olMidpoints.splice(expectedNumber);\r\n\r\n  return olMidpoints;\r\n}\r\n\r\n/**\r\n * Remove an OL midpoint's tooltip from the map\r\n * @param olMidpoint OL Point\r\n */\r\nfunction clearOlMidpointTooltip(olMidpoint: OlPoint) {\r\n  const olTooltip = olMidpoint.get('_tooltip');\r\n  if (olTooltip !== undefined) {\r\n    const olMap = olTooltip.getMap();\r\n    if (olMap !== undefined) {\r\n      olMap.removeOverlay(olTooltip);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Add an OL overlay at each midpoint and return an array of those overlays\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function updateOlTooltipsAtMidpoints(olGeometry: OlLineString | OlPolygon): OlOverlay[] {\r\n  const olMidpoints = updateOlGeometryMidpoints(olGeometry);\r\n  const olTooltips = olMidpoints.map((olMidpoint: OlPoint) => {\r\n    let olTooltip = olMidpoint.get('_tooltip');\r\n    if (olTooltip === undefined) {\r\n      olTooltip = createOlTooltipAtPoint(olMidpoint);\r\n    } else {\r\n      olTooltip.setPosition(olMidpoint.flatCoordinates);\r\n    }\r\n    return olTooltip;\r\n  });\r\n  return olTooltips;\r\n}\r\n\r\n/**\r\n * Return an array of OL overlay at midspoints, if any\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function getOlTooltipsAtMidpoints(olGeometry: OlLineString | OlPolygon): OlOverlay[] {\r\n  const olMidpoints = getOlGeometryMidpoints(olGeometry);\r\n  return olMidpoints.map((olMidpoint: OlPoint) => {\r\n    return olMidpoint ? olMidpoint.get('_tooltip') : undefined;\r\n  });\r\n}\r\n\r\n/**\r\n * Update an OL geometry center and return it\r\n * @param olGeometry OL Geometry\r\n * @returns OL point\r\n */\r\nexport function updateOlGeometryCenter(olGeometry: OlLineString | OlPolygon): OlPoint {\r\n  let olCenter = olGeometry.get('_center');\r\n  const centerCoordinate = olGetCenter(olGeometry.getExtent());\r\n  if (olCenter !== undefined) {\r\n    olCenter.setCoordinates(centerCoordinate);\r\n  } else {\r\n    olCenter = new OlPoint(centerCoordinate);\r\n    olGeometry.set('_center', olCenter);\r\n  }\r\n\r\n  return olCenter;\r\n}\r\n\r\n/**\r\n * Add an OL overlay at the center of a geometry and return that overlay\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlay\r\n */\r\nexport function updateOlTooltipAtCenter(olGeometry: OlLineString | OlPolygon): OlOverlay {\r\n  const olCenter = updateOlGeometryCenter(olGeometry);\r\n  let olTooltip = olCenter.get('_tooltip');\r\n  if (olTooltip === undefined) {\r\n    olTooltip = createOlTooltipAtPoint(olCenter);\r\n  } else {\r\n    olTooltip.setPosition(olCenter.flatCoordinates);\r\n  }\r\n  return olTooltip;\r\n}\r\n\r\n/**\r\n * Return an array of OL overlay at midspoints, if any\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function getOlTooltipAtCenter(olGeometry: OlLineString | OlPolygon): OlOverlay {\r\n  const olCenter = olGeometry.get('_center');\r\n  return olCenter ? olCenter.get('_tooltip') : undefined;\r\n}\r\n\r\n/**\r\n * Get all the tooltips of an OL geometry\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function getTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon): OlOverlay[] {\r\n  const olTooltips = [].concat(getOlTooltipsAtMidpoints(olGeometry) || []);\r\n  const olCenterTooltip = getOlTooltipAtCenter(olGeometry);\r\n  if (olCenterTooltip !== undefined) {\r\n    olTooltips.push(olCenterTooltip);\r\n  }\r\n  return olTooltips;\r\n}\r\n\r\n/**\r\n * Create an OL overlay at a point and bind the overlay to the point\r\n * @param olPoint OL Point\r\n * @returns OL overlay\r\n */\r\nexport function createOlTooltipAtPoint(olPoint: OlPoint): OlOverlay {\r\n  const olTooltip = new OlOverlay({\r\n    element: document.createElement('div'),\r\n    offset: [-30, -10],\r\n    className: [\r\n      'igo-map-tooltip',\r\n      'igo-map-tooltip-measure'\r\n    ].join(' '),\r\n    stopEvent: false\r\n  });\r\n  olTooltip.setPosition(olPoint.flatCoordinates);\r\n  olPoint.set('_tooltip', olTooltip);\r\n\r\n  return olTooltip;\r\n}\r\n","/* tslint:disable */\r\n// See this issue: https://github.com/Microsoft/TypeScript/issues/13965\r\n// And the solution: https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n// for an explanation as to why the prototype is set manually\r\n/* tslint:enable */\r\n\r\nexport class GeometrySliceError extends Error {}\r\n\r\nexport class GeometrySliceMultiPolygonError extends GeometrySliceError {\r\n  constructor() {\r\n    super('Can\\'t slice a MultiPolygon.');\r\n    Object.setPrototypeOf(this, GeometrySliceMultiPolygonError.prototype);\r\n  }\r\n}\r\n\r\nexport class GeometrySliceLineStringError extends GeometrySliceError {\r\n  constructor() {\r\n    super('Can\\'t slice with a line that has more than 2 points.');\r\n    Object.setPrototypeOf(this, GeometrySliceLineStringError.prototype);\r\n  }\r\n}\r\n\r\nexport class GeometrySliceTooManyIntersectionError extends GeometrySliceError {\r\n  constructor() {\r\n    super('More than 2 intersections found between the target polygon and the slicing line.');\r\n    Object.setPrototypeOf(this, GeometrySliceTooManyIntersectionError.prototype);\r\n  }\r\n}\r\n","import * as olstyle from 'ol/style';\r\nimport OlLineString from 'ol/geom/LineString';\r\nimport OlLinearRing from 'ol/geom/LinearRing';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\nimport lineIntersect from '@turf/line-intersect';\r\nimport { lineString } from '@turf/helpers';\r\n\r\nimport {\r\n  GeometrySliceMultiPolygonError,\r\n  GeometrySliceLineStringError,\r\n  GeometrySliceTooManyIntersectionError\r\n } from './geometry.errors';\r\n\r\n/**\r\n * Create a default style for draw and modify interactions\r\n * @returns OL style\r\n */\r\nexport function createDrawInteractionStyle(): olstyle.Style {\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color:  [0, 153, 255, 1],\r\n      width: 2\r\n    }),\r\n    fill:  new olstyle.Fill({\r\n      color:  [0, 153, 255, 0.2]\r\n    }),\r\n    image: new olstyle.Circle({\r\n      radius: 5,\r\n      stroke: new olstyle.Stroke({\r\n        color: [0, 153, 255, 1],\r\n      }),\r\n      fill: new olstyle.Fill({\r\n        color:  [0, 153, 255, 0.2]\r\n      })\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Create a default style for drawing a hole\r\n * @returns OL style\r\n */\r\nexport function createDrawHoleInteractionStyle(): olstyle.Style {\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color:  [0, 153, 255, 1],\r\n      width: 2\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Slice geometry into two parts\r\n * @param olGeometry OL geometry\r\n * @param olSlicer Slicing line\r\n * @returns New OL geometries\r\n */\r\nexport function sliceOlGeometry(\r\n  olGeometry: OlLineString | OlPolygon,\r\n  olSlicer: OlLineString\r\n): Array<OlLineString | OlPolygon> {\r\n  if (olGeometry instanceof OlPolygon) {\r\n    return sliceOlPolygon(olGeometry, olSlicer);\r\n  } else if (olGeometry instanceof OlLineString) {\r\n    return sliceOlLineString(olGeometry, olSlicer);\r\n  }\r\n  return [];\r\n}\r\n\r\n/**\r\n * Slice OL LineString into one or more lines\r\n * @param olLineString OL line string\r\n * @param olSlicer Slicing line\r\n * @returns New OL line strings\r\n */\r\nexport function sliceOlLineString(olLineString: OlLineString, olSlicer: OlLineString): OlLineString[] {\r\n  return [];\r\n}\r\n\r\n/**\r\n * Slice OL Polygon into one or more polygons\r\n * @param olPolygon OL polygon\r\n * @param olSlicer Slicing line\r\n * @returns New OL polygons\r\n */\r\nexport function sliceOlPolygon(olPolygon: OlPolygon, olSlicer: OlLineString): OlPolygon[] {\r\n  if (olPolygon.getLinearRingCount() > 1) {\r\n    throw new GeometrySliceMultiPolygonError();\r\n  }\r\n\r\n  if (olSlicer.getCoordinates().length > 2) {\r\n    throw new GeometrySliceLineStringError();\r\n  }\r\n\r\n  const olGeoJSON = new OlGeoJSON();\r\n  const slicer = olGeoJSON.writeGeometryObject(olSlicer);\r\n  const outerCoordinates = olPolygon.getLinearRing(0).getCoordinates();\r\n\r\n  const parts = [[], []];\r\n  let totalIntersectionCount = 0;\r\n  for (let i = 0, ii = outerCoordinates.length - 1; i < ii; i++) {\r\n    const segmentCoordinates = [outerCoordinates[i], outerCoordinates[i + 1]];\r\n    const segment = lineString(segmentCoordinates);\r\n    const intersections = lineIntersect(segment, slicer).features;\r\n\r\n    const intersectionCount = intersections.length;\r\n    totalIntersectionCount += intersectionCount;\r\n    if (intersectionCount > 1 || totalIntersectionCount > 2) {\r\n      throw new GeometrySliceTooManyIntersectionError();\r\n    }\r\n\r\n    parts[0].push(segmentCoordinates[0]);\r\n    if (intersectionCount === 1) {\r\n      const intersection = intersections[0].geometry.coordinates;\r\n      parts[0].push(intersection);\r\n      parts[1].push(intersection);\r\n      parts.reverse();\r\n    }\r\n  }\r\n\r\n  if (totalIntersectionCount <= 1) {\r\n    return [];\r\n  }\r\n\r\n  parts[0].push(parts[0][0]);\r\n  parts[1].push(parts[1][0]);\r\n\r\n  return [new OlPolygon([parts[0]]), new OlPolygon([parts[1]])];\r\n}\r\n\r\n/**\r\n * Splice geometry into two parts\r\n * @param olGeometry OL geometry\r\n * @param olSlicer Slicing line\r\n * @returns New OL geometries\r\n */\r\nexport function addLinearRingToOlPolygon(olPolygon: OlPolygon, olLinearRing: OlLinearRing ): OlPolygon {\r\n  // TODO: make some validation and support updating an existing linear ring\r\n  olPolygon.appendLinearRing(olLinearRing);\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlStyle from 'ol/style';\r\nimport OlGeometryType from 'ol/geom/GeometryType';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlDraw from 'ol/interaction/Draw';\r\nimport {\r\n  Geometry as OlGeometry,\r\n  GeometryEvent as OlGeometryEvent\r\n} from 'ol/geom/Geometry';\r\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\r\nimport { unByKey } from 'ol/Observable';\r\nimport { MapBrowserEvent as OlMapBrowserEvent } from 'ol/MapBrowserEvent';\r\nimport { shiftKeyOnly } from 'ol/events/condition';\r\n\r\nimport { Subject, Subscription, fromEvent } from 'rxjs';\r\n\r\nexport interface DrawControlOptions {\r\n  geometryType: OlGeometryType;\r\n  source?: OlVectorSource;\r\n  layer?: OlVectorLayer;\r\n  layerStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  drawStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  maxPoints?: number;\r\n}\r\n\r\n/**\r\n * Control to draw geometries\r\n */\r\nexport class DrawControl {\r\n\r\n  /**\r\n   * Draw start observable\r\n   */\r\n  public start$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Draw end observable\r\n   */\r\n  public end$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Geometry changes observable\r\n   */\r\n  public changes$: Subject<OlGeometry> = new Subject();\r\n\r\n  private olMap: OlMap;\r\n  private olOverlayLayer: OlVectorLayer;\r\n  private olDrawInteraction: OlDraw;\r\n  private onDrawStartKey: string;\r\n  private onDrawEndKey: string;\r\n  private onChangesKey: string;\r\n\r\n  private keyDown$$: Subscription;\r\n\r\n  /**\r\n   * Wheter the control is active\r\n   */\r\n  get active(): boolean {\r\n    return this.olMap !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Geometry type\r\n   * @internal\r\n   */\r\n  get geometryType(): OlGeometryType {\r\n    return this.options.geometryType;\r\n  }\r\n\r\n  /**\r\n   * OL overlay source\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  constructor(private options: DrawControlOptions) {\r\n    if (options.layer !== undefined) {\r\n      this.olOverlayLayer = options.layer;\r\n    } else {\r\n      this.olOverlayLayer = this.createOlInnerOverlayLayer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add or remove this control to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap === undefined) {\r\n      this.clearOlInnerOverlaySource();\r\n      this.removeOlInnerOverlayLayer();\r\n      this.removeOlDrawInteraction();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n    this.addOlInnerOverlayLayer();\r\n    this.addOlDrawInteraction();\r\n  }\r\n\r\n  /**\r\n   * Return the overlay source\r\n   */\r\n  getSource(): OlVectorSource {\r\n    return this.olOverlaySource;\r\n  }\r\n\r\n  /**\r\n   * Create an overlay source if none is defined in the options\r\n   */\r\n  private createOlInnerOverlayLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: this.options.source ? this.options.source : new OlVectorSource(),\r\n      style: this.options.layerStyle,\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer if it wasn't defined in the options\r\n   */\r\n  private removeOlInnerOverlayLayer() {\r\n    if (this.options.layer === undefined && this.olMap !== undefined) {\r\n      this.olMap.removeLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer if it wasn't defined in the options\r\n   */\r\n  private addOlInnerOverlayLayer(): OlVectorLayer {\r\n    if (this.options.layer === undefined) {\r\n      this.olMap.addLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay source if it wasn't defined in the options\r\n   */\r\n  private clearOlInnerOverlaySource() {\r\n    if (this.options.layer === undefined && this.options.source === undefined) {\r\n      this.olOverlaySource.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a draw interaction to the map an set up some listeners\r\n   */\r\n  private addOlDrawInteraction() {\r\n    const olDrawInteraction = new OlDraw({\r\n      type: this.geometryType,\r\n      source: this.getSource(),\r\n      stopClick: true,\r\n      style: this.options.drawStyle,\r\n      maxPoints: this.options.maxPoints,\r\n      freehand: false,\r\n      freehandCondition: () => false\r\n    });\r\n\r\n    this.onDrawStartKey = olDrawInteraction\r\n      .on('drawstart', (event: OlDrawEvent) => this.onDrawStart(event));\r\n    this.onDrawEndKey = olDrawInteraction\r\n      .on('drawend', (event: OlDrawEvent) => this.onDrawEnd(event));\r\n    this.olMap.addInteraction(olDrawInteraction);\r\n    this.olDrawInteraction = olDrawInteraction;\r\n  }\r\n\r\n  /**\r\n   * Remove the draw interaction\r\n   */\r\n  private removeOlDrawInteraction() {\r\n    if (this.olDrawInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.unsubscribeToKeyDown();\r\n    unByKey(this.onDrawStartKey);\r\n    unByKey(this.onDrawEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olDrawInteraction);\r\n    }\r\n    this.olDrawInteraction = undefined;\r\n  }\r\n\r\n  /**\r\n   * When drawing starts, clear the overlay and start watching from changes\r\n   * @param event Draw start event\r\n   */\r\n  private onDrawStart(event: OlDrawEvent) {\r\n    const olGeometry = event.feature.getGeometry();\r\n    this.start$.next(olGeometry);\r\n    this.clearOlInnerOverlaySource();\r\n    this.onChangesKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      this.changes$.next(olGeometryEvent.target);\r\n    });\r\n    this.subscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * When drawing ends, update the geometry observable and start watching from changes\r\n   * @param event Draw end event\r\n   */\r\n  private onDrawEnd(event: OlDrawEvent) {\r\n    this.unsubscribeToKeyDown();\r\n    if (this.onChangesKey !== undefined) {\r\n      unByKey(this.onChangesKey);\r\n    }\r\n    this.end$.next(event.feature.getGeometry());\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key down to activate the draw control\r\n   */\r\n  private subscribeToKeyDown() {\r\n    this.unsubscribeToKeyDown();\r\n    this.keyDown$$ = fromEvent(document, 'keydown').subscribe((event: KeyboardEvent) => {\r\n      // On ESC key down, remove the last vertex\r\n      if (event.keyCode === 27) {\r\n        this.olDrawInteraction.removeLastPoint();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key down\r\n   */\r\n  private unsubscribeToKeyDown() {\r\n    if (this.keyDown$$ !== undefined) {\r\n      this.keyDown$$.unsubscribe();\r\n      this.keyDown$$ = undefined;\r\n    }\r\n  }\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlStyle from 'ol/style';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlModify from 'ol/interaction/Modify';\r\nimport OlTranslate from 'ol/interaction/Translate';\r\nimport OlDraw from 'ol/interaction/Draw';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlLinearRing from 'ol/geom/LinearRing';\r\nimport OlInteraction from 'ol/interaction/Interaction';\r\nimport OlDragBoxInteraction from 'ol/interaction/DragBox';\r\nimport { MapBrowserEvent as OlMapBrowserEvent } from 'ol/MapBrowserEvent';\r\nimport {\r\n  Geometry as OlGeometry,\r\n  GeometryEvent as OlGeometryEvent\r\n} from 'ol/geom/Geometry';\r\nimport { ModifyEvent as OlModifyEvent } from 'ol/interaction/Modify';\r\nimport { TranslateEvent as OlTranslateEvent } from 'ol/interaction/Translate';\r\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\nimport { Subject, Subscription, fromEvent } from 'rxjs';\r\n\r\nimport { addLinearRingToOlPolygon, createDrawHoleInteractionStyle } from '../geometry.utils';\r\n\r\nexport interface ModifyControlOptions {\r\n  source?: OlVectorSource;\r\n  layer?: OlVectorLayer;\r\n  layerStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  drawStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n}\r\n\r\n/**\r\n * Control to modify geometries\r\n */\r\nexport class ModifyControl {\r\n\r\n  /**\r\n   * Modify start observable\r\n   */\r\n  public start$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Modify end observable\r\n   */\r\n  public end$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Geometry changes observable\r\n   */\r\n  public changes$: Subject<OlGeometry> = new Subject();\r\n\r\n  private olMap: OlMap;\r\n  private olOverlayLayer: OlVectorLayer;\r\n  private olModifyInteraction: OlModify;\r\n  private onModifyStartKey: string;\r\n  private onModifyEndKey: string;\r\n  private onModifyKey: string;\r\n  private olModifyInteractionIsActive: boolean = false;\r\n  private olTranslateInteraction: OlTranslate;\r\n  private onTranslateStartKey: string;\r\n  private onTranslateEndKey: string;\r\n  private onTranslateKey: string;\r\n  private olTranslateInteractionIsActive: boolean = false;\r\n  private olDrawInteraction: OlTranslate;\r\n  private onDrawStartKey: string;\r\n  private onDrawEndKey: string;\r\n  private onDrawKey: string;\r\n  private olDrawInteractionIsActive: boolean = false;\r\n\r\n  private keyDown$$: Subscription;\r\n  private drawKeyUp$$: Subscription;\r\n  private drawKeyDown$$: Subscription;\r\n\r\n  private removedOlInteractions: OlInteraction[] = [];\r\n  private olLinearRingsLayer: OlVectorLayer;\r\n\r\n  /**\r\n   * Wheter the control is active\r\n   */\r\n  get active(): boolean {\r\n    return this.olMap !== undefined;\r\n  }\r\n\r\n  /**\r\n   * OL overlay source\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  /**\r\n   * OL linear rings source\r\n   * @internal\r\n   */\r\n  get olLinearRingsSource(): OlVectorSource {\r\n    return this.olLinearRingsLayer.getSource();\r\n  }\r\n\r\n  constructor(private options: ModifyControlOptions) {\r\n    if (options.layer !== undefined) {\r\n      this.olOverlayLayer = options.layer;\r\n    } else {\r\n      this.olOverlayLayer = this.createOlInnerOverlayLayer();\r\n    }\r\n    this.olLinearRingsLayer = this.createOlLinearRingsLayer();\r\n  }\r\n\r\n  /**\r\n   * Add or remove this control to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap === undefined) {\r\n      this.clearOlInnerOverlaySource();\r\n      this.removeOlInnerOverlayLayer();\r\n      this.removeOlModifyInteraction();\r\n      this.removeOlTranslateInteraction();\r\n      this.removeOlDrawInteraction();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n    this.addOlInnerOverlayLayer();\r\n    this.addOlDrawInteraction();\r\n    this.addOlTranslateInteraction();\r\n    this.activateTranslateInteraction();\r\n    this.addOlModifyInteraction();\r\n    this.activateModifyInteraction();\r\n  }\r\n\r\n  /**\r\n   * Return the overlay source\r\n   */\r\n  getSource(): OlVectorSource {\r\n    return this.olOverlaySource;\r\n  }\r\n\r\n  /**\r\n   * Add an OL geometry to the overlay and start modifying it\r\n   * @param olGeometry Ol Geometry\r\n   */\r\n  setOlGeometry(olGeometry: OlGeometry) {\r\n    const olFeature = new OlFeature({geometry: olGeometry});\r\n    this.olOverlaySource.clear();\r\n    this.olOverlaySource.addFeature(olFeature);\r\n  }\r\n\r\n  /**\r\n   * Create an overlay source if none is defined in the options\r\n   */\r\n  private createOlInnerOverlayLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: this.options.source ? this.options.source : new OlVectorSource(),\r\n      style: this.options.layerStyle,\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer if it wasn't defined in the options\r\n   */\r\n  private addOlInnerOverlayLayer(): OlVectorLayer {\r\n    if (this.options.layer === undefined) {\r\n      this.olMap.addLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer if it wasn't defined in the options\r\n   */\r\n  private removeOlInnerOverlayLayer() {\r\n    if (this.options.layer === undefined && this.olMap !== undefined) {\r\n      this.olMap.removeLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay source if it wasn't defined in the options\r\n   */\r\n  private clearOlInnerOverlaySource() {\r\n    if (this.options.layer === undefined && this.options.source === undefined) {\r\n      this.olOverlaySource.clear();\r\n    }\r\n  }\r\n\r\n  private createOlLinearRingsLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: new OlVectorSource(),\r\n      style: createDrawHoleInteractionStyle(),\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add the linear rings layer\r\n   */\r\n  private addOlLinearRingsLayer() {\r\n    this.olMap.addLayer(this.olLinearRingsLayer);\r\n  }\r\n\r\n  /**\r\n   * Clear the linear rings layer\r\n   */\r\n  private removeOlLinearRingsLayer() {\r\n    this.olMap.removeLayer(this.olLinearRingsLayer);\r\n  }\r\n\r\n  /**\r\n   * Clear the linear rings source\r\n   */\r\n  private clearOlLinearRingsSource() {\r\n    this.olLinearRingsSource.clear(true);\r\n  }\r\n\r\n  /**\r\n   * Add a modify interaction to the map an set up some listeners\r\n   */\r\n  private addOlModifyInteraction() {\r\n    const olModifyInteraction = new OlModify({\r\n      source: this.olOverlaySource,\r\n      style: this.options.drawStyle\r\n    });\r\n    this.olModifyInteraction = olModifyInteraction;\r\n  }\r\n\r\n  /**\r\n   * Remove the modify interaction\r\n   */\r\n  private removeOlModifyInteraction() {\r\n    if (this.olModifyInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.deactivateModifyInteraction();\r\n    this.olModifyInteraction = undefined;\r\n  }\r\n\r\n  private activateModifyInteraction() {\r\n    if (this.olModifyInteractionIsActive === true) {\r\n      return;\r\n    }\r\n\r\n    this.olModifyInteractionIsActive = true;\r\n    this.onModifyStartKey = this.olModifyInteraction\r\n      .on('modifystart', (event: OlModifyEvent) => this.onModifyStart(event));\r\n    this.onModifyEndKey = this.olModifyInteraction\r\n      .on('modifyend', (event: OlModifyEvent) => this.onModifyEnd(event));\r\n    this.olMap.addInteraction(this.olModifyInteraction);\r\n  }\r\n\r\n  private deactivateModifyInteraction() {\r\n    if (this.olModifyInteractionIsActive === false) {\r\n      return;\r\n    }\r\n\r\n    this.olModifyInteractionIsActive = false;\r\n    unByKey(this.onModifyStartKey);\r\n    unByKey(this.onModifyEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olModifyInteraction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When modifying starts, clear the overlay and start watching for changes\r\n   * @param event Modify start event\r\n   */\r\n  private onModifyStart(event: OlModifyEvent) {\r\n    const olGeometry = event.features.item(0).getGeometry();\r\n    this.start$.next(olGeometry);\r\n    this.onModifyKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      this.changes$.next(olGeometryEvent.target);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When modifying ends, update the geometry observable and stop watching for changes\r\n   * @param event Modify end event\r\n   */\r\n  private onModifyEnd(event: OlModifyEvent) {\r\n    if (this.onModifyKey !== undefined) {\r\n      unByKey(this.onModifyKey);\r\n    }\r\n    this.end$.next(event.features.item(0).getGeometry());\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key down to activate the draw control\r\n   */\r\n  private subscribeToKeyDown() {\r\n    this.keyDown$$ = fromEvent(document, 'keydown').subscribe((event: KeyboardEvent) => {\r\n      // On ESC key down, remove the last vertex\r\n      if (event.keyCode === 27 && this.olDrawInteractionIsActive === true) {\r\n        this.olDrawInteraction.removeLastPoint();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key down\r\n   */\r\n  private unsubscribeToKeyDown() {\r\n    if (this.keyDown$$ !== undefined) {\r\n      this.keyDown$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a translate interaction to the map an set up some listeners\r\n   */\r\n  private addOlTranslateInteraction() {\r\n    const olTranslateInteraction = new OlTranslate({\r\n      layers: [this.olOverlayLayer]\r\n    });\r\n    this.olTranslateInteraction = olTranslateInteraction;\r\n  }\r\n\r\n  /**\r\n   * Remove the translate interaction\r\n   */\r\n  private removeOlTranslateInteraction() {\r\n    if (this.olTranslateInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.deactivateTranslateInteraction();\r\n    this.olTranslateInteraction = undefined;\r\n  }\r\n\r\n  private activateTranslateInteraction() {\r\n    if (this.olTranslateInteractionIsActive === true) {\r\n      return;\r\n    }\r\n\r\n    this.olTranslateInteractionIsActive = true;\r\n    this.onTranslateStartKey = this.olTranslateInteraction\r\n      .on('translatestart', (event: OlTranslateEvent) => this.onTranslateStart(event));\r\n    this.onTranslateEndKey = this.olTranslateInteraction\r\n      .on('translateend', (event: OlTranslateEvent) => this.onTranslateEnd(event));\r\n    this.olMap.addInteraction(this.olTranslateInteraction);\r\n  }\r\n\r\n  private deactivateTranslateInteraction() {\r\n    if (this.olTranslateInteractionIsActive === false) {\r\n      return;\r\n    }\r\n\r\n    this.olTranslateInteractionIsActive = false;\r\n    unByKey(this.onTranslateStartKey);\r\n    unByKey(this.onTranslateEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olTranslateInteraction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When translation starts, clear the overlay and start watching for changes\r\n   * @param event Translate start event\r\n   */\r\n  private onTranslateStart(event: OlTranslateEvent) {\r\n    const olGeometry = event.features.item(0).getGeometry();\r\n    this.start$.next(olGeometry);\r\n    this.onTranslateKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      this.changes$.next(olGeometryEvent.target);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When translation ends, update the geometry observable and stop watchign for changes\r\n   * @param event Translate end event\r\n   */\r\n  private onTranslateEnd(event: OlTranslateEvent) {\r\n    if (this.onTranslateKey !== undefined) {\r\n      unByKey(this.onTranslateKey);\r\n    }\r\n    this.end$.next(event.features.item(0).getGeometry());\r\n  }\r\n\r\n  /**\r\n   * Add a draw interaction to the map an set up some listeners\r\n   */\r\n  private addOlDrawInteraction() {\r\n    const olDrawInteraction = new OlDraw({\r\n      type: 'Polygon',\r\n      source: this.olLinearRingsSource,\r\n      stopClick: true,\r\n      style: createDrawHoleInteractionStyle(),\r\n      condition: (event: OlMapBrowserEvent) => {\r\n        return this.getOlGeometry().intersectsCoordinate(event.coordinate);\r\n      }\r\n    });\r\n\r\n    this.olDrawInteraction = olDrawInteraction;\r\n    this.subscribeToDrawKeyDown();\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key down to activate the draw control\r\n   */\r\n  private subscribeToDrawKeyDown() {\r\n    this.drawKeyDown$$ = fromEvent(document, 'keydown').subscribe((event: KeyboardEvent) => {\r\n      if (event.keyCode !== 17) { return; }\r\n\r\n      this.unsubscribeToDrawKeyDown();\r\n\r\n      const olGeometry = this.getOlGeometry();\r\n      if (!olGeometry || !(olGeometry instanceof OlPolygon)) { return; }\r\n\r\n      this.subscribeToDrawKeyUp();\r\n\r\n      this.deactivateModifyInteraction();\r\n      this.deactivateTranslateInteraction();\r\n      this.activateDrawInteraction();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key up to deactivate the draw control\r\n   */\r\n  private subscribeToDrawKeyUp() {\r\n    this.drawKeyUp$$ = fromEvent(document, 'keyup').subscribe((event: KeyboardEvent) => {\r\n      if (event.keyCode !== 17) { return; }\r\n\r\n      this.unsubscribeToDrawKeyUp();\r\n      this.subscribeToDrawKeyDown();\r\n\r\n      this.deactivateDrawInteraction();\r\n      this.activateModifyInteraction();\r\n      this.activateTranslateInteraction();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to draw key down\r\n   */\r\n  private unsubscribeToDrawKeyDown() {\r\n    if (this.drawKeyDown$$ !== undefined) {\r\n      this.drawKeyDown$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key up\r\n   */\r\n  private unsubscribeToDrawKeyUp() {\r\n    if (this.drawKeyUp$$ !== undefined) {\r\n      this.drawKeyUp$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the draw interaction\r\n   */\r\n  private removeOlDrawInteraction() {\r\n    if (this.olDrawInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.unsubscribeToKeyDown();\r\n    this.unsubscribeToDrawKeyUp();\r\n    this.unsubscribeToDrawKeyDown();\r\n    this.deactivateDrawInteraction();\r\n    this.olDrawInteraction = undefined;\r\n  }\r\n\r\n  /**\r\n   * Activate the draw interaction\r\n   */\r\n  private activateDrawInteraction() {\r\n    if (this.olDrawInteractionIsActive === true) {\r\n      return;\r\n    }\r\n\r\n    this.clearOlLinearRingsSource();\r\n    this.addOlLinearRingsLayer();\r\n\r\n    this.olMap.getInteractions().forEach((olInteraction: OlInteraction) => {\r\n      if (olInteraction instanceof OlDragBoxInteraction) {\r\n        this.olMap.removeInteraction(olInteraction);\r\n        this.removedOlInteractions.push(olInteraction);\r\n      }\r\n    });\r\n\r\n    this.olDrawInteractionIsActive = true;\r\n    this.onDrawStartKey = this.olDrawInteraction\r\n      .on('drawstart', (event: OlDrawEvent) => this.onDrawStart(event));\r\n    this.onDrawEndKey = this.olDrawInteraction\r\n      .on('drawend', (event: OlDrawEvent) => this.onDrawEnd(event));\r\n    this.olMap.addInteraction(this.olDrawInteraction);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the draw interaction\r\n   */\r\n  private deactivateDrawInteraction() {\r\n    if (this.olDrawInteractionIsActive === false) {\r\n      return;\r\n    }\r\n\r\n    this.removeOlLinearRingsLayer();\r\n\r\n    this.removedOlInteractions.forEach((olInteraction: OlInteraction) => {\r\n      this.olMap.addInteraction(olInteraction);\r\n    });\r\n\r\n    this.olDrawInteractionIsActive = false;\r\n    unByKey(this.onDrawStartKey);\r\n    unByKey(this.onDrawEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olDrawInteraction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When draw start, add a new linerar ring to the geometrty and start watching for changes\r\n   * @param event Draw start event\r\n   */\r\n  private onDrawStart(event: OlDrawEvent) {\r\n    const olGeometry = event.feature.getGeometry();\r\n    const linearRingCoordinates = olGeometry.getLinearRing().getCoordinates();\r\n    this.addLinearRingToOlGeometry(linearRingCoordinates);\r\n    this.start$.next(this.getOlGeometry());\r\n\r\n    this.onDrawKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      const _linearRingCoordinates = olGeometryEvent.target.getLinearRing().getCoordinates();\r\n      this.updateLinearRingOfOlGeometry(_linearRingCoordinates);\r\n      this.changes$.next(this.getOlGeometry());\r\n    });\r\n    this.subscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * When translation ends, update the geometry observable and stop watchign for changes\r\n   * @param event Draw end event\r\n   */\r\n  private onDrawEnd(event: OlDrawEvent) {\r\n    if (this.onDrawKey !== undefined) {\r\n      unByKey(this.onDrawKey);\r\n    }\r\n    const linearRingCoordinates = event.feature.getGeometry().getLinearRing().getCoordinates();\r\n    this.updateLinearRingOfOlGeometry(linearRingCoordinates);\r\n    this.clearOlLinearRingsSource();\r\n    this.end$.next(this.getOlGeometry());\r\n    this.unsubscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * Add a linear ring to the geometry being modified\r\n   * @param coordinates Linear ring coordinates\r\n   */\r\n  private addLinearRingToOlGeometry(coordinates: number[]) {\r\n    const olGeometry = this.getOlGeometry();\r\n    const olLinearRing = new OlLinearRing(coordinates);\r\n    addLinearRingToOlPolygon(olGeometry, olLinearRing);\r\n  }\r\n\r\n  /**\r\n   * Update the last linear ring of the geometry being modified\r\n   * @param coordinates Linear ring coordinates\r\n   */\r\n  private updateLinearRingOfOlGeometry(coordinates: number[]) {\r\n    const olGeometry = this.getOlGeometry();\r\n    // Remove the last linear ring (the one we are updating)\r\n    const olLinearRings = olGeometry.getLinearRings().slice(0, -1);\r\n    const newCoordinates = olLinearRings.map((olLinearRing: OlLinearRing) => {\r\n      return olLinearRing.getCoordinates();\r\n    });\r\n    newCoordinates.push(coordinates);\r\n    olGeometry.setCoordinates(newCoordinates);\r\n  }\r\n\r\n  /**\r\n   * Get the geometry being modified\r\n   * @returns OL Geometry\r\n   */\r\n  private getOlGeometry(): OlGeometry {\r\n    const olFeatures = this.olOverlaySource.getFeatures();\r\n    return olFeatures.length > 0 ? olFeatures[0].getGeometry() : undefined;\r\n  }\r\n\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlStyle from 'ol/style';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlGeometry from 'ol/geom/Geometry';\r\nimport OlLineString from 'ol/geom/LineString';\r\n\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\nimport { GeometrySliceError } from '../geometry.errors';\r\nimport { sliceOlGeometry } from '../geometry.utils';\r\nimport { DrawControl } from './draw';\r\n\r\nexport interface SliceControlOptions {\r\n  source?: OlVectorSource;\r\n  layer?: OlVectorLayer;\r\n  layerStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  drawStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n}\r\n\r\n/**\r\n * Control to modify geometries\r\n */\r\nexport class SliceControl {\r\n\r\n  /**\r\n   * Slice end observable\r\n   */\r\n  public end$: Subject<OlGeometry[]> = new Subject();\r\n\r\n  /**\r\n   * Slice error, if any\r\n   */\r\n  public error$: Subject<GeometrySliceError> = new Subject();\r\n\r\n  private olMap: OlMap;\r\n  private olOverlayLayer: OlVectorLayer;\r\n\r\n  /**\r\n   * Draw line control\r\n   */\r\n  private drawLineControl: DrawControl;\r\n\r\n  /**\r\n   * Subscription to draw start\r\n   */\r\n  private drawLineStart$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to draw end\r\n   */\r\n  private drawLineEnd$$: Subscription;\r\n\r\n  /**\r\n   * Wheter the control is active\r\n   */\r\n  get active(): boolean {\r\n    return this.olMap !== undefined;\r\n  }\r\n\r\n  /**\r\n   * OL overlay source\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  constructor(private options: SliceControlOptions) {\r\n    if (options.layer !== undefined) {\r\n      this.olOverlayLayer = options.layer;\r\n    } else {\r\n      this.olOverlayLayer = this.createOlInnerOverlayLayer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add or remove this control to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap === undefined) {\r\n      this.clearOlInnerOverlaySource();\r\n      this.removeOlInnerOverlayLayer();\r\n      this.removeDrawLineControl();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n    this.addOlInnerOverlayLayer();\r\n    this.addDrawLineControl();\r\n  }\r\n\r\n  /**\r\n   * Return the overlay source\r\n   */\r\n  getSource(): OlVectorSource {\r\n    return this.olOverlaySource;\r\n  }\r\n\r\n  /**\r\n   * Add an OL geometry to the overlay for slicing\r\n   * @param olGeometry Ol Geometry\r\n   */\r\n  setOlGeometry(olGeometry: OlGeometry) {\r\n    const olFeature = new OlFeature({geometry: olGeometry});\r\n    this.olOverlaySource.clear();\r\n    this.olOverlaySource.addFeature(olFeature);\r\n  }\r\n\r\n  /**\r\n   * Create an overlay source if none is defined in the options\r\n   */\r\n  private createOlInnerOverlayLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: this.options.source ? this.options.source : new OlVectorSource(),\r\n      style: this.options.layerStyle,\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer if it wasn't defined in the options\r\n   */\r\n  private removeOlInnerOverlayLayer() {\r\n    if (this.options.layer === undefined && this.olMap !== undefined) {\r\n      this.olMap.removeLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer if it wasn't defined in the options\r\n   */\r\n  private addOlInnerOverlayLayer(): OlVectorLayer {\r\n    if (this.options.layer === undefined) {\r\n      this.olMap.addLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay source if it wasn't defined in the options\r\n   */\r\n  private clearOlInnerOverlaySource() {\r\n    if (this.options.layer === undefined && this.options.source === undefined) {\r\n      this.olOverlaySource.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a draw line control and add it to the map\r\n   */\r\n  private addDrawLineControl() {\r\n    this.drawLineControl = new DrawControl({\r\n      geometryType: 'LineString',\r\n      drawStyle: this.options.drawStyle,\r\n      maxPoints: 2\r\n    });\r\n    this.drawLineStart$$ = this.drawLineControl.start$\r\n      .subscribe((olLine: OlLineString) => this.onDrawLineStart(olLine));\r\n    this.drawLineEnd$$ = this.drawLineControl.end$\r\n      .subscribe((olLine: OlLineString) => this.onDrawLineEnd(olLine));\r\n    this.drawLineControl.setOlMap(this.olMap);\r\n  }\r\n\r\n  /**\r\n   * Remove draw line control\r\n   */\r\n  private removeDrawLineControl() {\r\n    if (this.drawLineControl === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.drawLineStart$$.unsubscribe();\r\n    this.drawLineEnd$$.unsubscribe();\r\n    this.drawLineControl.getSource().clear();\r\n    this.drawLineControl.setOlMap(undefined);\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being draw\r\n   * @param olLine Ol linestring or polygon\r\n   */\r\n  private onDrawLineStart(olLine: OlLineString) {\r\n    this.drawLineControl.getSource().clear();\r\n  }\r\n\r\n  /**\r\n   * Slice the first geometry encountered with the drawn line\r\n   * @param olLine Ol linestring\r\n   */\r\n  private onDrawLineEnd(olLine: OlLineString) {\r\n    const olSlicedGeometries = [];\r\n    const lineExtent = olLine.getExtent();\r\n\r\n    const olFeaturesToRemove = [];\r\n    try {\r\n      this.olOverlaySource.forEachFeatureInExtent(lineExtent, (olFeature: OlFeature) => {\r\n        const olGeometry = olFeature.getGeometry();\r\n        const olParts = sliceOlGeometry(olGeometry, olLine);\r\n        if (olParts.length > 0) {\r\n          olSlicedGeometries.push(...olParts);\r\n          olFeaturesToRemove.push(olFeature);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      if (e instanceof GeometrySliceError) {\r\n        this.error$.next(e);\r\n        return;\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n\r\n    this.drawLineControl.getSource().clear();\r\n\r\n    this.olOverlaySource.addFeatures(\r\n      olSlicedGeometries.map((olGeometry: OlGeometry) => new OlFeature(olGeometry))\r\n    );\r\n    olFeaturesToRemove.forEach((olFeature: OlFeature) => {\r\n      this.olOverlaySource.removeFeature(olFeature);\r\n    });\r\n\r\n    this.error$.next(undefined);\r\n    this.end$.next(olSlicedGeometries);\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { MeasurerDialogData } from '../shared/measure.interfaces';\r\n\r\nimport { MeasureAreaUnit, MeasureLengthUnit} from '../shared/measure.enum';\r\n\r\n@Component({\r\n  selector: 'igo-measurer-dialog',\r\n  templateUrl: 'measurer-dialog.component.html',\r\n  styleUrls: ['./measurer-dialog.component.scss']\r\n})\r\nexport class MeasurerDialogComponent {\r\n\r\n  measureAreaUnit = MeasureAreaUnit;\r\n\r\n  measureLengthUnit = MeasureLengthUnit;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<MeasurerDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MeasurerDialogData\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { skip } from 'rxjs/operators';\r\n\r\nimport OlProjection from 'ol/proj/Projection';\r\nimport OlStyle from 'ol/style/Style';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport { VectorSourceEvent as OlVectorSourceEvent } from 'ol/source/Vector';\r\nimport OlLineString from 'ol/geom/LineString';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlOverlay from 'ol/Overlay';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\nimport { EntityRecord, EntityTableTemplate, EntityTableComponent } from '@igo2/common';\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport {\r\n  FEATURE,\r\n  FeatureStore,\r\n  FeatureStoreLoadingStrategy,\r\n  FeatureStoreSelectionStrategy,\r\n  tryBindStoreLayer,\r\n  tryAddLoadingStrategy,\r\n  tryAddSelectionStrategy\r\n} from '../../feature';\r\nimport { DrawControl, ModifyControl } from '../../geometry';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { Measure, MeasurerDialogData, FeatureWithMeasure } from '../shared/measure.interfaces';\r\nimport {\r\n  MeasureType,\r\n  MeasureAreaUnit,\r\n  MeasureLengthUnit,\r\n} from '../shared/measure.enum';\r\nimport {\r\n  measureOlGeometry,\r\n  createMeasureInteractionStyle,\r\n  createMeasureLayerStyle,\r\n  updateOlTooltipsAtMidpoints,\r\n  updateOlTooltipAtCenter,\r\n  getTooltipsOfOlGeometry,\r\n  squareMetersToUnit,\r\n  metersToUnit,\r\n  formatMeasure\r\n} from '../shared/measure.utils';\r\nimport { MeasurerDialogComponent } from './measurer-dialog.component';\r\n\r\n/**\r\n * Tool to measure lengths and areas\r\n */\r\n@Component({\r\n  selector: 'igo-measurer',\r\n  templateUrl: './measurer.component.html',\r\n  styleUrls: ['./measurer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MeasurerComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Table template\r\n   * @internal\r\n   */\r\n  public tableTemplate: EntityTableTemplate = {\r\n    selection: true,\r\n    selectMany: true,\r\n    selectionCheckbox: true,\r\n    sort: true,\r\n    columns: [\r\n      {\r\n        name: 'length',\r\n        title: this.languageService.translate.instant('igo.geo.measure.lengthHeader'),\r\n        valueAccessor: (feature: FeatureWithMeasure) => {\r\n          const unit = this.activeLengthUnit;\r\n          const measure = metersToUnit(feature.properties.measure.length, unit);\r\n          return formatMeasure(measure, {\r\n            decimal: 1,\r\n            unit,\r\n            unitAbbr: false,\r\n            locale: 'fr'\r\n          });\r\n        }\r\n      },\r\n      {\r\n        name: 'area',\r\n        title: this.languageService.translate.instant('igo.geo.measure.areaHeader'),\r\n        valueAccessor: (feature: FeatureWithMeasure) => {\r\n          const unit = this.activeAreaUnit;\r\n          const measure = squareMetersToUnit(feature.properties.measure.area, unit);\r\n          return measure ? formatMeasure(measure, {\r\n            decimal: 1,\r\n            unit,\r\n            unitAbbr: false,\r\n            locale: 'fr'\r\n          }) : '';\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  /**\r\n   * Reference to the MeasureType enum\r\n   * @internal\r\n   */\r\n  public measureType = MeasureType;\r\n\r\n  /**\r\n   * Reference to the AreaMeasureUnit enum\r\n   * @internal\r\n   */\r\n  public measureAreaUnit = MeasureAreaUnit;\r\n\r\n  /**\r\n   * Reference to the LengthMeasureUnit enum\r\n   * @internal\r\n   */\r\n  public measureLengthUnit = MeasureLengthUnit;\r\n\r\n  /**\r\n   * Whether measure units should be automatically determined\r\n   * @internal\r\n   */\r\n  public measureUnitsAuto: boolean = false;\r\n\r\n  /**\r\n   * Observable of area\r\n   * @internal\r\n   */\r\n  public measure$: BehaviorSubject<Measure> = new BehaviorSubject({});\r\n\r\n  /**\r\n   * Observable of selected features\r\n   * @internal\r\n   */\r\n  public selectedFeatures$: BehaviorSubject<FeatureWithMeasure[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * OL draw source\r\n   * @internal\r\n   */\r\n  public showTooltips: boolean = true;\r\n\r\n  /**\r\n   * Draw line control\r\n   */\r\n  private drawLineControl: DrawControl;\r\n\r\n  /**\r\n   * Draw polygon control\r\n   */\r\n  private drawPolygonControl: DrawControl;\r\n\r\n  /**\r\n   * Modify control\r\n   */\r\n  private modifyControl: ModifyControl;\r\n\r\n  /**\r\n   * Active OL geometry\r\n   */\r\n  private activeOlGeometry: OlLineString | OlPolygon;\r\n\r\n  /**\r\n   * Active mlength unit\r\n   */\r\n  private activeLengthUnit: MeasureLengthUnit = MeasureLengthUnit.Meters;\r\n\r\n  /**\r\n   * Active area unit\r\n   */\r\n  private activeAreaUnit: MeasureAreaUnit = MeasureAreaUnit.SquareMeters;\r\n\r\n  /**\r\n   * Feature added listener key\r\n   */\r\n  private onFeatureAddedKey: string;\r\n\r\n  /**\r\n   * Feature removed listener key\r\n   */\r\n  private onFeatureRemovedKey: string;\r\n\r\n  /**\r\n   * Active draw control\r\n   * @internal\r\n   */\r\n  private activeDrawControl: DrawControl;\r\n\r\n  /**\r\n   * Subscription to draw start\r\n   */\r\n  private drawStart$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to draw end\r\n   */\r\n  private drawEnd$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to controls changes\r\n   */\r\n  private drawChanges$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to modify start\r\n   */\r\n  private modifyStart$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to modify end\r\n   */\r\n  private modifyEnd$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to controls changes\r\n   */\r\n  private modifyChanges$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to measures selection\r\n   */\r\n  private selectedFeatures$$: Subscription;\r\n\r\n  /**\r\n   * OL draw source\r\n   */\r\n  private olDrawSource = new OlVectorSource();\r\n\r\n  /**\r\n   * The map to measure on\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * The measures store\r\n   */\r\n  @Input() store: FeatureStore<FeatureWithMeasure>;\r\n\r\n  /**\r\n   * Measure type\r\n   * @internal\r\n   */\r\n  @Input()\r\n  set activeMeasureType(value: MeasureType) { this.setActiveMeasureType(value); }\r\n  get activeMeasureType(): MeasureType { return this._activeMeasureType; }\r\n  private _activeMeasureType: MeasureType = MeasureType.Length;\r\n\r\n  /**\r\n   * The minimum length a segment must have to display a tooltip.\r\n   * It also applies to area tooltips.\r\n   */\r\n  @Input() minSegmentLength: number = 10;\r\n\r\n  @ViewChild('table') table: EntityTableComponent;\r\n\r\n  /**\r\n   * Wheter one of the draw control is active\r\n   * @internal\r\n   */\r\n  get drawControlIsActive(): boolean {\r\n    return this.activeDrawControl !== undefined;\r\n  }\r\n\r\n  get projection(): OlProjection {\r\n    return this.map.ol.getView().getProjection();\r\n  }\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  /**\r\n   * Add draw controls and activate one\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.initStore();\r\n    this.createDrawLineControl();\r\n    this.createDrawPolygonControl();\r\n    this.createModifyControl();\r\n    this.toggleDrawControl();\r\n    this.onToggleTooltips(this.showTooltips);\r\n    this.updateTooltipsOfOlSource(this.store.source.ol);\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer and any interaction added by this component.\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.setActiveMeasureType(undefined);\r\n    this.deactivateModifyControl();\r\n    this.freezeStore();\r\n  }\r\n\r\n  /**\r\n   * Set the measure type\r\n   * @internal\r\n   */\r\n  onMeasureTypeChange(measureType: MeasureType) {\r\n    this.activeMeasureType = measureType;\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the current draw control\r\n   * @internal\r\n   */\r\n  onToggleDrawControl(toggle: boolean) {\r\n    if (toggle === true) {\r\n      this.toggleDrawControl();\r\n    } else {\r\n      this.deactivateDrawControl();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the current draw control\r\n   * @internal\r\n   */\r\n  onToggleTooltips(toggle: boolean) {\r\n    this.showTooltips = toggle;\r\n    if (toggle === true) {\r\n      this.showTooltipsOfOlSource(this.store.source.ol);\r\n    } else {\r\n      this.clearTooltipsOfOlSource(this.store.source.ol);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the current draw control\r\n   * @internal\r\n   */\r\n  onToggleMeasureUnitsAuto(toggle: boolean) {\r\n    this.measureUnitsAuto = toggle;\r\n  }\r\n\r\n  /**\r\n   * Set the measure type\r\n   * @internal\r\n   */\r\n  onLengthUnitChange(unit: MeasureLengthUnit) {\r\n    this.activeLengthUnit = unit;\r\n    this.table.refresh();\r\n    this.updateTooltipsOfOlSource(this.store.source.ol);\r\n    if (this.activeOlGeometry !== undefined) {\r\n      this.updateTooltipsOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the measure type\r\n   * @internal\r\n   */\r\n  onAreaUnitChange(unit: MeasureAreaUnit) {\r\n    this.activeAreaUnit = unit;\r\n    this.table.refresh();\r\n    this.updateTooltipsOfOlSource(this.store.source.ol);\r\n    if (this.activeOlGeometry !== undefined) {\r\n      this.updateTooltipsOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n  }\r\n\r\n  onCalculateClick() {\r\n    const features = this.selectedFeatures$.value;\r\n    const area = features.reduce((sum: number, feature: FeatureWithMeasure) => {\r\n      return sum + feature.properties.measure.area || 0;\r\n    }, 0);\r\n    const length = features.reduce((sum: number, feature: FeatureWithMeasure) => {\r\n      if (feature.geometry.type === 'Polygon') {\r\n        return sum;\r\n      }\r\n      return sum + feature.properties.measure.length || 0;\r\n    }, 0);\r\n    const perimeter = features.reduce((sum: number, feature: FeatureWithMeasure) => {\r\n      if (feature.geometry.type === 'LineString') {\r\n        return sum;\r\n      }\r\n      return sum + feature.properties.measure.length || 0;\r\n    }, 0);\r\n\r\n    this.openDialog({\r\n      area,\r\n      length,\r\n      perimeter\r\n    });\r\n  }\r\n\r\n  onDeleteClick() {\r\n    this.store.deleteMany(this.selectedFeatures$.value);\r\n  }\r\n\r\n  onModifyClick() {\r\n    if (this.selectedFeatures$.value.length !== 1) { return; }\r\n\r\n    if (this.modifyControl.active === true) {\r\n      this.deactivateModifyControl();\r\n      this.toggleDrawControl();\r\n    } else {\r\n      const feature = this.selectedFeatures$.value[0];\r\n      const olFeatures = this.store.layer.ol.getSource().getFeatures();\r\n      const olFeature = olFeatures.find((_olFeature: OlFeature) => {\r\n        return _olFeature.get('id') === feature.properties.id;\r\n      });\r\n\r\n      if (olFeature !== undefined) {\r\n        this.deactivateDrawControl();\r\n        this.activateModifyControl();\r\n\r\n        const olGeometry = olFeature.getGeometry();\r\n        this.clearTooltipsOfOlGeometry(olGeometry);\r\n        this.modifyControl.setOlGeometry(olGeometry);\r\n      }\r\n    }\r\n  }\r\n\r\n  private openDialog(data: MeasurerDialogData): void {\r\n    this.dialog.open(MeasurerDialogComponent, {data});\r\n  }\r\n\r\n  /**\r\n   * Initialize the measure store and set up some listeners\r\n   * @internal\r\n   */\r\n  private initStore() {\r\n    const store = this.store;\r\n\r\n    const layer = new VectorLayer({\r\n      title: 'Measures',\r\n      zIndex: 200,\r\n      source: new FeatureDataSource(),\r\n      style: createMeasureLayerStyle(),\r\n      showInLayerList: false,\r\n      exportable: false,\r\n      browsable: false\r\n    });\r\n    tryBindStoreLayer(store, layer);\r\n\r\n    tryAddLoadingStrategy(store);\r\n\r\n    tryAddSelectionStrategy(store, new FeatureStoreSelectionStrategy({\r\n      map: this.map,\r\n      many: true\r\n    }));\r\n\r\n    this.onFeatureAddedKey = store.source.ol.on('addfeature', (event: OlVectorSourceEvent) => {\r\n      const feature = event.feature;\r\n      const olGeometry = feature.getGeometry();\r\n      this.updateMeasureOfOlGeometry(olGeometry, feature.get('measure'));\r\n    });\r\n\r\n    this.onFeatureRemovedKey = store.source.ol.on('removefeature', (event: OlVectorSourceEvent) => {\r\n      const olGeometry = event.feature.getGeometry();\r\n      this.clearTooltipsOfOlGeometry(olGeometry);\r\n    });\r\n\r\n    this.selectedFeatures$$ = store.stateView.manyBy$((record: EntityRecord<FeatureWithMeasure>) => {\r\n      return record.state.selected === true;\r\n    }).pipe(\r\n      skip(1)  // Skip initial emission\r\n    )\r\n    .subscribe((records: EntityRecord<FeatureWithMeasure>[]) => {\r\n      if (this.modifyControl.active === true) {\r\n        this.deactivateModifyControl();\r\n      }\r\n      this.selectedFeatures$.next(records.map(record => record.entity));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Freeze any store, meaning the layer is removed, strategies are deactivated\r\n   * and some listener removed\r\n   * @internal\r\n   */\r\n  private freezeStore() {\r\n    const store = this.store;\r\n    this.selectedFeatures$$.unsubscribe();\r\n    unByKey(this.onFeatureAddedKey);\r\n    unByKey(this.onFeatureRemovedKey);\r\n    this.clearTooltipsOfOlSource(store.source.ol);\r\n    this.map.removeLayer(store.layer);\r\n    store.deactivateStrategyOfType(FeatureStoreLoadingStrategy);\r\n    store.deactivateStrategyOfType(FeatureStoreSelectionStrategy);\r\n  }\r\n\r\n  /**\r\n   * Create a draw line control\r\n   */\r\n  private createDrawLineControl() {\r\n    this.drawLineControl = new DrawControl({\r\n      geometryType: 'LineString',\r\n      source: this.olDrawSource,\r\n      drawStyle: createMeasureInteractionStyle(),\r\n      layerStyle: new OlStyle({})\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a draw polygon control\r\n   */\r\n  private createDrawPolygonControl() {\r\n    this.drawPolygonControl = new DrawControl({\r\n      geometryType: 'Polygon',\r\n      source: this.olDrawSource,\r\n      drawStyle: createMeasureInteractionStyle(),\r\n      layerStyle: new OlStyle({})\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a draw polygon control\r\n   */\r\n  private createModifyControl() {\r\n    this.modifyControl = new ModifyControl({\r\n      source: this.olDrawSource,\r\n      drawStyle: createMeasureInteractionStyle(),\r\n      layerStyle: new OlStyle({})\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Activate the right control\r\n   */\r\n  private toggleDrawControl() {\r\n    this.deactivateDrawControl();\r\n    // this.deactivateModifyControl();\r\n    if (this.activeMeasureType === MeasureType.Length) {\r\n      this.activateDrawControl(this.drawLineControl);\r\n    } else if (this.activeMeasureType === MeasureType.Area) {\r\n      this.activateDrawControl(this.drawPolygonControl);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate a given control\r\n   * @param drawControl Draw control\r\n   */\r\n  private activateDrawControl(drawControl: DrawControl) {\r\n    this.activeDrawControl = drawControl;\r\n    this.drawStart$$ = drawControl.start$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onDrawStart(olGeometry));\r\n    this.drawEnd$$ = drawControl.end$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onDrawEnd(olGeometry));\r\n    this.drawChanges$$ = drawControl.changes$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onDrawChanges(olGeometry));\r\n\r\n    drawControl.setOlMap(this.map.ol);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active draw control\r\n   */\r\n  private deactivateDrawControl() {\r\n    if (this.activeDrawControl === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.olDrawSource.clear();\r\n    if (this.drawStart$$ !== undefined ) { this.drawStart$$.unsubscribe(); }\r\n    if (this.drawEnd$$ !== undefined ) { this.drawEnd$$.unsubscribe(); }\r\n    if (this.drawChanges$$ !== undefined ) { this.drawChanges$$.unsubscribe(); }\r\n\r\n    this.clearTooltipsOfOlSource(this.olDrawSource);\r\n    if (this.activeOlGeometry !== undefined) {\r\n      this.clearTooltipsOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n    this.activeDrawControl.setOlMap(undefined);\r\n    this.activeDrawControl = undefined;\r\n    this.activeOlGeometry = undefined;\r\n  }\r\n\r\n  private setActiveMeasureType(measureType: MeasureType) {\r\n    this._activeMeasureType = measureType;\r\n    this.clearMeasures();\r\n    this.toggleDrawControl();\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being drawn\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onDrawStart(olGeometry: OlLineString | OlPolygon) {\r\n    this.activeOlGeometry = olGeometry;\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being draw\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onDrawEnd(olGeometry: OlLineString | OlPolygon) {\r\n    this.activeOlGeometry = undefined;\r\n    this.finalizeMeasureOfOlGeometry(olGeometry);\r\n    this.addFeatureToStore(olGeometry);\r\n    this.clearTooltipsOfOlGeometry(olGeometry);\r\n    this.olDrawSource.clear(true);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onDrawChanges(olGeometry: OlLineString | OlPolygon) {\r\n    const measure = measureOlGeometry(olGeometry, this.projection);\r\n    this.updateMeasureOfOlGeometry(olGeometry, Object.assign({}, measure, {\r\n      area: undefined  // We don't want to display an area tooltip while drawing.\r\n    }));\r\n    this.measure$.next(measure);\r\n  }\r\n\r\n  /**\r\n   * Activate a given control\r\n   * @param modifyControl Modify control\r\n   */\r\n  private activateModifyControl() {\r\n    const selection = this.store.getStrategyOfType(FeatureStoreSelectionStrategy) as FeatureStoreSelectionStrategy;\r\n    selection.deactivate();\r\n    selection.clear();\r\n\r\n    this.modifyStart$$ = this.modifyControl.start$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onModifyStart(olGeometry));\r\n    this.modifyEnd$$ = this.modifyControl.end$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onModifyEnd(olGeometry));\r\n    this.modifyChanges$$ = this.modifyControl.changes$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onModifyChanges(olGeometry));\r\n    this.modifyControl.setOlMap(this.map.ol);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active modify control\r\n   */\r\n  private deactivateModifyControl() {\r\n    if (this.modifyStart$$ !== undefined ) { this.modifyStart$$.unsubscribe(); }\r\n    if (this.modifyEnd$$ !== undefined ) { this.modifyEnd$$.unsubscribe(); }\r\n    if (this.modifyChanges$$ !== undefined ) { this.modifyChanges$$.unsubscribe(); }\r\n\r\n    if (this.activeOlGeometry !== undefined) {\r\n      if (this.selectedFeatures$.value.length === 1) {\r\n        const feature = this.selectedFeatures$.value[0];\r\n        this.addFeatureToStore(this.activeOlGeometry, feature);\r\n      }\r\n      this.finalizeMeasureOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n\r\n    this.olDrawSource.clear();\r\n\r\n    this.store.activateStrategyOfType(FeatureStoreSelectionStrategy);\r\n\r\n    this.activeOlGeometry = undefined;\r\n    this.modifyControl.setOlMap(undefined);\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being drawn\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onModifyStart(olGeometry: OlLineString | OlPolygon) {\r\n    this.onDrawStart(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onModifyChanges(olGeometry: OlLineString | OlPolygon) {\r\n    this.onDrawChanges(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being draw\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onModifyEnd(olGeometry: OlLineString | OlPolygon) {\r\n    this.finalizeMeasureOfOlGeometry(olGeometry);\r\n  }\r\n\r\n  private finalizeMeasureOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    let measure = measureOlGeometry(olGeometry, this.projection);\r\n    if (olGeometry instanceof OlPolygon) {\r\n      measure = Object.assign({}, measure, {\r\n        lengths: []  // We don't want to display an area tooltip while drawing.\r\n      });\r\n    }\r\n    this.updateMeasureOfOlGeometry(olGeometry, measure);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables\r\n   * @param olGeometry Ol linestring or polygon\r\n   * @param measure Measure\r\n   */\r\n  private updateMeasureOfOlGeometry(olGeometry: OlLineString | OlPolygon, measure: Measure) {\r\n    olGeometry.setProperties({_measure: measure}, true);\r\n    this.updateTooltipsOfOlGeometry(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Clear the measures observables\r\n   */\r\n  private clearMeasures() {\r\n    this.measure$.next({});\r\n  }\r\n\r\n  /**\r\n   * Add a feature with measures to the store. The loading stragegy of the store\r\n   * will trigger and add the feature to the map.\r\n   * @internal\r\n   */\r\n  private addFeatureToStore(olGeometry: OlLineString | OlPolygon, feature?: FeatureWithMeasure) {\r\n    const featureId = feature ? feature.properties.id : uuid();\r\n    const projection = this.map.ol.getView().getProjection();\r\n    const geometry = new OlGeoJSON().writeGeometryObject(olGeometry, {\r\n      featureProjection: projection,\r\n      dataProjection: projection\r\n    });\r\n    this.store.update({\r\n      type: FEATURE,\r\n      geometry,\r\n      projection: projection.getCode(),\r\n      properties: {\r\n        id: featureId,\r\n        measure: olGeometry.get('_measure')\r\n      },\r\n      meta: {\r\n        id: featureId\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update all the tooltips of an OL geometry\r\n   * @param olGeometry OL Geometry\r\n   * @param lengths Lengths of the OL geometry's segments\r\n   * @param measureUnit Display tooltip measure in those units\r\n   */\r\n  private updateTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    const measure = olGeometry.get('_measure');\r\n    const lengths = measure.lengths;\r\n    const area = measure.area;\r\n\r\n    const olMidpointsTooltips = updateOlTooltipsAtMidpoints(olGeometry);\r\n    if (lengths.length === olMidpointsTooltips.length) {\r\n      for (let i = 0; i < olMidpointsTooltips.length; i++) {\r\n        const length = lengths[i];\r\n        if (length !== undefined) {\r\n          this.updateOlTooltip(\r\n            olMidpointsTooltips[i],\r\n            metersToUnit(length, this.activeLengthUnit),\r\n            this.activeLengthUnit,\r\n            MeasureType.Length\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (area !== undefined) {\r\n      this.updateOlTooltip(\r\n        updateOlTooltipAtCenter(olGeometry),\r\n        squareMetersToUnit(area,  this.activeAreaUnit),\r\n        this.activeAreaUnit,\r\n        MeasureType.Area\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show the map tooltips of a geoemtry\r\n   */\r\n  private showTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    getTooltipsOfOlGeometry(olGeometry).forEach((olTooltip: OlOverlay | undefined) => {\r\n      if (this.shouldShowTooltip(olTooltip)) {\r\n        this.map.ol.addOverlay(olTooltip);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the tooltips of an OL geometrys\r\n   * @param olGeometry OL geometry with tooltips\r\n   */\r\n  private clearTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    getTooltipsOfOlGeometry(olGeometry).forEach((olTooltip: OlOverlay | undefined) => {\r\n      if (olTooltip !== undefined && olTooltip.getMap() !== undefined) {\r\n        this.map.ol.removeOverlay(olTooltip);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show the map tooltips of all the geometries of a source\r\n   */\r\n  private updateTooltipsOfOlSource(olSource: OlVectorSource) {\r\n    olSource.forEachFeature((olFeature: OlFeature) => {\r\n      this.updateTooltipsOfOlGeometry(olFeature.getGeometry());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show the map tooltips of all the geometries of a source\r\n   */\r\n  private showTooltipsOfOlSource(olSource: OlVectorSource) {\r\n    olSource.forEachFeature((olFeature: OlFeature) => {\r\n      this.showTooltipsOfOlGeometry(olFeature.getGeometry());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the map tooltips\r\n   * @param olDrawSource OL vector source\r\n   */\r\n  private clearTooltipsOfOlSource(olSource: OlVectorSource) {\r\n    olSource.forEachFeature((olFeature: OlFeature) => {\r\n      const olGeometry = olFeature.getGeometry();\r\n      if (olGeometry !== undefined) {\r\n        this.clearTooltipsOfOlGeometry(olFeature.getGeometry());\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update an OL tooltip properties and inner HTML and add it to the map if possible\r\n   * @param olTooltip OL tooltip\r\n   * @param measure The measure valeu ti display\r\n   * @param measureUnit Display tooltip measure in those units\r\n   */\r\n  private updateOlTooltip(\r\n    olTooltip: OlOverlay,\r\n    measure: number,\r\n    unit: MeasureAreaUnit | MeasureLengthUnit,\r\n    type: MeasureType\r\n  ) {\r\n    olTooltip.setProperties({_measure: measure, _unit: unit, _type: type}, true);\r\n    olTooltip.getElement().innerHTML = this.computeTooltipInnerHTML(olTooltip);\r\n    if (this.shouldShowTooltip(olTooltip)) {\r\n      this.map.ol.addOverlay(olTooltip);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compute a tooltip's content\r\n   * @param olTooltip OL overlay\r\n   * @returns Inner HTML\r\n   */\r\n  private computeTooltipInnerHTML(olTooltip: OlOverlay): string {\r\n    const properties = olTooltip.getProperties() as any;\r\n    return formatMeasure(properties._measure, {\r\n      decimal: 1,\r\n      unit: properties._unit,\r\n      unitAbbr: true,\r\n      locale: 'fr'\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Whether a tooltip should be showned based on the length\r\n   * of the segment it is bound to.\r\n   * @param olTooltip OL overlay\r\n   * @returns True if the tooltip should be shown\r\n   */\r\n  private shouldShowTooltip(olTooltip: OlOverlay): boolean {\r\n    if (this.showTooltips === false) {\r\n      return false;\r\n    }\r\n\r\n    const properties = olTooltip.getProperties() as any;\r\n    const measure = properties._measure;\r\n    if (measure === undefined) {\r\n      return false;\r\n    }\r\n\r\n    if (properties._unit === MeasureType.Length) {\r\n      const minSegmentLength = metersToUnit(this.minSegmentLength, properties._unit) || 0;\r\n      return measure > Math.max(minSegmentLength, 0);\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { MeasureAreaUnit, MeasureLengthUnit } from '../shared/measure.enum';\r\nimport { metersToUnit, squareMetersToUnit, formatMeasure } from '../shared/measure.utils';\r\n\r\n/**\r\n * This pipe returns a measure converted from meters (or square meters)\r\n * to the specified unit. It also keeps a certain number of decimals.\r\n */\r\n@Pipe({\r\n  name: 'measureFormat'\r\n})\r\nexport class MeasureFormatPipe implements PipeTransform {\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  transform(\r\n    value: number, unit: MeasureAreaUnit | MeasureLengthUnit,\r\n    unitAbbr: boolean = false,\r\n    decimal: number = 1\r\n  ): number {\r\n    let out;\r\n    if (Object.values(MeasureAreaUnit).indexOf(unit) >= 0) {\r\n      out = squareMetersToUnit(value, unit as MeasureAreaUnit);\r\n    } else if (Object.values(MeasureLengthUnit).indexOf(unit) >= 0) {\r\n      out = metersToUnit(value, unit as MeasureLengthUnit);\r\n    }\r\n\r\n    return out ? formatMeasure(out, {\r\n      decimal: 1,\r\n      unit,\r\n      unitAbbr,\r\n      locale: 'fr'\r\n    }) : out;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Style as OlStyle } from 'ol/style';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\nimport OlGeometry from 'ol/geom/Geometry';\r\nimport OlGeometryType from 'ol/geom/GeometryType';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlOverlay from 'ol/Overlay';\r\n\r\nimport { IgoMap } from '../../map';\r\nimport {\r\n  MeasureLengthUnit,\r\n  clearOlGeometryMidpoints,\r\n  updateOlGeometryMidpoints,\r\n  formatMeasure,\r\n  measureOlGeometry\r\n} from '../../measure';\r\nimport { DrawControl, ModifyControl } from '../shared/controls';\r\nimport { createDrawInteractionStyle } from '../shared/geometry.utils';\r\nimport { GeoJSONGeometry } from '../shared/geometry.interfaces';\r\n\r\n/**\r\n * This input allows a user to draw a new geometry or to edit\r\n * an existing one on a map. A text input is also displayed in the\r\n * form with some instructions.\r\n * This is still WIP.\r\n */\r\n@Component({\r\n  selector: 'igo-geometry-form-field-input',\r\n  templateUrl: './geometry-form-field-input.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GeometryFormFieldInputComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n\r\n  private olOverlayLayer: OlVectorLayer;\r\n  private olGeoJSON = new OlGeoJSON();\r\n  private ready = false;\r\n\r\n  private drawControl: DrawControl;\r\n  private modifyControl: ModifyControl;\r\n  private drawInteractionStyle: OlStyle;\r\n  private defaultDrawStyleRadius: number;\r\n  private olGeometryEnds$$: Subscription;\r\n  private olGeometryChanges$$: Subscription;\r\n\r\n  private olTooltip = OlOverlay;\r\n\r\n  /**\r\n   * Active control\r\n   * @internal\r\n   */\r\n  public activeControl: DrawControl | ModifyControl;\r\n\r\n  /**\r\n   * The map to draw the geometry on\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * The geometry type\r\n   */\r\n  @Input()\r\n  set geometryType(value: OlGeometryType) {\r\n    this._geometryType = value;\r\n    if (this.ready === false) {\r\n      return;\r\n    }\r\n    this.deactivateControl();\r\n    this.createDrawControl();\r\n    this.toggleControl();\r\n  }\r\n  get geometryType(): OlGeometryType { return this._geometryType; }\r\n  private _geometryType: OlGeometryType;\r\n\r\n  /**\r\n   * The drawGuide around the mouse pointer to help drawing\r\n   */\r\n  @Input() drawGuide = 0;\r\n\r\n  /**\r\n   * Whether a measure tooltip should be displayed\r\n   */\r\n  @Input() measure: boolean = false;\r\n\r\n  /**\r\n   * The geometry value (GeoJSON)\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  @Input()\r\n  set value(value: GeoJSONGeometry) {\r\n    if (this.ready === false) {\r\n      this._value = value;\r\n      return;\r\n    }\r\n\r\n    if (value) {\r\n      this.addGeoJSONToOverlay(value);\r\n    } else {\r\n      this.olOverlaySource.clear();\r\n    }\r\n\r\n    this._value = value;\r\n    this.onChange(value);\r\n    this.toggleControl();\r\n    this.cdRef.detectChanges();\r\n  }\r\n  get value(): GeoJSONGeometry { return this._value; }\r\n  private _value: GeoJSONGeometry;\r\n\r\n  /**\r\n   * The vector source to add the geometry to\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    @Optional() @Self() public ngControl: NgControl\r\n  ) {\r\n    if (this.ngControl !== undefined) {\r\n      // Setting the value accessor directly (instead of using\r\n      // the providers) to avoid running into a circular import.\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an overlay layer, add the initial geometry to it (if any)\r\n   * and toggle the right interaction.\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.addOlOverlayLayer();\r\n    this.createMeasureTooltip();\r\n    this.drawInteractionStyle = createDrawInteractionStyle();\r\n    this.defaultDrawStyleRadius = this.drawInteractionStyle.getImage().getRadius();\r\n    this.createDrawControl();\r\n    this.createModifyControl();\r\n    if (this.value) {\r\n      this.addGeoJSONToOverlay(this.value);\r\n    }\r\n    this.toggleControl();\r\n    this.ready = true;\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer and any interaction added by this component.\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.deactivateControl();\r\n    this.olOverlaySource.clear();\r\n    this.map.ol.removeLayer(this.olOverlayLayer);\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  // tslint:disable-next-line:ban-types\r\n  registerOnChange(fn: Function) {\r\n    this.onChange = fn;\r\n  }\r\n  private onChange: any = () => {};\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  // tslint:disable-next-line:ban-types\r\n  registerOnTouched(fn: Function) {\r\n    this.onTouched = fn;\r\n  }\r\n  private onTouched: any = () => {};\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  writeValue(value: GeoJSONGeometry) {\r\n    this.value = value;\r\n  }\r\n\r\n  /**\r\n   * Add an overlay layer to the map\r\n   */\r\n  private addOlOverlayLayer(): OlVectorLayer {\r\n    this.olOverlayLayer = new OlVectorLayer({\r\n      source: new OlVectorSource(),\r\n      zIndex: 500\r\n    });\r\n    this.map.ol.addLayer(this.olOverlayLayer);\r\n  }\r\n\r\n  /**\r\n   * Create a draw control and subscribe to it's geometry\r\n   */\r\n  private createDrawControl() {\r\n    this.drawControl = new DrawControl({\r\n      geometryType: this.geometryType,\r\n      layer: this.olOverlayLayer,\r\n      drawStyle: (olFeature: OlFeature, resolution: number) => {\r\n        const style = this.drawInteractionStyle;\r\n        this.updateDrawStyleWithDrawGuide(style, resolution);\r\n        return style;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a modify control and subscribe to it's geometry\r\n   */\r\n  private createModifyControl() {\r\n    this.modifyControl = new ModifyControl({\r\n      layer: this.olOverlayLayer,\r\n      drawStyle: (olFeature: OlFeature, resolution: number) => {\r\n        const style = this.drawInteractionStyle;\r\n        this.updateDrawStyleWithDrawGuide(style, resolution);\r\n        return style;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle the proper control (draw or modify)\r\n   */\r\n  private toggleControl() {\r\n    this.deactivateControl();\r\n    if (!this.value) {\r\n      this.activateControl(this.drawControl);\r\n    } else {\r\n      this.activateControl(this.modifyControl);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate a given control\r\n   * @param control Control\r\n   */\r\n  private activateControl(control: DrawControl | ModifyControl) {\r\n    this.activeControl = control;\r\n    this.olGeometryEnds$$ = control.end$\r\n      .subscribe((olGeometry: OlGeometry) => this.onOlGeometryEnds(olGeometry));\r\n    if (this.measure === true && control === this.drawControl) {\r\n      this.olGeometryChanges$$ = control.changes$\r\n        .subscribe((olGeometry: OlGeometry) => this.onOlGeometryChanges(olGeometry));\r\n    }\r\n    control.setOlMap(this.map.ol);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active control\r\n   */\r\n  private deactivateControl() {\r\n    this.removeMeasureTooltip();\r\n    if (this.activeControl !== undefined) {\r\n      this.activeControl.setOlMap(undefined);\r\n    }\r\n    if (this.olGeometryEnds$$ !== undefined) {\r\n      this.olGeometryEnds$$.unsubscribe();\r\n    }\r\n    if (this.olGeometryChanges$$ !== undefined) {\r\n      this.olGeometryChanges$$.unsubscribe();\r\n    }\r\n    this.activeControl = undefined;\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onOlGeometryEnds(olGeometry: OlGeometry | undefined) {\r\n    this.removeMeasureTooltip();\r\n    this.setOlGeometry(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onOlGeometryChanges(olGeometry: OlGeometry) {\r\n    if (olGeometry.getType() !== 'Point') {\r\n      this.updateMeasureTooltip(olGeometry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When drawing ends, convert the output value to GeoJSON and keep it.\r\n   * Restore the double click interaction.\r\n   * @param olGeometry OL geometry\r\n   */\r\n  private setOlGeometry(olGeometry: OlGeometry | undefined) {\r\n    if (olGeometry === undefined) {\r\n      return;\r\n    }\r\n    const value = this.olGeoJSON.writeGeometryObject(olGeometry, {\r\n      featureProjection: this.map.projection,\r\n      dataProjection: 'EPSG:4326'\r\n    });\r\n    this.writeValue(value);\r\n  }\r\n\r\n  /**\r\n   * Add a GeoJSON geometry to the overlay\r\n   * @param geometry GeoJSON geometry\r\n   */\r\n  private addGeoJSONToOverlay(geometry: GeoJSONGeometry) {\r\n    const olGeometry = this.olGeoJSON.readGeometry(geometry, {\r\n      dataProjection: 'EPSG:4326',\r\n      featureProjection: this.map.projection\r\n    });\r\n    const olFeature = new OlFeature({geometry: olGeometry});\r\n    this.olOverlaySource.clear();\r\n    this.olOverlaySource.addFeature(olFeature);\r\n  }\r\n\r\n  /**\r\n   * Create the measure tooltip\r\n   */\r\n  private createMeasureTooltip(): OlOverlay {\r\n    this.olTooltip = new OlOverlay({\r\n      element: document.createElement('div'),\r\n      offset: [-30, -10],\r\n      className: [\r\n        'igo-map-tooltip',\r\n        'igo-map-tooltip-measure'\r\n      ].join(' '),\r\n      stopEvent: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the measure tooltip of an OL geometry\r\n   * @param olGeometry OL Geometry\r\n   */\r\n  private updateMeasureTooltip(olGeometry: OlGeometry) {\r\n    const measure = measureOlGeometry(olGeometry, this.map.projection);\r\n    const lengths = measure.lengths;\r\n    const lastIndex = olGeometry.getType() === 'Polygon' ? lengths.length - 2 : lengths.length - 1;\r\n    const lastLength = lengths[lastIndex];\r\n\r\n    const olMidpoints = updateOlGeometryMidpoints(olGeometry);\r\n    const olLastMidpoint = olMidpoints[lastIndex];\r\n    if (olMidpoints.length === 0 || olLastMidpoint === undefined) {\r\n      this.removeMeasureTooltip();\r\n      return;\r\n    }\r\n\r\n    this.olTooltip.setPosition(olLastMidpoint.flatCoordinates);\r\n\r\n    const innerHtml = formatMeasure(lastLength, {\r\n      decimal: 1,\r\n      unit: MeasureLengthUnit.Meters,\r\n      unitAbbr: true,\r\n      locale: 'fr'\r\n    });\r\n    this.olTooltip.getElement().innerHTML = innerHtml;\r\n    if (this.olTooltip.getMap() === undefined) {\r\n      this.map.ol.addOverlay(this.olTooltip);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the measure tooltip from the map\r\n   */\r\n  private removeMeasureTooltip() {\r\n    if (this.olTooltip.getMap() !== undefined) {\r\n      this.map.ol.removeOverlay(this.olTooltip);\r\n      this.olTooltip.setMap(undefined);\r\n    }\r\n  }\r\n\r\n  private updateDrawStyleWithDrawGuide(olStyle: OlStyle, resolution: number) {\r\n    const drawGuide = this.drawGuide;\r\n    let radius;\r\n    if (drawGuide === undefined || drawGuide < 0) {\r\n      radius = this.defaultDrawStyleRadius;\r\n    } else {\r\n      radius = drawGuide > 0 ? drawGuide / resolution : drawGuide;\r\n    }\r\n    olStyle.getImage().setRadius(radius);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { GeometryFormFieldComponent } from './geometry-form-field.component';\r\nimport { GeometryFormFieldInputComponent } from './geometry-form-field-input.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [\r\n    GeometryFormFieldComponent,\r\n    GeometryFormFieldInputComponent\r\n  ],\r\n  declarations: [\r\n    GeometryFormFieldComponent,\r\n    GeometryFormFieldInputComponent\r\n  ]\r\n})\r\nexport class IgoGeometryFormFieldModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoGeometryFormFieldModule } from './geometry-form-field/geometry-form-field.module';\r\nimport { GeometryFormFieldComponent } from './geometry-form-field/geometry-form-field.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoGeometryFormFieldModule\r\n  ],\r\n  exports: [\r\n    IgoGeometryFormFieldModule\r\n  ],\r\n  declarations: [],\r\n  providers: [],\r\n  entryComponents: [\r\n    GeometryFormFieldComponent\r\n  ]\r\n})\r\nexport class IgoGeometryModule {}\r\n","export class ExportError extends Error {}\r\n\r\nexport class ExportInvalidFileError extends ExportError {\r\n  constructor() {\r\n    super('Invalid file.');\r\n    Object.setPrototypeOf(this, ExportInvalidFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ExportNothingToExportError extends ExportError {\r\n  constructor() {\r\n    super('Nothing to export.');\r\n    Object.setPrototypeOf(this, ExportNothingToExportError.prototype);\r\n  }\r\n}\r\n","import { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport {\r\n  getEntityProperty,\r\n  EntityTableColumn,\r\n  EntityTableColumnRenderer\r\n} from '@igo2/common';\r\n\r\nimport { ExportNothingToExportError } from './export.errors';\r\n\r\n/**\r\n * Export array to CSV\r\n *\r\n * @param rows Array of arrays to export as CSV\r\n * @param separator Cell separator\r\n */\r\nexport function exportToCSV(rows: any[][], fileName: string, separator: string = ';') {\r\n  const lines = rows.map((row: any[][], index: number) => row.join(separator));\r\n  const csvContent = lines.join('\\n');\r\n  downloadContent(csvContent, 'text/csv;charset=utf-8', fileName);\r\n}\r\n\r\n/**\r\n * Return an array of values from an array of entities.\r\n *\r\n * @param entities Array of entities\r\n * @param scolumns Columns definition of the output data\r\n */\r\nexport function entitiesToRowData(entities: object[], columns: EntityTableColumn[]) {\r\n  return entities.map((entity: object) => {\r\n    return columns.map((column: EntityTableColumn) => {\r\n      let valueAccessor;\r\n      if (column.renderer === undefined || column.renderer === EntityTableColumnRenderer.Default) {\r\n        valueAccessor = column.valueAccessor;\r\n      }\r\n      valueAccessor = valueAccessor ? valueAccessor : getEntityProperty;\r\n      return valueAccessor(entity, column.name);\r\n    });\r\n  });\r\n}\r\n\r\n/**\r\n * Trigger download of a file\r\n *\r\n * @param content File content\r\n * @param mimeType File mime type\r\n * @param fileName File name\r\n */\r\nexport function downloadContent(content: string, mimeType: string, fileName: string) {\r\n  const element = document.createElement('a');\r\n  element.setAttribute(\r\n    'href',\r\n    `data:${mimeType},${encodeURIComponent(content)}`\r\n  );\r\n  element.setAttribute('download', fileName);\r\n  element.style.display = 'none';\r\n  document.body.appendChild(element);\r\n\r\n  element.click();\r\n\r\n  document.body.removeChild(element);\r\n}\r\n\r\nexport function handleFileExportError(\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  if (error instanceof ExportNothingToExportError) {\r\n    handleNothingToExportError(messageService, languageService);\r\n    return;\r\n  }\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.export.failed.title');\r\n  const message = translate.instant('igo.geo.export.failed.text');\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleNothingToExportError(\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.export.nothing.title');\r\n  const message = translate.instant('igo.geo.export.nothing.text');\r\n  messageService.error(message, title);\r\n}\r\n","import { strEnum } from '@igo2/utils';\r\n\r\nexport const ExportFormat = strEnum(['GeoJSON', 'GML', 'GPX', 'KML', 'Shapefile']);\r\nexport type ExportFormat = keyof typeof ExportFormat;\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport * as olformat from 'ol/format';\r\nimport OlFeature from 'ol/Feature';\r\n\r\nimport { downloadContent } from './export.utils';\r\nimport { ExportFormat } from './export.type';\r\nimport { ExportInvalidFileError, ExportNothingToExportError } from './export.errors';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportService {\r\n\r\n  static ogreFormats = {\r\n    GML: 'gml',\r\n    GPX: 'gpx',\r\n    KML: 'kml',\r\n    Shapefile: 'ESRI Shapefile'\r\n  };\r\n\r\n  static noOgreFallbacks = ['GML', 'GPX', 'KML'];\r\n\r\n  private ogreUrl: string;\r\n\r\n  constructor(private config: ConfigService) {\r\n    this.ogreUrl = this.config.getConfig('importExport.url');\r\n  }\r\n\r\n  export(\r\n    olFeatures: OlFeature[],\r\n    format: ExportFormat,\r\n    title: string,\r\n    projectionIn = 'EPSG:4326',\r\n    projectionOut = 'EPSG:4326'\r\n  ): Observable<void> {\r\n    const exportOlFeatures = olFeatures.map((olFeature: OlFeature) => {\r\n      const keys = olFeature.getKeys().filter((key: string) => !key.startsWith('_'));\r\n      const properties = keys.reduce((acc: object, key: string) => {\r\n        acc[key] = olFeature.get(key);\r\n        return acc;\r\n      }, {geometry: olFeature.getGeometry()});\r\n      return new OlFeature(properties);\r\n    });\r\n\r\n    return this.exportAsync(exportOlFeatures, format, title, projectionIn, projectionOut);\r\n  }\r\n\r\n  private exportAsync(\r\n    olFeatures: OlFeature[],\r\n    format: ExportFormat,\r\n    title: string,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ): Observable<void> {\r\n    const doExport = (observer: Observer<void>) => {\r\n      const nothingToExport = this.nothingToExport(olFeatures, format);\r\n      if (nothingToExport === true) {\r\n        observer.error(new ExportNothingToExportError());\r\n        return;\r\n      }\r\n\r\n      const ogreFormats = Object.keys(ExportService.ogreFormats);\r\n      if (ogreFormats.indexOf(format) >= 0) {\r\n        if (this.ogreUrl === undefined) {\r\n          if (ExportService.noOgreFallbacks.indexOf(format) >= 0) {\r\n            this.exportToFile(olFeatures, observer, format, title, projectionIn, projectionOut);\r\n          } else {\r\n            observer.error(new ExportInvalidFileError());\r\n          }\r\n          return;\r\n        }\r\n        this.exportWithOgre(olFeatures, observer, format, title, projectionIn, projectionOut);\r\n      } else {\r\n        this.exportToFile(olFeatures, observer, format, title, projectionIn, projectionOut);\r\n      }\r\n    };\r\n\r\n    return new Observable(doExport);\r\n  }\r\n\r\n  private exportToFile(\r\n    olFeatures: OlFeature[],\r\n    observer: Observer<void>,\r\n    format: ExportFormat,\r\n    title: string,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) {\r\n    const olFormat = new olformat[format]();\r\n    const featuresText = olFormat.writeFeatures(olFeatures, {\r\n      dataProjection: projectionOut,\r\n      featureProjection: projectionIn,\r\n      featureType: 'feature',\r\n      featureNS: 'http://example.com/feature'\r\n    });\r\n\r\n    const fileName = `${title}.${format.toLowerCase()}`;\r\n\r\n    downloadContent(featuresText, 'text/plain;charset=utf-8', fileName);\r\n    observer.complete();\r\n  }\r\n\r\n  private exportWithOgre(\r\n    olFeatures: OlFeature[],\r\n    observer: Observer<void>,\r\n    format: string,\r\n    title: string,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) {\r\n    const featuresText = new olformat.GeoJSON().writeFeatures(olFeatures, {\r\n      dataProjection: projectionOut,\r\n      featureProjection: projectionIn,\r\n      featureType: 'feature',\r\n      featureNS: 'http://example.com/feature'\r\n    });\r\n\r\n    const url = `${this.ogreUrl}/convert`;\r\n    const form = document.createElement('form');\r\n    form.setAttribute('method', 'post');\r\n    form.setAttribute('action', url);\r\n\r\n    const geojsonField = document.createElement('input');\r\n    geojsonField.setAttribute('type', 'hidden');\r\n    geojsonField.setAttribute('name', 'json');\r\n    geojsonField.setAttribute('value', featuresText);\r\n    form.appendChild(geojsonField);\r\n\r\n    const outputNameField = document.createElement('input');\r\n    const outputName = format === 'Shapefile' ? `${title}.zip` : title;\r\n    outputNameField.setAttribute('type', 'hidden');\r\n    outputNameField.setAttribute('name', 'outputName');\r\n    outputNameField.setAttribute('value', outputName);\r\n    form.appendChild(outputNameField);\r\n\r\n    const ogreFormat = ExportService.ogreFormats[format];\r\n    const outputFormatField = document.createElement('input');\r\n    outputFormatField.setAttribute('type', 'hidden');\r\n    outputFormatField.setAttribute('name', 'formatOutput');\r\n    outputFormatField.setAttribute('value', ogreFormat);\r\n    form.appendChild(outputFormatField);\r\n\r\n    document.body.appendChild(form);\r\n    form.submit();\r\n    document.body.removeChild(form);\r\n\r\n    observer.complete();\r\n  }\r\n\r\n  private nothingToExport(olFeatures: OlFeature[], format: string): boolean {\r\n    if (olFeatures.length === 0) { return true; }\r\n    if (format === 'GPX') {\r\n      const pointOrLine = olFeatures.find((olFeature) => {\r\n        return ['Point', 'LineString'].indexOf(olFeature.getGeometry().getType()) >= 0;\r\n      });\r\n      return pointOrLine === undefined;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","export class ImportError extends Error {}\r\n\r\nexport class ImportInvalidFileError extends ImportError {\r\n  constructor() {\r\n    super('Invalid file.');\r\n    Object.setPrototypeOf(this, ImportInvalidFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportUnreadableFileError extends ImportError {\r\n  constructor() {\r\n      super('Failed to read file.');\r\n      Object.setPrototypeOf(this, ImportUnreadableFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportNothingToImportError extends ImportError {\r\n  constructor() {\r\n      super('Nothing to import.');\r\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\r\n  }\r\n}\r\n","import * as olStyle from 'ol/style';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { FeatureDataSource } from '../../datasource/shared/datasources/feature-datasource';\r\nimport { FeatureDataSourceOptions } from '../../datasource/shared/datasources/feature-datasource.interface';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { featureToOl, moveToOlFeatures } from '../../feature/shared/feature.utils';\r\nimport { VectorLayer } from '../../layer/shared/layers/vector-layer';\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { QueryableDataSourceOptions } from '../../query/shared/query.interfaces';\r\n\r\nexport function addLayerAndFeaturesToMap(features: Feature[], map: IgoMap, layerTitle: string): VectorLayer {\r\n  const olFeatures = features.map((feature: Feature) => featureToOl(feature, map.projection));\r\n\r\n  const r = Math.floor(Math.random() * 255);\r\n  const g = Math.floor(Math.random() * 255);\r\n  const b = Math.floor(Math.random() * 255);\r\n  const stroke = new olStyle.Stroke({\r\n    color: [r, g, b, 1],\r\n    width: 2\r\n  });\r\n\r\n  const fill = new olStyle.Fill({\r\n    color: [r, g, b, 0.4]\r\n  });\r\n  const sourceOptions: FeatureDataSourceOptions & QueryableDataSourceOptions = {\r\n    queryable: true\r\n  };\r\n  const source = new FeatureDataSource(sourceOptions);\r\n  source.ol.addFeatures(olFeatures);\r\n  const layer = new VectorLayer({\r\n    title: layerTitle,\r\n    source,\r\n    style: new olStyle.Style({\r\n      stroke,\r\n      fill,\r\n      image: new olStyle.Circle({\r\n        radius: 5,\r\n        stroke,\r\n        fill\r\n      })\r\n    })\r\n  });\r\n  map.addLayer(layer);\r\n  moveToOlFeatures(map, olFeatures);\r\n\r\n  return layer;\r\n}\r\n\r\nexport function handleFileImportSuccess(\r\n  file: File,\r\n  features: Feature[],\r\n  map: IgoMap,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  if (features.length === 0) {\r\n    this.handleNothingToImportError(file, messageService, languageService);\r\n    return;\r\n  }\r\n\r\n  const layerTitle = computeLayerTitleFromFile(file);\r\n  addLayerAndFeaturesToMap(features, map, layerTitle);\r\n\r\n  const translate = languageService.translate;\r\n  const messageTitle = translate.instant('igo.geo.dropGeoFile.success.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.success.text', {\r\n      value: layerTitle\r\n  });\r\n  messageService.success(message, messageTitle);\r\n}\r\n\r\nexport function handleFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.dropGeoFile.invalid.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.invalid.text', {\r\n      value: file.name,\r\n      mimeType: file.type\r\n  });\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleNothingToImportError(\r\n  file: File,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.dropGeoFile.empty.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.empty.text', {\r\n      value: file.name,\r\n      mimeType: file.type\r\n  });\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function getFileExtension(file: File): string {\r\n  return file.name.split('.').pop().toLowerCase();\r\n}\r\n\r\nexport function computeLayerTitleFromFile(file: File): string {\r\n  return file.name.substr(0, file.name.lastIndexOf('.'));\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport * as olformat from 'ol/format';\r\nimport OlFeature from 'ol/Feature';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { ImportInvalidFileError, ImportUnreadableFileError } from './import.errors';\r\nimport { computeLayerTitleFromFile, getFileExtension } from './import.utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImportService {\r\n\r\n  static allowedMimeTypes = [\r\n    'application/gml+xml',\r\n    'application/vnd.google-earth.kml+xml',\r\n    'application/gpx+xml',\r\n    'application/json'\r\n  ];\r\n\r\n  static allowedZipMimeTypes = [\r\n    'application/zip',\r\n    'application/x-zip-compressed',\r\n    'application/x-zip'\r\n  ];\r\n\r\n  static allowedExtensions = [\r\n    'geojson',\r\n    'kml',\r\n    'gpx',\r\n    'json',\r\n    'gml'\r\n  ];\r\n\r\n  private ogreUrl: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private config: ConfigService\r\n  ) {\r\n    this.ogreUrl = this.config.getConfig('importExport.url');\r\n  }\r\n\r\n  import(file: File, projectionIn = 'EPSG:4326', projectionOut = 'EPSG:4326'): Observable<Feature[]> {\r\n    return this.importAsync(file, projectionIn, projectionOut);\r\n  }\r\n\r\n  private getFileImporter(file: File): (file: File, observer: Observer<Feature[]>, projectionIn: string, projectionOut: string) => void {\r\n    const extension = getFileExtension(file);\r\n    const mimeType = file.type;\r\n    const allowedMimeTypes = [...ImportService.allowedMimeTypes, ...ImportService.allowedZipMimeTypes];\r\n    const allowedExtensions = ImportService.allowedExtensions;\r\n\r\n    if (allowedMimeTypes.indexOf(mimeType) < 0 && allowedExtensions.indexOf(extension) < 0) {\r\n      return undefined;\r\n    } else if (mimeType === 'application/json' || ['json', 'geojson', 'kml'].indexOf(extension) >= 0) {\r\n      return this.importFile;\r\n    } else if (this.ogreUrl !== undefined) {\r\n      return this.importFileWithOgre;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private importAsync(file: File, projectionIn: string, projectionOut: string): Observable<Feature[]> {\r\n    const doImport = (observer: Observer<Feature[]>) => {\r\n      const importer = this.getFileImporter(file);\r\n      if (importer === undefined) {\r\n        observer.error(new ImportInvalidFileError());\r\n        return;\r\n      }\r\n\r\n      importer.call(this, file, observer, projectionIn, projectionOut);\r\n    };\r\n\r\n    return new Observable(doImport);\r\n  }\r\n\r\n  private importFile(file: File, observer: Observer<Feature[]>, projectionIn: string, projectionOut: string) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event: any) => {\r\n      try {\r\n        const features = this.parseFeaturesFromFile(\r\n          file,\r\n          event.target.result,\r\n          projectionIn,\r\n          projectionOut\r\n        );\r\n        observer.next(features);\r\n      } catch (e) {\r\n        observer.error(new ImportUnreadableFileError());\r\n      }\r\n\r\n      observer.complete();\r\n    };\r\n\r\n    reader.onerror = evt => {\r\n      observer.error(new ImportUnreadableFileError());\r\n    };\r\n\r\n    reader.readAsText(file, 'UTF-8');\r\n  }\r\n\r\n  private importFileWithOgre(file: File, observer: Observer<Feature[]>, projectionIn: string, projectionOut: string) {\r\n    const url = `${this.ogreUrl}/convert`;\r\n    const formData = new FormData();\r\n    formData.append('upload', file);\r\n    formData.append('sourceSrs', projectionIn);\r\n    formData.append('targetSrs', projectionOut);\r\n    formData.append('formatOutput', 'GEOJSON');\r\n    formData.append('skipFailures', '');\r\n\r\n    this.http\r\n      .post(url, formData, {headers: new HttpHeaders()})\r\n      .subscribe(\r\n        (response: {errors?: string[]} | object | null) => {\r\n          if (response === null) {\r\n            observer.error(new ImportUnreadableFileError());\r\n            return;\r\n          }\r\n\r\n          const errors = (response as any).errors || [];\r\n          if (errors.length > 0) {\r\n            observer.error(new ImportUnreadableFileError());\r\n          } else {\r\n            const features = this.parseFeaturesFromGeoJSON(file, response, projectionOut);\r\n            observer.next(features);\r\n            observer.complete();\r\n          }\r\n        },\r\n        (error: Error) => {\r\n          observer.error(new ImportUnreadableFileError());\r\n        }\r\n      );\r\n  }\r\n\r\n  private parseFeaturesFromFile(file: File, data: string, projectionIn: string, projectionOut: string): Feature[] {\r\n    const extension = getFileExtension(file);\r\n    const mimeType = file.type;\r\n\r\n    const GeoJSON = new olformat.GeoJSON();\r\n\r\n    let format;\r\n    if (mimeType === 'application/vnd.google-earth.kml+xml') {\r\n      format = new olformat.KML();\r\n    } else if (mimeType === 'application/gml+xml') {\r\n      format = new olformat.GML();\r\n    } else if (mimeType === 'application/gpx+xml') {\r\n      format = new olformat.GPX();\r\n    } else {\r\n      switch (extension) {\r\n        case 'kml':\r\n          format = new olformat.KML();\r\n          break;\r\n       case 'gpx':\r\n          format = new olformat.GPX();\r\n          break;\r\n        case 'gml':\r\n          format = new olformat.GML();\r\n          break;\r\n        default:\r\n          format = GeoJSON;\r\n          break;\r\n      }\r\n    }\r\n\r\n    const olFeatures = format.readFeatures(data, {\r\n      dataProjection: projectionIn,\r\n      featureProjection: projectionOut\r\n    });\r\n    const features = olFeatures.map((olFeature: OlFeature) => {\r\n      return Object.assign(GeoJSON.writeFeatureObject(olFeature), {\r\n        projection: projectionOut,\r\n        meta: {\r\n          id: uuid(),\r\n          title: computeLayerTitleFromFile(file)\r\n        }\r\n      });\r\n    });\r\n\r\n    return features;\r\n  }\r\n\r\n  private parseFeaturesFromGeoJSON(file: File, data: object, projectionOut: string): Feature[] {\r\n    const olFormat = new olformat.GeoJSON();\r\n    const olFeatures = olFormat.readFeatures(data);\r\n    const features = olFeatures.map((olFeature: OlFeature) => {\r\n      return Object.assign(olFormat.writeFeatureObject(olFeature), {\r\n        projection: projectionOut,\r\n        meta: {\r\n          id: uuid(),\r\n          title: computeLayerTitleFromFile(file)\r\n        }\r\n      });\r\n    });\r\n\r\n    return features;\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { VectorLayer } from '../../layer/shared/layers/vector-layer';\r\n\r\nimport { handleFileExportError } from '../shared/export.utils';\r\nimport { ExportOptions } from '../shared/export.interface';\r\nimport { ExportFormat } from '../shared/export.type';\r\nimport { ExportService } from '../shared/export.service';\r\nimport { ImportService } from '../shared/import.service';\r\nimport { handleFileImportSuccess, handleFileImportError } from '../shared/import.utils';\r\n\r\n@Component({\r\n  selector: 'igo-import-export',\r\n  templateUrl: './import-export.component.html',\r\n  styleUrls: ['./import-export.component.scss']\r\n})\r\nexport class ImportExportComponent implements OnDestroy, OnInit {\r\n\r\n  public form: FormGroup;\r\n  public formats = ExportFormat;\r\n  public layers: VectorLayer[];\r\n  public inputProj: string = 'EPSG:4326';\r\n\r\n  private layers$$: Subscription;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  constructor(\r\n    private importService: ImportService,\r\n    private exportService: ExportService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private formBuilder: FormBuilder\r\n  ) {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.layers$$ = this.map.layers$.subscribe(layers => {\r\n      this.layers = layers\r\n        .filter((layer: Layer) => {\r\n          return layer instanceof VectorLayer && layer.exportable === true;\r\n        }) as VectorLayer[];\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n\r\n  importFiles(files: File[]) {\r\n    for (const file of files) {\r\n      this.importService\r\n        .import(file, this.inputProj)\r\n        .subscribe(\r\n          (features: Feature[]) => this.onFileImportSuccess(file, features),\r\n          (error: Error) => this.onFileImportError(file, error)\r\n        );\r\n    }\r\n  }\r\n\r\n  handleExportFormSubmit(data: ExportOptions) {\r\n    const layer = this.map.getLayerById(data.layer);\r\n    const olFeatures = layer.dataSource.ol.getFeatures();\r\n    this.exportService\r\n      .export(olFeatures, data.format, layer.title, this.map.projection)\r\n      .subscribe(\r\n        () => {},\r\n        (error: Error) => this.onFileExportError(error)\r\n      );\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      format: ['', [Validators.required]],\r\n      layer: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private onFileImportSuccess(file: File, features: Feature[]) {\r\n    handleFileImportSuccess(file, features, this.map, this.messageService, this.languageService);\r\n  }\r\n\r\n  private onFileImportError(file: File, error: Error) {\r\n    handleFileImportError(file, error, this.messageService, this.languageService);\r\n  }\r\n\r\n  private onFileExportError(error: Error) {\r\n    handleFileExportError(error, this.messageService, this.languageService);\r\n  }\r\n}\r\n","import { Directive, HostListener, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { DragAndDropDirective } from '@igo2/common';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\nimport { ImportService } from './import.service';\r\nimport { handleFileImportSuccess, handleFileImportError } from '../shared/import.utils';\r\n\r\n@Directive({\r\n  selector: '[igoDropGeoFile]'\r\n})\r\nexport class DropGeoFileDirective extends DragAndDropDirective implements OnInit, OnDestroy {\r\n\r\n  protected filesDropped: EventEmitter<File[]> = new EventEmitter();\r\n  protected filesInvalid: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  private filesDropped$$: Subscription;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    private component: MapBrowserComponent,\r\n    private importService: ImportService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filesDropped$$ = this.filesDropped.subscribe((files: File[]) => {\r\n      this.onFilesDropped(files);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.filesDropped$$.unsubscribe();\r\n  }\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(evt) {\r\n    super.onDragOver(evt);\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  public onDragLeave(evt) {\r\n    super.onDragLeave(evt);\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(evt) {\r\n    super.onDrop(evt);\r\n  }\r\n\r\n  private onFilesDropped(files: File[]) {\r\n    for (const file of files) {\r\n      this.importService\r\n        .import(file)\r\n        .subscribe(\r\n          (features: Feature[]) => this.onFileImportSuccess(file, features),\r\n          (error: Error) => this.onFileImportError(file, error)\r\n        );\r\n    }\r\n  }\r\n\r\n  private onFileImportSuccess(file: File, features: Feature[]) {\r\n    handleFileImportSuccess(file, features, this.map, this.messageService, this.languageService);\r\n  }\r\n\r\n  private onFileImportError(file: File, error: Error) {\r\n    handleFileImportError(file, error, this.messageService, this.languageService);\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule,\r\n  MatTabsModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatFormFieldModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoKeyValueModule, IgoDrapDropModule } from '@igo2/common';\r\n\r\nimport { ImportExportComponent } from './import-export/import-export.component';\r\nimport { DropGeoFileDirective } from './shared/drop-geo-file.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    IgoLanguageModule,\r\n    IgoKeyValueModule,\r\n    IgoDrapDropModule\r\n  ],\r\n  exports: [ImportExportComponent, DropGeoFileDirective],\r\n  declarations: [ImportExportComponent, DropGeoFileDirective]\r\n})\r\nexport class IgoImportExportModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoImportExportModule\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatSliderModule,\r\n  MatBadgeModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoListModule,\r\n  IgoCollapsibleModule,\r\n  IgoImageModule\r\n} from '@igo2/common';\r\n\r\nimport { LayerService } from './shared/layer.service';\r\nimport { StyleService } from './shared/style.service';\r\nimport { LayerListService } from './layer-list/layer-list.service';\r\nimport { LayerItemComponent } from './layer-item/layer-item.component';\r\nimport { LayerLegendComponent } from './layer-legend/layer-legend.component';\r\nimport { LayerListComponent } from './layer-list/layer-list.component';\r\nimport { LayerListBindingDirective } from './layer-list/layer-list-binding.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    MatSliderModule,\r\n    MatBadgeModule,\r\n    IgoLanguageModule,\r\n    IgoListModule,\r\n    IgoCollapsibleModule,\r\n    IgoImageModule\r\n  ],\r\n  exports: [\r\n    LayerItemComponent,\r\n    LayerLegendComponent,\r\n    LayerListComponent,\r\n    LayerListBindingDirective\r\n  ],\r\n  declarations: [\r\n    LayerItemComponent,\r\n    LayerLegendComponent,\r\n    LayerListComponent,\r\n    LayerListBindingDirective\r\n  ]\r\n})\r\nexport class IgoLayerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoLayerModule,\r\n      providers: [LayerService, StyleService, LayerListService]\r\n    };\r\n  }\r\n}\r\n","import { Directive, AfterViewInit, OnDestroy, Self, OnInit, EventEmitter, Output } from '@angular/core';\r\nimport { IgoMap } from './map';\r\nimport { MapBrowserComponent } from '../map-browser/map-browser.component';\r\nimport { NetworkService, ConnectionState } from '@igo2/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\n@Directive({\r\n    selector: '[igoMapLayer]'\r\n  })\r\nexport class MapLayerDirective implements AfterViewInit {\r\n\r\n  private context$$: Subscription;\r\n  private state: ConnectionState;\r\n  private component: MapBrowserComponent;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    component: MapBrowserComponent,\r\n    private networkService: NetworkService\r\n    ) {\r\n      this.component = component;\r\n    }\r\n\r\n  ngAfterViewInit() {\r\n    this.networkService.currentState().subscribe((state: ConnectionState) => {\r\n      console.log(state);\r\n      this.state = state;\r\n      this.changeLayer();\r\n    });\r\n\r\n    this.map.layers$.subscribe((layers: Layer[]) => {\r\n      this.changeLayer();\r\n    });\r\n  }\r\n\r\n  private changeLayer() {\r\n    const layerList = this.map.layers$.value;\r\n    layerList.forEach(layer => {\r\n      if (layer.options.sourceOptions) {\r\n        if (layer.options.sourceOptions.pathOffline  &&\r\n          this.state.connection === false) {\r\n            if (layer.options.sourceOptions.excludeAttributeOffline) {\r\n              layer.options.sourceOptions.excludeAttributeBackUp = layer.options.sourceOptions.excludeAttribute;\r\n              layer.options.sourceOptions.excludeAttribute = layer.options.sourceOptions.excludeAttributeOffline;\r\n            }\r\n            layer.ol.getSource().clear();\r\n            layer.ol.getSource().setUrl(layer.options.sourceOptions.pathOffline);\r\n        } else if (layer.options.sourceOptions.pathOffline &&\r\n          this.state.connection === true) {\r\n            if (layer.options.sourceOptions.excludeAttributeBackUp) {\r\n              layer.options.sourceOptions.excludeAttribute = layer.options.sourceOptions.excludeAttributeBackUp;\r\n            }\r\n            layer.ol.getSource().clear();\r\n            layer.ol.getSource().setUrl(layer.options.sourceOptions.url);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoConfirmDialogModule } from '@igo2/common';\r\n\r\nimport { MapBrowserComponent } from './map-browser/map-browser.component';\r\nimport { ZoomButtonComponent } from './zoom-button/zoom-button.component';\r\nimport { GeolocateButtonComponent } from './geolocate-button/geolocate-button.component';\r\nimport { RotationButtonComponent } from './rotation-button/rotation-button.component';\r\nimport { BaseLayersSwitcherComponent } from './baselayers-switcher/baselayers-switcher.component';\r\nimport { MiniBaseMapComponent } from './baselayers-switcher/mini-basemap.component';\r\nimport { MapLayerDirective } from './shared/mapLayer.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    IgoConfirmDialogModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    MapBrowserComponent,\r\n    ZoomButtonComponent,\r\n    GeolocateButtonComponent,\r\n    RotationButtonComponent,\r\n    BaseLayersSwitcherComponent,\r\n    MiniBaseMapComponent,\r\n    MapLayerDirective\r\n  ],\r\n  declarations: [\r\n    MapBrowserComponent,\r\n    ZoomButtonComponent,\r\n    GeolocateButtonComponent,\r\n    RotationButtonComponent,\r\n    BaseLayersSwitcherComponent,\r\n    MiniBaseMapComponent,\r\n    MapLayerDirective\r\n  ]\r\n})\r\nexport class IgoMapModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport {\r\n  MeasureType,\r\n  MeasureAreaUnit,\r\n  MeasureLengthUnit\r\n} from '../shared/measure.enum';\r\nimport { computeBestAreaUnit, computeBestLengthUnit } from '../shared/measure.utils';\r\n\r\n/**\r\n * Measurer item\r\n */\r\n@Component({\r\n  selector: 'igo-measurer-item',\r\n  templateUrl: './measurer-item.component.html',\r\n  styleUrls: ['./measurer-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MeasurerItemComponent implements OnDestroy {\r\n\r\n  /**\r\n   * Measure observable\r\n   * @internal\r\n   */\r\n  public measure$: BehaviorSubject<number> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Subscription to the measure observable when the auto mode is on\r\n   * @internal\r\n   */\r\n  public measure$$: Subscription;\r\n\r\n  /**\r\n   * Measure type\r\n   */\r\n  @Input() measureType: MeasureType;\r\n\r\n  /**\r\n   * Measure unit\r\n   */\r\n  @Input() measureUnit: MeasureAreaUnit | MeasureLengthUnit;\r\n\r\n  /**\r\n   * Measure\r\n   */\r\n  @Input()\r\n  set measure(value: number) {\r\n    this.measure$.next(value);\r\n  }\r\n  get measure(): number { return this.measure$.value; }\r\n\r\n  /**\r\n   * Whther measure units should be automatically determined\r\n   */\r\n  @Input()\r\n  set auto(value: boolean) { this.toggleAutoUnit(value); }\r\n  get auto(): boolean { return this._auto; }\r\n  private _auto: boolean = false;\r\n\r\n  /**\r\n   * Placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Event emitted when the measure unit changes\r\n   */\r\n  @Output() measureUnitChange = new EventEmitter<MeasureAreaUnit | MeasureLengthUnit>();\r\n\r\n  /**\r\n   * Available measure units for the measure type given\r\n   * @internal\r\n   */\r\n  get measureUnits(): string[] {\r\n    if (this.measureType === MeasureType.Area) {\r\n      return Object.values(MeasureAreaUnit);\r\n    }\r\n    return Object.values(MeasureLengthUnit);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Toggle the auto unit off\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.toggleAutoUnit(false);\r\n  }\r\n\r\n  /**\r\n   * Set the measure unit\r\n   * @internal\r\n   */\r\n  onMeasureUnitChange(unit: MeasureAreaUnit | MeasureLengthUnit) {\r\n    this.measureUnit = unit;\r\n    this.measureUnitChange.emit(unit);\r\n  }\r\n\r\n  private toggleAutoUnit(toggle: boolean) {\r\n    if (this.measure$$ !== undefined) {\r\n      this.measure$$.unsubscribe();\r\n    }\r\n    if (toggle === true) {\r\n      this.measure$$ = this.measure$.subscribe((measure: number) => {\r\n        this.computeBestMeasureUnit(measure);\r\n      });\r\n    }\r\n    this._auto = toggle;\r\n  }\r\n\r\n  private computeBestMeasureUnit(measure: number) {\r\n    let measureUnit = this.measureUnit;\r\n    if (this.measureType === MeasureType.Area) {\r\n      measureUnit = computeBestAreaUnit(measure);\r\n    } else if (this.measureType === MeasureType.Length) {\r\n      measureUnit = computeBestLengthUnit(measure);\r\n    }\r\n    if (measureUnit !== this.measureUnit) {\r\n      this.onMeasureUnitChange(measureUnit);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatSlideToggleModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoEntityTableModule } from '@igo2/common';\r\n\r\nimport { MeasureFormatPipe } from './measure-format.pipe';\r\nimport { MeasurerItemComponent } from './measurer-item.component';\r\nimport { MeasurerComponent } from './measurer.component';\r\nimport { MeasurerDialogComponent } from './measurer-dialog.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    IgoLanguageModule,\r\n    IgoEntityTableModule\r\n  ],\r\n  declarations: [\r\n    MeasureFormatPipe,\r\n    MeasurerItemComponent,\r\n    MeasurerComponent,\r\n    MeasurerDialogComponent\r\n  ],\r\n  exports: [\r\n    MeasureFormatPipe,\r\n    MeasurerComponent\r\n  ],\r\n  entryComponents: [\r\n    MeasurerDialogComponent\r\n  ]\r\n})\r\nexport class IgoMeasurerModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { IgoMeasurerModule } from './measurer/measurer.module';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [\r\n    IgoMeasurerModule\r\n  ]\r\n})\r\nexport class IgoMeasureModule {}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { MetadataOptions } from './metadata.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MetadataService {\r\n  constructor() {}\r\n\r\n  open(metadata: MetadataOptions) {\r\n    if (metadata.extern) {\r\n      window.open(metadata.url, '_blank');\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\nimport {\r\n  MetadataOptions,\r\n  MetadataLayerOptions\r\n} from '../shared/metadata.interface';\r\nimport { MetadataService } from '../shared/metadata.service';\r\n\r\n@Component({\r\n  selector: 'igo-metadata-button',\r\n  templateUrl: './metadata-button.component.html',\r\n  styleUrls: ['./metadata-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MetadataButtonComponent {\r\n  @Input()\r\n  get layer(): Layer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: Layer) {\r\n    this._layer = value;\r\n  }\r\n  private _layer: Layer;\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  constructor(private metadataService: MetadataService) {}\r\n\r\n  openMetadata(metadata: MetadataOptions) {\r\n    this.metadataService.open(metadata);\r\n  }\r\n\r\n  get options(): MetadataLayerOptions {\r\n    if (!this.layer) {\r\n      return;\r\n    }\r\n    return this.layer.options;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { MetadataButtonComponent } from './metadata-button/metadata-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [MetadataButtonComponent],\r\n  declarations: [MetadataButtonComponent]\r\n})\r\nexport class IgoMetadataModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoMetadataModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","export enum OverlayAction {\r\n    None,\r\n    Move,\r\n    Zoom,\r\n    ZoomIfOutMapExtent\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\n\r\nimport { OverlayAction } from './overlay.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  public features$ = new BehaviorSubject<[Feature[], OverlayAction]>([\r\n    [],\r\n    undefined\r\n  ]);\r\n\r\n  constructor() {}\r\n\r\n  setFeatures(features: Feature[], action: OverlayAction = OverlayAction.None) {\r\n    this.features$.next([features, action]);\r\n  }\r\n\r\n  clear() {\r\n    this.features$.next([[], OverlayAction.None]);\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\nimport * as olextent from 'ol/extent';\r\nimport * as olproj from 'ol/proj';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\n\r\nimport { OverlayService } from '../shared/overlay.service';\r\nimport { OverlayAction } from '../shared/overlay.enum';\r\n\r\n@Directive({\r\n  selector: '[igoOverlay]'\r\n})\r\nexport class OverlayDirective implements OnInit, OnDestroy {\r\n  private features$$: Subscription;\r\n  private format = new olFormatGeoJSON();\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    @Self() private component: MapBrowserComponent,\r\n    private overlayService: OverlayService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.features$$ = this.overlayService.features$.subscribe(res =>\r\n      this.handleFeatures(res[0], res[1])\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$$.unsubscribe();\r\n  }\r\n\r\n  private handleFeatures(features: Feature[], action: OverlayAction) {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { OverlayDirective } from './shared/overlay.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [OverlayDirective],\r\n  declarations: [OverlayDirective]\r\n})\r\nexport class IgoOverlayModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoOverlayModule\r\n    };\r\n  }\r\n}\r\n","import { strEnum } from '@igo2/utils';\r\n\r\nexport const PrintOutputFormat = strEnum(['Pdf', 'Image']);\r\n\r\nexport type PrintOutputFormat = keyof typeof PrintOutputFormat;\r\n\r\nexport const PrintPaperFormat = strEnum([\r\n  'A0',\r\n  'A1',\r\n  'A2',\r\n  'A3',\r\n  'A4',\r\n  'A5',\r\n  'Letter',\r\n  'Legal'\r\n]);\r\nexport type PrintPaperFormat = keyof typeof PrintPaperFormat;\r\n\r\nexport const PrintOrientation = strEnum(['landscape', 'portrait']);\r\nexport type PrintOrientation = keyof typeof PrintOrientation;\r\n\r\nexport const PrintResolution = strEnum(['72', '96', '150', '300']);\r\nexport type PrintResolution = keyof typeof PrintResolution;\r\n\r\nexport const PrintSaveImageFormat = strEnum([\r\n  'Bmp',\r\n  'Gif',\r\n  'Jpeg',\r\n  'Png',\r\n  'Tiff'\r\n]);\r\nexport type PrintSaveImageFormat = keyof typeof PrintSaveImageFormat;\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { saveAs } from 'file-saver';\r\nimport * as jsPDF from 'jspdf';\r\nimport * as _html2canvas from 'html2canvas';\r\nimport * as JSZip from 'jszip';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\nimport { MessageService, ActivityService, LanguageService } from '@igo2/core';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { formatScale } from '../../map/shared/map.utils';\r\nimport { LayerLegend } from '../../layer/shared/layers/layer.interface';\r\nimport { getLayersLegends } from '../../layer/utils/legend';\r\n\r\nimport { PrintOptions } from './print.interface';\r\n\r\nconst html2canvas = _html2canvas;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n  zipFile: JSZip;\r\n  nbFileToProcess: number;\r\n  activityId: string;\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private activityService: ActivityService,\r\n    private languageService: LanguageService\r\n  ) {}\r\n\r\n  print(map: IgoMap, options: PrintOptions): Subject<any> {\r\n    const status$ = new Subject();\r\n\r\n    const paperFormat: string = options.paperFormat;\r\n    const resolution = +options.resolution;  // Default is 96\r\n    const orientation = options.orientation;\r\n\r\n    this.activityId = this.activityService.register();\r\n    const doc = new jsPDF({\r\n      orientation,\r\n      format: paperFormat.toLowerCase()\r\n    });\r\n\r\n    const dimensions = [\r\n      doc.internal.pageSize.width,\r\n      doc.internal.pageSize.height\r\n    ];\r\n\r\n    const margins = [20, 10, 20, 10];\r\n    const width = dimensions[0] - margins[3] - margins[1];\r\n    const height = dimensions[1] - margins[0] - margins[2];\r\n    const size = [width, height];\r\n\r\n    if (options.title !== undefined) {\r\n      this.addTitle(doc, options.title, dimensions[0]);\r\n    }\r\n\r\n    if (options.showProjection === true || options.showScale === true) {\r\n      this.addProjScale(\r\n        doc,\r\n        map,\r\n        resolution,\r\n        options.showProjection,\r\n        options.showScale\r\n      );\r\n    }\r\n    if (options.comment !== '') {\r\n      this.addComment(doc, options.comment);\r\n    }\r\n\r\n    this.addMap(doc, map, resolution, size, margins).subscribe(\r\n      (status: SubjectStatus) => {\r\n        if (status === SubjectStatus.Done) {\r\n          if (options.showLegend === true) {\r\n            this.addLegend(doc, map, margins, resolution);\r\n          } else {\r\n            this.saveDoc(doc);\r\n          }\r\n        }\r\n\r\n        if (status === SubjectStatus.Done || status === SubjectStatus.Error) {\r\n          this.activityService.unregister(this.activityId);\r\n          status$.next(SubjectStatus.Done);\r\n        }\r\n      }\r\n    );\r\n\r\n    return status$;\r\n  }\r\n\r\n  /**\r\n   * Get html code for all layers legend\r\n   * @param  map IgoMap\r\n   * @param  width The width that the legend need to be\r\n   * @return Html code for the legend\r\n   */\r\n  getLayersLegendHtml(map: IgoMap, width: number, resolution: number): string {\r\n    let html = '';\r\n    const legends = getLayersLegends(map.layers, map.viewController.getScale(resolution));\r\n    if (legends.length === 0) {\r\n      return html;\r\n    }\r\n\r\n    // Define important style to be sure that all container is convert\r\n    // to image not just visible part\r\n    html += '<style media=\"screen\" type=\"text/css\">';\r\n    html += '.html2canvas-container { width: ' + width;\r\n    html += 'mm !important; height: 2000px !important; }';\r\n    html += '</style>';\r\n    html += '<font size=\"2\" face=\"Courier New\" >';\r\n    html += '<div style=\"display:inline-block;max-width:' + width + 'mm\">';\r\n    // For each legend, define an html table cell\r\n    legends.forEach((legend: LayerLegend) => {\r\n      html +=\r\n        '<table border=1 style=\"display:inline-block;vertical-align:top\">';\r\n      html += '<tr><th width=\"170px\">' + legend.title + '</th>';\r\n      html += '<td><img class=\"printImageLegend\" src=\"' + legend.url + '\">';\r\n      html += '</td></tr></table>';\r\n    });\r\n    html += '</div>';\r\n\r\n    return html;\r\n  }\r\n\r\n  /**\r\n   * Get all the legend in a single image\r\n   * * @param  format - Image format. default value to \"png\"\r\n   * @return The image of the legend\r\n   */\r\n  getLayersLegendImage(map, format: string = 'png', doZipFile: boolean, resolution: number) {\r\n    const status$ = new Subject();\r\n    // Get html code for the legend\r\n    const width = 200; // milimeters unit, originally define for document pdf\r\n    let html = this.getLayersLegendHtml(map, width, resolution);\r\n    const that = this;\r\n    format = format.toLowerCase();\r\n\r\n    // If no legend show No LEGEND in an image\r\n    if (html.length === 0) {\r\n      html = '<font size=\"12\" face=\"Courier New\" >';\r\n      html += '<div align=\"center\"><b>NO LEGEND</b></div>';\r\n    }\r\n    // Create div to contain html code for legend\r\n    const div = window.document.createElement('div');\r\n\r\n    // Add html code to convert in the new window\r\n    window.document.body.appendChild(div);\r\n    div.innerHTML = html;\r\n    // Define event to execute after all images are loaded to create the canvas\r\n    setTimeout(() => {\r\n      html2canvas(div, { useCORS: true }).then(canvas => {\r\n        let status = SubjectStatus.Done;\r\n        try {\r\n          if (!doZipFile) {\r\n            // Save the canvas as file\r\n            that.saveCanvasImageAsFile(canvas, 'legendImage', format);\r\n          } else {\r\n            // Add the canvas to zip\r\n            that.generateCanvaFileToZip(canvas, 'legendImage' + '.' + format);\r\n          }\r\n          div.parentNode.removeChild(div); // remove temp div (IE)\r\n        } catch (err) {\r\n          status = SubjectStatus.Error;\r\n        }\r\n        status$.next(status);\r\n      });\r\n    }, 500);\r\n  }\r\n\r\n  private addTitle(doc: jsPDF, title: string, pageWidth: number) {\r\n    const pdfResolution = 96;\r\n    const titleSize = 32;\r\n    const titleWidth = ((titleSize * 25.4) / pdfResolution) * title.length;\r\n\r\n    let titleMarginLeft;\r\n    if (titleWidth > pageWidth) {\r\n      titleMarginLeft = 0;\r\n    } else {\r\n      titleMarginLeft = (pageWidth - titleWidth) / 2;\r\n    }\r\n\r\n    doc.setFont('courier');\r\n    doc.setFontSize(32);\r\n    doc.text(title, titleMarginLeft, 15);\r\n  }\r\n\r\n  /**\r\n   * Add comment to the document\r\n   * * @param  doc - pdf document\r\n   * * @param  comment - Comment to add in the document\r\n   * * @param  size - Size of the document\r\n   */\r\n  private addComment(doc: jsPDF, comment: string) {\r\n    const commentSize = 16;\r\n    const commentMarginLeft = 20;\r\n    const marginBottom = 5;\r\n    const heightPixels = doc.internal.pageSize.height - marginBottom;\r\n\r\n    doc.setFont('courier');\r\n    doc.setFontSize(commentSize);\r\n    doc.text(comment, commentMarginLeft, heightPixels);\r\n  }\r\n  /**\r\n   * Add projection and/or scale to the document\r\n   * @param  doc - pdf document\r\n   * @param  map - Map of the app\r\n   * @param  dpi - DPI resolution of the document\r\n   * @param  projection - Bool to indicate if projection need to be added\r\n   * @param  scale - Bool to indicate if scale need to be added\r\n   */\r\n  private addProjScale(\r\n    doc: jsPDF,\r\n    map: IgoMap,\r\n    dpi: number,\r\n    projection: boolean,\r\n    scale: boolean\r\n  ) {\r\n    const translate = this.languageService.translate;\r\n    const projScaleSize = 16;\r\n    const projScaleMarginLeft = 20;\r\n    const marginBottom = 15;\r\n    const heightPixels = doc.internal.pageSize.height - marginBottom;\r\n\r\n    let textProjScale: string;\r\n    if (projection === true) {\r\n      const projText = translate.instant('igo.geo.printForm.projection');\r\n      textProjScale = projText + ': ' + map.projection;\r\n    }\r\n    if (scale === true) {\r\n      if (projection === true) {\r\n        textProjScale += '   ';\r\n      }\r\n      const scaleText = translate.instant('igo.geo.printForm.scale');\r\n      const mapScale = map.viewController.getScale(dpi);\r\n      textProjScale += scaleText + ' ~ 1 ' + formatScale(mapScale);\r\n    }\r\n    doc.setFont('courier');\r\n    doc.setFontSize(projScaleSize);\r\n    doc.text(textProjScale, projScaleMarginLeft, heightPixels);\r\n  }\r\n\r\n  /**\r\n   * Add the legend to the document\r\n   * @param  doc - Pdf document where legend will be added\r\n   * @param  map - Map of the app\r\n   * @param  margins - Page margins\r\n   */\r\n  private addLegend(doc: jsPDF, map: IgoMap, margins: Array<number>, resolution: number) {\r\n    const that = this;\r\n    // Get html code for the legend\r\n    const width = doc.internal.pageSize.width;\r\n    const html = this.getLayersLegendHtml(map, width, resolution);\r\n    // If no legend, save the map directly\r\n    if (html === '') {\r\n      this.saveDoc(doc);\r\n      return true;\r\n    }\r\n\r\n    // Create div to contain html code for legend\r\n    const div = window.document.createElement('div');\r\n    html2canvas(div, { useCORS: true }).then(canvas => {\r\n      let imgData;\r\n      const position = 10;\r\n\r\n      imgData = canvas.toDataURL('image/png');\r\n      doc.addPage();\r\n      const imageSize = this.getImageSizeToFitPdf(doc, canvas, margins);\r\n      doc.addImage(imgData, 'PNG', 10, position, imageSize[0], imageSize[1]);\r\n      that.saveDoc(doc);\r\n      div.parentNode.removeChild(div); // remove temp div (IE style)\r\n    });\r\n\r\n    // Add html code to convert in the new window\r\n    window.document.body.appendChild(div);\r\n    div.innerHTML = html;\r\n  }\r\n\r\n  private addCanvas(\r\n    doc: jsPDF,\r\n    canvas: HTMLCanvasElement,\r\n    margins: Array<number>\r\n  ) {\r\n    let image;\r\n\r\n    image = canvas.toDataURL('image/jpeg');\r\n\r\n    if (image !== undefined) {\r\n      const imageSize = this.getImageSizeToFitPdf(doc, canvas, margins);\r\n      doc.addImage(\r\n        image,\r\n        'JPEG',\r\n        margins[3],\r\n        margins[0],\r\n        imageSize[0],\r\n        imageSize[1]\r\n      );\r\n      doc.rect(margins[3], margins[0], imageSize[0], imageSize[1]);\r\n    }\r\n  }\r\n\r\n  // TODO fix printing with image resolution\r\n  private addMap(\r\n    doc: jsPDF,\r\n    map: IgoMap,\r\n    resolution: number,\r\n    size: Array<number>,\r\n    margins: Array<number>\r\n  ) {\r\n    const status$ = new Subject();\r\n\r\n    const mapSize = map.ol.getSize();\r\n    const extent = map.ol.getView().calculateExtent(mapSize);\r\n\r\n    const widthPixels = Math.round((size[0] * resolution) / 25.4);\r\n    const heightPixels = Math.round((size[1] * resolution) / 25.4);\r\n\r\n    let timeout;\r\n\r\n    map.ol.once('postcompose', (event: any) => {\r\n      const canvas = event.context.canvas;\r\n      const mapStatus$$ = map.status$.subscribe((mapStatus: SubjectStatus) => {\r\n        clearTimeout(timeout);\r\n\r\n        if (mapStatus !== SubjectStatus.Done) {\r\n          return;\r\n        }\r\n\r\n        mapStatus$$.unsubscribe();\r\n\r\n        let status = SubjectStatus.Done;\r\n        try {\r\n          this.addCanvas(doc, canvas, margins);\r\n        } catch (err) {\r\n          status = SubjectStatus.Error;\r\n          this.messageService.error(\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageBody'\r\n            ),\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageHeader'\r\n            ),\r\n            'print'\r\n          );\r\n        }\r\n\r\n        this.renderMap(map, mapSize, extent);\r\n        status$.next(status);\r\n      });\r\n\r\n      // If no loading as started after 200ms, then probably no loading\r\n      // is required.\r\n      timeout = window.setTimeout(() => {\r\n        mapStatus$$.unsubscribe();\r\n\r\n        let status = SubjectStatus.Done;\r\n        try {\r\n          this.addCanvas(doc, canvas, margins);\r\n        } catch (err) {\r\n          status = SubjectStatus.Error;\r\n          this.messageService.error(\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageBody'\r\n            ),\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageHeader'\r\n            ),\r\n            'print'\r\n          );\r\n        }\r\n\r\n        this.renderMap(map, mapSize, extent);\r\n        status$.next(status);\r\n      }, 200);\r\n    });\r\n\r\n    this.renderMap(map, [widthPixels, heightPixels], extent);\r\n\r\n    return status$;\r\n  }\r\n\r\n  defineNbFileToProcess(nbFileToProcess) {\r\n    this.nbFileToProcess = nbFileToProcess;\r\n  }\r\n\r\n  /**\r\n   * Download an image of the map with addition of informations\r\n   * @param  map - Map of the app\r\n   * @param  format - Image format. default value to \"png\"\r\n   * @param  projection - Indicate if projection need to be add. Default to false\r\n   * @param  scale - Indicate if scale need to be add. Default to false\r\n   * @param  legend - Indicate if the legend of layers need to be download. Default to false\r\n   * @param  title - Title to add for the map - Default to blank\r\n   * @param  comment - Comment to add for the map - Default to blank\r\n   * @param  doZipFile - Indicate if we do a zip with the file\r\n   * @return Image file of the map with extension format given as parameter\r\n   */\r\n  downloadMapImage(\r\n    map: IgoMap,\r\n    resolution: number,\r\n    format = 'png',\r\n    projection = false,\r\n    scale = false,\r\n    legend = false,\r\n    title = '',\r\n    comment = '',\r\n    doZipFile = true\r\n  ) {\r\n    const status$ = new Subject();\r\n    // const resolution = map.ol.getView().getResolution();\r\n    this.activityId = this.activityService.register();\r\n    const translate = this.languageService.translate;\r\n    map.ol.once('postcompose', (event: any) => {\r\n      format = format.toLowerCase();\r\n      const context = event.context;\r\n      const newCanvas = document.createElement('canvas');\r\n      const newContext = newCanvas.getContext('2d');\r\n      // Postion in height to set the canvas in new canvas\r\n      let positionHCanvas = 0;\r\n      // Position in width to set the Proj/Scale in new canvas\r\n      let positionWProjScale = 10;\r\n      // Get height/width of map canvas\r\n      const width = context.canvas.width;\r\n      let height = context.canvas.height;\r\n      // Set Font to calculate comment width\r\n      newContext.font = '20px Calibri';\r\n      const commentWidth = newContext.measureText(comment).width;\r\n      // Add height for title if defined\r\n      height = title !== '' ? height + 30 : height;\r\n      // Add height for projection or scale (same line) if defined\r\n      height = projection !== false || scale !== false ? height + 30 : height;\r\n      const positionHProjScale = height - 10;\r\n      // Define number of line depending of the comment length\r\n      const commentNbLine = Math.ceil(commentWidth / width);\r\n      // Add height for multiline comment if defined\r\n      height = comment !== '' ? height + commentNbLine * 30 : height;\r\n      let positionHComment = height - commentNbLine * 20 + 5;\r\n      // Set the new canvas with the new calculated size\r\n      newCanvas.width = width;\r\n      newCanvas.height = height;\r\n      // Patch Jpeg default black background to white\r\n      if (format === 'jpeg') {\r\n        newContext.fillStyle = '#ffffff';\r\n        newContext.fillRect(0, 0, width, height);\r\n        newContext.fillStyle = '#000000';\r\n      }\r\n      // If a title need to be added to canvas\r\n      if (title !== '') {\r\n        // Set font for title\r\n        newContext.font = '26px Calibri';\r\n        positionHCanvas = 30;\r\n        newContext.textAlign = 'center';\r\n        newContext.fillText(title, width / 2, 20);\r\n      }\r\n      // Set font for next section\r\n      newContext.font = '20px Calibri';\r\n      // If projection need to be added to canvas\r\n      if (projection !== false) {\r\n        const projText = translate.instant('igo.geo.printForm.projection');\r\n        newContext.textAlign = 'start';\r\n        newContext.fillText(\r\n          projText + ': ' + map.projection,\r\n          positionWProjScale,\r\n          positionHProjScale\r\n        );\r\n        positionWProjScale += 200; // Width position change for scale position\r\n      }\r\n      // If scale need to be added to canvas\r\n      if (scale !== false) {\r\n        const scaleText = translate.instant('igo.geo.printForm.scale');\r\n        const mapScale = map.viewController.getScale(resolution);\r\n        newContext.textAlign = 'start';\r\n        newContext.fillText(\r\n          scaleText + ' ~ 1 : ' + formatScale(mapScale),\r\n          positionWProjScale,\r\n          positionHProjScale\r\n        );\r\n      }\r\n      // If a comment need to be added to canvas\r\n      if (comment !== '') {\r\n        newContext.textAlign = 'center';\r\n        // If only one line, no need to multiline the comment\r\n        if (commentNbLine === 1) {\r\n          newContext.fillText(comment, width / 2, positionHComment);\r\n        } else {\r\n          // Separate the setenses to be approx. the same length\r\n          const nbCommentChar = comment.length;\r\n          const CommentLengthToCut = Math.floor(nbCommentChar / commentNbLine);\r\n          let commentCurrentLine = '';\r\n          let positionFirstCutChar = 0;\r\n          let positionLastBlank;\r\n          // Loop for the number of line calculated\r\n          for (let i = 0; i < commentNbLine; i++) {\r\n            // For all line except last\r\n            if (commentNbLine - 1 > i) {\r\n              // Get comment current line to find the right place tu cut comment\r\n              commentCurrentLine = comment.substr(\r\n                positionFirstCutChar,\r\n                CommentLengthToCut\r\n              );\r\n              // Cut the setence at blank\r\n              positionLastBlank = commentCurrentLine.lastIndexOf(' ');\r\n              newContext.fillText(\r\n                commentCurrentLine.substr(0, positionLastBlank),\r\n                width / 2,\r\n                positionHComment\r\n              );\r\n              positionFirstCutChar += positionLastBlank;\r\n              // Go to next line for insertion\r\n              positionHComment += 20;\r\n            } else {\r\n              // Don't cut last part\r\n              newContext.fillText(\r\n                comment.substr(positionFirstCutChar),\r\n                width / 2,\r\n                positionHComment\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // Add map to new canvas\r\n      newContext.drawImage(context.canvas, 0, positionHCanvas);\r\n\r\n      let status = SubjectStatus.Done;\r\n      try {\r\n        // Save the canvas as file\r\n        if (!doZipFile) {\r\n          this.saveCanvasImageAsFile(newCanvas, 'map', format);\r\n        } else if (format.toLowerCase() === 'tiff') {\r\n          // Add the canvas to zip\r\n          this.generateCanvaFileToZip(\r\n            newCanvas,\r\n            'map' + map.projection.replace(':', '_') + '.' + format\r\n          );\r\n        } else {\r\n          // Add the canvas to zip\r\n          this.generateCanvaFileToZip(newCanvas, 'map' + '.' + format);\r\n        }\r\n      } catch (err) {\r\n        status = SubjectStatus.Error;\r\n      }\r\n\r\n      status$.next(status);\r\n\r\n      if (format.toLowerCase() === 'tiff') {\r\n        const tiwContent = this.getWorldFileInformation(map);\r\n        const blob = new Blob([tiwContent], {\r\n          type: 'text/plain;charset=utf-8'\r\n        });\r\n        if (!doZipFile) {\r\n          // saveAs automaticly replace ':' for '_'\r\n          saveAs(blob, 'map' + map.projection + '.tfw');\r\n          this.saveFileProcessing();\r\n        } else {\r\n          // Add the canvas to zip\r\n          this.addFileToZip(\r\n            'map' + map.projection.replace(':', '_') + '.tfw',\r\n            blob\r\n          );\r\n        }\r\n      }\r\n    });\r\n    map.ol.renderSync();\r\n  }\r\n\r\n  private renderMap(map, size, extent) {\r\n    map.ol.renderSync();\r\n  }\r\n\r\n  /**\r\n   * Save document\r\n   * @param  doc - Document to save\r\n   */\r\n  private saveDoc(doc: jsPDF) {\r\n    doc.save('map.pdf');\r\n  }\r\n\r\n  /**\r\n   * Calculate the best Image size to fit in pdf\r\n   * @param doc - Pdf Document\r\n   * @param canvas - Canvas of image\r\n   * @param margins - Page margins\r\n   */\r\n  private getImageSizeToFitPdf(doc, canvas, margins) {\r\n    // Define variable to calculate best size to fit in one page\r\n    const pageHeight =\r\n      doc.internal.pageSize.getHeight() - (margins[0] + margins[2]);\r\n    const pageWidth =\r\n      doc.internal.pageSize.getWidth() - (margins[1] + margins[3]);\r\n    const canHeight = canvas.height;\r\n    const canWidth = canvas.width;\r\n    const heightRatio = canHeight / pageHeight;\r\n    const widthRatio = canWidth / pageWidth;\r\n    const maxRatio = heightRatio > widthRatio ? heightRatio : widthRatio;\r\n    const imgHeigh = maxRatio > 1 ? canHeight / maxRatio : canHeight;\r\n    const imgWidth = maxRatio > 1 ? canWidth / maxRatio : canWidth;\r\n\r\n    return [imgWidth, imgHeigh];\r\n  }\r\n\r\n  /**\r\n   * Get a world file information for tiff\r\n   * @param  map - Map of the app\r\n   */\r\n  private getWorldFileInformation(map) {\r\n    const currentResolution = map.viewController.getResolution();\r\n    const currentExtent = map.getExtent(); // Return [minx, miny, maxx, maxy]\r\n    return [\r\n      currentResolution,\r\n      0,\r\n      0,\r\n      -currentResolution,\r\n      currentExtent[0] + currentResolution / 0.5,\r\n      currentExtent[3] - currentResolution / 0.5\r\n    ].join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Save canvas image as file\r\n   * @param canvas - Canvas to save\r\n   * @param name - Name of the file\r\n   * @param format - file format\r\n   */\r\n  private saveCanvasImageAsFile(canvas, name, format) {\r\n    const blobFormat = 'image/' + format;\r\n    const that = this;\r\n\r\n    try {\r\n      canvas.toDataURL(); // Just to make the catch trigger wihtout toBlob Error throw not catched\r\n      // If navigator is Internet Explorer\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(canvas.msToBlob(), name + '.' + format);\r\n        this.saveFileProcessing();\r\n      } else {\r\n        canvas.toBlob(blob => {\r\n          // download image\r\n          saveAs(blob, name + '.' + format);\r\n          that.saveFileProcessing();\r\n        }, blobFormat);\r\n      }\r\n    } catch (err) {\r\n      this.messageService.error(\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageBody'\r\n        ),\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageHeader'\r\n        ),\r\n        'print'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add file to a zip\r\n   * @param canvas - File to add to the zip\r\n   * @param  name -Name of the fileoverview\r\n   */\r\n  private generateCanvaFileToZip(canvas, name) {\r\n    const blobFormat = 'image/' + 'jpeg';\r\n    const that = this;\r\n    if (\r\n      !this.hasOwnProperty('zipFile') ||\r\n      typeof this.zipFile === 'undefined'\r\n    ) {\r\n      this.zipFile = new JSZip();\r\n    }\r\n\r\n    try {\r\n      canvas.toDataURL(); // Just to make the catch trigger wihtout toBlob Error throw not catched\r\n      if (navigator.msSaveBlob) {\r\n        this.addFileToZip(name, canvas.msToBlob());\r\n      } else {\r\n        canvas.toBlob(blob => {\r\n          that.addFileToZip(name, blob);\r\n        }, blobFormat);\r\n      }\r\n    } catch (err) {\r\n      this.messageService.error(\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageBody'\r\n        ),\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageHeader'\r\n        ),\r\n        'print'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add file to zip, if all file are zipped, download\r\n   * @param name - Name of the files\r\n   * @param blob - Contain of file\r\n   */\r\n  private addFileToZip(name, blob) {\r\n    // add file to zip\r\n    this.zipFile.file(name, blob);\r\n    this.nbFileToProcess--;\r\n\r\n    // If all files are proccessed\r\n    if (this.nbFileToProcess === 0) {\r\n      // Download zip file\r\n      this.getZipFile();\r\n      // Stop loading\r\n      this.activityService.unregister(this.activityId);\r\n    }\r\n  }\r\n\r\n  private saveFileProcessing() {\r\n    this.nbFileToProcess--;\r\n\r\n    // If all files are proccessed\r\n    if (this.nbFileToProcess === 0) {\r\n      // Stop loading\r\n      this.activityService.unregister(this.activityId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the zipped file\r\n   * @return Retun a zip file\r\n   */\r\n  private getZipFile() {\r\n    const that = this;\r\n    this.zipFile.generateAsync({ type: 'blob' }).then(blob => {\r\n      // 1) generate the zip file\r\n      saveAs(blob, 'map.zip');\r\n      delete that.zipFile;\r\n    });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { PrintOptions } from '../shared/print.interface';\r\n\r\nimport {\r\n  PrintOutputFormat,\r\n  PrintPaperFormat,\r\n  PrintOrientation,\r\n  PrintResolution,\r\n  PrintSaveImageFormat\r\n} from '../shared/print.type';\r\n\r\nimport { PrintService } from '../shared/print.service';\r\n\r\n@Component({\r\n  selector: 'igo-print',\r\n  templateUrl: './print.component.html'\r\n})\r\nexport class PrintComponent {\r\n  public disabled = false;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get outputFormat(): PrintOutputFormat {\r\n    return this._outputFormat;\r\n  }\r\n  set outputFormat(value: PrintOutputFormat) {\r\n    this._outputFormat = value;\r\n  }\r\n  private _outputFormat: PrintOutputFormat;\r\n\r\n  @Input()\r\n  get paperFormat(): PrintPaperFormat {\r\n    return this._paperFormat;\r\n  }\r\n  set paperFormat(value: PrintPaperFormat) {\r\n    this._paperFormat = value;\r\n  }\r\n  private _paperFormat: PrintPaperFormat;\r\n\r\n  @Input()\r\n  get orientation(): PrintOrientation {\r\n    return this._orientation;\r\n  }\r\n  set orientation(value: PrintOrientation) {\r\n    this._orientation = value;\r\n  }\r\n  private _orientation: PrintOrientation;\r\n\r\n  @Input()\r\n  get imageFormat(): PrintSaveImageFormat {\r\n    return this._imageFormat;\r\n  }\r\n  set imageFormat(value: PrintSaveImageFormat) {\r\n    this._imageFormat = value;\r\n  }\r\n  private _imageFormat: PrintSaveImageFormat;\r\n\r\n  @Input()\r\n  get resolution(): PrintResolution {\r\n    return this._resolution;\r\n  }\r\n  set resolution(value: PrintResolution) {\r\n    this._resolution = value;\r\n  }\r\n  private _resolution: PrintResolution;\r\n\r\n  constructor(private printService: PrintService) {}\r\n\r\n  handleFormSubmit(data: PrintOptions) {\r\n    this.disabled = true;\r\n\r\n    if (data.isPrintService === true) {\r\n      this.printService\r\n        .print(this.map, data)\r\n        .subscribe();\r\n    } else {\r\n      let nbFileToProcess = 1;\r\n\r\n      if (data.showLegend) {\r\n        nbFileToProcess++;\r\n      }\r\n      if (data.imageFormat.toLowerCase() === 'tiff') {\r\n        nbFileToProcess++;\r\n      }\r\n\r\n      this.printService.defineNbFileToProcess(nbFileToProcess);\r\n\r\n      const resolution = +data.resolution;\r\n      this.printService.downloadMapImage(\r\n        this.map,\r\n        resolution,\r\n        data.imageFormat,\r\n        data.showProjection,\r\n        data.showScale,\r\n        data.showLegend,\r\n        data.title,\r\n        data.comment,\r\n        data.doZipFile\r\n      );\r\n      if (data.showLegend) {\r\n        this.printService.getLayersLegendImage(\r\n          this.map,\r\n          data.imageFormat,\r\n          data.doZipFile,\r\n          +resolution\r\n        );\r\n      }\r\n    }\r\n    this.disabled = false;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators\r\n} from '@angular/forms';\r\n\r\nimport { PrintOptions } from '../shared/print.interface';\r\n\r\nimport {\r\n  PrintOutputFormat,\r\n  PrintPaperFormat,\r\n  PrintOrientation,\r\n  PrintResolution,\r\n  PrintSaveImageFormat\r\n} from '../shared/print.type';\r\n\r\n@Component({\r\n  selector: 'igo-print-form',\r\n  templateUrl: './print-form.component.html',\r\n  styleUrls: ['./print-form.component.scss']\r\n})\r\nexport class PrintFormComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public submitted: boolean;\r\n\r\n  public outputFormats = PrintOutputFormat;\r\n  public paperFormats = PrintPaperFormat;\r\n  public orientations = PrintOrientation;\r\n  public resolutions = PrintResolution;\r\n  public imageFormats = PrintSaveImageFormat;\r\n  public isPrintService = true;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get imageFormat(): PrintSaveImageFormat {\r\n    return this.imageFormatField.value;\r\n  }\r\n  set imageFormat(value: PrintSaveImageFormat) {\r\n    this.imageFormatField.setValue(value || PrintSaveImageFormat.Jpeg, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get outputFormat(): PrintOutputFormat {\r\n    return this.outputFormatField.value;\r\n  }\r\n  set outputFormat(value: PrintOutputFormat) {\r\n    this.outputFormatField.setValue(value || PrintOutputFormat.Pdf, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get paperFormat(): PrintPaperFormat {\r\n    return this.paperFormatField.value;\r\n  }\r\n  set paperFormat(value: PrintPaperFormat) {\r\n    this.paperFormatField.setValue(value || PrintPaperFormat.Letter, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get orientation(): PrintOrientation {\r\n    return this.orientationField.value;\r\n  }\r\n  set orientation(value: PrintOrientation) {\r\n    this.orientationField.setValue(value || PrintOrientation.landscape, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get resolution(): PrintResolution {\r\n    return this.resolutionField.value;\r\n  }\r\n  set resolution(value: PrintResolution) {\r\n    this.resolutionField.setValue(value || PrintResolution['96'], {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get title(): string {\r\n    return this.titleField.value;\r\n  }\r\n  set title(value: string) {\r\n    this.titleField.setValue(value, { onlySelf: true });\r\n  }\r\n\r\n  @Input()\r\n  get comment(): string {\r\n    return this.commentField.value;\r\n  }\r\n  set comment(value: string) {\r\n    this.commentField.setValue(value, { onlySelf: true });\r\n  }\r\n  @Input()\r\n  get showProjection(): boolean {\r\n    return this.showProjectionField.value;\r\n  }\r\n  set showProjection(value: boolean) {\r\n    this.showProjectionField.setValue(value, { onlySelf: true });\r\n  }\r\n  @Input()\r\n  get showScale(): boolean {\r\n    return this.showScaleField.value;\r\n  }\r\n  set showScale(value: boolean) {\r\n    this.showScaleField.setValue(value, { onlySelf: true });\r\n  }\r\n  @Input()\r\n  get showLegend(): boolean {\r\n    return this.showLegendField.value;\r\n  }\r\n  set showLegend(value: boolean) {\r\n    this.showLegendField.setValue(value, { onlySelf: true });\r\n  }\r\n\r\n  @Input()\r\n  get doZipFile(): boolean {\r\n    return this.doZipFileField.value;\r\n  }\r\n  set doZipFile(value: boolean) {\r\n    this.doZipFileField.setValue(value, { onlySelf: true });\r\n  }\r\n\r\n  get outputFormatField() {\r\n    return (this.form.controls as any).outputFormat as FormControl;\r\n  }\r\n\r\n  get paperFormatField() {\r\n    return (this.form.controls as any).paperFormat as FormControl;\r\n  }\r\n\r\n  get imageFormatField() {\r\n    return (this.form.controls as any).imageFormat as FormControl;\r\n  }\r\n\r\n  get orientationField() {\r\n    return (this.form.controls as any).orientation as FormControl;\r\n  }\r\n\r\n  get resolutionField() {\r\n    return (this.form.controls as any).resolution as FormControl;\r\n  }\r\n\r\n  get commentField() {\r\n    return (this.form.controls as any).comment as FormControl;\r\n  }\r\n\r\n  get showProjectionField() {\r\n    return (this.form.controls as any).showProjection as FormControl;\r\n  }\r\n\r\n  get showScaleField() {\r\n    return (this.form.controls as any).showScale as FormControl;\r\n  }\r\n\r\n  get showLegendField() {\r\n    return (this.form.controls as any).showLegend as FormControl;\r\n  }\r\n\r\n  get doZipFileField() {\r\n    return (this.form.controls as any).doZipFile as FormControl;\r\n  }\r\n\r\n  get titleField() {\r\n    return (this.form.controls as any).title as FormControl;\r\n  }\r\n\r\n  @Output() submit: EventEmitter<PrintOptions> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.form = this.formBuilder.group({\r\n      title: ['', []],\r\n      comment: ['', []],\r\n      outputFormat: ['', [Validators.required]],\r\n      paperFormat: ['', [Validators.required]],\r\n      imageFormat: [ '', [Validators.required]],\r\n      resolution: ['', [Validators.required]],\r\n      orientation: ['', [Validators.required]],\r\n      showProjection: false,\r\n      showScale: false,\r\n      showLegend: false,\r\n      doZipFile: [{hidden: this.isPrintService }]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.doZipFileField.setValue(false);\r\n  }\r\n\r\n  handleFormSubmit(data: PrintOptions, isValid: boolean) {\r\n    this.submitted = true;\r\n    data.isPrintService = this.isPrintService;\r\n    if (isValid) {\r\n      this.submit.emit(data);\r\n    }\r\n  }\r\n\r\n  toggleImageSaveProp() {\r\n    if (this.outputFormatField.value === 'Image') {\r\n      this.isPrintService = false;\r\n    } else {\r\n      this.isPrintService = true;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatSlideToggleModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoKeyValueModule } from '@igo2/common';\r\n\r\nimport { PrintComponent } from './print/print.component';\r\nimport { PrintFormComponent } from './print-form/print-form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSlideToggleModule,\r\n    IgoLanguageModule,\r\n    IgoKeyValueModule\r\n  ],\r\n  exports: [PrintComponent, PrintFormComponent],\r\n  declarations: [PrintComponent, PrintFormComponent]\r\n})\r\nexport class IgoPrintModule {}\r\n","import { ConfigService } from '@igo2/core';\r\n\r\nimport { SearchSource } from '../../search/shared/sources/source';\r\n\r\nimport { QuerySearchSource } from './query-search-source';\r\n\r\n/**\r\n * Map search source factory\r\n * @ignore\r\n */\r\nexport function querySearchSourceFactory(config: ConfigService) {\r\n  return new QuerySearchSource(\r\n    config.getConfig(`searchSources.${QuerySearchSource.id}`) || {}\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the map search source\r\n */\r\nexport function provideQuerySearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: querySearchSourceFactory,\r\n    multi: true,\r\n    deps: [ConfigService]\r\n  };\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QueryDirective } from './shared/query.directive';\r\nimport { QueryService } from './shared/query.service';\r\nimport { provideQuerySearchSource } from './shared/query-search-source.providers';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [QueryDirective],\r\n  declarations: [QueryDirective],\r\n  providers: [QueryService]\r\n})\r\nexport class IgoQueryModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoQueryModule,\r\n      providers: [provideQuerySearchSource()]\r\n    };\r\n  }\r\n}\r\n","import { SearchSource } from './sources/source';\r\n\r\n/**\r\n * Service where all available search sources are registered.\r\n */\r\nexport class SearchSourceService {\r\n  constructor(private sources: SearchSource[]) {}\r\n\r\n  /**\r\n   * Return available search sources\r\n   * @returns Search sources\r\n   */\r\n  getSources(): SearchSource[] {\r\n    return this.sources;\r\n  }\r\n\r\n  /**\r\n   * Return enabled search sources\r\n   * @returns Search sources\r\n   */\r\n  getEnabledSources(): SearchSource[] {\r\n    return this.getSources().filter(\r\n      (source: SearchSource) => source.enabled === true\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Enable search sources of given type\r\n   * @param type Search type\r\n   * @todo It would be better to track the enabled search sources\r\n   *  without updating their 'enabled' property.\r\n   */\r\n  enableSourcesByType(type: string) {\r\n    this.getSources().forEach((source: SearchSource) => {\r\n      if ((source.constructor as typeof SearchSource).type === type) {\r\n        source.enabled = true;\r\n      } else {\r\n        source.enabled = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { FEATURE } from '../../feature/shared/feature.enums';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { SearchSource } from './sources/source';\r\nimport { SearchResult } from './search.interfaces';\r\n\r\n/**\r\n * Function that checks whether a search source implements TextSearch\r\n * @param source Search source\r\n * @returns True if the search source implements TextSearch\r\n */\r\nexport function sourceCanSearch(source: SearchSource): boolean {\r\n  return (source as any).search !== undefined;\r\n}\r\n\r\n/**\r\n * Function that checks whether a search source implements ReverseSearch\r\n * @param source Search source\r\n * @returns True if the search source implements ReverseSearch\r\n */\r\nexport function sourceCanReverseSearch(source: SearchSource): boolean {\r\n  return (source as any).reverseSearch !== undefined;\r\n}\r\n\r\n/**\r\n * Return a search result out of an Feature. This is used to adapt\r\n * the IGO query module to the new Feature/SearchResult interfaces\r\n * @param feature feature\r\n * @param source Search source\r\n * @returns SearchResult\r\n */\r\nexport function featureToSearchResult(\r\n  feature: Feature,\r\n  source: SearchSource\r\n): SearchResult<Feature> {\r\n  return {\r\n    source,\r\n    data: feature,\r\n    meta: {\r\n      dataType: FEATURE,\r\n      id: feature.meta.id as string,\r\n      title: feature.meta.title,\r\n      icon: 'map-marker'\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { stringToLonLat } from '../../map';\r\n\r\nimport { SearchSource, TextSearch, ReverseSearch } from './sources/source';\r\nimport { TextSearchOptions, ReverseSearchOptions } from './sources/source.interfaces';\r\nimport { SearchSourceService } from './search-source.service';\r\nimport { Research } from './search.interfaces';\r\nimport { sourceCanSearch, sourceCanReverseSearch } from './search.utils';\r\n\r\n/**\r\n * This service perform researches in all the search sources enabled.\r\n * It returns Research objects who's 'request' property needs to be\r\n * subscribed to in order to trigger the research. This services has\r\n * keeps internal state of the researches it performed\r\n * and the results they yielded.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n\r\n  constructor(private searchSourceService: SearchSourceService) {}\r\n\r\n  /**\r\n   * Perform a research by text\r\n   * @param term Any text\r\n   * @returns Researches\r\n   */\r\n  search(term: string, options?: TextSearchOptions): Research[] {\r\n    if (!this.termIsValid(term)) {\r\n      return [];\r\n    }\r\n\r\n    const lonLat = stringToLonLat(term);\r\n    if (lonLat !== undefined) {\r\n      return this.reverseSearch(lonLat);\r\n    }\r\n\r\n    const sources = this.searchSourceService.getEnabledSources()\r\n      .filter(sourceCanSearch);\r\n    return this.searchSources(sources, term, options || {});\r\n  }\r\n\r\n  /**\r\n   * Perform a research by lon/lat\r\n   * @param lonLat Any lon/lat coordinates\r\n   * @returns Researches\r\n   */\r\n  reverseSearch(lonLat: [number, number], options?: ReverseSearchOptions) {\r\n    const sources = this.searchSourceService.getEnabledSources()\r\n      .filter(sourceCanReverseSearch);\r\n    return this.reverseSearchSources(sources, lonLat, options || {});\r\n  }\r\n\r\n  /**\r\n   * Create a text research out of all given search sources\r\n   * @param sources Search sources that implement TextSearch\r\n   * @param term Search term\r\n   * @returns Observable of Researches\r\n   */\r\n  private searchSources(sources: SearchSource[], term: string, options: TextSearchOptions): Research[] {\r\n    return sources.map((source: SearchSource) => {\r\n      return {\r\n        request: (source as any as TextSearch).search(term, options),\r\n        reverse: false,\r\n        source\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a reverse research out of all given search sources\r\n   * @param sources Search sources that implement ReverseSearch\r\n   * @param lonLat Any lon/lat coordinates\r\n   * @returns Observable of Researches\r\n   */\r\n  private reverseSearchSources(\r\n    sources: SearchSource[],\r\n    lonLat: [number, number],\r\n    options: ReverseSearchOptions\r\n  ): Research[] {\r\n    return sources.map((source: SearchSource) => {\r\n      return {\r\n        request: (source as any as ReverseSearch).reverseSearch(lonLat, options),\r\n        reverse: true,\r\n        source\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validate that a search term is valid\r\n   * @param term Search term\r\n   * @returns True if the search term is valid\r\n   */\r\n  private termIsValid(term: string): boolean {\r\n    return typeof term === 'string' && term !== '';\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { Message } from '@igo2/core';\r\n\r\nimport { Routing } from '../shared/routing.interface';\r\n\r\nexport abstract class RoutingSource {\r\n  abstract enabled: boolean;\r\n  abstract getName(): string;\r\n  abstract route(coordinates: [number, number][]): Observable<Routing[]>;\r\n}\r\n","import { RoutingSource } from '../routing-sources/routing-source';\r\n\r\nexport class RoutingSourceService {\r\n  constructor(public sources: RoutingSource[]) {}\r\n}\r\n\r\nexport function routingSourceServiceFactory(sources: RoutingSource[]) {\r\n  return new RoutingSourceService(sources);\r\n}\r\n\r\nexport function provideRoutingSourceService() {\r\n  return {\r\n    provide: RoutingSourceService,\r\n    useFactory: routingSourceServiceFactory,\r\n    deps: [RoutingSource]\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Message } from '@igo2/core';\r\n\r\nimport { Routing } from '../shared/routing.interface';\r\nimport { RoutingSource } from '../routing-sources/routing-source';\r\nimport { RoutingSourceService } from './routing-source.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RoutingService {\r\n  constructor(private routingSourceService: RoutingSourceService) {}\r\n\r\n  route(coordinates: [number, number][]): Observable<Routing[]>[] {\r\n    if (coordinates.length === 0) {\r\n      return;\r\n    }\r\n    return this.routingSourceService.sources\r\n      .filter((source: RoutingSource) => source.enabled)\r\n      .map((source: RoutingSource) => this.routeSource(source, coordinates));\r\n  }\r\n\r\n  routeSource(\r\n    source: RoutingSource,\r\n    coordinates: [number, number][]\r\n  ): Observable<Routing[]> {\r\n    const request = source.route(coordinates);\r\n    return request;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class RoutingFormService {\r\n  private stopsCoordinates: [number, number][];\r\n  private mapWaitingForRoutingClick: boolean;\r\n\r\n  constructor() {\r\n    this.mapWaitingForRoutingClick = false;\r\n  }\r\n\r\n  getStopsCoordinates(): [number, number][] {\r\n    return this.stopsCoordinates;\r\n  }\r\n\r\n  setStopsCoordinates(stopsCoordinates) {\r\n    this.stopsCoordinates = stopsCoordinates;\r\n  }\r\n\r\n  isMapWaitingForRoutingClick(): boolean {\r\n    return this.mapWaitingForRoutingClick;\r\n  }\r\n\r\n  setMapWaitingForRoutingClick() {\r\n    this.mapWaitingForRoutingClick = true;\r\n  }\r\n\r\n  unsetMapWaitingForRoutingClick() {\r\n    this.mapWaitingForRoutingClick = false;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  Optional\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\r\n\r\nimport olFeature from 'ol/Feature';\r\nimport * as olgeom from 'ol/geom';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olstyle from 'ol/style';\r\nimport * as olcondition from 'ol/events/condition';\r\nimport * as olinteraction from 'ol/interaction';\r\nimport * as olextent from 'ol/extent';\r\nimport * as olobservable from 'ol/Observable';\r\n\r\nimport { Clipboard } from '@igo2/utils';\r\nimport {\r\n  Message,\r\n  LanguageService,\r\n  MessageService,\r\n  RouteService\r\n} from '@igo2/core';\r\nimport { getEntityTitle } from '@igo2/common';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { SearchService } from '../../search/shared/search.service';\r\nimport { VectorLayer } from '../../layer/shared/layers/vector-layer';\r\nimport { FeatureDataSource } from '../../datasource/shared/datasources/feature-datasource';\r\nimport { createOverlayMarkerStyle } from '../../overlay/shared/overlay.utils';\r\nimport { FeatureMotion } from '../../feature/shared/feature.enums';\r\nimport { moveToOlFeatures } from '../../feature/shared/feature.utils';\r\n\r\nimport { Routing } from '../shared/routing.interface';\r\nimport { RoutingService } from '../shared/routing.service';\r\nimport { RoutingFormService } from './routing-form.service';\r\n\r\nimport { QueryService } from '../../query/shared/query.service';\r\n\r\n@Component({\r\n  selector: 'igo-routing-form',\r\n  templateUrl: './routing-form.component.html',\r\n  styleUrls: ['./routing-form.component.scss']\r\n})\r\nexport class RoutingFormComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private readonly invalidKeys = ['Control', 'Shift', 'Alt'];\r\n\r\n  public stopsForm: FormGroup;\r\n  public projection = 'EPSG:4326';\r\n  public currentStopIndex: number;\r\n  private routesQueries$$: Subscription[] = [];\r\n\r\n  private stream$ = new Subject<string>();\r\n\r\n  public RoutingOverlayMarkerStyle: olstyle.Style;\r\n  public RoutingOverlayStyle: olstyle.Style;\r\n  public routingStopsOverlayDataSource: FeatureDataSource;\r\n  public routingRoutesOverlayDataSource: FeatureDataSource;\r\n\r\n  public routesResults: Routing[] | Message[];\r\n  public activeRoute: Routing;\r\n  private selectRoute;\r\n\r\n  private focusOnStop = false;\r\n  private focusKey = [];\r\n  public initialStopsCoords;\r\n  private browserLanguage;\r\n\r\n  // https://stackoverflow.com/questions/46364852/create-input-fields-dynamically-in-angular-2\r\n\r\n  @Input()\r\n  get term() {\r\n    return this._term;\r\n  }\r\n  set term(value: string) {\r\n    this._term = value;\r\n  }\r\n  private _term = '';\r\n\r\n  get debounce() {\r\n    return this._debounce;\r\n  }\r\n  set debounce(value: number) {\r\n    this._debounce = value;\r\n  }\r\n  private _debounce = 300;\r\n\r\n  @Input()\r\n  get length() {\r\n    return this._length;\r\n  }\r\n  set length(value: number) {\r\n    this._length = value;\r\n  }\r\n  private _length = 3;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Output() submit: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private routingService: RoutingService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private searchService: SearchService,\r\n    private queryService: QueryService,\r\n    private routingFormService: RoutingFormService,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  changeRoute(selectedRoute: Routing) {\r\n    this.showRouteGeometry();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribeRoutesQueries();\r\n    this.unlistenSingleClick();\r\n    this.queryService.queryEnabled = true;\r\n    const stopCoordinates = [];\r\n\r\n    this.stops.value.forEach(stop => {\r\n      stopCoordinates.push(stop.stopCoordinates);\r\n    });\r\n    this.routingRoutesOverlayDataSource.ol.clear();\r\n    this.routingStopsOverlayDataSource.ol.clear();\r\n    this.routingFormService.setStopsCoordinates(stopCoordinates);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.browserLanguage = this.languageService.getLanguage();\r\n    this.stopsForm = this.formBuilder.group({\r\n      routingType: 'car',\r\n      routingMode: 'driving', // loop\r\n      stopOrderPriority: true,\r\n      routingFixedStartEnd: false,\r\n      stops: this.formBuilder.array([\r\n        this.createStop('start'),\r\n        this.createStop('end')\r\n      ])\r\n    });\r\n\r\n    this.routingStopsOverlayDataSource = new FeatureDataSource({});\r\n    this.routingRoutesOverlayDataSource = new FeatureDataSource({});\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.queryService.queryEnabled = false;\r\n    this.focusOnStop = false;\r\n    const stopsLayer = new VectorLayer({\r\n      title: 'routingStopOverlay',\r\n      zIndex: 999,\r\n      id: 'routingStops',\r\n      source: this.routingStopsOverlayDataSource,\r\n      showInLayerList: false\r\n    });\r\n    const routesLayer = new VectorLayer({\r\n      title: 'routingRoutesOverlay',\r\n      zIndex: 999,\r\n      id: 'routingRoutes',\r\n      opacity: 0.75,\r\n      source: this.routingRoutesOverlayDataSource,\r\n      showInLayerList: false\r\n    });\r\n\r\n    this.map.addLayer(routesLayer);\r\n    this.map.addLayer(stopsLayer);\r\n\r\n    let selectedStopFeature;\r\n\r\n    const selectStops = new olinteraction.Select({\r\n      layers: [stopsLayer.ol],\r\n      condition: olcondition.pointerMove,\r\n      hitTolerance: 7\r\n    });\r\n\r\n    const translateStop = new olinteraction.Translate({\r\n      layers: [stopsLayer.ol],\r\n      features: selectedStopFeature\r\n    });\r\n\r\n    // TODO: Check to disable pointermove IF a stop is already selected\r\n    const selectRouteHover = new olinteraction.Select({\r\n      layers: [routesLayer.ol],\r\n      condition: olcondition.pointerMove,\r\n      hitTolerance: 7\r\n    });\r\n\r\n    this.selectRoute = new olinteraction.Select({\r\n      layers: [routesLayer.ol],\r\n      hitTolerance: 7\r\n    });\r\n\r\n    this.map.ol.on('pointermove', evt => {\r\n      const selectRouteCnt = selectRouteHover.getFeatures().getLength();\r\n      if (selectRouteCnt === 0) {\r\n        this.routingFormService.unsetMapWaitingForRoutingClick();\r\n      } else {\r\n        this.routingFormService.setMapWaitingForRoutingClick();\r\n      }\r\n    });\r\n\r\n    selectStops.on('select', evt => {\r\n      selectedStopFeature = evt.target.getFeatures()[0];\r\n    });\r\n\r\n    this.selectRoute.on('select', evt => {\r\n      if (this.focusOnStop === false) {\r\n        const selectCoordinates = olproj.transform(\r\n          (evt as any).mapBrowserEvent.coordinate,\r\n          this.map.projection,\r\n          this.projection\r\n        );\r\n        this.addStop();\r\n        const pos = this.stops.length - 2;\r\n        this.stops.at(pos).patchValue({ stopCoordinates: selectCoordinates });\r\n        this.handleLocationProposals(selectCoordinates, pos);\r\n        this.addStopOverlay(selectCoordinates, pos);\r\n        this.selectRoute.getFeatures().clear();\r\n      }\r\n      this.selectRoute.getFeatures().clear();\r\n    });\r\n\r\n    this.routesQueries$$.push(\r\n      this.stopsForm.statusChanges\r\n        .pipe(debounceTime(this._debounce))\r\n        .subscribe(val => this.onFormChange())\r\n    );\r\n\r\n    translateStop.on('translateend', evt => {\r\n      const translatedID = evt.features.getArray()[0].getId();\r\n      const translatedPos = translatedID.split('_');\r\n      let p;\r\n      switch (translatedPos[1]) {\r\n        case 'start':\r\n          p = 0;\r\n          break;\r\n        case 'end':\r\n          p = this.stops.length - 1;\r\n          break;\r\n        default:\r\n          p = Number(translatedPos[1]);\r\n          break;\r\n      }\r\n      const translationEndCoordinates = olproj.transform(\r\n        evt.features\r\n          .getArray()[0]\r\n          .getGeometry()\r\n          .getCoordinates(),\r\n        this.map.projection,\r\n        this.projection\r\n      );\r\n      this.stops\r\n        .at(p)\r\n        .patchValue({ stopCoordinates: translationEndCoordinates });\r\n      this.stops.at(p).patchValue({ stopProposals: [] });\r\n      this.handleLocationProposals(translationEndCoordinates, p);\r\n    });\r\n\r\n    this.map.ol.addInteraction(selectStops);\r\n    this.map.ol.addInteraction(selectRouteHover);\r\n    this.map.ol.addInteraction(this.selectRoute);\r\n    this.map.ol.addInteraction(translateStop);\r\n\r\n    this.routesQueries$$.push(\r\n      this.stream$\r\n        .pipe(\r\n          debounceTime(this._debounce),\r\n          distinctUntilChanged()\r\n        )\r\n        .subscribe((term: string) => this.handleTermChanged(term))\r\n    );\r\n  }\r\n\r\n  handleLocationProposals(coordinates: [number, number], stopIndex: number) {\r\n    const groupedLocations = [];\r\n    this.searchService\r\n      .reverseSearch(coordinates, { zoom: this.map.getZoom() })\r\n      .map(res =>\r\n        this.routesQueries$$.push(\r\n          res.request.pipe(map(f => f)).subscribe(results => {\r\n            results.forEach(result => {\r\n              if (\r\n                groupedLocations.filter(f => f.source === result.source)\r\n                  .length === 0\r\n              ) {\r\n                groupedLocations.push({\r\n                  source: result.source,\r\n                  results: results.map(r => r.data)\r\n                });\r\n              }\r\n            });\r\n            this.stops\r\n              .at(stopIndex)\r\n              .patchValue({ stopProposals: groupedLocations });\r\n            // TODO: Prefer another source?\r\n            if (results[0]) {\r\n              if (results[0].source.getId() === 'icherchereverse') {\r\n                // prefer address type.\r\n                let resultPos = 0;\r\n                for (let i = 0; i < results.length; i++) {\r\n                  const feature: any = results[i].data;\r\n                  if (feature.properties.type === 'adresse') {\r\n                    resultPos = i;\r\n                    break;\r\n                  }\r\n                }\r\n                this.stops.at(stopIndex).patchValue({\r\n                  stopPoint: getEntityTitle(results[resultPos])\r\n                });\r\n                if (results[resultPos].data.geometry.type === 'Point') {\r\n                  this.stops.at(stopIndex).patchValue({\r\n                    stopCoordinates:\r\n                      results[resultPos].data.geometry.coordinates\r\n                  });\r\n                } else {\r\n                  // Not moving the translated point Only to suggest value into the UI.\r\n                }\r\n              }\r\n            } else {\r\n              this.stops.at(stopIndex).patchValue({ stopPoint: coordinates });\r\n              this.stops.at(stopIndex).patchValue({ stopProposals: [] });\r\n            }\r\n          })\r\n        )\r\n      );\r\n  }\r\n\r\n  routingText(index: number): string {\r\n    if (index === 0) {\r\n      return 'start';\r\n    } else if (index === this.stops.length - 1 || this.stops.length === 1) {\r\n      return 'end';\r\n    } else {\r\n      return 'intermediate';\r\n    }\r\n  }\r\n\r\n  raiseStop(index: number) {\r\n    if (index > 0) {\r\n      this.moveStop(index, -1);\r\n    }\r\n  }\r\n\r\n  lowerStop(index: number) {\r\n    if (index < this.stops.length - 1) {\r\n      this.moveStop(index, 1);\r\n    }\r\n  }\r\n\r\n  moveStop(index, diff) {\r\n    const fromValue = this.stops.at(index);\r\n    this.removeStop(index);\r\n    this.stops.insert(index + diff, fromValue);\r\n    this.stops.at(index).patchValue({ routingText: this.routingText(index) });\r\n    this.stops\r\n      .at(index + diff)\r\n      .patchValue({ routingText: this.routingText(index + diff) });\r\n    if (this.stops.at(index).value.stopCoordinates) {\r\n      this.addStopOverlay(this.stops.at(index).value.stopCoordinates, index);\r\n    }\r\n    if (this.stops.at(index + diff).value.stopCoordinates) {\r\n      this.addStopOverlay(\r\n        this.stops.at(index + diff).value.stopCoordinates,\r\n        index + diff\r\n      );\r\n    }\r\n  }\r\n\r\n  get stops(): FormArray {\r\n    return this.stopsForm.get('stops') as FormArray;\r\n  }\r\n\r\n  getStopsCoordinates(): [number, number][] {\r\n    const stopCoordinates = [];\r\n    this.stops.value.forEach(stop => {\r\n      if (stop.stopCoordinates instanceof Array) {\r\n        stopCoordinates.push(stop.stopCoordinates);\r\n      }\r\n    });\r\n    this.routingFormService.setStopsCoordinates(stopCoordinates);\r\n    return stopCoordinates;\r\n  }\r\n\r\n  addStop(): void {\r\n    const insertIndex = this.stops.length - 1;\r\n    this.stops.insert(insertIndex, this.createStop());\r\n  }\r\n\r\n  createStop(routingPos = 'intermediate'): FormGroup {\r\n    return this.formBuilder.group({\r\n      stopPoint: [''],\r\n      stopProposals: [[]],\r\n      routingText: routingPos,\r\n      stopCoordinates: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  removeStop(index: number): void {\r\n    this.routingStopsOverlayDataSource.ol.clear();\r\n    this.stops.removeAt(index);\r\n    let cnt = 0;\r\n    this.stops.value.forEach(stop => {\r\n      this.stops.at(cnt).patchValue({ routingText: this.routingText(cnt) });\r\n      this.addStopOverlay(this.stops.at(cnt).value.stopCoordinates, cnt);\r\n      cnt++;\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.routesResults = undefined;\r\n    const nbStops = this.stops.length;\r\n    for (let i = 0; i < nbStops; i++) {\r\n      this.stops.removeAt(0);\r\n    }\r\n    this.stops.insert(0, this.createStop('start'));\r\n    this.stops.insert(1, this.createStop('end'));\r\n    this.routingStopsOverlayDataSource.ol.getFeatures().forEach(element => {\r\n      this.deleteRoutingOverlaybyID(element.getId());\r\n    });\r\n    this.routingRoutesOverlayDataSource.ol.clear();\r\n    this.routingStopsOverlayDataSource.ol.clear();\r\n    this.selectRoute.getFeatures().clear();\r\n  }\r\n\r\n  onFormChange() {\r\n    if (this.stopsForm.valid) {\r\n      this.routingRoutesOverlayDataSource.ol.clear();\r\n      const coords = this.getStopsCoordinates();\r\n      if (coords.length >= 2) {\r\n        this.getRoutes(coords);\r\n      } else {\r\n        this.routingRoutesOverlayDataSource.ol.clear();\r\n      }\r\n    }\r\n  }\r\n\r\n  formatStep(step, cnt) {\r\n    return this.formatInstruction(\r\n      step.maneuver.type,\r\n      step.maneuver.modifier,\r\n      step.name,\r\n      step.maneuver.bearing_after,\r\n      cnt,\r\n      step.maneuver.exit,\r\n      cnt === this.activeRoute.steps.length - 1\r\n    );\r\n  }\r\n\r\n  formatInstruction(\r\n    type,\r\n    modifier,\r\n    route,\r\n    direction,\r\n    stepPosition,\r\n    exit,\r\n    lastStep = false\r\n  ) {\r\n    let directiveFr;\r\n    let directiveEn;\r\n    let image = 'arrow_forward';\r\n    let cssClass = 'rotate-270';\r\n    const translatedDirection = this.translateBearing(direction);\r\n    const translatedModifier = this.translateModifier(modifier);\r\n    const enPrefix = modifier === 'straight' ? '' : 'on the ';\r\n    const frPrefix = modifier === 'straight' ? '' : 'Ã  ';\r\n\r\n    let frAggregatedDirection = frPrefix + translatedModifier;\r\n    let enAggregatedDirection = enPrefix + translatedModifier;\r\n\r\n    if (modifier && modifier.search('slight') >= 0) {\r\n      enAggregatedDirection = translatedModifier;\r\n    }\r\n\r\n    if (modifier === 'uturn') {\r\n      image = 'fast_forward';\r\n      cssClass = 'rotate-90';\r\n    } else if (modifier === 'sharp right') {\r\n      image = 'subdirectory_arrow_right';\r\n      cssClass = 'icon-flipped';\r\n    } else if (modifier === 'right') {\r\n      image = 'subdirectory_arrow_right';\r\n      cssClass = 'icon-flipped';\r\n    } else if (modifier === 'slight right') {\r\n      image = 'arrow_forward';\r\n      cssClass = 'rotate-290';\r\n    } else if (modifier === 'straight') {\r\n      image = 'arrow_forward';\r\n    } else if (modifier === 'slight left') {\r\n      image = 'arrow_forward';\r\n      cssClass = 'rotate-250';\r\n    } else if (modifier === 'left') {\r\n      image = 'subdirectory_arrow_left';\r\n      cssClass = 'icon-flipped';\r\n    } else if (modifier === 'sharp left') {\r\n      image = 'subdirectory_arrow_left';\r\n      cssClass = 'icon-flipped';\r\n    }\r\n\r\n    if (type === 'turn') {\r\n      if (modifier === 'straight') {\r\n        directiveFr = 'Continuer sur ' + route;\r\n        directiveEn = 'Continue on ' + route;\r\n      } else if (modifier === 'uturn') {\r\n        directiveFr = 'Faire demi-tour sur ' + route;\r\n        directiveEn = 'Make u-turn on ' + route;\r\n      } else {\r\n        directiveFr = 'Tourner ' + frAggregatedDirection + ' sur ' + route;\r\n        directiveEn = 'Turn ' + translatedModifier + ' onto ' + route;\r\n      }\r\n    } else if (type === 'new name') {\r\n      directiveFr =\r\n        'Continuer en direction ' + translatedDirection + ' sur ' + route;\r\n      directiveEn = 'Head ' + translatedDirection + ' on ' + route;\r\n      image = 'explore';\r\n      cssClass = '';\r\n    } else if (type === 'depart') {\r\n      directiveFr =\r\n        'Aller en direction ' + translatedDirection + ' sur ' + route;\r\n      directiveEn = 'Head ' + translatedDirection + ' on ' + route;\r\n      image = 'explore';\r\n      cssClass = '';\r\n    } else if (type === 'arrive') {\r\n      if (lastStep) {\r\n        let coma = ', ';\r\n        if (!translatedModifier) {\r\n          frAggregatedDirection = '';\r\n          enAggregatedDirection = '';\r\n          coma = '';\r\n        }\r\n        directiveFr = 'Vous Ãªtes arrivÃ©' + coma + frAggregatedDirection;\r\n        directiveEn =\r\n          'You have reached your destination' + coma + enAggregatedDirection;\r\n      } else {\r\n        directiveFr = 'Vous atteignez le point intermÃ©diare sur ' + route;\r\n        directiveEn = 'You have reached the intermediate stop onto ' + route;\r\n        image = 'location_on';\r\n        cssClass = '';\r\n      }\r\n    } else if (type === 'merge') {\r\n      directiveFr = 'Continuer sur ' + route;\r\n      directiveEn = 'Continue on ' + route;\r\n      image = 'arrow_forward';\r\n      cssClass = 'rotate-270';\r\n    } else if (type === 'on ramp') {\r\n      directiveFr = \"Prendre l'entrÃ©e d'autoroute \" + frAggregatedDirection;\r\n      directiveEn = 'Take the ramp ' + enAggregatedDirection;\r\n    } else if (type === 'off ramp') {\r\n      directiveFr = \"Prendre la sortie d'autoroute \" + frAggregatedDirection;\r\n      directiveEn = 'Take exit ' + enAggregatedDirection;\r\n    } else if (type === 'fork') {\r\n      if (modifier.search('left') >= 0) {\r\n        directiveFr = 'Garder la gauche sur ' + route;\r\n        directiveEn = 'Merge left onto ' + route;\r\n      } else if (modifier.search('right') >= 0) {\r\n        directiveFr = 'Garder la droite sur ' + route;\r\n        directiveEn = 'Merge right onto ' + route;\r\n      } else {\r\n        directiveFr = 'Continuer sur ' + route;\r\n        directiveEn = 'Continue on ' + route;\r\n      }\r\n    } else if (type === 'end of road') {\r\n      directiveFr =\r\n        'Ã la fin de la route, tourner ' + translatedModifier + ' sur ' + route;\r\n      directiveEn =\r\n        'At the end of the road, turn ' + translatedModifier + ' onto ' + route;\r\n    } else if (type === 'use lane') {\r\n      directiveFr = 'Prendre la voie de ... ';\r\n      directiveEn = 'Take the lane ...';\r\n    } else if (type === 'continue' && modifier !== 'uturn') {\r\n      directiveFr = 'Continuer sur ' + route;\r\n      directiveEn = 'Continue on ' + route;\r\n      image = 'arrow_forward';\r\n      cssClass = 'rotate-270';\r\n    } else if (type === 'roundabout') {\r\n      directiveFr = 'Au rond-point, prendre la ' + exit;\r\n      directiveFr += exit === 1 ? 're' : 'e';\r\n      directiveFr += ' sortie vers ' + route;\r\n      directiveEn = 'At the roundabout, take the ' + exit;\r\n      directiveEn += exit === 1 ? 'st' : 'rd';\r\n      directiveEn += ' exit towards ' + route;\r\n      image = 'donut_large';\r\n      cssClass = '';\r\n    } else if (type === 'rotary') {\r\n      directiveFr = 'Rond-point rotary....';\r\n      directiveEn = 'Roundabout rotary....';\r\n      image = 'donut_large';\r\n      cssClass = '';\r\n    } else if (type === 'roundabout turn') {\r\n      directiveFr = 'Rond-point, prendre la ...';\r\n      directiveEn = 'Roundabout, take the ...';\r\n      image = 'donut_large';\r\n      cssClass = '';\r\n    } else if (type === 'exit roundabout') {\r\n      directiveFr = 'Poursuivre vers ' + route;\r\n      directiveEn = 'Continue to ' + route;\r\n      image = 'arrow_forward';\r\n      cssClass = 'rotate-270';\r\n    } else if (type === 'notification') {\r\n      directiveFr = 'notification ....';\r\n      directiveEn = 'notification ....';\r\n    } else if (modifier === 'uturn') {\r\n      directiveFr =\r\n        'Faire demi-tour et continuer en direction ' +\r\n        translatedDirection +\r\n        ' sur ' +\r\n        route;\r\n      directiveEn =\r\n        'Make u-turn and head ' + translatedDirection + ' on ' + route;\r\n    } else {\r\n      directiveFr = '???';\r\n      directiveEn = '???';\r\n    }\r\n\r\n    if (lastStep) {\r\n      image = 'flag';\r\n      cssClass = '';\r\n    }\r\n    if (stepPosition === 0) {\r\n      image = 'explore';\r\n      cssClass = '';\r\n    }\r\n\r\n    let directive;\r\n    if (this.browserLanguage === 'fr') {\r\n      directive = directiveFr;\r\n    } else if (this.browserLanguage === 'en') {\r\n      directive = directiveEn;\r\n    }\r\n\r\n    return { instruction: directive, image, cssClass };\r\n  }\r\n\r\n  translateModifier(modifier) {\r\n    if (modifier === 'uturn') {\r\n      return this.languageService.translate.instant('igo.geo.routing.uturn');\r\n    } else if (modifier === 'sharp right') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.routing.sharp right'\r\n      );\r\n    } else if (modifier === 'right') {\r\n      return this.languageService.translate.instant('igo.geo.routing.right');\r\n    } else if (modifier === 'slight right') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.routing.slight right'\r\n      );\r\n    } else if (modifier === 'sharp left') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.routing.sharp left'\r\n      );\r\n    } else if (modifier === 'left') {\r\n      return this.languageService.translate.instant('igo.geo.routing.left');\r\n    } else if (modifier === 'slight left') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.routing.slight left'\r\n      );\r\n    } else if (modifier === 'straight') {\r\n      return this.languageService.translate.instant('igo.geo.routing.straight');\r\n    } else {\r\n      return modifier;\r\n    }\r\n  }\r\n\r\n  translateBearing(bearing) {\r\n    if (bearing >= 337 || bearing < 23) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.n');\r\n    } else if (bearing < 67) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.ne'\r\n      );\r\n    } else if (bearing < 113) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.e');\r\n    } else if (bearing < 157) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.se'\r\n      );\r\n    } else if (bearing < 203) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.s');\r\n    } else if (bearing < 247) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.sw'\r\n      );\r\n    } else if (bearing < 293) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.w');\r\n    } else if (bearing < 337) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.nw'\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  formatDistance(distance) {\r\n    if (distance === 0) {\r\n      return;\r\n    }\r\n    if (distance >= 100000) {\r\n      return Math.round(distance / 1000) + ' km';\r\n    }\r\n    if (distance >= 10000) {\r\n      return Math.round(distance / 100) / 10 + ' km';\r\n    }\r\n    if (distance >= 100) {\r\n      return Math.round(distance / 100) / 10 + ' km';\r\n    }\r\n    return distance + ' m';\r\n  }\r\n\r\n  formatDuration(duration: number, summary = false) {\r\n    if (duration >= 3600) {\r\n      const hour = Math.floor(duration / 3600);\r\n      const minute = Math.round((duration / 3600 - hour) * 60);\r\n      if (minute === 60) {\r\n        return hour + 1 + ' h';\r\n      }\r\n      return hour + ' h ' + minute + ' min';\r\n    }\r\n\r\n    if (duration >= 60) {\r\n      return Math.round(duration / 60) + ' min';\r\n    }\r\n    return duration + ' s';\r\n  }\r\n\r\n  showSegment(step, zoomToExtent = false) {\r\n    this.showRouteSegmentGeometry(step.geometry.coordinates, zoomToExtent);\r\n  }\r\n\r\n  showRouteSegmentGeometry(coordinates, zoomToExtent = false) {\r\n    this.deleteRoutingOverlaybyID('endSegment');\r\n    const geometry4326 = new olgeom.LineString(coordinates);\r\n    const geometry3857 = geometry4326.transform('EPSG:4326', 'EPSG:3857');\r\n    const routeSegmentCoordinates = (geometry3857 as any).getCoordinates();\r\n    const lastPoint = routeSegmentCoordinates[0];\r\n\r\n    const geometry = new olgeom.Point(lastPoint);\r\n    const feature = new olFeature({ geometry });\r\n    feature.setId('endSegment');\r\n\r\n    if (geometry === null) {\r\n      return;\r\n    }\r\n    if (geometry.getType() === 'Point') {\r\n      feature.setStyle([\r\n        new olstyle.Style({\r\n          geometry,\r\n          image: new olstyle.Circle({\r\n            radius: 7,\r\n            stroke: new olstyle.Stroke({ color: '#FF0000', width: 3 })\r\n          })\r\n        })\r\n      ]);\r\n    }\r\n    if (zoomToExtent) {\r\n      this.map.viewController.zoomToExtent(feature.getGeometry().getExtent());\r\n    }\r\n    this.routingRoutesOverlayDataSource.ol.addFeature(feature);\r\n  }\r\n\r\n  zoomRoute() {\r\n    this.map.viewController.zoomToExtent(this.routingRoutesOverlayDataSource.ol.getExtent());\r\n  }\r\n\r\n  showRouteGeometry(moveToExtent = false) {\r\n    const geom = this.activeRoute.geometry.coordinates;\r\n    const geometry4326 = new olgeom.LineString(geom);\r\n    const geometry3857 = geometry4326.transform('EPSG:4326', 'EPSG:3857');\r\n    this.routingRoutesOverlayDataSource.ol.clear();\r\n    const routingFeature = new olFeature({ geometry: geometry3857 });\r\n    routingFeature.setStyle([\r\n      new olstyle.Style({\r\n        stroke: new olstyle.Stroke({ color: '#6a7982', width: 10 })\r\n      }),\r\n      new olstyle.Style({\r\n        stroke: new olstyle.Stroke({ color: '#4fa9dd', width: 6 })\r\n      })\r\n    ]);\r\n    this.routingRoutesOverlayDataSource.ol.addFeature(routingFeature);\r\n    if (moveToExtent) {\r\n      this.map.viewController.zoomToExtent(this.routingRoutesOverlayDataSource.ol.getExtent());\r\n    }\r\n  }\r\n\r\n  getRoutes(stopsArrayCoordinates, moveToExtent = false) {\r\n    const routeResponse = this.routingService.route(stopsArrayCoordinates);\r\n    if (routeResponse) {\r\n      routeResponse.map(res =>\r\n        this.routesQueries$$.push(\r\n          res.subscribe(route => {\r\n            this.routesResults = route;\r\n            this.activeRoute = this.routesResults[0] as Routing;\r\n            this.showRouteGeometry(moveToExtent);\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  private unlistenSingleClick() {\r\n    if (this.focusKey.length !== 0) {\r\n      this.focusKey.forEach(key => {\r\n        olobservable.unByKey(key);\r\n      });\r\n    }\r\n  }\r\n\r\n  private unsubscribeRoutesQueries() {\r\n    this.routesQueries$$.forEach((sub: Subscription) => sub.unsubscribe());\r\n    this.routesQueries$$ = [];\r\n  }\r\n\r\n  copyLinkToClipboard() {\r\n    const successful = Clipboard.copy(this.getUrl());\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant('igo.geo.routingForm.dialog.copyTitle');\r\n      const msg = translate.instant('igo.geo.routingForm.dialog.copyMsgLink');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  copyDirectionsToClipboard() {\r\n    const indent = '\\t';\r\n    let activeRouteDirective =\r\n      this.languageService.translate.instant(\r\n        'igo.geo.routingForm.instructions'\r\n      ) + ':\\n';\r\n    let wayPointList = '';\r\n    const summary =\r\n      this.languageService.translate.instant('igo.geo.routingForm.summary') +\r\n      ': \\n' +\r\n      indent +\r\n      this.activeRoute.title +\r\n      '\\n' +\r\n      indent +\r\n      this.formatDistance(this.activeRoute.distance) +\r\n      '\\n' +\r\n      indent +\r\n      this.formatDuration(this.activeRoute.duration) +\r\n      '\\n\\n' +\r\n      this.languageService.translate.instant('igo.geo.routingForm.stopsList') +\r\n      ':\\n';\r\n\r\n    const url =\r\n      this.languageService.translate.instant('igo.geo.routingForm.link') +\r\n      ':\\n' +\r\n      indent +\r\n      this.getUrl();\r\n\r\n    let wayPointsCnt = 1;\r\n    this.stops.value.forEach(stop => {\r\n      let coord = '';\r\n      let stopPoint = '';\r\n      if (stop.stopPoint !== stop.stopCoordinates) {\r\n        stopPoint = stop.stopPoint;\r\n        coord =\r\n          ' (' +\r\n          [stop.stopCoordinates[1], stop.stopCoordinates[0]].join(',') +\r\n          ')';\r\n      } else {\r\n        stopPoint = [stop.stopCoordinates[1], stop.stopCoordinates[0]].join(\r\n          ','\r\n        );\r\n      }\r\n\r\n      wayPointList =\r\n        wayPointList +\r\n        indent +\r\n        wayPointsCnt.toLocaleString() +\r\n        '. ' +\r\n        stopPoint +\r\n        coord +\r\n        '\\n';\r\n      wayPointsCnt++;\r\n    });\r\n\r\n    // Directions\r\n    let localCnt = 0;\r\n    this.activeRoute.steps.forEach(step => {\r\n      const instruction = this.formatStep(step, localCnt).instruction;\r\n      const distance =\r\n        this.formatDistance(step.distance) === undefined\r\n          ? ''\r\n          : ' (' + this.formatDistance(step.distance) + ')';\r\n      activeRouteDirective =\r\n        activeRouteDirective +\r\n        indent +\r\n        (localCnt + 1).toLocaleString() +\r\n        '. ' +\r\n        instruction +\r\n        distance +\r\n        '\\n';\r\n      localCnt++;\r\n    });\r\n\r\n    const directionsBody =\r\n      summary + wayPointList + '\\n' + url + '\\n\\n' + activeRouteDirective;\r\n\r\n    const successful = Clipboard.copy(directionsBody);\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant('igo.geo.routingForm.dialog.copyTitle');\r\n      const msg = translate.instant('igo.geo.routingForm.dialog.copyMsg');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  private handleTermChanged(term: string) {\r\n    if (term !== undefined || term.length !== 0) {\r\n      const searchProposals = [];\r\n      const researches = this.searchService.search(term);\r\n      researches.map(res =>\r\n        this.routesQueries$$.push(\r\n          res.request.subscribe(results => {\r\n            results\r\n              .filter(r => r.data.geometry)\r\n              .forEach(element => {\r\n                if (\r\n                  searchProposals.filter(r => r.source === element.source)\r\n                    .length === 0\r\n                ) {\r\n                  searchProposals.push({\r\n                    source: element.source,\r\n                    results: results.map(r => r.data)\r\n                  });\r\n                }\r\n              });\r\n            this.stops\r\n              .at(this.currentStopIndex)\r\n              .patchValue({ stopProposals: searchProposals });\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  setTerm(term: string) {\r\n    this.term = term;\r\n    if (\r\n      this.keyIsValid(term) &&\r\n      (term.length >= this.length || term.length === 0)\r\n    ) {\r\n      this.stream$.next(term);\r\n    }\r\n  }\r\n\r\n  private keyIsValid(key: string) {\r\n    return this.invalidKeys.find(value => value === key) === undefined;\r\n  }\r\n\r\n  keyup(i, event: KeyboardEvent) {\r\n    const term = (event.target as HTMLInputElement).value;\r\n    this.setTerm(term);\r\n    this.map.ol.un('singleclick', evt => {\r\n      this.handleMapClick(evt, i);\r\n    });\r\n  }\r\n\r\n  clearStop(stopIndex) {\r\n    this.deleteRoutingOverlaybyID(this.getStopOverlayID(stopIndex));\r\n    this.stops.removeAt(stopIndex);\r\n    this.stops.insert(stopIndex, this.createStop(this.routingText(stopIndex)));\r\n    this.routingRoutesOverlayDataSource.ol.clear();\r\n  }\r\n\r\n  chooseProposal(proposal, i) {\r\n    if (proposal !== undefined) {\r\n      let geomCoord;\r\n      const geom = (proposal as any).geometry;\r\n      if (geom.type === 'Point') {\r\n        geomCoord = geom.coordinates;\r\n      } else if (geom.type.search('Line') >= 0) {\r\n        let coordArray = [];\r\n        if (geom.coordinates instanceof Array) {\r\n          // Middle segment of multilinestring\r\n          coordArray =\r\n            geom.coordinates[Math.floor(geom.coordinates.length / 2)];\r\n        } else {\r\n          coordArray = geom.coordinates;\r\n        }\r\n        // middle point of coords\r\n        geomCoord = coordArray[Math.floor(coordArray.length / 2)];\r\n      } else if (geom.type.search('Polygon') >= 0) {\r\n        const polygonExtent = proposal.extent;\r\n        const long =\r\n          polygonExtent[0] + (polygonExtent[2] - polygonExtent[0]) / 2;\r\n        const lat =\r\n          polygonExtent[1] + (polygonExtent[3] - polygonExtent[1]) / 2;\r\n        geomCoord = [long, lat];\r\n      }\r\n\r\n      if (geomCoord !== undefined) {\r\n        this.stops.at(i).patchValue({ stopCoordinates: geomCoord });\r\n        this.addStopOverlay(geomCoord, i);\r\n        const proposalExtent = this.routingStopsOverlayDataSource.ol\r\n          .getFeatureById(this.getStopOverlayID(i))\r\n          .getGeometry()\r\n          .getExtent();\r\n\r\n        if (!olextent.intersects(proposalExtent, this.map.getExtent())) {\r\n          this.map.viewController.moveToExtent(proposalExtent);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  focus(i) {\r\n    this.unlistenSingleClick();\r\n    this.currentStopIndex = i;\r\n    this.focusOnStop = true;\r\n    this.routingFormService.setMapWaitingForRoutingClick();\r\n    this.focusKey.push(\r\n      this.map.ol.once('singleclick', evt => {\r\n        this.handleMapClick(evt, i);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleMapClick(event: olcondition, indexPos?) {\r\n    this.stops.at(indexPos).patchValue({ stopProposals: [] });\r\n    if (this.currentStopIndex === undefined) {\r\n      this.addStop();\r\n      indexPos = this.stops.length - 2;\r\n      this.stops.at(indexPos).value.stopProposals = [];\r\n    } else {\r\n      indexPos = this.currentStopIndex;\r\n    }\r\n    const clickCoordinates = olproj.transform(\r\n      event.coordinate,\r\n      this.map.projection,\r\n      this.projection\r\n    );\r\n    this.stops.at(indexPos).patchValue({ stopCoordinates: clickCoordinates });\r\n\r\n    this.handleLocationProposals(clickCoordinates, indexPos);\r\n    this.addStopOverlay(clickCoordinates, indexPos);\r\n    setTimeout(() => {\r\n      this.focusOnStop = false; // prevent to trigger map click and Select on routes at same time.\r\n    }, 500);\r\n    this.routingFormService.unsetMapWaitingForRoutingClick();\r\n  }\r\n\r\n  geolocateStop(index: number) {\r\n    moveToOlFeatures(this.map, [this.map.geolocationFeature], FeatureMotion.Move);\r\n    const geolocateCoordinates = this.map.getCenter(this.projection);\r\n    this.stops.at(index).patchValue({ stopCoordinates: geolocateCoordinates });\r\n    this.addStopOverlay(geolocateCoordinates, index);\r\n    this.handleLocationProposals(geolocateCoordinates, index);\r\n  }\r\n\r\n  public addStopOverlay(coordinates: [number, number], index: number) {\r\n    const routingText = this.routingText(index);\r\n    let stopColor;\r\n    let stopText;\r\n    if (routingText === 'start') {\r\n      stopColor = 'green';\r\n      stopText = this.languageService.translate.instant(\r\n        'igo.geo.routingForm.start'\r\n      );\r\n    } else if (routingText === 'end') {\r\n      stopColor = 'red';\r\n      stopText = this.languageService.translate.instant(\r\n        'igo.geo.routingForm.end'\r\n      );\r\n    } else {\r\n      stopColor = 'yellow';\r\n      stopText =\r\n        this.languageService.translate.instant(\r\n          'igo.geo.routingForm.intermediate'\r\n        ) +\r\n        ' #' +\r\n        index;\r\n    }\r\n\r\n    const geometry = new olgeom.Point(\r\n      olproj.transform(coordinates, this.projection, this.map.projection)\r\n    );\r\n    const feature = new olFeature({ geometry });\r\n\r\n    const stopID = this.getStopOverlayID(index);\r\n    this.deleteRoutingOverlaybyID(stopID);\r\n    feature.setId(stopID);\r\n\r\n    if (geometry === null) {\r\n      return;\r\n    }\r\n    if (geometry.getType() === 'Point') {\r\n      const olStyle = createOverlayMarkerStyle(stopColor);\r\n      // stopText\r\n      feature.setStyle(olStyle);\r\n    }\r\n    this.routingStopsOverlayDataSource.ol.addFeature(feature);\r\n  }\r\n\r\n  public getStopOverlayID(index: number): string {\r\n    let txt;\r\n    if (index === 0) {\r\n      txt = 'start';\r\n    } else if (index === this.stops.length - 1) {\r\n      txt = 'end';\r\n    } else {\r\n      txt = index;\r\n    }\r\n    return 'routingStop_' + txt;\r\n  }\r\n\r\n  private deleteRoutingOverlaybyID(id) {\r\n    if (this.routingStopsOverlayDataSource.ol.getFeatureById(id)) {\r\n      this.routingStopsOverlayDataSource.ol.removeFeature(\r\n        this.routingStopsOverlayDataSource.ol.getFeatureById(id)\r\n      );\r\n    }\r\n    if (this.routingRoutesOverlayDataSource.ol.getFeatureById(id)) {\r\n      this.routingRoutesOverlayDataSource.ol.removeFeature(\r\n        this.routingRoutesOverlayDataSource.ol.getFeatureById(id)\r\n      );\r\n    }\r\n  }\r\n\r\n  private getUrl() {\r\n    if (!this.route) {\r\n      return;\r\n    }\r\n\r\n    const routingKey = this.route.options.routingCoordKey;\r\n    const stopsCoordinates = [];\r\n    if (\r\n      this.routingFormService &&\r\n      this.routingFormService.getStopsCoordinates() &&\r\n      this.routingFormService.getStopsCoordinates().length !== 0\r\n    ) {\r\n      this.routingFormService.getStopsCoordinates().forEach(coord => {\r\n        stopsCoordinates.push(coord);\r\n      });\r\n    }\r\n    let routingUrl = '';\r\n    if (stopsCoordinates.length >= 2) {\r\n      routingUrl = `${routingKey}=${stopsCoordinates.join(';')}`;\r\n    }\r\n\r\n    return `${location.origin}${\r\n      location.pathname\r\n    }?tool=directions&${routingUrl}`;\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  AfterViewInit,\r\n  Optional\r\n} from '@angular/core';\r\n\r\nimport { RouteService } from '@igo2/core';\r\n\r\nimport { RoutingFormComponent } from './routing-form.component';\r\nimport { RoutingFormService } from './routing-form.service';\r\n\r\n@Directive({\r\n  selector: '[igoRoutingFormBinding]'\r\n})\r\nexport class RoutingFormBindingDirective implements AfterViewInit {\r\n\r\n  constructor(\r\n    @Self() private component: RoutingFormComponent,\r\n    private routingFormService: RoutingFormService,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    const storedStopsCoordinates = this.routingFormService.getStopsCoordinates();\r\n    if (\r\n      !storedStopsCoordinates &&\r\n      this.route &&\r\n      this.route.options.routingCoordKey\r\n    ) {\r\n      this.route.queryParams.subscribe(params => {\r\n        const routingParams =\r\n          params[this.route.options.routingCoordKey as string];\r\n        const stopsCoordinatesFromURL = [];\r\n        if (routingParams) {\r\n          const routingCoordUrl = routingParams.split(';');\r\n          if (routingCoordUrl.length >= 2) {\r\n            let cnt = 0;\r\n            routingCoordUrl.forEach(coord => {\r\n              if (cnt !== 0 && cnt !== routingCoordUrl.length - 1) {\r\n                this.component.stops.insert(cnt, this.component.createStop());\r\n              }\r\n\r\n              const stopCoordinatesFromURL = JSON.parse('[' + coord + ']');\r\n              this.component.stops\r\n                .at(cnt)\r\n                .patchValue({ stopCoordinates: stopCoordinatesFromURL });\r\n              this.component.stops\r\n                .at(cnt)\r\n                .patchValue({ stopPoint: stopCoordinatesFromURL });\r\n              this.component.handleLocationProposals(\r\n                stopCoordinatesFromURL,\r\n                cnt\r\n              );\r\n\r\n              stopsCoordinatesFromURL.push(stopCoordinatesFromURL);\r\n              this.component.addStopOverlay(stopCoordinatesFromURL, cnt);\r\n              cnt++;\r\n            });\r\n            this.component.getRoutes(stopsCoordinatesFromURL, true);\r\n          }\r\n        }\r\n      });\r\n    } else if (storedStopsCoordinates) {\r\n      for (let i = 0; i < storedStopsCoordinates.length; i++) {\r\n        if (i !== 0 && i !== storedStopsCoordinates.length - 1) {\r\n          this.component.stops.insert(i, this.component.createStop());\r\n        }\r\n        if (storedStopsCoordinates[i] instanceof Array) {\r\n          this.component.addStopOverlay(storedStopsCoordinates[i], i);\r\n          this.component.stops\r\n            .at(i)\r\n            .patchValue({ stopCoordinates: storedStopsCoordinates[i] });\r\n          this.component.stops\r\n            .at(i)\r\n            .patchValue({ stopPoint: storedStopsCoordinates[i] });\r\n          this.component.handleLocationProposals(storedStopsCoordinates[i], i);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatListModule,\r\n  MatDividerModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatTooltipModule,\r\n  MatAutocompleteModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { RoutingFormComponent } from './routing-form/routing-form.component';\r\nimport { RoutingFormBindingDirective } from './routing-form/routing-form-binding.directive';\r\nimport { RoutingFormService } from './routing-form/routing-form.service';\r\nimport { provideRoutingSourceService } from './shared/routing-source.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [RoutingFormComponent, RoutingFormBindingDirective],\r\n  declarations: [RoutingFormComponent, RoutingFormBindingDirective],\r\n  providers: [RoutingFormService, provideRoutingSourceService()]\r\n})\r\nexport class IgoRoutingModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoRoutingModule\r\n    };\r\n  }\r\n}\r\n","import { SearchSource } from './sources/source';\r\nimport { SearchSourceService } from './search-source.service';\r\n\r\n/**\r\n * Search source factory\r\n * @ignore\r\n */\r\nexport function searchSourceServiceFactory(sources: SearchSource[]) {\r\n  return new SearchSourceService(sources);\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the SearchSource service\r\n */\r\nexport function provideSearchSourceService() {\r\n  return {\r\n    provide: SearchSourceService,\r\n    useFactory: searchSourceServiceFactory,\r\n    deps: [SearchSource]\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { FEATURE, Feature } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch, ReverseSearch } from './source';\r\nimport {\r\n  SearchSourceOptions,\r\n  TextSearchOptions,\r\n  ReverseSearchOptions\r\n} from './source.interfaces';\r\nimport {\r\n  IChercheData,\r\n  IChercheResponse,\r\n  IChercheReverseData,\r\n  IChercheReverseResponse\r\n} from './icherche.interfaces';\r\n\r\n@Injectable()\r\nexport class IChercheSearchResultFormatter {\r\n  constructor(private languageService: LanguageService) {}\r\n\r\n  formatResult(result: SearchResult<Feature>): SearchResult<Feature> {\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * ICherche search source\r\n */\r\n@Injectable()\r\nexport class IChercheSearchSource extends SearchSource implements TextSearch {\r\n  static id = 'icherche';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = [\r\n    '@timestamp',\r\n    '@version',\r\n    'recherche',\r\n    'id',\r\n    'idrte',\r\n    'cote',\r\n    'geometry',\r\n    'bbox'\r\n  ];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions,\r\n    @Inject(IChercheSearchResultFormatter)\r\n    private formatter: IChercheSearchResultFormatter\r\n  ) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return IChercheSearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'ICherche QuÃ©bec',\r\n      searchUrl: 'https://geoegl.msp.gouv.qc.ca/icherche/geocode'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by name or keyword\r\n   * @param term Location name or keyword\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  search(\r\n    term: string,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeRequestParams(term, options || {});\r\n    return this.http\r\n      .get(this.searchUrl, { params })\r\n      .pipe(map((response: IChercheResponse) => this.extractResults(response)));\r\n  }\r\n\r\n  private computeRequestParams(term: string, options: TextSearchOptions): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          q: term,\r\n          geometries: 'geom',\r\n          type:\r\n            'adresse,code_postal,route,municipalite,mrc,region_administrative'\r\n        },\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(response: IChercheResponse): SearchResult<Feature>[] {\r\n    return response.features.map((data: IChercheData) => {\r\n      return this.formatter.formatResult(this.dataToResult(data));\r\n    });\r\n  }\r\n\r\n  private dataToResult(data: IChercheData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const id = [this.getId(), properties.type, data._id].join('.');\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        extent: data.bbox,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties.recherche\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties.recherche,\r\n        titleHtml: data.highlight,\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: IChercheData): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      IChercheSearchSource.propertiesBlacklist\r\n    );\r\n    return Object.assign(properties, { type: data.doc_type });\r\n  }\r\n}\r\n\r\n/**\r\n * IChercheReverse search source\r\n */\r\n@Injectable()\r\nexport class IChercheReverseSearchSource extends SearchSource\r\n  implements ReverseSearch {\r\n  static id = 'icherchereverse';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = ['doc_type'];\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return IChercheReverseSearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'ICherche QuÃ©bec',\r\n      searchUrl: 'https://geoegl.msp.gouv.qc.ca/icherche/xy'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by coordinates\r\n   * @param lonLat Location coordinates\r\n   * @param distance Search raidus around lonLat\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeRequestParams(lonLat, options || {});\r\n    return this.http.get(this.searchUrl, { params }).pipe(\r\n      map((response: IChercheReverseResponse) => {\r\n        return this.extractResults(response);\r\n      })\r\n    );\r\n  }\r\n\r\n  private computeRequestParams(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): HttpParams {\r\n    const distance = options.distance;\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          loc: lonLat.join(','),\r\n          distance: distance ? String(distance) : '',\r\n          geometries: 'geom',\r\n          type: 'adresse,municipalite,mrc,regadmin'\r\n        },\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(\r\n    response: IChercheReverseResponse\r\n  ): SearchResult<Feature>[] {\r\n    return response.features.map((data: IChercheReverseData) => {\r\n      return this.dataToResult(data);\r\n    });\r\n  }\r\n\r\n  private dataToResult(data: IChercheReverseData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const extent = this.computeExtent(data);\r\n    const id = [this.getId(), properties.type, data._id].join('.');\r\n\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        extent,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties.nom\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties.nom,\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: IChercheReverseData): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      IChercheReverseSearchSource.propertiesBlacklist\r\n    );\r\n    return Object.assign(properties, { type: data.properties.doc_type });\r\n  }\r\n\r\n  private computeExtent(data: IChercheReverseData): [number, number, number, number] | undefined {\r\n    return data.bbox\r\n      ? [data.bbox[0], data.bbox[2], data.bbox[1], data.bbox[3]]\r\n      : undefined;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport {\r\n  IChercheSearchSource,\r\n  IChercheSearchResultFormatter,\r\n  IChercheReverseSearchSource\r\n} from './icherche';\r\n\r\n/**\r\n * ICherche search result formatter factory\r\n * @ignore\r\n */\r\nexport function defaultIChercheSearchResultFormatterFactory(\r\n  languageService: LanguageService\r\n) {\r\n  return new IChercheSearchResultFormatter(languageService);\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ICherche search result formatter\r\n */\r\nexport function provideDefaultIChercheSearchResultFormatter() {\r\n  return {\r\n    provide: IChercheSearchResultFormatter,\r\n    useFactory: defaultIChercheSearchResultFormatterFactory,\r\n    deps: [LanguageService]\r\n  };\r\n}\r\n\r\n/**\r\n * ICherche search source factory\r\n * @ignore\r\n */\r\nexport function ichercheSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService,\r\n  formatter: IChercheSearchResultFormatter\r\n) {\r\n  return new IChercheSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${IChercheSearchSource.id}`),\r\n    formatter\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ICherche search source\r\n */\r\nexport function provideIChercheSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: ichercheSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService, IChercheSearchResultFormatter]\r\n  };\r\n}\r\n\r\n/**\r\n * IChercheReverse search source factory\r\n * @ignore\r\n */\r\nexport function ichercheReverseSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new IChercheReverseSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${IChercheReverseSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the IChercheReverse search source\r\n */\r\nexport function provideIChercheReverseSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: ichercheReverseSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n","export class GoogleLinks {\r\n  static getGoogleMapsLink(lon, lat) {\r\n    return 'https://www.google.com/maps?q=' + lat + ',' + lon;\r\n  }\r\n\r\n  static getGoogleStreetViewLink(lon, lat) {\r\n    return 'https://www.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon;\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { Observable, of } from 'rxjs';\r\n\r\nimport { FEATURE, Feature } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, ReverseSearch } from './source';\r\nimport { SearchSourceOptions, TextSearchOptions } from './source.interfaces';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\nimport { GoogleLinks } from '../../../utils/googleLinks';\r\n\r\n@Injectable()\r\nexport class CoordinatesSearchResultFormatter {\r\n  constructor(private languageService: LanguageService) {}\r\n\r\n  formatResult(result: SearchResult<Feature>): SearchResult<Feature> {\r\n    return result;\r\n  }\r\n}\r\n/**\r\n * CoordinatesReverse search source\r\n */\r\n@Injectable()\r\nexport class CoordinatesReverseSearchSource extends SearchSource\r\n  implements ReverseSearch {\r\n  static id = 'coordinatesreverse';\r\n  static type = FEATURE;\r\n\r\n  constructor(@Inject('options') options: SearchSourceOptions) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return CoordinatesReverseSearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Coordinates'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by coordinates\r\n   * @param lonLat Location coordinates\r\n   * @param distance Search raidus around lonLat\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    return of([this.dataToResult(lonLat)]);\r\n  }\r\n\r\n  private dataToResult(data: [number, number]): SearchResult<Feature> {\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [data[0], data[1]]\r\n        },\r\n        extent: undefined,\r\n        properties: {\r\n          type: 'point',\r\n          coordonnees: String(data[0]) + ', ' + String(data[1]),\r\n          format: 'degrÃ©s decimaux',\r\n          systemeCoordonnees: 'WGS84',\r\n          GoogleMaps: GoogleLinks.getGoogleMapsLink(data[0], data[1]),\r\n          GoogleStreetView: GoogleLinks.getGoogleStreetViewLink(\r\n            data[0],\r\n            data[1]\r\n          )\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id: '1',\r\n        title: String(data[0]) + ', ' + String(data[1]),\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport {\r\n  CoordinatesReverseSearchSource,\r\n  CoordinatesSearchResultFormatter\r\n} from './coordinates';\r\n\r\n/**\r\n * ICherche search result formatter factory\r\n * @ignore\r\n */\r\nexport function defaultCoordinatesSearchResultFormatterFactory(\r\n  languageService: LanguageService\r\n) {\r\n  return new CoordinatesSearchResultFormatter(languageService);\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ICherche search result formatter\r\n */\r\nexport function provideDefaultCoordinatesSearchResultFormatter() {\r\n  return {\r\n    provide: CoordinatesSearchResultFormatter,\r\n    useFactory: defaultCoordinatesSearchResultFormatterFactory,\r\n    deps: [LanguageService]\r\n  };\r\n}\r\n\r\n/**\r\n * CoordinatesReverse search source factory\r\n * @ignore\r\n */\r\nexport function CoordinatesReverseSearchSourceFactory(config: ConfigService) {\r\n  return new CoordinatesReverseSearchSource(\r\n    config.getConfig(`searchSources.${CoordinatesReverseSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the IChercheReverse search source\r\n */\r\nexport function provideCoordinatesReverseSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: CoordinatesReverseSearchSourceFactory,\r\n    multi: true,\r\n    deps: [ConfigService]\r\n  };\r\n}\r\n","import { FEATURE } from '../../feature';\r\nimport { LAYER } from '../../layer';\r\n\r\nexport const SEARCH_TYPES = [FEATURE, LAYER];\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { SEARCH_TYPES } from '../shared/search.enums';\r\nimport { SearchSourceService } from '../shared/search-source.service';\r\n\r\n/**\r\n * This component allows a user to select a search type yo enable. In it's\r\n * current version, only one search type can be selected at once (radio). If\r\n * this component were to support more than one search source enabled (checkbox),\r\n * the searchbar component would require a small change to it's\r\n * placeholder getter. The search source service already supports having\r\n * more than one search source enabled.\r\n */\r\n@Component({\r\n  selector: 'igo-search-selector',\r\n  templateUrl: './search-selector.component.html',\r\n  styleUrls: ['./search-selector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchSelectorComponent implements OnInit {\r\n\r\n  /**\r\n   * List of available search types\r\n   */\r\n  @Input() searchTypes: string[] = SEARCH_TYPES;\r\n\r\n  /**\r\n   * The search type enabled\r\n   */\r\n  @Input() enabled: string;\r\n\r\n  /**\r\n   * Event emitted when the enabled search type changes\r\n   */\r\n  @Output() change = new EventEmitter<string>();\r\n\r\n  constructor(private searchSourceService: SearchSourceService) {}\r\n\r\n  /**\r\n   * Enable the first search type if the enabled input is not defined\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    const initial = this.enabled || this.searchTypes[0];\r\n    this.enableSearchType(initial);\r\n  }\r\n\r\n  /**\r\n   * Enable the selected search type\r\n   * @param searchType Search type\r\n   * @internal\r\n   */\r\n  onSearchTypeChange(searchType: string) {\r\n    this.enableSearchType(searchType);\r\n  }\r\n\r\n  /**\r\n   * Get a search type's title. The title\r\n   * for all availables search typers needs to be defined in the locale\r\n   * files or an error will be thrown.\r\n   * @param searchType Search type\r\n   * @internal\r\n   */\r\n  getSearchTypeTitle(searchType: string) {\r\n    return `search.${searchType.toLowerCase()}.title`;\r\n  }\r\n\r\n  /**\r\n   * Emit an event and enable the search sources of the given type.\r\n   * @param searchType Search type\r\n   */\r\n  private enableSearchType(searchType: string) {\r\n    this.enabled = searchType;\r\n    this.searchSourceService.enableSourcesByType(searchType);\r\n    this.change.emit(searchType);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatRadioModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { SearchSelectorComponent } from './search-selector.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [SearchSelectorComponent],\r\n  declarations: [SearchSelectorComponent]\r\n})\r\nexport class IgoSearchSelectorModule {}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef,\r\n  HostBinding,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { FloatLabelType } from '@angular/material';\r\n\r\nimport { Subject, Subscription, EMPTY, timer } from 'rxjs';\r\nimport { debounce, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { EntityStore } from '@igo2/common';\r\n\r\nimport { SEARCH_TYPES } from '../shared/search.enums';\r\nimport { SearchResult, Research } from '../shared/search.interfaces';\r\nimport { SearchService } from '../shared/search.service';\r\n\r\n/**\r\n * Searchbar that triggers a research in all search sources enabled.\r\n * If the store input is defined, the search results will be loaded\r\n * into that store. An event is always emitted when a research is completed.\r\n */\r\n@Component({\r\n  selector: 'igo-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchBarComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Invalid keys\r\n   */\r\n  private readonly invalidKeys = ['Control', 'Shift', 'Alt'];\r\n\r\n  /**\r\n   * Search term stream\r\n   */\r\n  private stream$ = new Subject<string>();\r\n\r\n  /**\r\n   * Subscription to the search term stream\r\n   */\r\n  private stream$$: Subscription;\r\n\r\n  /**\r\n   * Search term\r\n   */\r\n  @Input() term = '';\r\n\r\n  /**\r\n   * Whether a float label should be displayed\r\n   */\r\n  @Input() floatLabel: FloatLabelType = 'never';\r\n\r\n  /**\r\n   * Whether this component is disabled\r\n   */\r\n  @Input() disabled = false;\r\n\r\n  /**\r\n   * Icons color (search and clear)\r\n   */\r\n  @Input() color = 'primary';\r\n\r\n  /**\r\n   * Debounce time between each keystroke\r\n   */\r\n  @Input() debounce = 300;\r\n\r\n  /**\r\n   * Minimum term length required to trigger a research\r\n   */\r\n  @Input() minLength = 2;\r\n\r\n  /**\r\n   * Search icon\r\n   */\r\n  @Input() searchIcon: string;\r\n\r\n  /**\r\n   * Search results store\r\n   */\r\n  @Input() store: EntityStore<SearchResult>;\r\n\r\n  /**\r\n   * List of available search types\r\n   */\r\n  @Input() searchTypes: string[] = SEARCH_TYPES;\r\n\r\n  /**\r\n   * Event emitted when the search term changes\r\n   */\r\n  @Output() change = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Event emitted when a research is completed\r\n   */\r\n  @Output() search = new EventEmitter<{\r\n    research: Research;\r\n    results: SearchResult[];\r\n  }>();\r\n\r\n  /**\r\n   * Event emitted when the search type changes\r\n   */\r\n  @Output() searchTypeChange = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Input element\r\n   * @internal\r\n   */\r\n  @ViewChild('input') input: ElementRef;\r\n\r\n  /**\r\n   * Host's empty class\r\n   * @internal\r\n   */\r\n  @HostBinding('class.empty')\r\n  get emptyClass() {\r\n    return this.empty;\r\n  }\r\n\r\n  /**\r\n   * Whether the search bar is empty\r\n   * @internal\r\n   */\r\n  get empty(): boolean {\r\n    return this.term.length === 0;\r\n  }\r\n\r\n  /**\r\n   * Search bar palceholder\r\n   * @internal\r\n   */\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n  }\r\n  get placeholder(): string {\r\n    return this.empty ? this._placeholder : '';\r\n  }\r\n  private _placeholder = '';\r\n\r\n  constructor(private searchService: SearchService) {}\r\n\r\n  /**\r\n   * Subscribe to the search term stream and trigger researches\r\n   * @internal\r\n   */\r\n  ngOnInit(): void {\r\n    this.stream$$ = this.stream$\r\n      .pipe(\r\n        debounce((term: string) => {\r\n          return term === '' ? EMPTY : timer(300);\r\n        }),\r\n        distinctUntilChanged()\r\n      )\r\n      .subscribe((term: string) => this.onTermChange(term));\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the search term stream\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.stream$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * When a user types, validates the key and send it into the\r\n   * stream if it's valid\r\n   * @param event Keyboard event\r\n   * @internal\r\n   */\r\n  onKeyup(event: KeyboardEvent) {\r\n    const key = (event.target as HTMLInputElement).value;\r\n    if (!this.keyIsValid(key)) {\r\n      return;\r\n    }\r\n    this.setTerm(key);\r\n  }\r\n\r\n  /**\r\n   * Clear the stream and the input\r\n   * @internal\r\n   */\r\n  onClearButtonClick() {\r\n    this.clear();\r\n  }\r\n\r\n  /**\r\n   * Update the placeholder with the enabled search type. The placeholder\r\n   * for all availables search typers needs to be defined in the locale\r\n   * files or an error will be thrown.\r\n   * @param searchType Enabled search type\r\n   * @internal\r\n   */\r\n  onSearchTypeChange(searchType: string) {\r\n    this.searchTypeChange.emit(searchType);\r\n    this.placeholder = `search.${searchType.toLowerCase()}.placeholder`;\r\n    this.doSearch(this.term);\r\n  }\r\n\r\n  /**\r\n   * Send the term into the stream only if this component is not disabled\r\n   * @param term Search term\r\n   */\r\n  setTerm(term: string) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    this.term = term;\r\n    if (term.length >= this.minLength || term.length === 0) {\r\n      this.stream$.next(term);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the stream and the input\r\n   */\r\n  private clear() {\r\n    this.term = '';\r\n    this.stream$.next(this.term);\r\n    this.input.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Validate if a given key stroke is a valid input\r\n   */\r\n  private keyIsValid(key: string) {\r\n    return this.invalidKeys.indexOf(key) === -1;\r\n  }\r\n\r\n  /**\r\n   * When the search term changes, emit an event and trigger a\r\n   * research in every enabled search sources.\r\n   * @param term Search term\r\n   */\r\n  private onTermChange(term: string | undefined) {\r\n    this.change.emit(term);\r\n    this.doSearch(term);\r\n  }\r\n\r\n  /**\r\n   * Execute the search\r\n   * @param term Search term\r\n   */\r\n  private doSearch(term: string | undefined) {\r\n    if (term === undefined || term === '') {\r\n      if (this.store !== undefined) {\r\n        this.store.clear();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.store !== undefined) {\r\n      this.store.softClear();\r\n    }\r\n\r\n    const researches = this.searchService.search(term);\r\n    researches.map(research => {\r\n      research.request.subscribe((results: SearchResult[]) => {\r\n        this.onResearchCompleted(research, results);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When a research  is completed, emit an event and update\r\n   * the store's items.\r\n   * @param research Research\r\n   * @param results Research results\r\n   */\r\n  private onResearchCompleted(research: Research, results: SearchResult[]) {\r\n    this.search.emit({ research, results });\r\n\r\n    if (this.store !== undefined) {\r\n      const newResults = this.store.entities$.value\r\n        .filter(result => result.source !== research.source)\r\n        .concat(results);\r\n      this.store.load(newResults);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  Optional,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { RouteService } from '@igo2/core';\r\n\r\nimport { SearchBarComponent } from './search-bar.component';\r\n\r\n@Directive({\r\n  selector: '[igoSearchUrlParam]'\r\n})\r\nexport class SearchUrlParamDirective implements OnInit {\r\n  constructor(\r\n    @Self() private component: SearchBarComponent,\r\n    private ref: ChangeDetectorRef,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.route && this.route.options.searchKey) {\r\n      this.route.queryParams.subscribe(params => {\r\n        const searchParams = params[this.route.options.searchKey as string];\r\n        if (searchParams) {\r\n          this.component.setTerm(searchParams);\r\n          this.ref.detectChanges();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatRadioModule,\r\n  MatFormFieldModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { IgoSearchSelectorModule } from '../search-selector/search-selector.module';\r\nimport { SearchBarComponent } from './search-bar.component';\r\nimport { SearchUrlParamDirective } from './search-url-param.directive';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    IgoLanguageModule,\r\n    IgoSearchSelectorModule\r\n  ],\r\n  exports: [\r\n    SearchBarComponent,\r\n    SearchBarComponent\r\n  ],\r\n  declarations: [\r\n    SearchBarComponent,\r\n    SearchUrlParamDirective\r\n  ]\r\n})\r\nexport class IgoSearchBarModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport {Observable, EMPTY, timer} from 'rxjs';\r\nimport {debounce, map} from 'rxjs/operators';\r\n\r\nimport {EntityStore, EntityStoreWatcher} from '@igo2/common';\r\n\r\nimport {SearchResult} from '../shared/search.interfaces';\r\nimport {SearchSource} from '../shared/sources/source';\r\n\r\nexport enum SearchResultMode {\r\n  Grouped = 'grouped',\r\n  Flat = 'flat'\r\n}\r\n\r\n/**\r\n * List of search results with focus and selection capabilities.\r\n * This component is dumb and only emits events.\r\n */\r\n@Component({\r\n  selector: 'igo-search-results',\r\n  templateUrl: './search-results.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchResultsComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Reference to the SearchResultMode enum\r\n   * @internal\r\n   */\r\n  public searchResultMode = SearchResultMode;\r\n\r\n  /**\r\n   * Search results store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<SearchResult>;\r\n\r\n  /**\r\n   * Search results store\r\n   */\r\n  @Input() store: EntityStore<SearchResult>;\r\n\r\n  /**\r\n   * Search results display mode\r\n   */\r\n  @Input() mode: SearchResultMode = SearchResultMode.Grouped;\r\n\r\n  /**\r\n   * Event emitted when a result is focused\r\n   */\r\n  @Output() resultFocus = new EventEmitter<SearchResult>();\r\n\r\n  /**\r\n   * Event emitted when a result is selected\r\n   */\r\n  @Output() resultSelect = new EventEmitter<SearchResult>();\r\n\r\n  get results$(): Observable<{source: SearchSource; results: SearchResult[]}[]> {\r\n    if (this._results$ === undefined) {\r\n      this._results$ = this.liftResults();\r\n    }\r\n    return this._results$;\r\n  }\r\n  private _results$: Observable<\r\n    {source: SearchSource; results: SearchResult[]}[]\r\n  >;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Bind the search results store to the watcher\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n  }\r\n\r\n  /**\r\n   * Unbind the search results store from the watcher\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n  }\r\n\r\n  /**\r\n   * When a result is focused, update it's state in the store and emit\r\n   * an event.\r\n   * @param result Search result\r\n   * @internal\r\n   */\r\n  onResultFocus(result: SearchResult) {\r\n    this.store.state.update(result, {focused: true}, true);\r\n    this.resultFocus.emit(result);\r\n  }\r\n\r\n  /**\r\n   * Compute a group title\r\n   * @param group Search results group\r\n   * @returns Group title\r\n   * @internal\r\n   */\r\n  computeGroupTitle(group: {source: SearchSource; results: SearchResult[]}): string {\r\n    const parts = [group.source.title];\r\n    const count = group.results.length;\r\n    if (count > 1) {\r\n      parts.push(`(${count})`);\r\n    }\r\n    return parts.join(' ');\r\n  }\r\n\r\n  /**\r\n   * When a result is selected, update it's state in the store and emit\r\n   * an event. A selected result is also considered focused\r\n   * @param result Search result\r\n   * @internal\r\n   */\r\n  onResultSelect(result: SearchResult) {\r\n    this.store.state.update(\r\n      result,\r\n      {\r\n        focused: true,\r\n        selected: true\r\n      },\r\n      true\r\n    );\r\n    this.resultSelect.emit(result);\r\n  }\r\n\r\n  /**\r\n   * Return an observable of the search results, grouped by search source\r\n   * @returns Observable of grouped search results\r\n   * @internal\r\n   */\r\n  private liftResults(): Observable<{source: SearchSource; results: SearchResult[]}[]> {\r\n    return this.store.view.all$().pipe(\r\n      debounce((results: SearchResult[]) => {\r\n        return results.length === 0 ? EMPTY : timer(200);\r\n      }),\r\n      map((results: SearchResult[]) => {\r\n        return this.groupResults(results.sort(this.sortByOrder));\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sort the results by display order.\r\n   * @param r1 First result\r\n   * @param r2 Second result\r\n   */\r\n  private sortByOrder(r1: SearchResult, r2: SearchResult) {\r\n    return r1.source.displayOrder - r2.source.displayOrder;\r\n  }\r\n\r\n  /**\r\n   * Group results by search source\r\n   * @param results Search results from all sources\r\n   * @returns Search results grouped by source\r\n   */\r\n  private groupResults(results: SearchResult[]): {source: SearchSource; results: SearchResult[]}[] {\r\n    const grouped = new Map<SearchSource, SearchResult[]>();\r\n    results.forEach((result: SearchResult) => {\r\n      const source = result.source;\r\n      let sourceResults = grouped.get(source);\r\n      if (sourceResults === undefined) {\r\n        sourceResults = [];\r\n        grouped.set(source, sourceResults);\r\n      }\r\n      sourceResults.push(result);\r\n    });\r\n\r\n    return Array.from(grouped.keys()).map((source: SearchSource) => {\r\n      return {source, results: grouped.get(source)};\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { getEntityTitle, getEntityTitleHtml, getEntityIcon } from '@igo2/common';\r\n\r\nimport { SearchResult } from '../shared/search.interfaces';\r\n\r\n/**\r\n * Search results list item\r\n */\r\n@Component({\r\n  selector: 'igo-search-results-item',\r\n  templateUrl: './search-results-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchResultsItemComponent {\r\n\r\n  /**\r\n   * Search result\r\n   */\r\n  @Input() result: SearchResult;\r\n\r\n  /**\r\n   * Search result title\r\n   * @internal\r\n   */\r\n  get title(): string { return getEntityTitle(this.result); }\r\n\r\n  /**\r\n   * Search result HTML title\r\n   * @internal\r\n   */\r\n  get titleHtml(): string { return getEntityTitleHtml(this.result); }\r\n\r\n  /**\r\n   * Search result icon\r\n   * @internal\r\n   */\r\n  get icon(): string { return getEntityIcon(this.result); }\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatListModule\r\n} from '@angular/material';\r\n\r\nimport {\r\n  IgoCollapsibleModule,\r\n  IgoListModule\r\n} from '@igo2/common';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { SearchResultsComponent } from './search-results.component';\r\nimport { SearchResultsItemComponent } from './search-results-item.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    IgoCollapsibleModule,\r\n    IgoListModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [\r\n    SearchResultsComponent\r\n  ],\r\n  declarations: [\r\n    SearchResultsComponent,\r\n    SearchResultsItemComponent\r\n  ]\r\n})\r\nexport class IgoSearchResultsModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { provideSearchSourceService } from './shared/search-source-service.providers';\r\nimport { provideDefaultIChercheSearchResultFormatter } from './shared/sources/icherche.providers';\r\nimport { provideDefaultCoordinatesSearchResultFormatter } from './shared/sources/coordinates.providers';\r\n\r\nimport { IgoSearchBarModule } from './search-bar/search-bar.module';\r\nimport { IgoSearchSelectorModule } from './search-selector/search-selector.module';\r\nimport { IgoSearchResultsModule } from './search-results/search-results.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoSearchBarModule,\r\n    IgoSearchSelectorModule,\r\n    IgoSearchResultsModule\r\n  ],\r\n  exports: [\r\n    IgoSearchBarModule,\r\n    IgoSearchSelectorModule,\r\n    IgoSearchResultsModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoSearchModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSearchModule,\r\n      providers: [\r\n        provideSearchSourceService(),\r\n        provideDefaultIChercheSearchResultFormatter(),\r\n        provideDefaultCoordinatesSearchResultFormatter()\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { FlexibleState, getEntityTitle } from '@igo2/common';\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\nimport { Feature } from '../feature/shared/feature.interfaces';\r\nimport { FeatureMotion } from '../feature/shared/feature.enums';\r\nimport { moveToOlFeatures } from '../feature/shared/feature.utils';\r\nimport { IgoMap } from '../map/shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-toast',\r\n  templateUrl: './toast.component.html',\r\n  styleUrls: ['./toast.component.scss']\r\n})\r\nexport class ToastComponent {\r\n  static SWIPE_ACTION = {\r\n    UP: 'swipeup',\r\n    DOWN: 'swipedown'\r\n  };\r\n  private format = new olFormatGeoJSON();\r\n\r\n  @Input()\r\n  get expanded(): boolean {\r\n    return this._expanded;\r\n  }\r\n  set expanded(value: boolean) {\r\n    this.state = value ? 'expanded' : 'collapsed';\r\n    this._expanded = value;\r\n  }\r\n  private _expanded: boolean;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n  }\r\n  private _feature: Feature;\r\n\r\n  @Output() opened = new EventEmitter<boolean>();\r\n\r\n  public state: FlexibleState;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string { return getEntityTitle(this.feature); }\r\n\r\n  constructor() {}\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n    this.opened.emit(this.expanded);\r\n  }\r\n\r\n  zoomToFeatureExtent() {\r\n    if (this.feature.geometry) {\r\n      const olFeature = this.format.readFeature(this.feature, {\r\n        dataProjection: this.feature.projection,\r\n        featureProjection: this.map.projection\r\n      });\r\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\r\n    }\r\n  }\r\n\r\n  swipe(action: string) {\r\n    if (action === ToastComponent.SWIPE_ACTION.UP) {\r\n      if (!this.expanded) {\r\n        this.toggle();\r\n      }\r\n    } else if (action === ToastComponent.SWIPE_ACTION.DOWN) {\r\n      if (this.expanded) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\nimport { IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\r\n\r\nimport { IgoFeatureModule } from '../feature/feature.module';\r\nimport { ToastComponent } from './toast.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    IgoPanelModule,\r\n    IgoFlexibleModule,\r\n    IgoFeatureModule\r\n  ],\r\n  exports: [ToastComponent],\r\n  declarations: [ToastComponent]\r\n})\r\nexport class IgoToastModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoToastModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { OnUpdateInputs, WidgetComponent } from '@igo2/common';\r\n\r\nimport { Layer } from '../../../layer/shared/layers/layer';\r\nimport { IgoMap } from '../../../map/shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filter',\r\n  templateUrl: './ogc-filter.component.html',\r\n  styleUrls: ['./ogc-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OgcFilterComponent implements OnUpdateInputs, WidgetComponent {\r\n\r\n  @Input() layer: Layer;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() showFeatureOnMap: boolean = true;\r\n\r\n  /**\r\n   * Event emitted on complete\r\n   */\r\n  @Output() complete = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted on cancel\r\n   */\r\n  @Output() cancel = new EventEmitter<void>();\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Implemented as part of OnUpdateInputs\r\n   */\r\n  onUpdateInputs() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * On close, emit the cancel event\r\n   */\r\n  onClose() {\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { Widget, WidgetService } from '@igo2/common';\r\n\r\nimport { OgcFilterComponent } from './ogc-filter/ogc-filter.component';\r\n\r\nexport const OgcFilterWidget = new InjectionToken<Widget>('OgcFilterWidget');\r\n\r\nexport function ogcFilterWidgetFactory(widgetService: WidgetService): Widget {\r\n  return widgetService.create(OgcFilterComponent);\r\n}\r\n\r\nexport function provideOgcFilterWidget() {\r\n  return {\r\n    provide: OgcFilterWidget,\r\n    useFactory: ogcFilterWidgetFactory,\r\n    deps: [WidgetService]\r\n  };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { IgoFilterModule } from '../../../filter/filter.module';\r\nimport { OgcFilterComponent } from './ogc-filter.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule,\r\n    IgoFilterModule\r\n  ],\r\n  exports: [OgcFilterComponent],\r\n  declarations: [OgcFilterComponent],\r\n  entryComponents: [OgcFilterComponent]\r\n})\r\nexport class IgoOgcFilterModule {}\r\n","import {\r\n  Workspace,\r\n  WorkspaceOptions\r\n} from '@igo2/common';\r\n\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nexport interface WfsWorkspaceOptions extends WorkspaceOptions {\r\n  layer: VectorLayer;\r\n  map: IgoMap;\r\n}\r\n\r\nexport class WfsWorkspace extends Workspace {\r\n\r\n  get layer(): VectorLayer { return this.options.layer; }\r\n\r\n  get map(): IgoMap { return this.options.map; }\r\n\r\n  constructor(protected options: WfsWorkspaceOptions) {\r\n    super(options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  ActionStore,\r\n  EntityTableTemplate\r\n} from '@igo2/common';\r\n\r\nimport {\r\n  FeatureStore,\r\n  FeatureStoreLoadingLayerStrategy,\r\n  FeatureStoreSelectionStrategy\r\n} from '../../feature';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\nimport { SourceFieldsOptionsParams } from '../../datasource';\r\n\r\nimport { WfsWorkspace } from './wfs-workspace';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WfsWorkspaceService {\r\n\r\n  constructor() {}\r\n\r\n  createWorkspace(layer: VectorLayer, map: IgoMap): WfsWorkspace {\r\n    return new WfsWorkspace({\r\n      id: layer.id,\r\n      title: layer.title,\r\n      layer,\r\n      map,\r\n      entityStore: this.createFeatureStore(layer, map),\r\n      actionStore: new ActionStore([]),\r\n      meta: {\r\n        tableTemplate: this.createTableTemplate(layer)\r\n      }\r\n    });\r\n  }\r\n\r\n  private createFeatureStore(layer: VectorLayer, map: IgoMap): FeatureStore {\r\n    const store = new FeatureStore([], {map});\r\n    store.bindLayer(layer);\r\n\r\n    const loadingStrategy = new FeatureStoreLoadingLayerStrategy({});\r\n    const selectionStrategy = new FeatureStoreSelectionStrategy({\r\n      map,\r\n      hitTolerance: 5\r\n    });\r\n    store.addStrategy(loadingStrategy, true);\r\n    store.addStrategy(selectionStrategy, true);\r\n\r\n    return store;\r\n  }\r\n\r\n  private createTableTemplate(layer: VectorLayer): EntityTableTemplate {\r\n    const fields = layer.dataSource.options.sourceFields || [];\r\n    const columns = fields.map((field: SourceFieldsOptionsParams) => {\r\n      return {\r\n        name: `properties.${field.name}`,\r\n        title: field.alias ? field.alias : field.name\r\n      };\r\n    });\r\n\r\n    return {\r\n      selection: true,\r\n      sort: true,\r\n      columns\r\n    };\r\n  }\r\n\r\n}\r\n","import {\r\n  Workspace,\r\n  WorkspaceOptions\r\n} from '@igo2/common';\r\n\r\nimport { ImageLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nexport interface WmsWorkspaceOptions extends WorkspaceOptions {\r\n  layer: ImageLayer;\r\n  map: IgoMap;\r\n}\r\n\r\nexport class WmsWorkspace extends Workspace {\r\n\r\n  get layer(): ImageLayer { return this.options.layer; }\r\n\r\n  get map(): IgoMap { return this.options.map; }\r\n\r\n  constructor(protected options: WmsWorkspaceOptions) {\r\n    super(options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ActionStore } from '@igo2/common';\r\n\r\nimport {\r\n  FeatureStore,\r\n  FeatureStoreLoadingLayerStrategy,\r\n  FeatureStoreSelectionStrategy\r\n} from '../../feature';\r\nimport { ImageLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { WmsWorkspace } from './wms-workspace';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WmsWorkspaceService {\r\n\r\n  constructor() {}\r\n\r\n  createWorkspace(layer: ImageLayer, map: IgoMap): WmsWorkspace {\r\n    return new WmsWorkspace({\r\n      id: layer.id,\r\n      title: layer.title,\r\n      layer,\r\n      map,\r\n      actionStore: new ActionStore([])\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { Workspace, WorkspaceStore, WorkspaceSelectorComponent } from '@igo2/common';\r\n\r\nimport { Layer, ImageLayer, VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\nimport { WFSDataSource, WMSDataSource } from '../../datasource';\r\nimport { OgcFilterableDataSourceOptions } from '../../filter';\r\n\r\nimport { WfsWorkspaceService } from '../shared/wfs-workspace.service';\r\nimport { WmsWorkspaceService } from '../shared/wms-workspace.service';\r\n\r\n@Directive({\r\n  selector: '[igoWorkspaceSelector]'\r\n})\r\nexport class WorkspaceSelectorDirective implements OnInit, OnDestroy {\r\n\r\n  private layers$$: Subscription;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  get workspaceStore(): WorkspaceStore {\r\n    return this.component.store;\r\n  }\r\n\r\n  constructor(\r\n    private component: WorkspaceSelectorComponent,\r\n    private wfsWorkspaceService: WfsWorkspaceService,\r\n    private wmsWorkspaceService: WmsWorkspaceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.layers$$ = this.map.layers$\r\n      .pipe(debounceTime(50))\r\n      .subscribe((layers: Layer[]) =>\r\n        this.onLayersChange(layers)\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n\r\n  private onLayersChange(layers: Layer[]) {\r\n    const editableLayers = layers.filter((layer: Layer) =>\r\n      this.layerIsEditable(layer)\r\n    );\r\n    const editableLayersIds = editableLayers.map((layer: Layer) => layer.id);\r\n\r\n    const workspacesToAdd = editableLayers\r\n      .map((layer: VectorLayer) => this.getOrCreateWorkspace(layer))\r\n      .filter((workspace: Workspace | undefined) => workspace !== undefined);\r\n\r\n    const workspacesToRemove = this.workspaceStore.all()\r\n      .filter((workspace: Workspace) => {\r\n        return editableLayersIds.indexOf(workspace.id) < 0;\r\n      });\r\n\r\n    if (workspacesToRemove.length > 0) {\r\n      workspacesToRemove.forEach((workspace: Workspace) => {\r\n        workspace.deactivate();\r\n      });\r\n      this.workspaceStore.state.updateMany(workspacesToRemove, {active: false, selected: false});\r\n      this.workspaceStore.deleteMany(workspacesToRemove);\r\n    }\r\n\r\n    if (workspacesToAdd.length > 0) {\r\n      this.workspaceStore.insertMany(workspacesToAdd);\r\n    }\r\n  }\r\n\r\n  private getOrCreateWorkspace(layer: VectorLayer | ImageLayer): Workspace | undefined {\r\n    const workspace = this.workspaceStore.get(layer.id);\r\n    if (workspace !== undefined) {\r\n      return;\r\n    }\r\n    if (layer.dataSource instanceof WFSDataSource) {\r\n      return this.wfsWorkspaceService.createWorkspace(layer as VectorLayer, this.map);\r\n    } else if (layer.dataSource instanceof WMSDataSource) {\r\n      return this.wmsWorkspaceService.createWorkspace(layer as ImageLayer, this.map);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  private layerIsEditable(layer: Layer): boolean {\r\n    const dataSource = layer.dataSource;\r\n    if (dataSource instanceof WFSDataSource) {\r\n      return true;\r\n    }\r\n\r\n    if (dataSource instanceof WMSDataSource) {\r\n      const dataSourceOptions = (dataSource.options ||\r\n        {}) as OgcFilterableDataSourceOptions;\r\n      return (\r\n        dataSourceOptions.ogcFilters && dataSourceOptions.ogcFilters.enabled\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { WorkspaceSelectorDirective } from './workspace-selector.directive';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n   WorkspaceSelectorDirective\r\n  ],\r\n  declarations: [\r\n    WorkspaceSelectorDirective\r\n  ]\r\n})\r\nexport class IgoWorkspaceSelectorModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IgoWidgetModule } from '@igo2/common';\r\n\r\nimport { provideOgcFilterWidget } from './widgets/widgets';\r\n\r\nimport { IgoOgcFilterModule } from './widgets/ogc-filter/ogc-filter.module';\r\nimport { IgoWorkspaceSelectorModule } from './workspace-selector/workspace-selector.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoWidgetModule,\r\n    IgoWorkspaceSelectorModule,\r\n    IgoOgcFilterModule\r\n  ],\r\n  exports: [\r\n    IgoWorkspaceSelectorModule,\r\n    IgoOgcFilterModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    provideOgcFilterWidget()\r\n  ]\r\n})\r\nexport class IgoGeoWorkspaceModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [],\r\n  declarations: []\r\n})\r\nexport class IgoWktModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoWktModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { IgoCatalogModule } from './catalog/catalog.module';\r\nimport { IgoDataSourceModule } from './datasource/datasource.module';\r\nimport { IgoDownloadModule } from './download/download.module';\r\nimport { IgoFeatureModule } from './feature/feature.module';\r\nimport { IgoFilterModule } from './filter/filter.module';\r\nimport { IgoGeometryModule } from './geometry/geometry.module';\r\nimport { IgoImportExportModule } from './import-export/import-export.module';\r\nimport { IgoLayerModule } from './layer/layer.module';\r\nimport { IgoMapModule } from './map/map.module';\r\nimport { IgoMeasureModule } from './measure/measure.module';\r\nimport { IgoMetadataModule } from './metadata/metadata.module';\r\nimport { IgoOverlayModule } from './overlay/overlay.module';\r\nimport { IgoPrintModule } from './print/print.module';\r\nimport { IgoQueryModule } from './query/query.module';\r\nimport { IgoRoutingModule } from './routing/routing.module';\r\nimport { IgoSearchModule } from './search/search.module';\r\nimport { IgoToastModule } from './toast/toast.module';\r\nimport { IgoGeoWorkspaceModule } from './workspace/workspace.module';\r\nimport { IgoWktModule } from './wkt/wkt.module';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [\r\n    IgoCatalogModule,\r\n    IgoDataSourceModule,\r\n    IgoDownloadModule,\r\n    IgoFeatureModule,\r\n    IgoFilterModule,\r\n    IgoGeometryModule,\r\n    IgoImportExportModule,\r\n    IgoLayerModule,\r\n    IgoMapModule,\r\n    IgoMeasureModule,\r\n    IgoMetadataModule,\r\n    IgoOverlayModule,\r\n    IgoPrintModule,\r\n    IgoQueryModule,\r\n    IgoRoutingModule,\r\n    IgoSearchModule,\r\n    IgoToastModule,\r\n    IgoGeoWorkspaceModule,\r\n    IgoWktModule\r\n  ]\r\n})\r\nexport class IgoGeoModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoGeoModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\n\r\nimport { LAYER, AnyLayerOptions, LayerOptions } from '../../../layer';\r\nimport { QueryableDataSourceOptions, QueryFormat } from '../../../query';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch } from './source';\r\nimport { TextSearchOptions } from './source.interfaces';\r\nimport { ILayerSearchSourceOptions, ILayerData, ILayerResponse } from './ilayer.interfaces';\r\n\r\n/**\r\n * ILayer search source\r\n */\r\n@Injectable()\r\nexport class ILayerSearchSource extends SearchSource implements TextSearch {\r\n\r\n  static id = 'ilayer';\r\n  static type = LAYER;\r\n\r\n  get title(): string {\r\n    return this.languageService.translate.instant(this.options.title);\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private languageService: LanguageService,\r\n    @Inject('options') options: ILayerSearchSourceOptions\r\n  ) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return ILayerSearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): ILayerSearchSourceOptions {\r\n    return {\r\n      title: 'igo.geo.search.dataSources.name',\r\n      searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/layers/search'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a layer by name or keyword\r\n   * @param term Layer name or keyword\r\n   * @returns Observable of <SearchResult<LayerOptions>[]\r\n   */\r\n  search(\r\n    term: string | undefined,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<LayerOptions>[]> {\r\n    const params = this.computeSearchRequestParams(term, options || {});\r\n    return this.http\r\n      .get(this.searchUrl, { params })\r\n      .pipe(\r\n        map((response: ILayerResponse) => this.extractResults(response))\r\n      );\r\n  }\r\n\r\n  private computeSearchRequestParams(term: string, options: TextSearchOptions): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: Object.assign({\r\n        q: term\r\n      }, this.params, options.params || {})\r\n    });\r\n  }\r\n\r\n  private extractResults(response: ILayerResponse): SearchResult<LayerOptions>[] {\r\n    return response.items.map((data: ILayerData) => this.dataToResult(data));\r\n  }\r\n\r\n  private dataToResult(data: ILayerData): SearchResult<LayerOptions> {\r\n    const layerOptions = this.computeLayerOptions(data);\r\n\r\n    return {\r\n      source: this,\r\n      meta: {\r\n        dataType: LAYER,\r\n        id: [this.getId(), data.id].join('.'),\r\n        title: data.source.title,\r\n        titleHtml: data.highlight.title,\r\n        icon: data.source.type === 'Layer' ? 'layers' : 'map'\r\n      },\r\n      data: layerOptions\r\n    };\r\n  }\r\n\r\n  private computeLayerOptions(data: ILayerData): AnyLayerOptions {\r\n    const url = data.source.url;\r\n    const queryParams: any = this.extractQueryParamsFromSourceUrl(url);\r\n    return {\r\n      title: data.source.title,\r\n      sourceOptions: {\r\n        crossOrigin: 'anonymous',\r\n        type: data.source.format,\r\n        url,\r\n        queryable: (data.source as QueryableDataSourceOptions).queryable,\r\n        queryFormat: queryParams.format,\r\n        queryHtmlTarget: queryParams.htmlTarget,\r\n        params: {\r\n          layers: data.source.name\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private extractQueryParamsFromSourceUrl(url: string): {format: QueryFormat; htmlTarget: string; } {\r\n    let queryFormat = QueryFormat.GML2;\r\n    let htmlTarget;\r\n    const formatOpt = (this.options as ILayerSearchSourceOptions).queryFormat;\r\n    if (formatOpt) {\r\n      for (const key of Object.keys(formatOpt)) {\r\n        const value = formatOpt[key];\r\n        if (value === '*') {\r\n          queryFormat = QueryFormat[key.toUpperCase()];\r\n          break;\r\n        }\r\n\r\n        const urls = (value as any as {urls: string[]}).urls;\r\n        if (Array.isArray(urls)) {\r\n          urls.forEach((urlOpt) => {\r\n            if (url.indexOf(urlOpt) !== -1) {\r\n              queryFormat = QueryFormat[key.toUpperCase()];\r\n            }\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (queryFormat === QueryFormat.HTML) {\r\n      htmlTarget = 'iframe';\r\n    }\r\n\r\n    return {\r\n      format: queryFormat,\r\n      htmlTarget\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport { ILayerSearchSource } from './ilayer';\r\n\r\n/**\r\n * ILayer search source factory\r\n * @ignore\r\n */\r\nexport function ilayerSearchSourceFactory(\r\n  http: HttpClient,\r\n  languageService: LanguageService,\r\n  config: ConfigService\r\n) {\r\n  return new ILayerSearchSource(\r\n    http,\r\n    languageService,\r\n    config.getConfig(`searchSources.${ILayerSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ILayer search source\r\n */\r\nexport function provideILayerSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: ilayerSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, LanguageService, ConfigService]\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FEATURE, Feature, FeatureGeometry } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch } from './source';\r\nimport { SearchSourceOptions, TextSearchOptions } from './source.interfaces';\r\nimport { NominatimData } from './nominatim.interfaces';\r\n\r\n/**\r\n * Nominatim search source\r\n */\r\n@Injectable()\r\nexport class NominatimSearchSource extends SearchSource implements TextSearch {\r\n  static id = 'nominatim';\r\n  static type = FEATURE;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return NominatimSearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Nominatim (OSM)',\r\n      searchUrl: 'https://nominatim.openstreetmap.org/search'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a place by name\r\n   * @param term Place name\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  search(\r\n    term: string | undefined,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeSearchRequestParams(term, options || {});\r\n    return this.http\r\n      .get(this.searchUrl, { params })\r\n      .pipe(map((response: NominatimData[]) => this.extractResults(response)));\r\n  }\r\n\r\n  private computeSearchRequestParams(\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          q: term,\r\n          format: 'json'\r\n        },\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(response: NominatimData[]): SearchResult<Feature>[] {\r\n    return response.map((data: NominatimData) => this.dataToResult(data));\r\n  }\r\n\r\n  private dataToResult(data: NominatimData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const geometry = this.computeGeometry(data);\r\n    const extent = this.computeExtent(data);\r\n    const id = [this.getId(), 'place', data.place_id].join('.');\r\n\r\n    return {\r\n      source: this,\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.display_name,\r\n        icon: 'map-marker'\r\n      },\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry,\r\n        extent,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.display_name\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: NominatimData): { [key: string]: any } {\r\n    return {\r\n      display_name: data.display_name,\r\n      place_id: data.place_id,\r\n      osm_type: data.osm_type,\r\n      class: data.class,\r\n      type: data.type\r\n    };\r\n  }\r\n\r\n  private computeGeometry(data: NominatimData): FeatureGeometry {\r\n    return {\r\n      type: 'Point',\r\n      coordinates: [parseFloat(data.lon), parseFloat(data.lat)]\r\n    };\r\n  }\r\n\r\n  private computeExtent(data: NominatimData): [number, number, number, number] {\r\n    return [\r\n      parseFloat(data.boundingbox[2]),\r\n      parseFloat(data.boundingbox[0]),\r\n      parseFloat(data.boundingbox[3]),\r\n      parseFloat(data.boundingbox[1])\r\n    ];\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport { NominatimSearchSource } from './nominatim';\r\n\r\n/**\r\n * Nominatim search source factory\r\n * @ignore\r\n */\r\nexport function nominatimSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new NominatimSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${NominatimSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the Nominatim search source\r\n */\r\nexport function provideNominatimSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: nominatimSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { FEATURE, Feature } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch, ReverseSearch } from './source';\r\nimport {\r\n  SearchSourceOptions,\r\n  TextSearchOptions,\r\n  ReverseSearchOptions\r\n} from './source.interfaces';\r\nimport {\r\n  StoredQueriesData,\r\n  StoredQueriesResponse,\r\n  StoredQueriesReverseData,\r\n  StoredQueriesReverseResponse,\r\n  StoredQueriesSearchSourceOptions,\r\n  StoredQueriesFields,\r\n  StoredQueriesReverseSearchSourceOptions\r\n} from './storedqueries.interfaces';\r\n\r\nimport * as olformat from 'ol/format';\r\n\r\n/**\r\n * StoredQueries search source\r\n */\r\n@Injectable()\r\nexport class StoredQueriesSearchSource extends SearchSource implements TextSearch {\r\n  static id = 'storedqueries';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = [];\r\n  public resultTitle: 'title';\r\n  public storedQueriesOptions: StoredQueriesSearchSourceOptions;\r\n  public multipleFieldsQuery: boolean;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n    this.storedQueriesOptions = options as StoredQueriesSearchSourceOptions ;\r\n    if (!this.storedQueriesOptions.storedquery_id) {\r\n      const err = 'Stored Queries :You have to set \"storedquery_id\" into StoredQueries options. ex: storedquery_id: \"nameofstoredquerie\"';\r\n      throw new Error(err);\r\n    }\r\n    if (!this.storedQueriesOptions.fields) {\r\n      throw new Error('Stored Queries :You have to set \"fields\" into options. ex: fields: {\"name\": \"rtss\", \"defaultValue\": \"-99\"}');\r\n    }\r\n\r\n    this.storedQueriesOptions.outputformat = this.storedQueriesOptions.outputformat || 'text/xml; subtype=gml/3.1.1';\r\n    this.storedQueriesOptions.srsname = this.storedQueriesOptions.srsname || 'EPSG:4326';\r\n\r\n    const storedQueryId = this.storedQueriesOptions.storedquery_id.toLowerCase();\r\n    if (storedQueryId.includes('getfeaturebyid') && this.storedQueriesOptions.outputformat.toLowerCase().includes('getfeaturebyid') ) {\r\n      let err = 'You must set a geojson format for your stored query. This is due to an openlayers issue)';\r\n      err += ' (wfs 1.1.0 & gml 3.1.1 limitation)';\r\n      throw new Error(err);\r\n    }\r\n\r\n    if (!this.storedQueriesOptions.fields) {\r\n      throw new Error('Stored Queries :You must set a fields definition for your stored query');\r\n    }\r\n\r\n    if (!(this.storedQueriesOptions.fields instanceof Array)) {\r\n      this.storedQueriesOptions.fields = [this.storedQueriesOptions.fields];\r\n    }\r\n\r\n    this.multipleFieldsQuery  = this.storedQueriesOptions.fields.length > 1 ? true : false;\r\n\r\n    this.storedQueriesOptions.fields.forEach((field, index) => {\r\n      if (this.multipleFieldsQuery && !field.splitPrefix && index !== 0) {\r\n        throw new Error('Stored Queries :You must set a field spliter into your field definition (optional for the first one!)');\r\n      }\r\n      if (!field.defaultValue) {\r\n        throw new Error('Stored Queries :You must set a field default value into your field definition');\r\n      }\r\n    });\r\n\r\n    this.storedQueriesOptions.resultTitle = this.storedQueriesOptions.resultTitle || this.resultTitle;\r\n  }\r\n\r\n  getId(): string {\r\n    return StoredQueriesSearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Stored Queries',\r\n      searchUrl: 'https://ws.mapserver.transports.gouv.qc.ca/swtq'\r\n    };\r\n  }\r\n\r\n  // URL CALL EXAMPLES:\r\n  //  GetFeatureById (mandatory storedquery for wfs server) (outputformat must be in geojson)\r\n  //  tslint:disable-next-line:max-line-length\r\n  //  https://ws.mapserver.transports.gouv.qc.ca/swtq?service=wfs&version=2.0.0&request=GetFeature&storedquery_id=urn:ogc:def:query:OGC-WFS::GetFeatureById&srsname=epsg:4326&outputformat=geojson&ID=a_num_route.132\r\n  //  Custom StoredQuery\r\n  //  tslint:disable-next-line:max-line-length\r\n  //  https://ws.mapserver.transports.gouv.qc.ca/swtq?service=wfs&version=1.1.0&request=GetFeature&storedquery_id=rtss&srsname=epsg:4326&outputformat=text/xml;%20subtype=gml/3.1.1&rtss=0013801110000c&chainage=12\r\n\r\n  /**\r\n   * Search a location by name or keyword\r\n   * @param term Location name or keyword\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  search(\r\n    term: string,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const storedqueriesParams = this.termSplitter(term, this.storedQueriesOptions.fields );\r\n    const params = this.computeRequestParams(options || {}, storedqueriesParams);\r\n\r\n    if (new RegExp('.*?gml.*?', 'i').test(this.storedQueriesOptions.outputformat)) {\r\n      return this.http\r\n      .get(this.searchUrl, { params, responseType: 'text' })\r\n      .pipe(map((response) => {\r\n        return this.extractResults(this.extractWFSData(response));\r\n      }));\r\n    } else {\r\n      return this.http\r\n      .get(this.searchUrl, { params })\r\n      .pipe(map((response) => {\r\n        return this.extractResults(this.extractWFSData(response));\r\n      }));\r\n    }\r\n  }\r\n\r\n  private getFormatFromOptions() {\r\n    let olFormatCls;\r\n\r\n    const outputFormat = this.storedQueriesOptions.outputformat;\r\n    const patternGml3 = new RegExp('.*?gml.*?', 'i');\r\n    const patternGeojson = new RegExp('.*?json.*?', 'i');\r\n\r\n    if (patternGeojson.test(outputFormat)) {\r\n      olFormatCls = olformat.GeoJSON;\r\n    }\r\n    if (patternGml3.test(outputFormat)) {\r\n      olFormatCls = olformat.WFS;\r\n    }\r\n\r\n    return new olFormatCls();\r\n  }\r\n\r\n  private extractWFSData(res) {\r\n    const olFormat = this.getFormatFromOptions();\r\n    const geojson = olformat.GeoJSON;\r\n    const wfsfeatures = olFormat.readFeatures(res);\r\n    const features = JSON.parse(new geojson().writeFeatures(wfsfeatures));\r\n    return features;\r\n  }\r\n\r\n  private termSplitter(term: string, fields: StoredQueriesFields[]): {} {\r\n    const splittedTerm = {};\r\n    let remainingTerm = term;\r\n    let cnt = 0;\r\n\r\n    // Used to build the default values\r\n    fields.forEach(field => {\r\n      splittedTerm[field.name] = field.defaultValue;\r\n      const splitterRegex = new RegExp(field.splitPrefix + '(.+)', 'i');\r\n      if (splitterRegex.test(remainingTerm)) {\r\n        cnt = field.splitPrefix ? cnt += 1 : cnt;\r\n        remainingTerm = remainingTerm.split(splitterRegex)[1];\r\n      }\r\n\r\n    });\r\n    if (cnt === 0) {\r\n      splittedTerm[fields[0].name] = term;\r\n      return splittedTerm;\r\n    }\r\n    remainingTerm = term;\r\n    const localFields = [...fields].reverse();\r\n    localFields.forEach((field) => {\r\n      const splitterRegex = new RegExp(field.splitPrefix || '' + '(.+)', 'i');\r\n      if (remainingTerm || remainingTerm !== '') {\r\n        const values = remainingTerm.split(splitterRegex);\r\n        remainingTerm = values[0];\r\n        if (values[1]) {\r\n          splittedTerm[field.name] = values[1].trim();\r\n        }\r\n      }\r\n    });\r\n    return splittedTerm;\r\n  }\r\n\r\n  private computeRequestParams(options: TextSearchOptions, queryParams): HttpParams {\r\n    const wfsversion = this.storedQueriesOptions.storedquery_id.toLowerCase().includes('getfeaturebyid') ? '2.0.0' : '1.1.0';\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          service: 'wfs',\r\n          version: wfsversion,\r\n          request: 'GetFeature',\r\n          storedquery_id: this.storedQueriesOptions.storedquery_id,\r\n          srsname: this.storedQueriesOptions.srsname,\r\n          outputformat: this.storedQueriesOptions.outputformat\r\n        },\r\n        queryParams,\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(response: StoredQueriesResponse): SearchResult<Feature>[] {\r\n    return response.features.map((data: StoredQueriesData) => {\r\n      return this.dataToResult(data);\r\n    });\r\n  }\r\n\r\n  private dataToResult(data: StoredQueriesData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const id = [this.getId(), properties.type, data.id].join('.');\r\n    const title = data.properties[this.storedQueriesOptions.resultTitle] ? this.storedQueriesOptions.resultTitle : this.resultTitle;\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        // extent: data.bbox,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties[title]\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties.title,\r\n        titleHtml: data.properties[title],\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: StoredQueriesData): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      StoredQueriesSearchSource.propertiesBlacklist\r\n    );\r\n    return properties;\r\n  }\r\n}\r\n\r\n/**\r\n * StoredQueriesReverse search source\r\n */\r\n\r\n // EXAMPLE CALLS\r\n // tslint:disable-next-line:max-line-length\r\n // https://ws.mapserver.transports.gouv.qc.ca/swtq?service=wfs&version=1.1.0&request=GetFeature&storedquery_id=lim_adm&srsname=epsg:4326&outputformat=text/xml;%20subtype=gml/3.1.1&long=-71.292469&lat=46.748107\r\n //\r\n\r\n@Injectable()\r\nexport class StoredQueriesReverseSearchSource extends SearchSource\r\n  implements ReverseSearch {\r\n  static id = 'storedqueriesreverse';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = [];\r\n  public resultTitle: 'title';\r\n  public storedQueriesOptions: StoredQueriesReverseSearchSourceOptions;\r\n  public multipleFieldsQuery: boolean;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n    this.storedQueriesOptions = options as StoredQueriesReverseSearchSourceOptions ;\r\n    if (!this.storedQueriesOptions.storedquery_id) {\r\n      const err = 'Stored Queries :You have to set \"storedquery_id\" into StoredQueries options. ex: storedquery_id: \"nameofstoredquerie\"';\r\n      throw new Error(err);\r\n    }\r\n    if (!this.storedQueriesOptions.longField) {\r\n      throw new Error('Stored Queries :You have to set \"longField\" to map the longitude coordinate to the query params.');\r\n    }\r\n    if (!this.storedQueriesOptions.latField) {\r\n      throw new Error('Stored Queries :You have to set \"latField\" to map the latitude coordinate to the query params.');\r\n    }\r\n\r\n    this.storedQueriesOptions.outputformat = this.storedQueriesOptions.outputformat || 'text/xml; subtype=gml/3.1.1';\r\n    this.storedQueriesOptions.srsname = this.storedQueriesOptions.srsname || 'EPSG:4326';\r\n    this.storedQueriesOptions.resultTitle = this.storedQueriesOptions.resultTitle || this.resultTitle;\r\n  }\r\n\r\n  getId(): string {\r\n    return StoredQueriesReverseSearchSource.id;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Stored Queries (reverse)',\r\n      searchUrl: 'https://ws.mapserver.transports.gouv.qc.ca/swtq'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by coordinates\r\n   * @param lonLat Location coordinates\r\n   * @param distance Search raidus around lonLat\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeRequestParams(lonLat, options || {});\r\n\r\n    if (new RegExp('.*?gml.*?', 'i').test(this.storedQueriesOptions.outputformat)) {\r\n      return this.http\r\n      .get(this.searchUrl, { params, responseType: 'text' })\r\n      .pipe(map((response) => {\r\n        return this.extractResults(this.extractWFSData(response));\r\n      }));\r\n    } else {\r\n      return this.http\r\n      .get(this.searchUrl, { params })\r\n      .pipe(map((response) => {\r\n        return this.extractResults(this.extractWFSData(response));\r\n      }));\r\n    }\r\n\r\n  }\r\n\r\n  private getFormatFromOptions() {\r\n    let olFormatCls;\r\n\r\n    const outputFormat = this.storedQueriesOptions.outputformat;\r\n    const patternGml3 = new RegExp('.*?gml.*?', 'i');\r\n    const patternGeojson = new RegExp('.*?json.*?', 'i');\r\n\r\n    if (patternGeojson.test(outputFormat)) {\r\n      olFormatCls = olformat.GeoJSON;\r\n    }\r\n    if (patternGml3.test(outputFormat)) {\r\n      olFormatCls = olformat.WFS;\r\n    }\r\n\r\n    return new olFormatCls();\r\n  }\r\n\r\n  private extractWFSData(res) {\r\n    const olFormat = this.getFormatFromOptions();\r\n    const geojson = olformat.GeoJSON;\r\n    const wfsfeatures = olFormat.readFeatures(res);\r\n    const features = JSON.parse(new geojson().writeFeatures(wfsfeatures));\r\n    return features;\r\n  }\r\n\r\n  private computeRequestParams(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): HttpParams {\r\n    const longLatParams =  {};\r\n    longLatParams[this.storedQueriesOptions.longField] = lonLat[0];\r\n    longLatParams[this.storedQueriesOptions.latField] = lonLat[1];\r\n\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          service: 'wfs',\r\n          version: '1.1.0',\r\n          request: 'GetFeature',\r\n          storedquery_id: this.storedQueriesOptions.storedquery_id,\r\n          srsname: this.storedQueriesOptions.srsname,\r\n          outputformat: this.storedQueriesOptions.outputformat,\r\n        },\r\n        longLatParams,\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(\r\n    response: StoredQueriesReverseResponse\r\n  ): SearchResult<Feature>[] {\r\n    return response.features.map((data: StoredQueriesReverseData) => {\r\n      return this.dataToResult(data);\r\n    });\r\n  }\r\n\r\n  private dataToResult(data: StoredQueriesReverseData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const id = [this.getId(), properties.type, data.id].join('.');\r\n    const title = data.properties[this.storedQueriesOptions.resultTitle] ? this.storedQueriesOptions.resultTitle : this.resultTitle;\r\n\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties[title]\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties[title],\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: StoredQueriesReverseData): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      StoredQueriesReverseSearchSource.propertiesBlacklist\r\n    );\r\n    return Object.assign(properties, { type: data.properties.doc_type });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport {\r\n  StoredQueriesSearchSource,\r\n  StoredQueriesReverseSearchSource\r\n} from './storedqueries';\r\n\r\n/**\r\n * StoredQueries search source factory\r\n * @ignore\r\n */\r\nexport function storedqueriesSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new StoredQueriesSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${StoredQueriesSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the StoredQueries search source\r\n */\r\nexport function provideStoredQueriesSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: storedqueriesSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n\r\n/**\r\n * StoredQueriesReverse search source factory\r\n * @ignore\r\n */\r\n\r\nexport function storedqueriesReverseSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new StoredQueriesReverseSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${StoredQueriesReverseSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the StoredQueriesReverse search source\r\n */\r\nexport function provideStoredQueriesReverseSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: storedqueriesReverseSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n","export enum RoutingFormat {\r\n  GeoJSON,\r\n  JSON\r\n}\r\nexport enum SourceRoutingType {\r\n  Route = 'Route',\r\n  Trip = 'Trip'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { uuid } from '@igo2/utils';\r\nimport { ConfigService, Message } from '@igo2/core';\r\n\r\nimport { Routing } from '../shared/routing.interface';\r\nimport { RoutingFormat, SourceRoutingType } from '../shared/routing.enum';\r\n\r\nimport { RoutingSource } from './routing-source';\r\nimport { RoutingSourceOptions } from './routing-source.interface';\r\n\r\n@Injectable()\r\nexport class OsrmRoutingSource extends RoutingSource {\r\n  get enabled(): boolean {\r\n    return this.options.enabled !== false;\r\n  }\r\n  set enabled(value: boolean) {\r\n    this.options.enabled = value;\r\n  }\r\n  static _name = 'OSRM QuÃ©bec';\r\n  private routingUrl =\r\n    'https://geoegl.msp.gouv.qc.ca/services/itineraire/route/v1/driving/';\r\n  private options: RoutingSourceOptions;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    super();\r\n    this.options = this.config.getConfig('routingSources.osrm') || {};\r\n    this.routingUrl = this.options.url || this.routingUrl;\r\n  }\r\n\r\n  getName(): string {\r\n    return OsrmRoutingSource._name;\r\n  }\r\n\r\n  route(coordinates: [number, number][]): Observable<Routing[]> {\r\n    const routingParams = this.getRouteParams();\r\n    return this.http\r\n      .get<JSON[]>(this.routingUrl + coordinates.join(';'), {\r\n        params: routingParams\r\n      })\r\n      .pipe(map(res => this.extractRoutesData(res)));\r\n  }\r\n\r\n  private extractRoutesData(response): Routing[] {\r\n    const routeResponse = [];\r\n    response.routes.forEach(route => {\r\n      routeResponse.push(this.formatRoute(route, response.waypoints));\r\n    });\r\n    return routeResponse;\r\n  }\r\n\r\n  private getRouteParams(): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: {\r\n        overview: 'full',\r\n        steps: 'true',\r\n        geometries: 'geojson',\r\n        alternatives: 'true'\r\n      }\r\n    });\r\n  }\r\n\r\n  private formatRoute(roadNetworkRoute: any, waypoints: any): Routing {\r\n    const stepsUI = [];\r\n    roadNetworkRoute.legs.forEach(leg => {\r\n      leg.steps.forEach(step => {\r\n        stepsUI.push(step);\r\n      });\r\n    });\r\n    return {\r\n      id: uuid(),\r\n      title: roadNetworkRoute.legs[0].summary,\r\n      source: OsrmRoutingSource._name,\r\n      sourceType: SourceRoutingType.Route,\r\n      order: 1,\r\n      format: RoutingFormat.GeoJSON,\r\n      icon: 'directions',\r\n      projection: 'EPSG:4326',\r\n      waypoints,\r\n      distance: roadNetworkRoute.distance,\r\n      duration: roadNetworkRoute.duration,\r\n      geometry: roadNetworkRoute.geometry,\r\n      legs: roadNetworkRoute.legs,\r\n      steps: stepsUI,\r\n      weight: roadNetworkRoute.weight,\r\n      weight_name: roadNetworkRoute.weight_name\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { RoutingSource } from './routing-source';\r\nimport { OsrmRoutingSource } from './osrm-routing-source';\r\n\r\nexport function osrmRoutingSourcesFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new OsrmRoutingSource(http, config);\r\n}\r\n\r\nexport function provideOsrmRoutingSource() {\r\n  return {\r\n    provide: RoutingSource,\r\n    useFactory: osrmRoutingSourcesFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n"],"names":["olSourceVector","olformat.GeoJSON","olfilter.bbox","olfilter.and","olFormatWKT","olfilter.between","olfilter.contains","olfilter.during","olfilter.equalTo","olfilter.greaterThan","olfilter.greaterThanOrEqualTo","olfilter.intersects","olfilter.isNull","olfilter.lessThan","olfilter.lessThanOrEqualTo","olfilter.like","olfilter.notEqualTo","olfilter.within","olfilter.or","olfilter.not","OlLoadingStrategy.bbox","OlFormat.GeoJSON","OlFormat.WFS","olformat.WFS","olproj.get","extentGetWidth","extentGetTopLeft","olloadingstrategy.bbox","feature","map","olLayerVector","animate","ColorAsArray","style","olstyle.RegularShape","olstyle.Style","olstyle.Icon","olstyle.Circle","olstyle.Stroke","olstyle.Fill","olstyle.Text","olFeature","OlFormatGeoJSON","olextent.createEmpty","olproj.transformExtent","olextent.extend","olextent.getSize","olextent.containsExtent","olextent.getArea","olproj.METERS_PER_UNIT","olMap","olproj.transform","oleasing.easeOut","olView","state","olproj4.register","olControlAttribution","olinteraction.defaults","olproj.fromLonLat","tslib_1.__decorate","olformat.WMSGetFeatureInfo","bbox","olformat.WKT","olextent.boundingExtent","olextent.buffer","moment.duration","olGetLength","olGetArea","olGetCenter","OlFeature","olStyle.Stroke","olStyle.Fill","olStyle.Style","olStyle.Circle","GeoJSON","olformat.KML","olformat.GML","olformat.GPX","olFormatGeoJSON","olinteraction.Select","olcondition.pointerMove","olinteraction.Translate","duration","olgeom.LineString","olgeom.Point","olobservable.unByKey","olextent.intersects"],"mappings":"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"}
