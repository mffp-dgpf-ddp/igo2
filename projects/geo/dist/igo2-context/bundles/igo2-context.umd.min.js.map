{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@igo2/context/lib/context-import-export/shared/context-export.errors.ts","ng://@igo2/context/lib/context-import-export/shared/context-export.utils.ts","ng://@igo2/context/lib/context-import-export/shared/context-import.utils.ts","ng://@igo2/context/lib/context-manager/shared/context.enum.ts","ng://@igo2/context/lib/context-manager/shared/context.service.ts","ng://@igo2/context/lib/context-import-export/shared/context-import.errors.ts","ng://@igo2/context/lib/context-import-export/shared/context-import.service.ts","ng://@igo2/context/lib/context-import-export/shared/context-export.service.ts","ng://@igo2/context/lib/context-import-export/context-import-export/context-import-export.component.ts","ng://@igo2/context/lib/context-import-export/context-import-export.module.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-dialog.component.ts","ng://@igo2/context/lib/context-manager/shared/map-context.directive.ts","ng://@igo2/context/lib/context-manager/shared/layer-context.directive.ts","ng://@igo2/context/lib/context-manager/context-list/context-list.enum.ts","ng://@igo2/context/lib/context-manager/context-list/context-list.component.ts","ng://@igo2/context/lib/context-manager/context-list/context-list-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-item/context-item.component.ts","ng://@igo2/context/lib/context-manager/context-form/context-form.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit.component.ts","ng://@igo2/context/lib/context-manager/context-edit/context-edit-binding.directive.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions.component.ts","ng://@igo2/context/lib/context-manager/context-permissions/context-permissions-binding.directive.ts","ng://@igo2/context/lib/context-map-button/bookmark-button/bookmark-button.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/shared/poi.service.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-dialog.component.ts","ng://@igo2/context/lib/context-map-button/poi-button/poi-button.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-dialog.component.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.animation.ts","ng://@igo2/context/lib/context-map-button/user-button/user-button.component.ts","ng://@igo2/context/lib/context-map-button/context-map-button.module.ts","ng://@igo2/context/lib/context-manager/context-manager.module.ts","ng://@igo2/context/lib/share-map/shared/share-map.service.ts","ng://@igo2/context/lib/share-map/share-map/share-map.component.ts","ng://@igo2/context/lib/share-map/share-map.module.ts","ng://@igo2/context/lib/sidenav/sidenav.component.ts","ng://@igo2/context/lib/sidenav/sidenav.module.ts","ng://@igo2/context/lib/context.module.ts","ng://@igo2/context/lib/context-import-export/shared/context-export-ionic.service.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__values","o","m","Symbol","iterator","i","call","next","length","value","done","__read","n","r","e","ar","push","error","__spread","arguments","concat","tslib_1.__extends","Error","ExportError","ExportInvalidFileError","_this","_super","ExportNothingToExportError","handleFileExportError","messageService","languageService","handleNothingToExportError","translate","title","instant","message","handleFileExportSuccess","success","handleFileImportSuccess","file","context","contextService","keys","handleNothingToImportError","contextTitle","computeLayerTitleFromFile","addContextToContextList","messageTitle","handleFileImportError","sizeMb","Invalid file","handleInvalidFileImportError","File is too large","handleSizeFileImportError","Failed to read file","handleUnreadbleFileImportError","name","mimeType","type","size","imported","contexts$","ours","unshift","importedContext","loadContext","uri","getFileExtension","split","pop","toLowerCase","substr","lastIndexOf","addImportedFeaturesToMap","olFeatures","map","layerTitle","Math","floor","random","g","stroke","olStyle.Stroke","color","width","fill","olStyle.Fill","source","FeatureDataSource","queryable","ol","addFeatures","layer","VectorLayer","style","olStyle.Style","image","olStyle.Circle","radius","addLayer","addImportedFeaturesStyledToMap","styleListService","styleService","distance","getStyleList","toString","styleByAttribute_1","feature","createStyleByAttribute","clusterParam_1","baseStyle_1","createStyle","createClusterStyle","sourceOptions","ClusterDataSource","null","read","write","public","protected","private","defineProperty","ContextService","_defaultContextUri","options","defaultContextUri","get","permissions","hidden","url","baseUrl","authService","authenticated","join","http","getById","id","getDetails","pipe","catchError","res","handleError","getDefault","tap","defaultContextId$","getProfilByUser","of","setDefault","post","defaultContextId","hideContext","showContext","delete","contexts","forEach","key","filter","c","JSON","stringify","contextCreated","permission","TypePermission","clone","properties","contextCloned","update","patch","addToolAssociation","contextId","toolId","association","deleteToolAssociation","getPermissions","addPermissionAssociation","profil","typePermission","undefined","deletePermissionAssociation","permissionId","getLocalContexts","getPath","contextListFile","getLocalContext","flatMap","base","urlBase","resBase","resMerge","ObjectUtils","mergeDeep","layers","reverse","l","index","self","findIndex","l2","toolbar","tools","t","t2","err","err2","loadContexts","subscribe","loadDefaultContext","loadFct","direct","_context","addContextToList","setContext","route","contextKey","queryParams","debounceTime","params","contextParam","context$","contexts$$","getContextByUri","unsubscribe","handleContextMessage","currentContext","view","keepCurrentView","assign","mapViewFromRoute","loadEditedContext","setEditedContext","editedContext$","getContextFromMap","igoMap","empty","getView","proj","getProjection","getCode","center","olPoint","getCenter","transform","uuid","scope","getCoordinates","zoom","getZoom","projection","maxZoomOnExtent","viewController","layers$","getValue","lay","baseLayer","sort","a","zIndex","layers_1","tslib_1.__values","layers_1_1","opts","String","layerOptions","visible","dataSource","tool","global","getContextFromLayers","extraFeatures","currentLayers","layerFound","find","contextLayer","layerStyle","styleByAttribute","clusterBaseStyle","clusterParam","opacity","catalogLayer","features","writer","GeoJSON","getSource","Cluster","writeFeatures","getFeatures","dataProjection","featureProjection","parse","setTools","setToolbar","contextMessage","remove","text","contextToLoad","_b","_c","getContextLayers","readParamsFromRoute","centerKey","centerParams","Number","geolocate","projectionKey","projectionParam","zoomKey","zoomParam","basePath","replace","permissionError","obj","titleContext","toDisplay","handleContextsChange","keepCurrentContext","editedContext","findContext","editedFound","contextSimplifie","found","Injectable","args","providedIn","HttpClient","AuthService","LanguageService","ConfigService","MessageService","RouteService","decorators","Optional","config","BehaviorSubject","getConfig","authenticate$","contexts$$_1","ImportError","ImportInvalidFileError","ImportUnreadableFileError","ImportNothingToImportError","ImportSizeError","ImportSRSError","ContextImportService","import","importAsync","getFileImporter","extension","allowedMimeTypes","allowedExtensions","indexOf","importFile","Observable","observer","clientSideFileSizeMax","importer","reader","FileReader","onload","event","parseContextFromFile","target","result","complete","onerror","evt","readAsText","data","configFileSizeMb","pow","ContextExportService","export","exportAsync","nothingToExport","contextJSON","downloadContent","ContextImportExportComponent","ngOnInit","fileSizeMb","layerList","importFiles","files","loading$","this_1","contextImportService","onFileImportSuccess","onFileImportError","files_1","files_1_1","handleExportFormSubmit","contextOptions","contextExportService","onFileExportError","onFileExportSuccess","buildForm","form","formBuilder","group","Validators","required","selectAll","_selected","controls","setValue","onImportExportChange","activeImportExport","Component","selector","template","FormBuilder","Input","inputProj","forceNaming","IgoContextImportExportModule","forRoot","ngModule","NgModule","imports","FormsModule","ReactiveFormsModule","CommonModule","MatButtonModule","MatButtonToggleModule","MatDividerModule","MatTabsModule","MatSelectModule","MatOptionModule","MatFormFieldModule","MatInputModule","MatCheckboxModule","IgoLanguageModule","IgoSpinnerModule","MatTooltipModule","exports","declarations","BookmarkDialogComponent","MatDialogRef","dialogRef","MapContextDirective","component","context$$","handleContextChange","ngOnDestroy","viewContext","Directive","MapBrowserComponent","LayerContextDirective","visibleOnLayersKey","visibleOffLayersKey","queryParams$$_1","removeLayersOnContextChange","removeAllLayers","removeLayers","contextLayers","layersAndIndex$","merge","apply","layerService","createAsyncLayer","buffer","computeLayerVisibilityFromUrl","addLayers","featureCollection","format","readFeatures","configService","currentLayerid","contextParams","visibleOnLayersParams","visibleOffLayersParams","visiblelayers","invisiblelayers","LayerService","StyleListService","StyleService","ContextListComponent","_contexts","cdRef","detectChanges","_selectedContext","_map","_defaultContextId","_term","_sortedAlpha","change$$","change$","debounce","EMPTY","timer","filterContextsList","actionStore","load","icon","tooltip","handler","createContext","term","sortedAlpha","sortContextsList","updateContexts","filterNormalized","normalize","includes","publics","shared","showFilter","showContextFilter","ContextListControlsEnum","totalLength","thresholdToFilter","contextsList","str","toggleSort","sortAlpha","clearFilter","dialog","open","disableClose","afterClosed","emit","getPermission","user","userSelection","parent","checked","storageService","set","indeterminate","childs","_d","parentPermission","_e","_f","childrenPermission","filterPermissionsChanged","showHidden","hide","show","changeDetection","ChangeDetectionStrategy","OnPush","ChangeDetectorRef","MatDialog","StorageService","Output","auth","contextsInitial","ReplaySubject","collapsed","select","EventEmitter","unselect","edit","save","showHiddenContexts","favorite","managePermissions","manageTools","titleMapping","ActionStore","actionbarMode","ActionbarMode","Overlay","ContextListBindingDirective","onSelect","onEdit","onSave","mapService","getMap","contextFromMap","msgSuccess","changes","onFavorite","onManageTools","onManagePermissions","onDelete","confirmDialogService","confirm","info","onClone","onCreate","titleD","onShowContext","onHideContext","defaultContextId$$","selectedContext$$","selectedContext","authenticate","profils","users","profilsAcc","reduce","acc","cur","profilsAcc_1","profilsAcc_1_1","Self","MapService","ConfirmDialogService","HostListener","ContextItemComponent","_default","favoriteClick","ContextFormComponent","_btnSubmitText","_disabled","handleFormSubmit","inputs","removeNull","prefix","submitForm","copyTextToClipboard","Clipboard","copy","msg","uriSplit","shift","ContextEditComponent","refresh","cd","ContextEditBindingDirective","submitSuccessed","editedContext$$","handleEditedContextChange","ContextPermissionsComponent","_permissions","_profils","formValueChanges$$","formControl","valueChanges","baseUrlProfils","profilTitleNormalized","displayFn","addPermission","onProfilSelected","FormControl","removePermission","scopeChanged","ContextPermissionsBindingDirective","onAddPermission","profils_1","profils_1_1","onRemovePermission","splice","onScopeChanged","permissionsArray","BookmarkButtonComponent","_color","context_1","PoiService","PoiDialogComponent","PoiButtonComponent","authenticate$$","getPois","deletePoi","poi","translate_1","poiService","pois","showError","rep","createPoi","x","y","newPoi","zoomOnPoi","olproj.fromLonLat","animate","duration","easing","oleasing.easeOut","UserDialogComponent","decodeToken","exp","Date","toLocaleString","userButtonSlideInOut","trigger","state","overflow","display","transition","UserButtonComponent","accountClick","expand","logout","infoUser","animations","hasApi","IgoContextMapButtonModule","IgoConfirmDialogModule","IgoStopPropagationModule","IgoAuthModule","MatIconModule","MatDialogModule","entryComponents","providers","CONTEXT_DIRECTIVES","IgoContextManagerModule","MatListModule","MatRadioModule","MatMenuModule","MatAutocompleteModule","IgoListModule","IgoKeyValueModule","IgoCollapsibleModule","IgoActionbarModule","ShareMapService","getUrl","formValues","publicShareOption","apiUrl","getUrlWithApi","getUrlWithoutApi","location","origin","pathname","llc","layerlistControls","querystring","visibleKey","invisibleKey","visibleLayers","invisibleLayers","layersUrl","layersToLoop","layersToLoop_1","layersToLoop_1_1","contextLayersID","contextLayers_1","contextLayers_1_1","addedLayersQueryParamsWms","makeLayersByService","addedLayersQueryParamsWmts","arrayCenter","toFixed","endsWith","slice","typeService","addedLayersByService","linkUrl_1","addedLayer","encodeURIComponent","LAYERS","addedLayerPosition_1","definedUrl","service","addedLayersQueryParams","linkUrlKey","wmsUrlKey","wmtsUrlKey","layersKey","wmsLayersKey","wmtsLayersKey","linkUrlQueryParams_1","layersQueryParams_1","ShareMapComponent","userId","mapState$$","state$","resetUrl","ngAfterViewInit","values","shareMapService","textArea","IgoShareMapModule","SidenavComponent","_opened","_feature","_tool","_media","_title","getEntityTitle","zoomToFeatureExtent","geometry","olFeature","readFeature","moveToOlFeatures","FeatureMotion","Zoom","toggleTopPanel","topPanelState","Title","titleService","olFormatGeoJSON","getTitle","IgoSidenavModule","MatSidenavModule","IgoPanelModule","IgoFlexibleModule","IgoFeatureModule","IgoContextModule","ContextExportIonicService","platform","is","directory_1","writeFile","then","fileOpener","Platform","FileOpener","File"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export class ExportError extends Error {}\r\n\r\nexport class ExportInvalidFileError extends ExportError {\r\n  constructor() {\r\n    super('Invalid context');\r\n    Object.setPrototypeOf(this, ExportInvalidFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ExportNothingToExportError extends ExportError {\r\n  constructor() {\r\n    super('Nothing to export');\r\n    Object.setPrototypeOf(this, ExportNothingToExportError.prototype);\r\n  }\r\n}\r\n","import { MessageService, LanguageService } from '@igo2/core';\r\nimport { ExportNothingToExportError } from './context-export.errors';\r\n\r\nexport function handleFileExportError(\r\n    error: Error,\r\n    messageService: MessageService,\r\n    languageService: LanguageService\r\n  ) {\r\n    if (error instanceof ExportNothingToExportError) {\r\n      this.handleNothingToExportError(messageService, languageService);\r\n      return;\r\n    }\r\n    const translate = languageService.translate;\r\n    const title = translate.instant('igo.context.contextImportExport.export.failed.title');\r\n    const message = translate.instant('igo.context.contextImportExport.export.failed.text');\r\n    messageService.error(message, title);\r\n}\r\n\r\nexport function handleFileExportSuccess(\r\n    messageService: MessageService,\r\n    languageService: LanguageService\r\n  ) {\r\n    const translate = languageService.translate;\r\n    const title = translate.instant('igo.context.contextImportExport.export.success.title');\r\n    const message = translate.instant('igo.context.contextImportExport.export.success.text');\r\n    messageService.success(message, title);\r\n}\r\n\r\nexport function handleNothingToExportError(\r\n    messageService: MessageService,\r\n    languageService: LanguageService\r\n  ) {\r\n    const translate = languageService.translate;\r\n    const title = translate.instant('igo.context.contextImportExport.export.nothing.title');\r\n    const message = translate.instant('igo.context.contextImportExport.export.nothing.text');\r\n    messageService.error(message, title);\r\n}\r\n","import * as olStyle from 'ol/style';\r\n\r\nimport {\r\n  FeatureDataSource,\r\n  FeatureDataSourceOptions,\r\n  IgoMap,\r\n  VectorLayer,\r\n  QueryableDataSourceOptions,\r\n  StyleService,\r\n  StyleListService,\r\n  StyleByAttribute,\r\n  ClusterParam,\r\n  ClusterDataSourceOptions,\r\n  ClusterDataSource\r\n} from '@igo2/geo';\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\nimport OlFeature from 'ol/Feature';\r\n\r\nexport function handleFileImportSuccess(\r\n  file: File,\r\n  context: DetailedContext,\r\n  messageService: MessageService,\r\n  languageService: LanguageService,\r\n  contextService: ContextService\r\n) {\r\n  if (Object.keys(context).length <= 0) {\r\n    handleNothingToImportError(file, messageService, languageService);\r\n    return;\r\n  }\r\n\r\n  const contextTitle = computeLayerTitleFromFile(file);\r\n\r\n  addContextToContextList(context, contextTitle, contextService);\r\n\r\n  const translate = languageService.translate;\r\n  const messageTitle = translate.instant(\r\n    'igo.context.contextImportExport.import.success.title'\r\n  );\r\n  const message = translate.instant(\r\n    'igo.context.contextImportExport.import.success.text',\r\n    {\r\n      value: contextTitle\r\n    }\r\n  );\r\n  messageService.success(message, messageTitle);\r\n}\r\n\r\nexport function handleFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService,\r\n  sizeMb?: number\r\n) {\r\n  sizeMb = sizeMb ? sizeMb : 30;\r\n  const errMapping = {\r\n    'Invalid file': handleInvalidFileImportError,\r\n    'File is too large': handleSizeFileImportError,\r\n    'Failed to read file': handleUnreadbleFileImportError\r\n  };\r\n  errMapping[error.message](\r\n    file,\r\n    error,\r\n    messageService,\r\n    languageService,\r\n    sizeMb\r\n  );\r\n}\r\n\r\nexport function handleInvalidFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant(\r\n    'igo.context.contextImportExport.import.invalid.title'\r\n  );\r\n  const message = translate.instant(\r\n    'igo.context.contextImportExport.import.invalid.text',\r\n    {\r\n      value: file.name,\r\n      mimeType: file.type\r\n    }\r\n  );\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleSizeFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService,\r\n  sizeMb: number\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant(\r\n    'igo.context.contextImportExport.import.tooLarge.title'\r\n  );\r\n  const message = translate.instant(\r\n    'igo.context.contextImportExport.import.tooLarge.text',\r\n    {\r\n      value: file.name,\r\n      size: sizeMb\r\n    }\r\n  );\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleUnreadbleFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant(\r\n    'igo.context.contextImportExport.import.unreadable.title'\r\n  );\r\n  const message = translate.instant(\r\n    'igo.context.contextImportExport.import.unreadable.text',\r\n    {\r\n      value: file.name\r\n    }\r\n  );\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleNothingToImportError(\r\n  file: File,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant(\r\n    'igo.context.contextImportExport.import.empty.title'\r\n  );\r\n  const message = translate.instant(\r\n    'igo.context.contextImportExport.import.empty.text',\r\n    {\r\n      value: file.name\r\n    }\r\n  );\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function addContextToContextList(\r\n  context: DetailedContext,\r\n  contextTitle: string,\r\n  contextService: ContextService\r\n) {\r\n  context.title = contextTitle;\r\n  context.imported = true;\r\n  contextService.contexts$.value.ours.unshift(context);\r\n  contextService.contexts$.next(contextService.contexts$.value);\r\n  contextService.importedContext.unshift(context);\r\n  contextService.loadContext(context.uri);\r\n}\r\n\r\nexport function getFileExtension(file: File): string {\r\n  return file.name.split('.').pop().toLowerCase();\r\n}\r\n\r\nexport function computeLayerTitleFromFile(file: File): string {\r\n  return file.name.substr(0, file.name.lastIndexOf('.'));\r\n}\r\n\r\nexport function addImportedFeaturesToMap(\r\n  olFeatures: OlFeature[],\r\n  map: IgoMap,\r\n  layerTitle: string\r\n): VectorLayer {\r\n  const r = Math.floor(Math.random() * 255);\r\n  const g = Math.floor(Math.random() * 255);\r\n  const b = Math.floor(Math.random() * 255);\r\n  const stroke = new olStyle.Stroke({\r\n    color: [r, g, b, 1],\r\n    width: 2\r\n  });\r\n\r\n  const fill = new olStyle.Fill({\r\n    color: [r, g, b, 0.4]\r\n  });\r\n  const sourceOptions: FeatureDataSourceOptions & QueryableDataSourceOptions = {\r\n    type: 'vector',\r\n    queryable: true\r\n  };\r\n  const source = new FeatureDataSource(sourceOptions);\r\n  source.ol.addFeatures(olFeatures);\r\n  const layer = new VectorLayer({\r\n    title: layerTitle,\r\n    source,\r\n    style: new olStyle.Style({\r\n      stroke,\r\n      fill,\r\n      image: new olStyle.Circle({\r\n        radius: 5,\r\n        stroke,\r\n        fill\r\n      })\r\n    })\r\n  });\r\n  map.addLayer(layer);\r\n\r\n  return layer;\r\n}\r\n\r\nexport function addImportedFeaturesStyledToMap(\r\n  olFeatures: OlFeature[],\r\n  map: IgoMap,\r\n  layerTitle: string,\r\n  styleListService: StyleListService,\r\n  styleService: StyleService\r\n): VectorLayer {\r\n  let style;\r\n  let distance: number;\r\n\r\n  if (\r\n    styleListService.getStyleList(layerTitle.toString() + '.styleByAttribute')\r\n  ) {\r\n    const styleByAttribute: StyleByAttribute = styleListService.getStyleList(\r\n      layerTitle.toString() + '.styleByAttribute'\r\n    );\r\n\r\n    style = (feature) => {\r\n      return styleService.createStyleByAttribute(feature, styleByAttribute);\r\n    };\r\n  } else if (\r\n    styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')\r\n  ) {\r\n    const clusterParam: ClusterParam = styleListService.getStyleList(\r\n      layerTitle.toString() + '.clusterParam'\r\n    );\r\n    distance = styleListService.getStyleList(\r\n      layerTitle.toString() + '.distance'\r\n    );\r\n\r\n    const baseStyle = styleService.createStyle(\r\n      styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')\r\n    );\r\n\r\n    style = (feature) => {\r\n      return styleService.createClusterStyle(feature, clusterParam, baseStyle);\r\n    };\r\n  } else if (styleListService.getStyleList(layerTitle.toString() + '.style')) {\r\n    style = styleService.createStyle(\r\n      styleListService.getStyleList(layerTitle.toString() + '.style')\r\n    );\r\n  } else {\r\n    style = styleService.createStyle(\r\n      styleListService.getStyleList('default.style')\r\n    );\r\n  }\r\n  let source;\r\n\r\n  if (styleListService.getStyleList(layerTitle.toString() + '.clusterStyle')) {\r\n    const sourceOptions: ClusterDataSourceOptions &\r\n      QueryableDataSourceOptions = {\r\n      distance,\r\n      type: 'cluster',\r\n      queryable: true\r\n    };\r\n    source = new ClusterDataSource(sourceOptions);\r\n    source.ol.source.addFeatures(olFeatures);\r\n  } else {\r\n    const sourceOptions: FeatureDataSourceOptions &\r\n      QueryableDataSourceOptions = {\r\n      type: 'vector',\r\n      queryable: true\r\n    };\r\n    source = new FeatureDataSource(sourceOptions);\r\n    source.ol.addFeatures(olFeatures);\r\n  }\r\n\r\n  const layer = new VectorLayer({\r\n    title: layerTitle,\r\n    source,\r\n    style\r\n  });\r\n  map.addLayer(layer);\r\n\r\n  return layer;\r\n}\r\n","export enum TypePermission {\r\n  null,\r\n  read,\r\n  write\r\n}\r\n\r\nexport enum Scope {\r\n  public,\r\n  protected,\r\n  private\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { map, tap, catchError, debounceTime, flatMap } from 'rxjs/operators';\r\n\r\nimport olPoint from 'ol/geom/Point';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\nimport Cluster from 'ol/source/Cluster';\r\n\r\nimport { Tool } from '@igo2/common';\r\nimport { uuid, ObjectUtils } from '@igo2/utils';\r\nimport {\r\n  ConfigService,\r\n  RouteService,\r\n  Message,\r\n  MessageService,\r\n  Notification,\r\n  LanguageService\r\n} from '@igo2/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap, Layer } from '@igo2/geo';\r\n\r\nimport { TypePermission } from './context.enum';\r\nimport {\r\n  ContextsList,\r\n  ContextServiceOptions,\r\n  Context,\r\n  DetailedContext,\r\n  ContextMapView,\r\n  ContextPermission,\r\n  ContextProfils\r\n} from './context.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContextService {\r\n  public context$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  public contexts$ = new BehaviorSubject<ContextsList>({ ours: [] });\r\n  public defaultContextId$ = new BehaviorSubject<string>(undefined);\r\n  public editedContext$ = new BehaviorSubject<DetailedContext>(undefined);\r\n  public importedContext: Array<DetailedContext> = [];\r\n  private mapViewFromRoute: ContextMapView = {};\r\n  private options: ContextServiceOptions;\r\n  private baseUrl: string;\r\n  private contextMessage: Notification;\r\n\r\n  // Until the ContextService is completely refactored, this is needed\r\n  // to track the current tools\r\n  private tools: Tool[];\r\n  private toolbar: string[];\r\n\r\n  get defaultContextUri(): string {\r\n    return this._defaultContextUri || this.options.defaultContextUri;\r\n  }\r\n  set defaultContextUri(uri: string) {\r\n    this._defaultContextUri = uri;\r\n  }\r\n  private _defaultContextUri: string;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private authService: AuthService,\r\n    private languageService: LanguageService,\r\n    private config: ConfigService,\r\n    private messageService: MessageService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.options = Object.assign(\r\n      {\r\n        basePath: 'contexts',\r\n        contextListFile: '_contexts.json',\r\n        defaultContextUri: '_default'\r\n      },\r\n      this.config.getConfig('context')\r\n    );\r\n\r\n    this.baseUrl = this.options.url;\r\n\r\n    this.readParamsFromRoute();\r\n\r\n    this.authService.authenticate$.subscribe((authenticated) => {\r\n      if (authenticated && this.baseUrl) {\r\n        this.get().subscribe((contexts) => {\r\n          this.handleContextsChange(contexts);\r\n        });\r\n      } else {\r\n        const contexts$$ = this.contexts$.subscribe((contexts) => {\r\n          if (contexts$$) {\r\n            contexts$$.unsubscribe();\r\n            this.handleContextsChange(contexts);\r\n          }\r\n        });\r\n        this.loadContexts();\r\n      }\r\n    });\r\n  }\r\n\r\n  get(permissions?: string[], hidden?: boolean): Observable<ContextsList> {\r\n    let url = this.baseUrl + '/contexts';\r\n    if (permissions && this.authService.authenticated) {\r\n      url += '?permission=' + permissions.join();\r\n      if (hidden) {\r\n        url += '&hidden=true';\r\n      }\r\n    }\r\n    return this.http.get<ContextsList>(url);\r\n  }\r\n\r\n  getById(id: string): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.get<Context>(url);\r\n  }\r\n\r\n  getDetails(id: string): Observable<DetailedContext> {\r\n    const url = `${this.baseUrl}/contexts/${id}/details`;\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      catchError((res) => {\r\n        return this.handleError(res, id);\r\n      })\r\n    );\r\n  }\r\n\r\n  getDefault(): Observable<DetailedContext> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      tap((context) => {\r\n        this.defaultContextId$.next(context.id);\r\n      })\r\n    );\r\n  }\r\n\r\n  getProfilByUser(): Observable<ContextProfils[]> {\r\n    if (this.baseUrl) {\r\n      const url = this.baseUrl + '/profils?';\r\n      return this.http.get<ContextProfils[]>(url);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  setDefault(id: string): Observable<any> {\r\n    const url = this.baseUrl + '/contexts/default';\r\n    return this.http.post(url, { defaultContextId: id });\r\n  }\r\n\r\n  hideContext(id: string) {\r\n    const url = this.baseUrl + '/contexts/' + id + '/hide';\r\n    return this.http.post(url, {});\r\n  }\r\n\r\n  showContext(id: string) {\r\n    const url = this.baseUrl + '/contexts/' + id + '/show';\r\n    return this.http.post(url, {});\r\n  }\r\n\r\n  delete(id: string, imported = false): Observable<void> {\r\n    const contexts: ContextsList = { ours: [] };\r\n    Object.keys(this.contexts$.value).forEach(\r\n      (key) =>\r\n        (contexts[key] = this.contexts$.value[key].filter((c) => c.id !== id))\r\n    );\r\n\r\n    if (imported) {\r\n      this.importedContext = this.importedContext.filter((c) => c.id !== id);\r\n      return of(this.contexts$.next(contexts));\r\n    }\r\n\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.delete<void>(url).pipe(\r\n      tap((res) => {\r\n        this.contexts$.next(contexts);\r\n      })\r\n    );\r\n  }\r\n\r\n  create(context: DetailedContext): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts';\r\n    return this.http.post<Context>(url, JSON.stringify(context)).pipe(\r\n      map((contextCreated) => {\r\n        if (this.authService.authenticated) {\r\n          contextCreated.permission = TypePermission[TypePermission.write];\r\n        } else {\r\n          contextCreated.permission = TypePermission[TypePermission.read];\r\n        }\r\n        this.contexts$.value.ours.unshift(contextCreated);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCreated;\r\n      })\r\n    );\r\n  }\r\n\r\n  clone(id: string, properties = {}): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/clone';\r\n    return this.http.post<Context>(url, JSON.stringify(properties)).pipe(\r\n      map((contextCloned) => {\r\n        contextCloned.permission = TypePermission[TypePermission.write];\r\n        this.contexts$.value.ours.unshift(contextCloned);\r\n        this.contexts$.next(this.contexts$.value);\r\n        return contextCloned;\r\n      })\r\n    );\r\n  }\r\n\r\n  update(id: string, context: Context): Observable<Context> {\r\n    const url = this.baseUrl + '/contexts/' + id;\r\n    return this.http.patch<Context>(url, JSON.stringify(context));\r\n  }\r\n\r\n  // =================================================================\r\n\r\n  addToolAssociation(contextId: string, toolId: string): Observable<void> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools`;\r\n    const association = {\r\n      toolId\r\n    };\r\n    return this.http.post<void>(url, JSON.stringify(association));\r\n  }\r\n\r\n  deleteToolAssociation(contextId: string, toolId: string): Observable<any> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/tools/${toolId}`;\r\n    return this.http.delete(url);\r\n  }\r\n\r\n  getPermissions(id: string): Observable<ContextPermission[]> {\r\n    const url = this.baseUrl + '/contexts/' + id + '/permissions';\r\n    return this.http.get<ContextPermission[]>(url);\r\n  }\r\n\r\n  addPermissionAssociation(\r\n    contextId: string,\r\n    profil: string,\r\n    type: TypePermission\r\n  ): Observable<ContextPermission[] | Message[]> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/permissions`;\r\n    const association = {\r\n      profil,\r\n      typePermission: type\r\n    };\r\n\r\n    return this.http\r\n      .post<ContextPermission[]>(url, JSON.stringify(association))\r\n      .pipe(\r\n        catchError((res) => {\r\n          return [this.handleError(res, undefined, true)];\r\n        })\r\n      );\r\n  }\r\n\r\n  deletePermissionAssociation(\r\n    contextId: string,\r\n    permissionId: string\r\n  ): Observable<void> {\r\n    const url = `${this.baseUrl}/contexts/${contextId}/permissions/${permissionId}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  // ======================================================================\r\n\r\n  getLocalContexts(): Observable<ContextsList> {\r\n    const url = this.getPath(this.options.contextListFile);\r\n    return this.http.get<ContextsList>(url).pipe(\r\n      map((res: any) => {\r\n        return { ours: res };\r\n      })\r\n    );\r\n  }\r\n\r\n  getLocalContext(uri: string): Observable<DetailedContext> {\r\n    const url = this.getPath(`${uri}.json`);\r\n    return this.http.get<DetailedContext>(url).pipe(\r\n      flatMap((res) => {\r\n        if (!res.base) {\r\n          return of(res);\r\n        }\r\n        const urlBase = this.getPath(`${res.base}.json`);\r\n        return this.http.get<DetailedContext>(urlBase).pipe(\r\n          map((resBase: DetailedContext) => {\r\n            const resMerge = res;\r\n            resMerge.map = ObjectUtils.mergeDeep(resBase.map, res.map);\r\n            resMerge.layers = (resBase.layers || [])\r\n              .concat(res.layers || [])\r\n              .reverse()\r\n              .filter(\r\n                (l, index, self) =>\r\n                  !l.id || self.findIndex((l2) => l2.id === l.id) === index\r\n              )\r\n              .reverse();\r\n            resMerge.toolbar = res.toolbar || resBase.toolbar;\r\n            resMerge.tools = (res.tools || [])\r\n              .concat(resBase.tools || [])\r\n              .filter(\r\n                (t, index, self) =>\r\n                  self.findIndex((t2) => t2.name === t.name) === index\r\n              );\r\n            return resMerge;\r\n          }),\r\n          catchError((err) => {\r\n            return this.handleError(err, uri);\r\n          })\r\n        );\r\n      }),\r\n      catchError((err2) => {\r\n        return this.handleError(err2, uri);\r\n      })\r\n    );\r\n  }\r\n\r\n  loadContexts(permissions?: string[], hidden?: boolean) {\r\n    let request;\r\n    if (this.baseUrl) {\r\n      request = this.get(permissions, hidden);\r\n    } else {\r\n      request = this.getLocalContexts();\r\n    }\r\n    request.subscribe((contexts) => {\r\n      contexts.ours = this.importedContext.concat(contexts.ours);\r\n      this.contexts$.next(contexts);\r\n    });\r\n  }\r\n\r\n  loadDefaultContext() {\r\n    const loadFct = (direct = false) => {\r\n      if (!direct && this.baseUrl && this.authService.authenticated) {\r\n        this.getDefault().subscribe(\r\n          (_context: DetailedContext) => {\r\n            this.defaultContextUri = _context.uri;\r\n            this.addContextToList(_context);\r\n            this.setContext(_context);\r\n          },\r\n          () => {\r\n            this.defaultContextId$.next(undefined);\r\n            this.loadContext(this.defaultContextUri);\r\n          }\r\n        );\r\n      } else {\r\n        this.loadContext(this.defaultContextUri);\r\n      }\r\n    };\r\n\r\n    if (this.route && this.route.options.contextKey) {\r\n      this.route.queryParams.pipe(debounceTime(100)).subscribe((params) => {\r\n        const contextParam = params[this.route.options.contextKey as string];\r\n        let direct = false;\r\n        if (contextParam) {\r\n          this.defaultContextUri = contextParam;\r\n          direct = true;\r\n        }\r\n        loadFct(direct);\r\n      });\r\n    } else {\r\n      loadFct();\r\n    }\r\n  }\r\n\r\n  loadContext(uri: string) {\r\n    const context = this.context$.value;\r\n\r\n    if (context && context.uri === uri) {\r\n      return;\r\n    }\r\n\r\n    const contexts$$ = this.getContextByUri(uri).subscribe(\r\n      (_context: DetailedContext) => {\r\n        if (contexts$$) {\r\n          contexts$$.unsubscribe();\r\n        }\r\n        this.addContextToList(_context);\r\n        this.setContext(_context);\r\n      },\r\n      (err) => {\r\n        if (contexts$$) {\r\n          contexts$$.unsubscribe();\r\n        }\r\n        if (uri !== this.options.defaultContextUri) {\r\n          this.loadContext(this.options.defaultContextUri);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  setContext(context: DetailedContext) {\r\n    this.handleContextMessage(context);\r\n    const currentContext = this.context$.value;\r\n    if (currentContext && context && context.id === currentContext.id) {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      return;\r\n    }\r\n\r\n    if (!context.map) {\r\n      context.map = { view: {} };\r\n    }\r\n\r\n    Object.assign(context.map.view, this.mapViewFromRoute);\r\n\r\n    this.context$.next(context);\r\n  }\r\n\r\n  loadEditedContext(uri: string) {\r\n    this.getContextByUri(uri).subscribe((_context: DetailedContext) => {\r\n      this.setEditedContext(_context);\r\n    });\r\n  }\r\n\r\n  setEditedContext(context: DetailedContext) {\r\n    this.editedContext$.next(context);\r\n  }\r\n\r\n  getContextFromMap(igoMap: IgoMap, empty?: boolean): DetailedContext {\r\n    const view = igoMap.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const context = {\r\n      uri: uuid(),\r\n      title: '',\r\n      scope: 'private',\r\n      map: {\r\n        view: {\r\n          center: center.getCoordinates(),\r\n          zoom: view.getZoom(),\r\n          projection: proj,\r\n          maxZoomOnExtent: igoMap.viewController.maxZoomOnExtent\r\n        }\r\n      },\r\n      layers: [],\r\n      tools: []\r\n    };\r\n\r\n    let layers = [];\r\n    if (empty === true) {\r\n      layers = igoMap.layers$\r\n        .getValue()\r\n        .filter(\r\n          (lay) =>\r\n            lay.baseLayer === true ||\r\n            lay.options.id === 'searchPointerSummaryId'\r\n        )\r\n        .sort((a, b) => a.zIndex - b.zIndex);\r\n    } else {\r\n      layers = igoMap.layers$.getValue().sort((a, b) => a.zIndex - b.zIndex);\r\n    }\r\n\r\n    let i = 0;\r\n    for (const l of layers) {\r\n      const layer: any = l;\r\n      const opts = {\r\n        id: layer.options.id ? String(layer.options.id) : undefined,\r\n        layerOptions: {\r\n          title: layer.options.title,\r\n          zIndex: ++i,\r\n          visible: layer.visible\r\n        },\r\n        sourceOptions: {\r\n          type: layer.dataSource.options.type,\r\n          params: layer.dataSource.options.params,\r\n          url: layer.dataSource.options.url,\r\n          queryable: layer.queryable\r\n        }\r\n      };\r\n      if (opts.sourceOptions.type) {\r\n        context.layers.push(opts);\r\n      }\r\n    }\r\n\r\n    context.tools = this.tools.map((tool) => {\r\n      return { id: String(tool.id), global: tool.global };\r\n    });\r\n\r\n    return context;\r\n  }\r\n\r\n  getContextFromLayers(\r\n    igoMap: IgoMap,\r\n    layers: Layer[],\r\n    name: string\r\n  ): DetailedContext {\r\n    const currentContext = this.context$.getValue();\r\n    const view = igoMap.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const context = {\r\n      uri: name,\r\n      title: name,\r\n      map: {\r\n        view: {\r\n          center: center.getCoordinates(),\r\n          zoom: view.getZoom(),\r\n          projection: proj\r\n        }\r\n      },\r\n      layers: [],\r\n      toolbar: [],\r\n      tools: [],\r\n      extraFeatures: []\r\n    };\r\n\r\n    const currentLayers = igoMap.layers$.getValue();\r\n    context.layers = currentLayers\r\n      .filter((l) => l.baseLayer)\r\n      .map((l) => {\r\n        return {\r\n          baseLayer: true,\r\n          sourceOptions: l.options.sourceOptions,\r\n          title: l.options.title,\r\n          visible: l.visible\r\n        };\r\n      });\r\n\r\n    layers.forEach((layer) => {\r\n      const layerFound = currentContext.layers.find(\r\n        (contextLayer) =>\r\n          layer.id === contextLayer.source.id && !contextLayer.baseLayer\r\n      );\r\n\r\n      if (layerFound) {\r\n        let layerStyle = layerFound[`style`];\r\n        if (layerFound[`styleByAttribute`]) {\r\n          layerStyle = undefined;\r\n        } else if (layerFound[`clusterBaseStyle`]) {\r\n          layerStyle = undefined;\r\n          delete layerFound.sourceOptions[`source`];\r\n          delete layerFound.sourceOptions[`format`];\r\n        }\r\n        const opts = {\r\n          baseLayer: layerFound.baseLayer,\r\n          title: layer.options.title,\r\n          zIndex: layer.zIndex,\r\n          styleByAttribute: layerFound[`styleByAttribute`],\r\n          clusterBaseStyle: layerFound[`clusterBaseStyle`],\r\n          style: layerStyle,\r\n          clusterParam: layerFound[`clusterParam`],\r\n          visible: layer.visible,\r\n          opacity: layer.opacity,\r\n          sourceOptions: layerFound.sourceOptions\r\n        };\r\n        context.layers.push(opts);\r\n      } else {\r\n        if (layer.ol.type !== 'VECTOR') {\r\n          const catalogLayer = layer.options;\r\n          delete catalogLayer.source;\r\n          context.layers.push(catalogLayer);\r\n        } else {\r\n          let features;\r\n          const writer = new GeoJSON();\r\n          if (layer.ol.getSource() instanceof Cluster) {\r\n            features = writer.writeFeatures(\r\n              layer.ol.getSource().getSource().getFeatures(),\r\n              {\r\n                dataProjection: 'EPSG:4326',\r\n                featureProjection: 'EPSG:3857'\r\n              }\r\n            );\r\n          } else {\r\n            features = writer.writeFeatures(\r\n              layer.ol.getSource().getFeatures(),\r\n              {\r\n                dataProjection: 'EPSG:4326',\r\n                featureProjection: 'EPSG:3857'\r\n              }\r\n            );\r\n          }\r\n          features = JSON.parse(features);\r\n          features.name = layer.options.title;\r\n          context.extraFeatures.push(features);\r\n        }\r\n      }\r\n    });\r\n\r\n    context.toolbar = this.toolbar;\r\n    context.tools = this.tools;\r\n\r\n    return context;\r\n  }\r\n\r\n  setTools(tools: Tool[]) {\r\n    this.tools = tools;\r\n  }\r\n\r\n  setToolbar(toolbar: string[]) {\r\n    this.toolbar = toolbar;\r\n  }\r\n\r\n  private handleContextMessage(context: DetailedContext) {\r\n    if (this.contextMessage) {\r\n      this.messageService.remove(this.contextMessage.id);\r\n    }\r\n    const message = context.message;\r\n    if (message) {\r\n      message.title = message.title\r\n        ? this.languageService.translate.instant(message.title)\r\n        : undefined;\r\n      message.text = message.text\r\n        ? this.languageService.translate.instant(message.text)\r\n        : undefined;\r\n      this.messageService.message(message as Message);\r\n    }\r\n  }\r\n\r\n  private getContextByUri(uri: string): Observable<DetailedContext> {\r\n    if (this.baseUrl) {\r\n      let contextToLoad;\r\n      for (const key of Object.keys(this.contexts$.value)) {\r\n        contextToLoad = this.contexts$.value[key].find((c) => {\r\n          return c.uri === uri;\r\n        });\r\n        if (contextToLoad) {\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (contextToLoad && contextToLoad.imported) {\r\n        return of(contextToLoad);\r\n      }\r\n\r\n      // TODO : use always id or uri\r\n      const id = contextToLoad ? contextToLoad.id : uri;\r\n      return this.getDetails(id);\r\n    }\r\n\r\n    const importedContext = this.contexts$.value.ours.find((currentContext) => {\r\n      return currentContext.uri === uri && currentContext.imported === true;\r\n    });\r\n\r\n    if (importedContext) {\r\n      return of(importedContext);\r\n    } else {\r\n      return this.getLocalContext(uri);\r\n    }\r\n  }\r\n\r\n  getContextLayers(igoMap: IgoMap) {\r\n    const layers: Layer[] = [];\r\n    const mapLayers = igoMap.layers$.getValue();\r\n    mapLayers.forEach((layer) => {\r\n      if (!layer.baseLayer && layer.options.id !== 'searchPointerSummaryId') {\r\n        layers.push(layer);\r\n      }\r\n    });\r\n    return layers;\r\n  }\r\n\r\n  private readParamsFromRoute() {\r\n    if (!this.route) {\r\n      return;\r\n    }\r\n\r\n    this.route.queryParams.subscribe((params) => {\r\n      const centerKey = this.route.options.centerKey;\r\n      if (centerKey && params[centerKey as string]) {\r\n        const centerParams = params[centerKey as string];\r\n        this.mapViewFromRoute.center = centerParams.split(',').map(Number);\r\n        this.mapViewFromRoute.geolocate = false;\r\n      }\r\n\r\n      const projectionKey = this.route.options.projectionKey;\r\n      if (projectionKey && params[projectionKey as string]) {\r\n        const projectionParam = params[projectionKey as string];\r\n        this.mapViewFromRoute.projection = projectionParam;\r\n      }\r\n\r\n      const zoomKey = this.route.options.zoomKey;\r\n      if (zoomKey && params[zoomKey as string]) {\r\n        const zoomParam = params[zoomKey as string];\r\n        this.mapViewFromRoute.zoom = Number(zoomParam);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getPath(file: string) {\r\n    const basePath = this.options.basePath.replace(/\\/$/, '');\r\n\r\n    return `${basePath}/${file}`;\r\n  }\r\n\r\n  private handleError(\r\n    error: HttpErrorResponse,\r\n    uri: string,\r\n    permissionError?: boolean\r\n  ): Message[] {\r\n    const context = this.contexts$.value.ours.find((obj) => obj.uri === uri);\r\n    const titleContext = context ? context.title : uri;\r\n    error.error.title = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.title'\r\n    );\r\n\r\n    error.error.message = this.languageService.translate.instant(\r\n      'igo.context.contextManager.invalid.text',\r\n      { value: titleContext }\r\n    );\r\n\r\n    error.error.toDisplay = true;\r\n\r\n    if (permissionError) {\r\n      error.error.title = this.languageService.translate.instant(\r\n        'igo.context.contextManager.errors.addPermissionTitle'\r\n      );\r\n      error.error.message = this.languageService.translate.instant(\r\n        'igo.context.contextManager.errors.addPermission'\r\n      );\r\n    }\r\n\r\n    throw error;\r\n  }\r\n\r\n  private handleContextsChange(\r\n    contexts: ContextsList,\r\n    keepCurrentContext = true\r\n  ) {\r\n    const context = this.context$.value;\r\n    const editedContext = this.editedContext$.value;\r\n\r\n    if (!keepCurrentContext || !this.findContext(context)) {\r\n      this.loadDefaultContext();\r\n    } else {\r\n      if (context.map.view.keepCurrentView === undefined) {\r\n        context.map.view.keepCurrentView = true;\r\n      }\r\n      this.context$.next(context);\r\n      if (this.baseUrl && this.authService.authenticated) {\r\n        this.getDefault().subscribe();\r\n      }\r\n    }\r\n    const editedFound = this.findContext(editedContext);\r\n    if (!editedFound || editedFound.permission !== 'write') {\r\n      this.setEditedContext(undefined);\r\n    }\r\n  }\r\n\r\n  private addContextToList(context: Context) {\r\n    const contextFound = this.findContext(context);\r\n    if (!contextFound) {\r\n      const contextSimplifie = {\r\n        id: context.id,\r\n        uri: context.uri,\r\n        title: context.title,\r\n        scope: context.scope,\r\n        permission: TypePermission[TypePermission.read]\r\n      };\r\n\r\n      if (this.contexts$.value && this.contexts$.value.public) {\r\n        this.contexts$.value.public.push(contextSimplifie);\r\n        this.contexts$.next(this.contexts$.value);\r\n      }\r\n    }\r\n  }\r\n\r\n  private findContext(context: Context) {\r\n    if (!context) {\r\n      return false;\r\n    }\r\n\r\n    const contexts = this.contexts$.value;\r\n    let found;\r\n    for (const key of Object.keys(contexts)) {\r\n      const value = contexts[key];\r\n      found = value.find(\r\n        (c) =>\r\n          (context.id && c.id === context.id) ||\r\n          (context.uri && c.uri === context.uri)\r\n      );\r\n      if (found) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    return found;\r\n  }\r\n}\r\n","export class ImportError extends Error {}\r\n\r\nexport class ImportInvalidFileError extends ImportError {\r\n  constructor() {\r\n    super('Invalid file');\r\n    Object.setPrototypeOf(this, ImportInvalidFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportUnreadableFileError extends ImportError {\r\n  constructor() {\r\n      super('Failed to read file');\r\n      Object.setPrototypeOf(this, ImportUnreadableFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportNothingToImportError extends ImportError {\r\n  constructor() {\r\n      super('Nothing to import');\r\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportSizeError extends ImportError {\r\n  constructor() {\r\n      super('File is too large');\r\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportSRSError extends ImportError {\r\n  constructor() {\r\n      super('Invalid SRS definition');\r\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, Observer } from 'rxjs';\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport {\r\n  ImportInvalidFileError,\r\n  ImportUnreadableFileError,\r\n  ImportSizeError\r\n} from './context-import.errors';\r\nimport { getFileExtension } from './context-import.utils';\r\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContextImportService {\r\n  static allowedMimeTypes = ['application/json'];\r\n\r\n  static allowedExtensions = 'json';\r\n\r\n  private clientSideFileSizeMax: number;\r\n\r\n  constructor(private config: ConfigService) {\r\n    const configFileSizeMb = this.config.getConfig(\r\n      'importExport.clientSideFileSizeMaxMb'\r\n    );\r\n    this.clientSideFileSizeMax =\r\n      (configFileSizeMb ? configFileSizeMb : 30) * Math.pow(1024, 2);\r\n  }\r\n\r\n  import(file: File): Observable<DetailedContext> {\r\n    return this.importAsync(file);\r\n  }\r\n\r\n  private getFileImporter(\r\n    file: File\r\n  ): (\r\n    file: File,\r\n    observer: Observer<DetailedContext>,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) => void {\r\n    const extension = getFileExtension(file);\r\n    const mimeType = file.type;\r\n    const allowedMimeTypes = [...ContextImportService.allowedMimeTypes];\r\n    const allowedExtensions = ContextImportService.allowedExtensions;\r\n\r\n    if (\r\n      allowedMimeTypes.indexOf(mimeType) < 0 &&\r\n      allowedExtensions.indexOf(extension) < 0\r\n    ) {\r\n      return undefined;\r\n    } else if (\r\n      mimeType === 'application/json' ||\r\n      extension === ContextImportService.allowedExtensions\r\n    ) {\r\n      return this.importFile;\r\n    }\r\n    return undefined;\r\n  }\r\n\r\n  private importAsync(file: File): Observable<DetailedContext> {\r\n    const doImport = (observer: Observer<DetailedContext>) => {\r\n      if (file.size >= this.clientSideFileSizeMax) {\r\n        observer.error(new ImportSizeError());\r\n        return;\r\n      }\r\n      const importer = this.getFileImporter(file);\r\n      if (importer === undefined) {\r\n        observer.error(new ImportInvalidFileError());\r\n        return;\r\n      }\r\n\r\n      importer.call(this, file, observer);\r\n    };\r\n\r\n    return new Observable(doImport);\r\n  }\r\n\r\n  private importFile(file: File, observer: Observer<DetailedContext>) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event: any) => {\r\n      try {\r\n        const context = this.parseContextFromFile(file, event.target.result);\r\n        observer.next(context);\r\n      } catch (e) {\r\n        observer.error(new ImportUnreadableFileError());\r\n      }\r\n\r\n      observer.complete();\r\n    };\r\n\r\n    reader.onerror = (evt) => {\r\n      observer.error(new ImportUnreadableFileError());\r\n    };\r\n\r\n    reader.readAsText(file, 'UTF-8');\r\n  }\r\n\r\n  private parseContextFromFile(file: File, data: string): DetailedContext {\r\n    const context: DetailedContext = JSON.parse(data);\r\n    return context;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { downloadContent } from '@igo2/utils';\r\n\r\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\r\nimport { ExportNothingToExportError } from './context-export.errors';\r\nimport { Observer, Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContextExportService {\r\n\r\n  export(res: DetailedContext): Observable<void> {\r\n    return this.exportAsync(res);\r\n  }\r\n\r\n  protected exportAsync(res: DetailedContext): Observable<void> {\r\n    const doExport = (observer: Observer<void>) => {\r\n        const nothingToExport = this.nothingToExport(res);\r\n        if (nothingToExport === true) {\r\n            observer.error(new ExportNothingToExportError());\r\n            return;\r\n        }\r\n        const contextJSON = JSON.stringify(res);\r\n        downloadContent(contextJSON, 'text/json;charset=utf-8', `${res.uri}.json`);\r\n        observer.complete();\r\n    };\r\n    return new Observable(doExport);\r\n  }\r\n\r\n  protected nothingToExport(res: DetailedContext): boolean {\r\n    if (res.map === undefined) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService, ConfigService } from '@igo2/core';\r\nimport { IgoMap, Layer, VectorLayer } from '@igo2/geo';\r\n\r\nimport { handleFileExportError } from '../shared/context-export.utils';\r\nimport {\r\n  handleFileImportSuccess,\r\n  handleFileImportError\r\n} from '../shared/context-import.utils';\r\nimport { handleFileExportSuccess } from '../shared/context-export.utils';\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\nimport { ContextImportService } from '../shared/context-import.service';\r\nimport { ContextExportService } from '../shared/context-export.service';\r\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-import-export',\r\n  templateUrl: './context-import-export.component.html',\r\n  styleUrls: ['./context-import-export.component.scss']\r\n})\r\nexport class ContextImportExportComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public layers: VectorLayer[];\r\n  public inputProj: string = 'EPSG:4326';\r\n  public loading$ = new BehaviorSubject(false);\r\n  public forceNaming = false;\r\n  public layerList: Layer[];\r\n  public res: DetailedContext;\r\n  private clientSideFileSizeMax: number;\r\n  public fileSizeMb: number;\r\n  public activeImportExport: string = 'import';\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  constructor(\r\n    private contextImportService: ContextImportService,\r\n    private contextExportService: ContextExportService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private formBuilder: FormBuilder,\r\n    private config: ConfigService,\r\n    private contextService: ContextService\r\n  ) {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const configFileSizeMb = this.config.getConfig(\r\n      'importExport.clientSideFileSizeMaxMb'\r\n    );\r\n    this.clientSideFileSizeMax =\r\n      (configFileSizeMb ? configFileSizeMb : 30) * Math.pow(1024, 2);\r\n    this.fileSizeMb = this.clientSideFileSizeMax / Math.pow(1024, 2);\r\n    this.layerList = this.contextService.getContextLayers(this.map);\r\n  }\r\n\r\n  importFiles(files: File[]) {\r\n    this.loading$.next(true);\r\n    for (const file of files) {\r\n      this.contextImportService.import(file).subscribe(\r\n        (context: DetailedContext) => this.onFileImportSuccess(file, context),\r\n        (error: Error) => this.onFileImportError(file, error),\r\n        () => {\r\n          this.loading$.next(false);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleExportFormSubmit(contextOptions) {\r\n    this.loading$.next(true);\r\n    this.res = this.contextService.getContextFromLayers(this.map, contextOptions.layers, contextOptions.name);\r\n    this.res.imported = true;\r\n    this.contextExportService\r\n      .export(this.res)\r\n      .subscribe(\r\n        () => {},\r\n        (error: Error) => this.onFileExportError(error),\r\n        () => {\r\n          this.onFileExportSuccess();\r\n          this.loading$.next(false);\r\n        }\r\n      );\r\n}\r\n\r\n  private buildForm() {\r\n    this.form = this.formBuilder.group({\r\n        layers: ['', [Validators.required]],\r\n        name: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private onFileImportSuccess(file: File, context: DetailedContext) {\r\n    handleFileImportSuccess(\r\n    file,\r\n    context,\r\n    this.messageService,\r\n    this.languageService,\r\n    this.contextService\r\n    );\r\n  }\r\n\r\n  private onFileImportError(file: File, error: Error) {\r\n    this.loading$.next(false);\r\n    handleFileImportError(\r\n      file,\r\n      error,\r\n      this.messageService,\r\n      this.languageService,\r\n      this.fileSizeMb\r\n    );\r\n  }\r\n\r\n  private onFileExportError(error: Error) {\r\n    this.loading$.next(false);\r\n    handleFileExportError(error, this.messageService, this.languageService);\r\n  }\r\n\r\n  private onFileExportSuccess() {\r\n    handleFileExportSuccess(this.messageService, this.languageService);\r\n  }\r\n\r\n  selectAll(e) {\r\n    if (e._selected) {\r\n        this.form.controls.layers.setValue(this.layerList);\r\n        e._selected = true;\r\n    }\r\n    if (e._selected === false) {\r\n        this.form.controls.layers.setValue([]);\r\n    }\r\n  }\r\n\r\n  onImportExportChange(event) {\r\n    this.activeImportExport = event.value;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatTabsModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatTooltipModule,\r\n  MatCheckboxModule,\r\n  MatButtonToggleModule,\r\n} from '@angular/material';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { ContextImportExportComponent } from './context-import-export/context-import-export.component';\r\nimport { IgoSpinnerModule } from '@igo2/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatDividerModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatCheckboxModule,\r\n    IgoLanguageModule,\r\n    IgoSpinnerModule,\r\n    MatTooltipModule,\r\n  ],\r\n  exports: [\r\n    ContextImportExportComponent\r\n  ],\r\n  declarations: [\r\n    ContextImportExportComponent\r\n  ]\r\n})\r\nexport class IgoContextImportExportModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextImportExportModule\r\n    };\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-dialog',\r\n  templateUrl: './bookmark-dialog.component.html'\r\n})\r\nexport class BookmarkDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<BookmarkDialogComponent>) {}\r\n}\r\n","import { Directive, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\nimport { IgoMap, MapViewOptions, MapBrowserComponent } from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext, ContextMapView } from './context.interface';\r\n\r\n@Directive({\r\n  selector: '[igoMapContext]'\r\n})\r\nexport class MapContextDirective implements OnInit, OnDestroy {\r\n  private component: MapBrowserComponent;\r\n  private context$$: Subscription;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    component: MapBrowserComponent,\r\n    private contextService: ContextService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter(context => context !== undefined))\r\n      .subscribe(context => this.handleContextChange(context));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.map === undefined) {\r\n      return;\r\n    }\r\n\r\n    // This creates a new ol.Map when the context changes. Doing that\r\n    // allows the print tool to work properly even when the map's canvas\r\n    // has been tainted (CORS) with the layers of another context. This could\r\n    // have some side effects such as unbinding all listeners on the first map.\r\n    // A better solution would be to create a new map (preview) before\r\n    // printing and avoid the tainted canvas issue. This will come later so\r\n    // this snippet of code is kept here in case it takes too long becomes\r\n    // an issue\r\n\r\n    // const target = this.component.map.ol.getTarget();\r\n    // this.component.map.ol.setTarget(undefined);\r\n    // this.component.map.init();\r\n    // this.component.map.ol.setTarget(target);\r\n\r\n    const viewContext: ContextMapView = context.map.view;\r\n    if (!this.component.view || viewContext.keepCurrentView !== true) {\r\n      this.component.view = viewContext as MapViewOptions;\r\n    }\r\n  }\r\n}\r\n","import { Directive, OnInit, OnDestroy, Optional, Input } from '@angular/core';\r\n\r\nimport { Subscription, merge } from 'rxjs';\r\nimport { buffer, debounceTime, filter } from 'rxjs/operators';\r\n\r\nimport { RouteService, ConfigService } from '@igo2/core';\r\nimport {\r\n  IgoMap,\r\n  MapBrowserComponent,\r\n  Layer,\r\n  LayerService,\r\n  LayerOptions,\r\n  StyleListService,\r\n  StyleService\r\n} from '@igo2/geo';\r\n\r\nimport { ContextService } from './context.service';\r\nimport { DetailedContext } from './context.interface';\r\nimport {\r\n  addImportedFeaturesToMap,\r\n  addImportedFeaturesStyledToMap\r\n} from '../../context-import-export/shared/context-import.utils';\r\nimport GeoJSON from 'ol/format/GeoJSON';\r\n\r\n@Directive({\r\n  selector: '[igoLayerContext]'\r\n})\r\nexport class LayerContextDirective implements OnInit, OnDestroy {\r\n  private context$$: Subscription;\r\n  private queryParams: any;\r\n\r\n  private contextLayers: Layer[] = [];\r\n\r\n  @Input() removeLayersOnContextChange: boolean = true;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    private component: MapBrowserComponent,\r\n    private contextService: ContextService,\r\n    private layerService: LayerService,\r\n    private configService: ConfigService,\r\n    private styleListService: StyleListService,\r\n    private styleService: StyleService,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.context$$ = this.contextService.context$\r\n      .pipe(filter((context) => context !== undefined))\r\n      .subscribe((context) => this.handleContextChange(context));\r\n\r\n    if (\r\n      this.route &&\r\n      this.route.options.visibleOnLayersKey &&\r\n      this.route.options.visibleOffLayersKey &&\r\n      this.route.options.contextKey\r\n    ) {\r\n      const queryParams$$ = this.route.queryParams.subscribe((params) => {\r\n        if (Object.keys(params).length > 0) {\r\n          this.queryParams = params;\r\n          queryParams$$.unsubscribe();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.context$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextChange(context: DetailedContext) {\r\n    if (context.layers === undefined) {\r\n      return;\r\n    }\r\n    if (this.removeLayersOnContextChange === true) {\r\n      this.map.removeAllLayers();\r\n    } else {\r\n      this.map.removeLayers(this.contextLayers);\r\n    }\r\n    this.contextLayers = [];\r\n\r\n    const layersAndIndex$ = merge(\r\n      ...context.layers.map((layerOptions: LayerOptions, index: number) => {\r\n        return this.layerService.createAsyncLayer(layerOptions);\r\n      })\r\n    );\r\n\r\n    layersAndIndex$\r\n      .pipe(buffer(layersAndIndex$.pipe(debounceTime(500))))\r\n      .subscribe((layers: Layer[]) => {\r\n        layers = layers\r\n          .filter((layer: Layer) => layer !== undefined)\r\n          .map((layer) => {\r\n            layer.visible = this.computeLayerVisibilityFromUrl(layer);\r\n            layer.zIndex = layer.zIndex;\r\n\r\n            return layer;\r\n          });\r\n\r\n        this.contextLayers.concat(layers);\r\n        this.map.addLayers(layers);\r\n\r\n        if (context.extraFeatures) {\r\n          context.extraFeatures.forEach((featureCollection) => {\r\n            const format = new GeoJSON();\r\n            const title = featureCollection.name;\r\n            featureCollection = JSON.stringify(featureCollection);\r\n            featureCollection = format.readFeatures(featureCollection, {\r\n              dataProjection: 'EPSG:4326',\r\n              featureProjection: 'EPSG:3857'\r\n            });\r\n            if (!this.configService.getConfig('importWithStyle')) {\r\n              addImportedFeaturesToMap(featureCollection, this.map, title);\r\n            } else {\r\n              addImportedFeaturesStyledToMap(\r\n                featureCollection,\r\n                this.map,\r\n                title,\r\n                this.styleListService,\r\n                this.styleService\r\n              );\r\n            }\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  private computeLayerVisibilityFromUrl(layer: Layer): boolean {\r\n    const params = this.queryParams;\r\n    const currentContext = this.contextService.context$.value.uri;\r\n    const currentLayerid: string = layer.id;\r\n\r\n    let visible = layer.visible;\r\n    if (!params || !currentLayerid) {\r\n      return visible;\r\n    }\r\n\r\n    const contextParams = params[this.route.options.contextKey as string];\r\n    if (contextParams === currentContext || !contextParams) {\r\n      let visibleOnLayersParams = '';\r\n      let visibleOffLayersParams = '';\r\n      let visiblelayers: string[] = [];\r\n      let invisiblelayers: string[] = [];\r\n\r\n      if (\r\n        this.route.options.visibleOnLayersKey &&\r\n        params[this.route.options.visibleOnLayersKey as string]\r\n      ) {\r\n        visibleOnLayersParams =\r\n          params[this.route.options.visibleOnLayersKey as string];\r\n      }\r\n      if (\r\n        this.route.options.visibleOffLayersKey &&\r\n        params[this.route.options.visibleOffLayersKey as string]\r\n      ) {\r\n        visibleOffLayersParams =\r\n          params[this.route.options.visibleOffLayersKey as string];\r\n      }\r\n\r\n      /* This order is important because to control whichever\r\n       the order of * param. First whe open and close everything.*/\r\n      if (visibleOnLayersParams === '*') {\r\n        visible = true;\r\n      }\r\n      if (visibleOffLayersParams === '*') {\r\n        visible = false;\r\n      }\r\n\r\n      // After, managing named layer by id (context.json OR id from datasource)\r\n      visiblelayers = visibleOnLayersParams.split(',');\r\n      invisiblelayers = visibleOffLayersParams.split(',');\r\n      if (visiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = true;\r\n      }\r\n      if (invisiblelayers.indexOf(currentLayerid) > -1) {\r\n        visible = false;\r\n      }\r\n    }\r\n\r\n    return visible;\r\n  }\r\n}\r\n","export enum ContextListControlsEnum {\r\n  always = 'always',\r\n  never = 'never',\r\n  default = 'default'\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { LanguageService, StorageService } from '@igo2/core';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport {\r\n  DetailedContext,\r\n  ContextsList,\r\n  ContextUserPermission,\r\n  ContextProfils\r\n} from '../shared/context.interface';\r\nimport { ContextListControlsEnum } from './context-list.enum';\r\nimport {\r\n  Subscription,\r\n  BehaviorSubject,\r\n  ReplaySubject,\r\n  EMPTY,\r\n  timer\r\n} from 'rxjs';\r\nimport { MatDialog } from '@angular/material';\r\nimport { BookmarkDialogComponent } from '../../context-map-button/bookmark-button/bookmark-dialog.component';\r\nimport { debounce } from 'rxjs/operators';\r\nimport { ActionStore, ActionbarMode } from '@igo2/common';\r\nimport { ContextService } from '../shared/context.service';\r\n\r\n@Component({\r\n  selector: 'igo-context-list',\r\n  templateUrl: './context-list.component.html',\r\n  styleUrls: ['./context-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContextListComponent implements OnInit, OnDestroy {\r\n  private contextsInitial: ContextsList = { ours: [] };\r\n  contexts$: BehaviorSubject<ContextsList> = new BehaviorSubject(\r\n    this.contextsInitial\r\n  );\r\n\r\n  change$ = new ReplaySubject<void>(1);\r\n\r\n  private change$$: Subscription;\r\n\r\n  @Input()\r\n  get contexts(): ContextsList {\r\n    return this._contexts;\r\n  }\r\n  set contexts(value: ContextsList) {\r\n    this._contexts = value;\r\n    this.cdRef.detectChanges();\r\n    this.next();\r\n  }\r\n  private _contexts: ContextsList = { ours: [] };\r\n\r\n  @Input()\r\n  get selectedContext(): DetailedContext {\r\n    return this._selectedContext;\r\n  }\r\n  set selectedContext(value: DetailedContext) {\r\n    this._selectedContext = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _selectedContext: DetailedContext;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get defaultContextId(): string {\r\n    return this._defaultContextId;\r\n  }\r\n  set defaultContextId(value: string) {\r\n    this._defaultContextId = value;\r\n  }\r\n  private _defaultContextId: string;\r\n\r\n  public collapsed: { contextScope }[] = [];\r\n\r\n  @Output() select = new EventEmitter<DetailedContext>();\r\n  @Output() unselect = new EventEmitter<DetailedContext>();\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() create = new EventEmitter<{ title: string; empty: boolean }>();\r\n  @Output() hide = new EventEmitter<DetailedContext>();\r\n  @Output() show = new EventEmitter<DetailedContext>();\r\n  @Output() showHiddenContexts = new EventEmitter<boolean>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n  @Output() filterPermissionsChanged = new EventEmitter<\r\n    ContextUserPermission[]\r\n  >();\r\n\r\n  public titleMapping = {\r\n    ours: 'igo.context.contextManager.ourContexts',\r\n    shared: 'igo.context.contextManager.sharedContexts',\r\n    public: 'igo.context.contextManager.publicContexts'\r\n  };\r\n\r\n  public users: ContextProfils[];\r\n  public permissions: ContextUserPermission[] = [];\r\n\r\n  public actionStore = new ActionStore([]);\r\n  public actionbarMode = ActionbarMode.Overlay;\r\n\r\n  public color = 'primary';\r\n\r\n  public showHidden = false;\r\n\r\n  /**\r\n   * Context filter term\r\n   */\r\n  @Input()\r\n  set term(value: string) {\r\n    this._term = value;\r\n    this.next();\r\n  }\r\n  get term(): string {\r\n    return this._term;\r\n  }\r\n  public _term: string = '';\r\n\r\n  get sortedAlpha(): boolean {\r\n    return this._sortedAlpha;\r\n  }\r\n  set sortedAlpha(value: boolean) {\r\n    this._sortedAlpha = value;\r\n    this.next();\r\n  }\r\n  private _sortedAlpha: boolean = undefined;\r\n\r\n  public showContextFilter = ContextListControlsEnum.always;\r\n\r\n  public thresholdToFilter = 5;\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private contextService: ContextService,\r\n    public auth: AuthService,\r\n    private dialog: MatDialog,\r\n    private languageService: LanguageService,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.change$$ = this.change$\r\n      .pipe(\r\n        debounce(() => {\r\n          return this.contexts.ours.length === 0 ? EMPTY : timer(50);\r\n        })\r\n      )\r\n      .subscribe(() => {\r\n        this.contexts$.next(this.filterContextsList(this.contexts));\r\n      });\r\n\r\n    this.actionStore.load([\r\n      {\r\n        id: 'emptyContext',\r\n        title: this.languageService.translate.instant(\r\n          'igo.context.contextManager.emptyContext'\r\n        ),\r\n        icon: 'map-outline',\r\n        tooltip: this.languageService.translate.instant(\r\n          'igo.context.contextManager.emptyContextTooltip'\r\n        ),\r\n        handler: () => {\r\n          this.createContext(true);\r\n        }\r\n      },\r\n      {\r\n        id: 'contextFromMap',\r\n        title: this.languageService.translate.instant(\r\n          'igo.context.contextManager.contextMap'\r\n        ),\r\n        icon: 'map-check',\r\n        tooltip: this.languageService.translate.instant(\r\n          'igo.context.contextManager.contextMapTooltip'\r\n        ),\r\n        handler: () => {\r\n          this.createContext(false);\r\n        }\r\n      }\r\n    ]);\r\n  }\r\n\r\n  private next() {\r\n    this.change$.next();\r\n  }\r\n\r\n  private filterContextsList(contexts: ContextsList) {\r\n    if (this.term === '') {\r\n      if (this.sortedAlpha) {\r\n        contexts = this.sortContextsList(contexts);\r\n      }\r\n      return contexts;\r\n    } else {\r\n      const ours = contexts.ours.filter((context) => {\r\n        const filterNormalized = this.term\r\n          .toLowerCase()\r\n          .normalize('NFD')\r\n          .replace(/[\\u0300-\\u036f]/g, '');\r\n        const contextTitleNormalized = context.title\r\n          .toLowerCase()\r\n          .normalize('NFD')\r\n          .replace(/[\\u0300-\\u036f]/g, '');\r\n        return contextTitleNormalized.includes(filterNormalized);\r\n      });\r\n\r\n      let updateContexts: ContextsList = {\r\n        ours\r\n      };\r\n\r\n      if (this.contexts.public) {\r\n        const publics = contexts.public.filter((context) => {\r\n          const filterNormalized = this.term\r\n            .toLowerCase()\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '');\r\n          const contextTitleNormalized = context.title\r\n            .toLowerCase()\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '');\r\n          return contextTitleNormalized.includes(filterNormalized);\r\n        });\r\n        updateContexts.public = publics;\r\n      }\r\n\r\n      if (this.contexts.shared) {\r\n        const shared = contexts.shared.filter((context) => {\r\n          const filterNormalized = this.term\r\n            .toLowerCase()\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '');\r\n          const contextTitleNormalized = context.title\r\n            .toLowerCase()\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '');\r\n          return contextTitleNormalized.includes(filterNormalized);\r\n        });\r\n        updateContexts.shared = shared;\r\n      }\r\n\r\n      if (this.sortedAlpha) {\r\n        updateContexts = this.sortContextsList(updateContexts);\r\n      }\r\n      return updateContexts;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.change$$.unsubscribe();\r\n  }\r\n\r\n  public showFilter() {\r\n    switch (this.showContextFilter) {\r\n      case ContextListControlsEnum.always:\r\n        return true;\r\n      case ContextListControlsEnum.never:\r\n        return false;\r\n      default:\r\n        let totalLength = this.contexts.ours.length;\r\n        this.contexts.public\r\n          ? (totalLength += this.contexts.public.length)\r\n          : (totalLength += 0);\r\n        this.contexts.shared\r\n          ? (totalLength += this.contexts.shared.length)\r\n          : (totalLength += 0);\r\n        if (totalLength >= this.thresholdToFilter) {\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  }\r\n\r\n  sortContextsList(contexts: ContextsList) {\r\n    if (contexts) {\r\n      const contextsList = JSON.parse(JSON.stringify(contexts));\r\n      contextsList.ours.sort((a, b) => {\r\n        if (this.normalize(a.title) < this.normalize(b.title)) {\r\n          return -1;\r\n        }\r\n        if (this.normalize(a.title) > this.normalize(b.title)) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n\r\n      if (contextsList.shared) {\r\n        contextsList.shared.sort((a, b) => {\r\n          if (this.normalize(a.title) < this.normalize(b.title)) {\r\n            return -1;\r\n          }\r\n          if (this.normalize(a.title) > this.normalize(b.title)) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      } else if (contextsList.public) {\r\n        contextsList.public.sort((a, b) => {\r\n          if (this.normalize(a.title) < this.normalize(b.title)) {\r\n            return -1;\r\n          }\r\n          if (this.normalize(a.title) > this.normalize(b.title)) {\r\n            return 1;\r\n          }\r\n          return 0;\r\n        });\r\n      }\r\n      return contextsList;\r\n    }\r\n  }\r\n\r\n  normalize(str: string) {\r\n    return str\r\n      .normalize('NFD')\r\n      .replace(/[\\u0300-\\u036f]/g, '')\r\n      .toLowerCase();\r\n  }\r\n\r\n  toggleSort(sortAlpha: boolean) {\r\n    this.sortedAlpha = sortAlpha;\r\n  }\r\n\r\n  clearFilter() {\r\n    this.term = '';\r\n  }\r\n\r\n  createContext(empty?: boolean) {\r\n    this.dialog\r\n      .open(BookmarkDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe((title) => {\r\n        if (title) {\r\n          this.create.emit({ title, empty });\r\n        }\r\n      });\r\n  }\r\n\r\n  getPermission(user?): ContextUserPermission {\r\n    if (user) {\r\n      const permission = this.permissions.find((p) => p.name === user.name);\r\n      return permission;\r\n    }\r\n  }\r\n\r\n  userSelection(user, parent?) {\r\n    const permission = this.getPermission(user);\r\n    if (permission) {\r\n      permission.checked = !permission.checked;\r\n      this.storageService.set(\r\n        'contexts.permissions.' + permission.name,\r\n        permission.checked\r\n      );\r\n      permission.indeterminate = false;\r\n    }\r\n\r\n    if (parent) {\r\n      let indeterminate = false;\r\n\r\n      for (const c of parent.childs) {\r\n        const cPermission = this.getPermission(c);\r\n        if (cPermission.checked !== permission.checked) {\r\n          indeterminate = true;\r\n          break;\r\n        }\r\n      }\r\n      const parentPermission = this.getPermission(parent);\r\n      if (parentPermission) {\r\n        parentPermission.checked = permission.checked;\r\n        this.storageService.set(\r\n          'contexts.permissions.' + parentPermission.name,\r\n          permission.checked\r\n        );\r\n        parentPermission.indeterminate = indeterminate;\r\n      }\r\n    }\r\n\r\n    if (user.childs) {\r\n      for (const c of user.childs) {\r\n        const childrenPermission = this.getPermission(c);\r\n        if (\r\n          childrenPermission &&\r\n          childrenPermission.checked !== permission.checked\r\n        ) {\r\n          childrenPermission.checked = permission.checked;\r\n          this.storageService.set(\r\n            'contexts.permissions.' + childrenPermission.name,\r\n            permission.checked\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    this.filterPermissionsChanged.emit(this.permissions);\r\n  }\r\n\r\n  hideContext(context: DetailedContext) {\r\n    context.hidden = true;\r\n    if (!this.showHidden) {\r\n      const contexts: ContextsList = { ours: [], shared: [], public: [] };\r\n      contexts.ours = this.contexts.ours.filter((c) => c.id !== context.id);\r\n      contexts.shared = this.contexts.shared.filter((c) => c.id !== context.id);\r\n      contexts.public = this.contexts.public.filter((c) => c.id !== context.id);\r\n      this.contexts = contexts;\r\n    }\r\n    this.hide.emit(context);\r\n  }\r\n\r\n  showContext(context: DetailedContext) {\r\n    context.hidden = false;\r\n    this.show.emit(context);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { MessageService, LanguageService, StorageService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { MapService } from '@igo2/geo';\r\n\r\nimport {\r\n  Context,\r\n  DetailedContext,\r\n  ContextsList,\r\n  ContextUserPermission\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextListComponent } from './context-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextListBinding]'\r\n})\r\nexport class ContextListBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextListComponent;\r\n  private contexts$$: Subscription;\r\n  private selectedContext$$: Subscription;\r\n  private defaultContextId$$: Subscription;\r\n\r\n  @HostListener('select', ['$event'])\r\n  onSelect(context: Context) {\r\n    this.contextService.loadContext(context.uri);\r\n  }\r\n\r\n  @HostListener('edit', ['$event'])\r\n  onEdit(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('save', ['$event'])\r\n  onSave(context: Context) {\r\n    const map = this.mapService.getMap();\r\n    const contextFromMap = this.contextService.getContextFromMap(map);\r\n\r\n    const msgSuccess = () => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.saveMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.saveTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    };\r\n\r\n    if (context.imported) {\r\n      contextFromMap.title = context.title;\r\n      this.contextService.delete(context.id, true);\r\n      this.contextService.create(contextFromMap).subscribe((contextCreated) => {\r\n        this.contextService.loadContext(contextCreated.uri);\r\n        msgSuccess();\r\n      });\r\n      return;\r\n    }\r\n\r\n    const changes: any = {\r\n      layers: contextFromMap.layers,\r\n      map: {\r\n        view: contextFromMap.map.view\r\n      }\r\n    };\r\n\r\n    this.contextService.update(context.id, changes).subscribe(() => {\r\n      msgSuccess();\r\n    });\r\n  }\r\n\r\n  @HostListener('favorite', ['$event'])\r\n  onFavorite(context: Context) {\r\n    this.contextService.setDefault(context.id).subscribe(() => {\r\n      this.contextService.defaultContextId$.next(context.id);\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.favoriteTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('manageTools', ['$event'])\r\n  onManageTools(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('managePermissions', ['$event'])\r\n  onManagePermissions(context: Context) {\r\n    this.contextService.loadEditedContext(context.uri);\r\n  }\r\n\r\n  @HostListener('delete', ['$event'])\r\n  onDelete(context: Context) {\r\n    const translate = this.languageService.translate;\r\n    this.confirmDialogService\r\n      .open(\r\n        translate.instant('igo.context.contextManager.dialog.confirmDelete')\r\n      )\r\n      .subscribe((confirm) => {\r\n        if (confirm) {\r\n          this.contextService\r\n            .delete(context.id, context.imported)\r\n            .subscribe(() => {\r\n              const message = translate.instant(\r\n                'igo.context.contextManager.dialog.deleteMsg',\r\n                {\r\n                  value: context.title\r\n                }\r\n              );\r\n              const title = translate.instant(\r\n                'igo.context.contextManager.dialog.deleteTitle'\r\n              );\r\n              this.messageService.info(message, title);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  @HostListener('clone', ['$event'])\r\n  onClone(context: DetailedContext) {\r\n    const properties = {\r\n      title: context.title + '-copy',\r\n      uri: context.uri + '-copy'\r\n    };\r\n    this.contextService.clone(context.id, properties).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.cloneTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  @HostListener('create', ['$event'])\r\n  onCreate(opts: { title: string; empty: boolean }) {\r\n    const { title, empty } = opts;\r\n    const context = this.contextService.getContextFromMap(\r\n      this.component.map,\r\n      empty\r\n    );\r\n    context.title = title;\r\n    this.contextService.create(context).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const titleD = translate.instant(\r\n        'igo.context.bookmarkButton.dialog.createTitle'\r\n      );\r\n      const message = translate.instant(\r\n        'igo.context.bookmarkButton.dialog.createMsg',\r\n        {\r\n          value: context.title\r\n        }\r\n      );\r\n      this.messageService.success(message, titleD);\r\n      this.contextService.loadContext(context.uri);\r\n    });\r\n  }\r\n\r\n  @HostListener('filterPermissionsChanged')\r\n  loadContexts() {\r\n    const permissions = ['none'];\r\n    for (const p of this.component.permissions) {\r\n      if (p.checked === true || p.indeterminate === true) {\r\n        permissions.push(p.name);\r\n      }\r\n    }\r\n    this.component.showHidden\r\n      ? this.contextService.loadContexts(permissions, true)\r\n      : this.contextService.loadContexts(permissions, false);\r\n  }\r\n\r\n  @HostListener('showHiddenContexts')\r\n  showHiddenContexts() {\r\n    this.component.showHidden = !this.component.showHidden;\r\n    this.storageService.set('contexts.showHidden', this.component.showHidden);\r\n    this.loadContexts();\r\n  }\r\n\r\n  @HostListener('show', ['$event'])\r\n  onShowContext(context: DetailedContext) {\r\n    this.contextService.showContext(context.id).subscribe();\r\n  }\r\n\r\n  @HostListener('hide', ['$event'])\r\n  onHideContext(context: DetailedContext) {\r\n    this.contextService.hideContext(context.id).subscribe();\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextListComponent,\r\n    private contextService: ContextService,\r\n    private mapService: MapService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService,\r\n    private messageService: MessageService,\r\n    private auth: AuthService,\r\n    private storageService: StorageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input contexts\r\n    this.component.contexts = { ours: [] };\r\n    this.component.showHidden = this.storageService.get(\r\n      'contexts.showHidden'\r\n    ) as boolean;\r\n\r\n    this.contexts$$ = this.contextService.contexts$.subscribe((contexts) =>\r\n      this.handleContextsChange(contexts)\r\n    );\r\n\r\n    this.defaultContextId$$ = this.contextService.defaultContextId$.subscribe(\r\n      (id) => {\r\n        this.component.defaultContextId = id;\r\n      }\r\n    );\r\n\r\n    // See feature-list.component for an explanation about the debounce time\r\n    this.selectedContext$$ = this.contextService.context$\r\n      .pipe(debounceTime(100))\r\n      .subscribe((context) => (this.component.selectedContext = context));\r\n\r\n    this.auth.authenticate$.subscribe((authenticate) => {\r\n      if (authenticate) {\r\n        this.contextService.getProfilByUser().subscribe((profils) => {\r\n          this.component.users = profils;\r\n          this.component.permissions = [];\r\n          const profilsAcc = this.component.users.reduce((acc, cur) => {\r\n            acc = acc.concat(cur);\r\n            acc = cur.childs ? acc.concat(cur.childs) : acc;\r\n            return acc;\r\n          }, []);\r\n          for (const user of profilsAcc) {\r\n            const permission: ContextUserPermission = {\r\n              name: user.name,\r\n              checked: this.storageService.get(\r\n                'contexts.permissions.' + user.name\r\n              ) as boolean\r\n            };\r\n            this.component.permissions.push(permission);\r\n          }\r\n          const permissions = ['none'];\r\n          for (const p of this.component.permissions) {\r\n            if (p.checked === true || p.indeterminate === true) {\r\n              permissions.push(p.name);\r\n            }\r\n          }\r\n          this.component.showHidden\r\n            ? this.contextService.loadContexts(permissions, true)\r\n            : this.contextService.loadContexts(permissions, false);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contexts$$.unsubscribe();\r\n    this.selectedContext$$.unsubscribe();\r\n    this.defaultContextId$$.unsubscribe();\r\n  }\r\n\r\n  private handleContextsChange(contexts: ContextsList) {\r\n    this.component.contexts = contexts;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { StorageService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { TypePermission } from '../shared/context.enum';\r\nimport { DetailedContext } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-item',\r\n  templateUrl: './context-item.component.html',\r\n  styleUrls: ['./context-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class ContextItemComponent {\r\n  public typePermission = TypePermission;\r\n  public color = 'primary';\r\n  public collapsed = true;\r\n\r\n  @Input()\r\n  get context(): DetailedContext {\r\n    return this._context;\r\n  }\r\n  set context(value: DetailedContext) {\r\n    this._context = value;\r\n  }\r\n  private _context: DetailedContext;\r\n\r\n  @Input()\r\n  get default(): boolean {\r\n    return this._default;\r\n  }\r\n  set default(value: boolean) {\r\n    this._default = value;\r\n  }\r\n  private _default = false;\r\n\r\n  @Input() selected: boolean;\r\n\r\n  @Output() edit = new EventEmitter<DetailedContext>();\r\n  @Output() delete = new EventEmitter<DetailedContext>();\r\n  @Output() save = new EventEmitter<DetailedContext>();\r\n  @Output() clone = new EventEmitter<DetailedContext>();\r\n  @Output() hide = new EventEmitter<DetailedContext>();\r\n  @Output() show = new EventEmitter<DetailedContext>();\r\n  @Output() favorite = new EventEmitter<DetailedContext>();\r\n  @Output() managePermissions = new EventEmitter<DetailedContext>();\r\n  @Output() manageTools = new EventEmitter<DetailedContext>();\r\n\r\n  get hidden(): boolean {\r\n    return this.context.hidden;\r\n  }\r\n\r\n  get canShare(): boolean {\r\n    return this.storageService.get('canShare') === true;\r\n  }\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private storageService: StorageService\r\n  ) {}\r\n\r\n  favoriteClick(context) {\r\n    if (this.auth.authenticated) {\r\n      this.favorite.emit(context);\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { ObjectUtils, Clipboard } from '@igo2/utils';\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-form',\r\n  templateUrl: './context-form.component.html',\r\n  styleUrls: ['./context-form.component.scss']\r\n})\r\nexport class ContextFormComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public prefix: string;\r\n\r\n  @Input()\r\n  get btnSubmitText(): string {\r\n    return this._btnSubmitText;\r\n  }\r\n  set btnSubmitText(value: string) {\r\n    this._btnSubmitText = value;\r\n  }\r\n  private _btnSubmitText: string;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.buildForm();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled = false;\r\n\r\n  // TODO: replace any by ContextOptions or Context\r\n  @Output() submitForm: EventEmitter<any> = new EventEmitter();\r\n  @Output() clone: EventEmitter<any> = new EventEmitter();\r\n  @Output() delete: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    let inputs = Object.assign({}, value);\r\n    inputs = ObjectUtils.removeNull(inputs);\r\n    inputs.uri = inputs.uri.replace(' ', '');\r\n    if (inputs.uri) {\r\n      inputs.uri = this.prefix + '-' + inputs.uri;\r\n    } else {\r\n      inputs.uri = this.prefix;\r\n    }\r\n    this.submitForm.emit(inputs);\r\n  }\r\n\r\n  public copyTextToClipboard() {\r\n    const text = this.prefix + '-' + this.form.value.uri.replace(' ', '');\r\n    const successful = Clipboard.copy(text);\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.dialog.copyTitle'\r\n      );\r\n      const msg = translate.instant(\r\n        'igo.context.contextManager.dialog.copyMsg'\r\n      );\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const context: any = this.context || {};\r\n\r\n    const uriSplit = context.uri.split('-');\r\n    this.prefix = uriSplit.shift();\r\n    const uri = uriSplit.join('-');\r\n\r\n    this.form = this.formBuilder.group({\r\n      title: [context.title],\r\n      uri: [uri || ' ']\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectorRef } from '@angular/core';\r\n\r\nimport { Context } from '../shared/context.interface';\r\n\r\n@Component({\r\n  selector: 'igo-context-edit',\r\n  templateUrl: './context-edit.component.html'\r\n})\r\nexport class ContextEditComponent {\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.refresh();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Output() submitForm: EventEmitter<Context> = new EventEmitter();\r\n\r\n  constructor(private cd: ChangeDetectorRef) {}\r\n\r\n  refresh() {\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Output,\r\n  EventEmitter,\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { Context, DetailedContext } from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextEditComponent } from './context-edit.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextEditBinding]'\r\n})\r\nexport class ContextEditBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextEditComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @Output() submitSuccessed: EventEmitter<Context> = new EventEmitter();\r\n\r\n  @HostListener('submitForm', ['$event'])\r\n  onEdit(context: Context) {\r\n    const id = this.component.context.id;\r\n    this.contextService.update(id, context).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant('igo.context.contextManager.dialog.saveMsg', {\r\n        value: context.title || this.component.context.title\r\n      });\r\n      const title = translate.instant('igo.context.contextManager.dialog.saveTitle');\r\n      this.messageService.success(message, title);\r\n      this.contextService.setEditedContext(undefined);\r\n      this.submitSuccessed.emit(context);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextEditComponent,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  ContextPermissionsList,\r\n  ContextProfils\r\n} from '../shared/context.interface';\r\nimport { TypePermission } from '../shared/context.enum';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\n\r\n@Component({\r\n  selector: 'igo-context-permissions',\r\n  templateUrl: './context-permissions.component.html',\r\n  styleUrls: ['./context-permissions.component.scss']\r\n})\r\nexport class ContextPermissionsComponent implements OnInit {\r\n  public form: FormGroup;\r\n\r\n  @Input()\r\n  get context(): Context {\r\n    return this._context;\r\n  }\r\n  set context(value: Context) {\r\n    this._context = value;\r\n    this.cd.detectChanges();\r\n  }\r\n  private _context: Context;\r\n\r\n  @Input()\r\n  get permissions(): ContextPermissionsList {\r\n    return this._permissions;\r\n  }\r\n  set permissions(value: ContextPermissionsList) {\r\n    this._permissions = value;\r\n    this.cd.detectChanges();\r\n  }\r\n  private _permissions: ContextPermissionsList;\r\n\r\n  get profils(): ContextProfils[] {\r\n    return this._profils;\r\n  }\r\n  set profils(value: ContextProfils[]) {\r\n    this._profils = value;\r\n    this.cd.detectChanges();\r\n  }\r\n  private _profils: ContextProfils[] = [];\r\n\r\n  get canWrite(): boolean {\r\n    return this.context.permission === TypePermission[TypePermission.write];\r\n  }\r\n\r\n  private baseUrlProfils = '/apis/igo2/profils-users?';\r\n\r\n  public formControl = new FormControl();\r\n  formValueChanges$$: Subscription;\r\n\r\n  @Output() addPermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output() removePermission: EventEmitter<ContextPermission> = new EventEmitter();\r\n  @Output() scopeChanged: EventEmitter<Context> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder,\r\n              private cd: ChangeDetectorRef,\r\n              private http: HttpClient,\r\n              public authService: AuthService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.buildForm();\r\n\r\n    this.formValueChanges$$ = this.formControl.valueChanges.subscribe((value) => {\r\n      if (value.length) {\r\n        this.http.get(this.baseUrlProfils + 'q=' + value).subscribe(profils => {\r\n          this.profils = profils as ContextProfils[];\r\n        });\r\n        this.profils.filter((profil) => {\r\n          const filterNormalized = value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n          const profilTitleNormalized = profil.title.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n          const profilNameNormalized = profil.name.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n          const profilNormalized = profilNameNormalized + profilTitleNormalized;\r\n          return profilNormalized.includes(filterNormalized);\r\n        });\r\n      } else {\r\n        this.profils = [];\r\n      }\r\n    });\r\n  }\r\n\r\n  displayFn(profil?: ContextProfils): string | undefined {\r\n    return profil ? profil.title : undefined;\r\n  }\r\n\r\n  public handleFormSubmit(value) {\r\n    this.addPermission.emit(value);\r\n  }\r\n\r\n  private buildForm(): void {\r\n    this.form = this.formBuilder.group({\r\n      profil: [],\r\n      typePermission: ['read']\r\n    });\r\n  }\r\n\r\n  onProfilSelected(value) {\r\n    this.form.setValue({\r\n      profil: value.name,\r\n      typePermission: this.form.value.typePermission\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  OnDestroy,\r\n  HostListener,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport {\r\n  Context,\r\n  ContextPermission,\r\n  DetailedContext\r\n} from '../shared/context.interface';\r\nimport { ContextService } from '../shared/context.service';\r\nimport { ContextPermissionsComponent } from './context-permissions.component';\r\n\r\n@Directive({\r\n  selector: '[igoContextPermissionsBinding]'\r\n})\r\nexport class ContextPermissionsBindingDirective implements OnInit, OnDestroy {\r\n  private component: ContextPermissionsComponent;\r\n  private editedContext$$: Subscription;\r\n\r\n  @HostListener('addPermission', ['$event'])\r\n  onAddPermission(permission: ContextPermission) {\r\n    const translate = this.languageService.translate;\r\n    if (!permission.profil) {\r\n      const message = translate.instant(\r\n        'igo.context.contextManager.errors.addPermissionEmpty'\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.contextManager.errors.addPermissionTitle'\r\n      );\r\n      this.messageService.error(message, title);\r\n      return;\r\n    }\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .addPermissionAssociation(\r\n        contextId,\r\n        permission.profil,\r\n        permission.typePermission\r\n      )\r\n      .subscribe(profils => {\r\n        for (const p of profils) {\r\n          this.component.permissions[permission.typePermission].push(p);\r\n        }\r\n        const profil = permission.profil;\r\n        const message = translate.instant(\r\n          'igo.context.permission.dialog.addMsg',\r\n          {\r\n            value: profil\r\n          }\r\n        );\r\n        const title = translate.instant(\r\n          'igo.context.permission.dialog.addTitle'\r\n        );\r\n        this.messageService.success(message, title);\r\n        this.cd.detectChanges();\r\n      });\r\n  }\r\n\r\n  @HostListener('removePermission', ['$event'])\r\n  onRemovePermission(permission: ContextPermission) {\r\n    const contextId = this.component.context.id;\r\n    this.contextService\r\n      .deletePermissionAssociation(contextId, permission.id)\r\n      .subscribe(() => {\r\n        const index = this.component.permissions[\r\n          permission.typePermission\r\n        ].findIndex(p => {\r\n          return p.id === permission.id;\r\n        });\r\n        this.component.permissions[permission.typePermission].splice(index, 1);\r\n\r\n        const profil = permission.profil;\r\n        const translate = this.languageService.translate;\r\n        const message = translate.instant(\r\n          'igo.context.permission.dialog.deleteMsg',\r\n          {\r\n            value: profil\r\n          }\r\n        );\r\n        const title = translate.instant(\r\n          'igo.context.permission.dialog.deleteTitle'\r\n        );\r\n        this.messageService.success(message, title);\r\n        this.cd.detectChanges();\r\n      });\r\n  }\r\n\r\n  @HostListener('scopeChanged', ['$event'])\r\n  onScopeChanged(context: Context) {\r\n    const scope = context.scope;\r\n    this.contextService.update(context.id, { scope }).subscribe(() => {\r\n      const translate = this.languageService.translate;\r\n      const message = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedMsg',\r\n        {\r\n          value: translate.instant('igo.context.permission.scope.' + scope)\r\n        }\r\n      );\r\n      const title = translate.instant(\r\n        'igo.context.permission.dialog.scopeChangedTitle'\r\n      );\r\n      this.messageService.success(message, title);\r\n    });\r\n  }\r\n\r\n  constructor(\r\n    @Self() component: ContextPermissionsComponent,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private cd: ChangeDetectorRef\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.editedContext$$ = this.contextService.editedContext$.subscribe(\r\n      context => this.handleEditedContextChange(context)\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.editedContext$$.unsubscribe();\r\n    this.contextService.editedContext$.next(undefined);\r\n  }\r\n\r\n  private handleEditedContextChange(context: DetailedContext) {\r\n    this.component.context = context;\r\n\r\n    if (context) {\r\n      this.contextService\r\n        .getPermissions(context.id)\r\n        .subscribe(permissionsArray => {\r\n          permissionsArray = permissionsArray || [];\r\n          const permissions = {\r\n            read: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'read';\r\n            }),\r\n            write: permissionsArray.filter(p => {\r\n              return p.typePermission.toString() === 'write';\r\n            })\r\n          };\r\n          return (this.component.permissions = permissions);\r\n        });\r\n    }\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\nimport { BookmarkDialogComponent } from './bookmark-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-bookmark-button',\r\n  templateUrl: './bookmark-button.component.html',\r\n  styleUrls: ['./bookmark-button.component.scss']\r\n})\r\nexport class BookmarkButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private contextService: ContextService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService\r\n  ) {}\r\n\r\n  createContext() {\r\n    this.dialog\r\n      .open(BookmarkDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          const context = this.contextService.getContextFromMap(this.map);\r\n          context.title = title;\r\n          this.contextService.create(context).subscribe(() => {\r\n            const translate = this.languageService.translate;\r\n            const titleD = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createTitle'\r\n            );\r\n            const message = translate.instant(\r\n              'igo.context.bookmarkButton.dialog.createMsg',\r\n              {\r\n                value: context.title\r\n              }\r\n            );\r\n            this.messageService.success(message, titleD);\r\n            this.contextService.loadContext(context.uri);\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, EMPTY } from 'rxjs';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { Poi } from './poi.interface';\r\n\r\n@Injectable()\r\nexport class PoiService {\r\n  private baseUrl: string;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    this.baseUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  get(): Observable<Poi[]> {\r\n    if (!this.baseUrl) {\r\n      return EMPTY;\r\n    }\r\n\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.get<Poi[]>(url);\r\n  }\r\n\r\n  delete(id: string): Observable<void> {\r\n    const url = this.baseUrl + '/pois/' + id;\r\n    return this.http.delete<void>(url);\r\n  }\r\n\r\n  create(context: Poi): Observable<Poi> {\r\n    const url = this.baseUrl + '/pois';\r\n    return this.http.post<Poi>(url, JSON.stringify(context));\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-poi-dialog',\r\n  templateUrl: './poi-dialog.component.html'\r\n})\r\nexport class PoiDialogComponent {\r\n  public title: string;\r\n\r\n  constructor(public dialogRef: MatDialogRef<PoiDialogComponent>) {}\r\n}\r\n","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as olproj from 'ol/proj';\r\nimport * as oleasing from 'ol/easing';\r\nimport olPoint from 'ol/geom/Point';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { ConfirmDialogService } from '@igo2/common';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { PoiService } from './shared/poi.service';\r\nimport { Poi } from './shared/poi.interface';\r\nimport { PoiDialogComponent } from './poi-dialog.component';\r\n\r\n@Component({\r\n  selector: 'igo-poi-button',\r\n  templateUrl: './poi-button.component.html',\r\n  styleUrls: ['./poi-button.component.scss']\r\n})\r\nexport class PoiButtonComponent implements OnInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public pois: Poi[];\r\n  private authenticate$$: Subscription;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private authService: AuthService,\r\n    private poiService: PoiService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService,\r\n    private confirmDialogService: ConfirmDialogService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.authenticate$$ = this.authService.authenticate$.subscribe(auth => {\r\n      if (auth) {\r\n        this.getPois();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.authenticate$$.unsubscribe();\r\n  }\r\n\r\n  deletePoi(poi: Poi) {\r\n    if (poi && poi.id) {\r\n      const translate = this.languageService.translate;\r\n      this.confirmDialogService\r\n        .open(translate.instant('igo.context.poiButton.dialog.confirmDelete'))\r\n        .subscribe(confirm => {\r\n          if (confirm) {\r\n            this.poiService.delete(poi.id).subscribe(\r\n              () => {\r\n                const title = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteTitle'\r\n                );\r\n                const message = translate.instant(\r\n                  'igo.context.poiButton.dialog.deleteMsg',\r\n                  {\r\n                    value: poi.title\r\n                  }\r\n                );\r\n                this.messageService.info(message, title);\r\n                this.pois = this.pois.filter(p => p.id !== poi.id);\r\n              },\r\n              err => {\r\n                err.error.title = 'DELETE Pois';\r\n                this.messageService.showError(err);\r\n              }\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  private getPois() {\r\n    this.poiService.get().subscribe(\r\n      rep => {\r\n        this.pois = rep;\r\n      },\r\n      err => {\r\n        err.error.title = 'GET Pois';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  createPoi() {\r\n    const view = this.map.ol.getView();\r\n    const proj = view.getProjection().getCode();\r\n    const center: any = new olPoint(view.getCenter()).transform(\r\n      proj,\r\n      'EPSG:4326'\r\n    );\r\n\r\n    const poi: Poi = {\r\n      title: '',\r\n      x: center.getCoordinates()[0],\r\n      y: center.getCoordinates()[1],\r\n      zoom: view.getZoom()\r\n    };\r\n\r\n    this.dialog\r\n      .open(PoiDialogComponent, { disableClose: false })\r\n      .afterClosed()\r\n      .subscribe(title => {\r\n        if (title) {\r\n          poi.title = title;\r\n          this.poiService.create(poi).subscribe(\r\n            newPoi => {\r\n              const translate = this.languageService.translate;\r\n              const titleD = translate.instant(\r\n                'igo.context.poiButton.dialog.createTitle'\r\n              );\r\n              const message = translate.instant(\r\n                'igo.context.poiButton.dialog.createMsg',\r\n                {\r\n                  value: poi.title\r\n                }\r\n              );\r\n              this.messageService.success(message, titleD);\r\n              poi.id = newPoi.id;\r\n              this.pois.push(poi);\r\n            },\r\n            err => {\r\n              err.error.title = 'POST Pois';\r\n              this.messageService.showError(err);\r\n            }\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  zoomOnPoi(id) {\r\n    const poi = this.pois.find(p => p.id === id);\r\n\r\n    const center = olproj.fromLonLat(\r\n      [Number(poi.x), Number(poi.y)],\r\n      this.map.projection\r\n    );\r\n\r\n    this.map.ol.getView().animate({\r\n      center,\r\n      zoom: poi.zoom,\r\n      duration: 500,\r\n      easing: oleasing.easeOut\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { MatDialogRef } from '@angular/material';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\n\r\n@Component({\r\n  selector: 'igo-user-dialog',\r\n  templateUrl: './user-dialog.component.html'\r\n})\r\nexport class UserDialogComponent {\r\n  public user;\r\n  public exp;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<UserDialogComponent>,\r\n    private auth: AuthService\r\n  ) {\r\n    const decodeToken = this.auth.decodeToken();\r\n    this.user = decodeToken.user;\r\n    this.exp = new Date(decodeToken.exp * 1000).toLocaleString();\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function userButtonSlideInOut(): AnimationTriggerMetadata {\r\n  return trigger('userButtonState', [\r\n    state(\r\n      'collapse',\r\n      style({\r\n        width: '0',\r\n        overflow: 'hidden',\r\n        display: 'none'\r\n      })\r\n    ),\r\n    state(\r\n      'expand',\r\n      style({\r\n        overflow: 'hidden',\r\n        display: 'display'\r\n      })\r\n    ),\r\n    transition('collapse => expand', animate('200ms')),\r\n    transition('expand => collapse', animate('200ms'))\r\n  ]);\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { UserDialogComponent } from './user-dialog.component';\r\nimport { userButtonSlideInOut } from './user-button.animation';\r\n\r\n@Component({\r\n  selector: 'igo-user-button',\r\n  templateUrl: './user-button.component.html',\r\n  styleUrls: ['./user-button.component.scss'],\r\n  animations: [userButtonSlideInOut()]\r\n})\r\nexport class UserButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  public expand = false;\r\n  public visible = false;\r\n  public hasApi = false;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private config: ConfigService,\r\n    public auth: AuthService\r\n  ) {\r\n    this.visible = this.config.getConfig('auth') ? true : false;\r\n    this.hasApi = this.config.getConfig('context.url') !== undefined;\r\n  }\r\n\r\n  accountClick() {\r\n    if (this.auth.authenticated) {\r\n      this.expand = !this.expand;\r\n    } else {\r\n      this.auth.logout();\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.expand = false;\r\n    this.auth.logout();\r\n  }\r\n\r\n  infoUser() {\r\n    this.dialog.open(UserDialogComponent, { disableClose: false });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatDialogModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoConfirmDialogModule, IgoStopPropagationModule } from '@igo2/common';\r\nimport { IgoAuthModule } from '@igo2/auth';\r\n\r\nimport { BookmarkButtonComponent } from './bookmark-button/bookmark-button.component';\r\nimport { BookmarkDialogComponent } from './bookmark-button/bookmark-dialog.component';\r\nimport { PoiButtonComponent } from './poi-button/poi-button.component';\r\nimport { PoiDialogComponent } from './poi-button/poi-dialog.component';\r\nimport { PoiService } from './poi-button/shared/poi.service';\r\nimport { UserDialogComponent } from './user-button/user-dialog.component';\r\nimport { UserButtonComponent } from './user-button/user-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    IgoConfirmDialogModule,\r\n    IgoStopPropagationModule,\r\n    IgoAuthModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatDialogModule,\r\n    MatInputModule\r\n  ],\r\n  exports: [BookmarkButtonComponent, PoiButtonComponent, UserButtonComponent, BookmarkDialogComponent],\r\n  declarations: [\r\n    BookmarkButtonComponent,\r\n    BookmarkDialogComponent,\r\n    PoiButtonComponent,\r\n    PoiDialogComponent,\r\n    UserButtonComponent,\r\n    UserDialogComponent\r\n  ],\r\n  entryComponents: [\r\n    BookmarkDialogComponent,\r\n    PoiDialogComponent,\r\n    UserDialogComponent\r\n  ],\r\n  providers: [PoiService]\r\n})\r\nexport class IgoContextMapButtonModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextMapButtonModule\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatCheckboxModule,\r\n  MatRadioModule,\r\n  MatDialogModule,\r\n  MatMenuModule,\r\n  MatOptionModule,\r\n  MatAutocompleteModule\r\n} from '@angular/material';\r\n\r\nimport { IgoAuthModule } from '@igo2/auth';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoListModule,\r\n  IgoKeyValueModule,\r\n  IgoCollapsibleModule,\r\n  IgoStopPropagationModule,\r\n  IgoActionbarModule\r\n} from '@igo2/common';\r\n\r\nimport { BookmarkDialogComponent } from './../context-map-button/bookmark-button/bookmark-dialog.component';\r\nimport { MapContextDirective } from './shared/map-context.directive';\r\nimport { LayerContextDirective } from './shared/layer-context.directive';\r\nimport { ContextListComponent } from './context-list/context-list.component';\r\nimport { ContextListBindingDirective } from './context-list/context-list-binding.directive';\r\nimport { ContextItemComponent } from './context-item/context-item.component';\r\nimport { ContextFormComponent } from './context-form/context-form.component';\r\nimport { ContextEditComponent } from './context-edit/context-edit.component';\r\nimport { ContextEditBindingDirective } from './context-edit/context-edit-binding.directive';\r\nimport { ContextPermissionsComponent } from './context-permissions/context-permissions.component';\r\nimport { ContextPermissionsBindingDirective } from './context-permissions/context-permissions-binding.directive';\r\nimport { IgoContextMapButtonModule } from '../context-map-button/context-map-button.module';\r\nimport { IgoContextImportExportModule } from '../context-import-export/context-import-export.module';\r\n\r\nconst CONTEXT_DIRECTIVES = [\r\n  MapContextDirective,\r\n  LayerContextDirective\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    MatCheckboxModule,\r\n    MatRadioModule,\r\n    MatDialogModule,\r\n    MatMenuModule,\r\n    MatOptionModule,\r\n    MatAutocompleteModule,\r\n    IgoAuthModule,\r\n    IgoListModule,\r\n    IgoKeyValueModule,\r\n    IgoCollapsibleModule,\r\n    IgoStopPropagationModule,\r\n    IgoLanguageModule,\r\n    IgoContextImportExportModule,\r\n    IgoContextMapButtonModule,\r\n    IgoActionbarModule\r\n  ],\r\n  entryComponents: [\r\n    BookmarkDialogComponent\r\n  ],\r\n  exports: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ],\r\n  declarations: [\r\n    ContextListComponent,\r\n    ContextListBindingDirective,\r\n    ContextItemComponent,\r\n    ContextFormComponent,\r\n    ContextEditComponent,\r\n    ContextEditBindingDirective,\r\n    ContextPermissionsComponent,\r\n    ContextPermissionsBindingDirective,\r\n\r\n    ...CONTEXT_DIRECTIVES\r\n  ]\r\n})\r\nexport class IgoContextManagerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextManagerModule\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\n\r\nimport { RouteService, ConfigService, MessageService } from '@igo2/core';\r\nimport { IgoMap, Layer } from '@igo2/geo';\r\n\r\nimport { ContextService } from '../../context-manager/shared/context.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShareMapService {\r\n  private apiUrl: string;\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private contextService: ContextService,\r\n    private messageService: MessageService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.apiUrl = this.config.getConfig('context.url');\r\n  }\r\n\r\n  getUrl(map: IgoMap, formValues, publicShareOption) {\r\n    if (this.apiUrl) {\r\n      return this.getUrlWithApi(map, formValues);\r\n    }\r\n    return this.getUrlWithoutApi(map, publicShareOption);\r\n  }\r\n\r\n  getUrlWithApi(map: IgoMap, formValues) {\r\n    const context = this.contextService.getContextFromMap(map);\r\n    context.scope = 'public';\r\n    context.title = formValues.title;\r\n    context.uri = formValues.uri;\r\n    this.contextService.create(context).subscribe(\r\n      rep => {},\r\n      err => {\r\n        err.error.title = 'Share Map';\r\n        this.messageService.showError(err);\r\n      }\r\n    );\r\n    return `${location.origin + location.pathname}?context=${formValues.uri}`;\r\n  }\r\n\r\n  getUrlWithoutApi(map: IgoMap, publicShareOption) {\r\n    if (\r\n      !this.route ||\r\n      !this.route.options.visibleOnLayersKey ||\r\n      !this.route.options.visibleOffLayersKey ||\r\n      !map.viewController.getZoom()\r\n    ) {\r\n      return;\r\n    }\r\n    const llc = publicShareOption.layerlistControls.querystring;\r\n\r\n    let visibleKey = this.route.options.visibleOnLayersKey;\r\n    let invisibleKey = this.route.options.visibleOffLayersKey;\r\n    const layers = map.layers;\r\n\r\n    const visibleLayers = layers.filter(lay => lay.visible && lay.id !== 'searchPointerSummaryId');\r\n    const invisibleLayers = layers.filter(lay => !lay.visible && lay.id !== 'searchPointerSummaryId');\r\n\r\n    if (visibleLayers.length === 0) {\r\n      visibleKey = '';\r\n    }\r\n    if (invisibleLayers.length === 0) {\r\n      invisibleKey = '';\r\n    }\r\n\r\n    let layersUrl = '';\r\n    let layersToLoop = [];\r\n    if (visibleLayers.length > invisibleLayers.length) {\r\n      layersUrl = `${visibleKey}=*&${invisibleKey}=`;\r\n      layersToLoop = invisibleLayers;\r\n    } else {\r\n      layersUrl = `${invisibleKey}=*&${visibleKey}=`;\r\n      layersToLoop = visibleLayers;\r\n    }\r\n\r\n    for (const layer of layersToLoop) {\r\n      if (layer.id) {\r\n        layersUrl += layer.id + ',';\r\n      }\r\n    }\r\n    const contextLayersID = [];\r\n    const contextLayers = this.contextService.context$.value.layers;\r\n    for (const contextLayer of contextLayers) {\r\n      contextLayersID.push(contextLayer.id || contextLayer.source.id);\r\n    }\r\n\r\n    const addedLayersQueryParamsWms = this.makeLayersByService(layers, contextLayersID, 'wms');\r\n    const addedLayersQueryParamsWmts = this.makeLayersByService(layers, contextLayersID, 'wmts');\r\n\r\n    layersUrl = layersUrl.substr(0, layersUrl.length - 1);\r\n\r\n    const zoomKey = this.route.options.zoomKey;\r\n    const centerKey = this.route.options.centerKey;\r\n    const contextKey = this.route.options.contextKey;\r\n\r\n    const zoom = `${zoomKey}=${map.viewController.getZoom()}`;\r\n    const arrayCenter = map.viewController.getCenter('EPSG:4326') || [];\r\n    const long = arrayCenter[0].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\r\n    const lat = arrayCenter[1].toFixed(5).replace(/\\.([^0]+)0+$/, '.$1');\r\n    const center = `${centerKey}=${long},${lat}`.replace(/.00000/g, '');\r\n    let context = '';\r\n    if (this.contextService.context$.value) {\r\n      context = `${contextKey}=${this.contextService.context$.value.uri}`;\r\n    }\r\n\r\n    let url = `${location.origin}${location.pathname}?${context}&${zoom}&${center}&${layersUrl}&${llc}&${addedLayersQueryParamsWms}&${llc}&${addedLayersQueryParamsWmts}`;\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n      url = url.replace(/&&/g, '&');\r\n      url = url.endsWith('&') ? url.slice(0, -1) : url;\r\n    }\r\n    url = url.endsWith('&') ? url.slice(0, -1) : url;\r\n    url = url.replace('?&wm', '&wm');\r\n    url = url.replace('?&', '?');\r\n\r\n    return url;\r\n  }\r\n\r\n  private makeLayersByService(layers: Layer[], contextLayersID: any[], typeService: string): string {\r\n\r\n    const addedLayersByService = [];\r\n    for (const layer of layers.filter(\r\n      l => l.dataSource.options && (l.dataSource.options.type === typeService)\r\n    )) {\r\n      if (contextLayersID.indexOf(layer.id) === -1) {\r\n        const linkUrl = (layer.dataSource.options as any).url;\r\n        let addedLayer = '';\r\n        if (layer.dataSource.options.type === 'wms') {\r\n          addedLayer = encodeURIComponent((layer.dataSource.options as any).params.LAYERS);\r\n        } else if (layer.dataSource.options.type === 'wmts') {\r\n          addedLayer = encodeURIComponent((layer.dataSource.options as any).layer);\r\n        }\r\n        const addedLayerPosition = `${addedLayer}:igoz${layer.zIndex}`;\r\n\r\n        if (\r\n          !addedLayersByService.find(definedUrl => definedUrl.url === linkUrl)\r\n        ) {\r\n          addedLayersByService.push({\r\n            url: linkUrl,\r\n            layers: [addedLayerPosition]\r\n          });\r\n        } else {\r\n          addedLayersByService.forEach(service => {\r\n            if (service.url === linkUrl) {\r\n              service.layers.push(addedLayerPosition);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    }\r\n\r\n    let addedLayersQueryParams = '';\r\n    if (addedLayersByService.length >= 1) {\r\n      const linkUrlKey = (typeService === 'wms') ? this.route.options.wmsUrlKey :\r\n        (typeService === 'wmts') ? this.route.options.wmtsUrlKey : '' ;\r\n      const layersKey = (typeService === 'wms') ? this.route.options.wmsLayersKey :\r\n        (typeService === 'wmts') ? this.route.options.wmtsLayersKey : '' ;\r\n\r\n      let linkUrlQueryParams = '';\r\n      let layersQueryParams = '';\r\n      addedLayersByService.forEach(service => {\r\n        linkUrlQueryParams += `${service.url},`;\r\n        layersQueryParams += `(${service.layers.join(',')}),`;\r\n      });\r\n      linkUrlQueryParams = linkUrlQueryParams.endsWith(',')\r\n        ? linkUrlQueryParams.slice(0, -1)\r\n        : linkUrlQueryParams;\r\n      layersQueryParams = layersQueryParams.endsWith(',')\r\n        ? layersQueryParams.slice(0, -1)\r\n        : layersQueryParams;\r\n      addedLayersQueryParams = `${linkUrlKey}=${linkUrlQueryParams}&${layersKey}=${layersQueryParams}`;\r\n    }\r\n\r\n    return addedLayersQueryParams;\r\n  }\r\n}\r\n","import { AfterViewInit, Component, Input, OnInit, ChangeDetectorRef, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\nimport { uuid, Clipboard } from '@igo2/utils';\r\nimport { ConfigService, MessageService, LanguageService } from '@igo2/core';\r\nimport { AuthService } from '@igo2/auth';\r\nimport { IgoMap } from '@igo2/geo';\r\n\r\nimport { ShareMapService } from '../shared/share-map.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'igo-share-map',\r\n  templateUrl: './share-map.component.html',\r\n  styleUrls: ['./share-map.component.scss']\r\n})\r\nexport class ShareMapComponent implements AfterViewInit, OnInit, OnDestroy {\r\n  public form: FormGroup;\r\n  private mapState$$: Subscription;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  public url: string;\r\n  public hasApi = false;\r\n  public userId;\r\n  public publicShareOption = {\r\n    layerlistControls: { querystring: '' }\r\n  };\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private auth: AuthService,\r\n    private shareMapService: ShareMapService,\r\n    private formBuilder: FormBuilder,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.hasApi = this.config.getConfig('context.url') ? true : false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.auth.authenticate$.subscribe(auth => {\r\n      const decodeToken = this.auth.decodeToken();\r\n      this.userId = decodeToken.user ? decodeToken.user.id : undefined;\r\n      this.url = undefined;\r\n      this.buildForm();\r\n    });\r\n    this.mapState$$ = this.map.viewController.state$.subscribe(c => {\r\n      if (!this.hasApi) {\r\n        this.resetUrl();\r\n        this.cdRef.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.hasApi) {\r\n      this.resetUrl();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.mapState$$.unsubscribe();\r\n  }\r\n\r\n  resetUrl(values: any = {}) {\r\n    const inputs = Object.assign({}, values);\r\n    inputs.uri = this.userId ? `${this.userId}-${values.uri}` : values.uri;\r\n    this.url = this.shareMapService.getUrl(this.map, inputs, this.publicShareOption);\r\n  }\r\n\r\n  copyTextToClipboard(textArea) {\r\n    const successful = Clipboard.copy(textArea);\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant(\r\n        'igo.context.shareMap.dialog.copyTitle'\r\n      );\r\n      const msg = translate.instant('igo.context.shareMap.dialog.copyMsg');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  private buildForm(): void {\r\n    const id = uuid();\r\n    let title = 'Partage ';\r\n    title += this.userId ? `(${this.userId}-${id})` : `(${id})`;\r\n    this.form = this.formBuilder.group({\r\n      title: [title],\r\n      uri: [id]\r\n    });\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { ShareMapComponent } from './share-map/share-map.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [ShareMapComponent],\r\n  declarations: [ShareMapComponent]\r\n})\r\nexport class IgoShareMapModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoShareMapModule\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\nimport { Media } from '@igo2/core';\r\nimport { FlexibleState, Tool, getEntityTitle } from '@igo2/common';\r\nimport { Feature, FeatureMotion, IgoMap, moveToOlFeatures } from '@igo2/geo';\r\n\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\n\r\n@Component({\r\n  selector: 'igo-sidenav',\r\n  templateUrl: './sidenav.component.html',\r\n  styleUrls: ['./sidenav.component.scss']\r\n})\r\nexport class SidenavComponent {\r\n  private format = new olFormatGeoJSON();\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n  @Input()\r\n  get opened(): boolean {\r\n    return this._opened;\r\n  }\r\n  set opened(value: boolean) {\r\n    this._opened = value;\r\n  }\r\n  private _opened: boolean;\r\n\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n  }\r\n  private _feature: Feature;\r\n\r\n  @Input()\r\n  get tool(): Tool {\r\n    return this._tool;\r\n  }\r\n  set tool(value: Tool) {\r\n    this._tool = value;\r\n  }\r\n  private _tool: Tool;\r\n\r\n  @Input()\r\n  get media(): Media {\r\n    return this._media;\r\n  }\r\n  set media(value: Media) {\r\n    this._media = value;\r\n  }\r\n  private _media: Media;\r\n\r\n  @Input()\r\n  get title(): string {\r\n    return this._title;\r\n  }\r\n  set title(value: string) {\r\n    if (value) {\r\n      this._title = value;\r\n    }\r\n  }\r\n  private _title: string = this.titleService.getTitle();\r\n\r\n  public topPanelState: FlexibleState = 'initial';\r\n\r\n  get featureTitle(): string {\r\n    return this.feature ? getEntityTitle(this.feature) : undefined;\r\n  }\r\n\r\n  constructor(public titleService: Title) {}\r\n\r\n  zoomToFeatureExtent() {\r\n    if (this.feature.geometry) {\r\n      const olFeature = this.format.readFeature(this.feature, {\r\n        dataProjection: this.feature.projection,\r\n        featureProjection: this.map.projection\r\n      });\r\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\r\n    }\r\n  }\r\n\r\n  toggleTopPanel() {\r\n    if (this.topPanelState === 'initial') {\r\n      this.topPanelState = 'expanded';\r\n    } else {\r\n      this.topPanelState = 'initial';\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSidenavModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\r\nimport { IgoFeatureModule } from '@igo2/geo';\r\n\r\nimport { IgoContextManagerModule } from '../context-manager/context-manager.module';\r\nimport { SidenavComponent } from './sidenav.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule,\r\n    IgoPanelModule,\r\n    IgoFlexibleModule,\r\n    IgoFeatureModule,\r\n    IgoContextManagerModule\r\n  ],\r\n  exports: [SidenavComponent],\r\n  declarations: [SidenavComponent]\r\n})\r\nexport class IgoSidenavModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSidenavModule\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport {\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatMenuModule\r\n} from '@angular/material';\r\n\r\nimport { IgoContextImportExportModule } from './context-import-export/context-import-export.module';\r\nimport { IgoContextManagerModule } from './context-manager/context-manager.module';\r\nimport { IgoContextMapButtonModule } from './context-map-button/context-map-button.module';\r\nimport { IgoShareMapModule } from './share-map/share-map.module';\r\nimport { IgoSidenavModule } from './sidenav/sidenav.module';\r\n\r\n@NgModule({\r\n  imports: [MatInputModule, MatFormFieldModule, MatMenuModule],\r\n  declarations: [],\r\n  exports: [\r\n    IgoContextImportExportModule,\r\n    IgoContextManagerModule,\r\n    IgoContextMapButtonModule,\r\n    IgoShareMapModule,\r\n    IgoSidenavModule\r\n  ]\r\n})\r\nexport class IgoContextModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoContextModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { downloadContent } from '@igo2/utils';\r\n\r\nimport { DetailedContext } from '../../context-manager/shared/context.interface';\r\nimport { ExportNothingToExportError } from './context-export.errors';\r\nimport { Observer, Observable } from 'rxjs';\r\n\r\nimport { Platform } from '@ionic/angular';\r\nimport { File } from '@ionic-native/file/ngx';\r\nimport { FileOpener } from '@ionic-native/file-opener/ngx';\r\nimport { ContextExportService } from './context-export.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContextExportIonicService extends ContextExportService {\r\n\r\n  constructor(\r\n    private config: ConfigService,\r\n    private platform: Platform,\r\n    private fileOpener: FileOpener,\r\n    private file: File\r\n    ) {\r\n      super();\r\n  }\r\n\r\n  protected exportAsync(res: DetailedContext): Observable<void> {\r\n    const doExport = (observer: Observer<void>) => {\r\n        const nothingToExport = super.nothingToExport(res);\r\n        if (nothingToExport === true) {\r\n            observer.error(new ExportNothingToExportError());\r\n            return;\r\n        }\r\n\r\n        const contextJSON = JSON.stringify(res);\r\n\r\n        if (this.platform.is('cordova')) {\r\n            const directory = this.config.getConfig('ExportDirectory');\r\n            this.file.writeFile(directory, `${res.uri}.json`, contextJSON, { replace: true }).then((success) =>\r\n            this.fileOpener.open(directory + '/' + `${res.uri}.json`, 'text/plain'));\r\n            observer.complete();\r\n        } else {\r\n            downloadContent(contextJSON, 'text/json;charset=utf-8', `${res.uri}.json`);\r\n            observer.complete();\r\n        }\r\n    };\r\n    return new Observable(doExport);\r\n  }\r\n}\r\n"]}