{"version":3,"file":"igo2-core.js.map","sources":["ng://@igo2/core/lib/activity/activity.service.ts","ng://@igo2/core/lib/activity/activity.interceptor.ts","ng://@igo2/core/lib/activity/activity.module.ts","ng://@igo2/core/lib/config/version.ts","ng://@igo2/core/lib/config/config.service.ts","ng://@igo2/core/lib/config/config.provider.ts","ng://@igo2/core/lib/config/config.module.ts","ng://@igo2/core/lib/language/shared/language.loader.ts","ng://@igo2/core/lib/language/shared/language.provider.ts","ng://@igo2/core/lib/language/shared/missing-translation.guard.ts","ng://@igo2/core/lib/language/language.module.ts","ng://@igo2/core/lib/message/message-center/message-center.component.ts","ng://@igo2/core/lib/message/message.module.ts","ng://@igo2/core/lib/message/shared/message.enum.ts","ng://@igo2/core/lib/message/shared/message.service.ts","ng://@igo2/core/lib/language/shared/language.service.ts","ng://@igo2/core/lib/request/error.interceptor.ts","ng://@igo2/core/lib/request/error.module.ts","ng://@igo2/core/lib/core.module.ts","ng://@igo2/core/lib/gesture/gesture.provider.ts","ng://@igo2/core/lib/gesture/gesture.module.ts","ng://@igo2/core/lib/request/logging.interceptor.ts","ng://@igo2/core/lib/request/logging.module.ts","ng://@igo2/core/lib/route/route.service.ts","ng://@igo2/core/lib/analytics/shared/analytics.service.ts","ng://@igo2/core/lib/media/media.enum.ts","ng://@igo2/core/lib/media/media.service.ts","ng://@igo2/core/lib/network/network.service.ts","ng://@igo2/core/lib/network/network-ionic.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ActivityService {\r\n  public counter$ = new BehaviorSubject<number>(0);\r\n\r\n  private ids: string[] = [];\r\n\r\n  constructor() {}\r\n\r\n  register(): string {\r\n    const id = uuid();\r\n    this.ids.push(id);\r\n    this.counter$.next(this.ids.length);\r\n\r\n    return id;\r\n  }\r\n\r\n  unregister(id: string) {\r\n    const index = this.ids.indexOf(id);\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n    this.ids.splice(index, 1);\r\n\r\n    this.counter$.next(this.ids.length);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent,\r\n  HttpHandler,\r\n  HttpInterceptor,\r\n  HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\nimport { ActivityService } from './activity.service';\r\n\r\n@Injectable()\r\nexport class ActivityInterceptor implements HttpInterceptor {\r\n  constructor(private activityService: ActivityService) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const activity = req.headers.get('activityInterceptor');\r\n    if (activity) {\r\n      const actReq = req.clone({\r\n        headers: req.headers.delete('activityInterceptor')\r\n      });\r\n      if (activity === 'false') {\r\n        return next.handle(actReq);\r\n      }\r\n    }\r\n\r\n    const id = this.activityService.register();\r\n\r\n    return next.handle(req).pipe(\r\n      finalize(() => {\r\n        this.activityService.unregister(id);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { ActivityInterceptor } from './activity.interceptor';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class IgoActivityModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoActivityModule,\r\n      providers: [\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ActivityInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","export interface Version {\r\n  lib: string;\r\n}\r\n\r\nexport const version: Version = {\r\n  lib: '1.2.0'\r\n};\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { ConfigOptions } from './config.interface';\r\nimport { version } from './version';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConfigService {\r\n  private config: object = {};\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  /**\r\n   * Use to get the data found in config file\r\n   */\r\n  public getConfig(key: string): any {\r\n    return ObjectUtils.resolve(this.config, key);\r\n  }\r\n\r\n  /**\r\n   * This method loads \"[path]\" to get all config's variables\r\n   */\r\n  public load(options: ConfigOptions) {\r\n    const baseConfig = options.default || {};\r\n    if (!options.path) {\r\n      this.config = baseConfig;\r\n      return true;\r\n    }\r\n\r\n    const http = this.injector.get(HttpClient);\r\n\r\n    return new Promise((resolve, _reject) => {\r\n      http\r\n        .get(options.path)\r\n        .pipe(\r\n          catchError((error: any): any => {\r\n            console.log(`Configuration file ${options.path} could not be read`);\r\n            resolve(true);\r\n            return throwError(error.error || 'Server error');\r\n          })\r\n        )\r\n        .subscribe(configResponse => {\r\n          this.config = ObjectUtils.mergeDeep(\r\n            ObjectUtils.mergeDeep({ version }, baseConfig),\r\n            configResponse\r\n          );\r\n          resolve(true);\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { APP_INITIALIZER, InjectionToken } from '@angular/core';\r\n\r\nimport { ConfigService } from './config.service';\r\nimport { ConfigOptions } from './config.interface';\r\n\r\nexport let CONFIG_OPTIONS = new InjectionToken<ConfigOptions>('configOptions');\r\n\r\nexport function provideConfigOptions(options: ConfigOptions) {\r\n  return {\r\n    provide: CONFIG_OPTIONS,\r\n    useValue: options\r\n  };\r\n}\r\n\r\nexport function configFactory(\r\n  configService: ConfigService,\r\n  options: ConfigOptions\r\n) {\r\n  return () => configService.load(options);\r\n}\r\n\r\nexport function provideConfigLoader() {\r\n  return {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: configFactory,\r\n    multi: true,\r\n    deps: [ConfigService, CONFIG_OPTIONS]\r\n  };\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { provideConfigOptions, provideConfigLoader } from './config.provider';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class IgoConfigModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoConfigModule,\r\n      providers: [provideConfigOptions({}), provideConfigLoader()]\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { of, combineLatest } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { ConfigService } from '../../config/config.service';\r\n\r\ndeclare function require(arg: string): any;\r\n\r\nexport class LanguageLoader implements TranslateLoader {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private prefix?: string,\r\n    private suffix: string = '.json',\r\n    private config?: ConfigService\r\n  ) {}\r\n\r\n  public getTranslation(lang: string): any {\r\n    const translation = require(`../locale/${lang}.json`);\r\n    const igoLocale$ = of(translation);\r\n\r\n    if (this.config && !this.prefix) {\r\n      this.prefix = this.config.getConfig('language.prefix');\r\n    }\r\n\r\n    if (!this.prefix) {\r\n      return igoLocale$;\r\n    }\r\n\r\n    const appLocale$ = this.http.get(`${this.prefix}${lang}${this.suffix}`);\r\n\r\n    const locale$ = combineLatest(igoLocale$, appLocale$);\r\n\r\n    return locale$.pipe(\r\n      map(translations => {\r\n        return ObjectUtils.mergeDeep(translations[0], translations[1]);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { TranslateLoader } from '@ngx-translate/core';\r\n\r\nimport { ConfigService } from '../../config/config.service';\r\nimport { LanguageLoader } from './language.loader';\r\n\r\nexport function defaultLanguageLoader(\r\n  http: HttpClient,\r\n  config?: ConfigService\r\n) {\r\n  return new LanguageLoader(http, undefined, undefined, config);\r\n}\r\n\r\nexport function provideLanguageLoader(loader?) {\r\n  return {\r\n    provide: TranslateLoader,\r\n    useFactory: loader || defaultLanguageLoader,\r\n    deps: [HttpClient]\r\n  };\r\n}\r\n\r\nexport function provideDefaultLanguageLoader(loader?) {\r\n  return {\r\n    provide: TranslateLoader,\r\n    useFactory: loader || defaultLanguageLoader,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n","import {\r\n  MissingTranslationHandler,\r\n  MissingTranslationHandlerParams\r\n} from '@ngx-translate/core';\r\n\r\nexport class IgoMissingTranslationHandler implements MissingTranslationHandler {\r\n  handle(params: MissingTranslationHandlerParams) {\r\n    if (!params.translateService.langs.length) {\r\n      const error =\r\n        'Translations are not yet loaded. \\\r\n         Check that the LanguageService is injected.';\r\n      throw new Error(error);\r\n    }\r\n\r\n    if (params.key.substr(0, 4) === 'igo.') {\r\n      throw new Error(`The Key \"${params.key}\" is missing in locale file.`);\r\n    } else {\r\n      return params.key;\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport {\r\n  TranslateModule,\r\n  MissingTranslationHandler\r\n} from '@ngx-translate/core';\r\n\r\nimport { provideDefaultLanguageLoader } from './shared/language.provider';\r\nimport { IgoMissingTranslationHandler } from './shared/missing-translation.guard';\r\n\r\n@NgModule({\r\n  imports: [\r\n    TranslateModule.forRoot({\r\n      missingTranslationHandler: {\r\n        provide: MissingTranslationHandler,\r\n        useClass: IgoMissingTranslationHandler\r\n      }\r\n    })\r\n  ],\r\n  declarations: [],\r\n  exports: [TranslateModule]\r\n})\r\nexport class IgoLanguageModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoLanguageModule,\r\n      providers: [provideDefaultLanguageLoader()]\r\n    };\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'igo-message-center',\r\n  templateUrl: './message-center.component.html',\r\n  styleUrls: ['./message-center.component.scss']\r\n})\r\nexport class MessageCenterComponent {\r\n  static defaultOptions = {\r\n    timeOut: 5000,\r\n    hasCloseIcon: false,\r\n    showProgressBar: true,\r\n    pauseOnHover: true,\r\n    clickToClose: true,\r\n    maxLength: 100,\r\n    maxStack: 3,\r\n    preventDuplicates: true\r\n  };\r\n\r\n  @Input()\r\n  get options(): any {\r\n    return Object.assign(\r\n      {},\r\n      MessageCenterComponent.defaultOptions,\r\n      this._options\r\n    );\r\n  }\r\n  set options(value: any) {\r\n    this._options = value;\r\n  }\r\n  private _options: any = {};\r\n\r\n  constructor() {}\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SimpleNotificationsModule } from 'angular2-notifications';\r\n\r\nimport { MessageCenterComponent } from './message-center/message-center.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, SimpleNotificationsModule.forRoot()],\r\n  declarations: [MessageCenterComponent],\r\n  exports: [MessageCenterComponent]\r\n})\r\nexport class IgoMessageModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoMessageModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","export enum MessageType {\r\n  ERROR = 'error',\r\n  ALERT = 'alert',\r\n  INFO = 'info',\r\n  SUCCESS = 'success'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Notification, NotificationsService, NotificationType} from 'angular2-notifications';\r\n\r\nimport { ConfigService } from '../../config/config.service';\r\n\r\nimport { Message, MessageOptions } from './message.interface';\r\nimport { MessageType } from './message.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MessageService {\r\n  public messages$ = new BehaviorSubject<Message[]>([]);\r\n  private options: MessageOptions;\r\n\r\n  constructor(\r\n    private notificationService: NotificationsService,\r\n    private configService: ConfigService\r\n  ) {\r\n    this.options = this.configService.getConfig('message') || {};\r\n  }\r\n\r\n  showError(httpError: HttpErrorResponse) {\r\n    httpError.error.caught = true;\r\n    return this.error(httpError.error.message, httpError.error.title);\r\n  }\r\n\r\n  message(message: Message) {\r\n    this.messages$.next(this.messages$.value.concat([message]));\r\n\r\n    message.options = message.options || {};\r\n    message = this.handleTemplate(message);\r\n\r\n    let notification: Notification;\r\n    if (message.text) {\r\n      notification = this.notificationService.create(\r\n        message.title,\r\n        message.text,\r\n        (message.type as any) as NotificationType,\r\n        message.options\r\n      );\r\n    } else if (message.html) {\r\n      if (!message.icon) {\r\n        message.options.theClass = message.options.theClass\r\n          ? message.options.theClass + ' noIcon'\r\n          : 'noIcon';\r\n      }\r\n\r\n      notification = this.notificationService.html(\r\n        message.html,\r\n        (message.type as any) as NotificationType,\r\n        message.options\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n\r\n    if (message.icon !== undefined) {\r\n      this.addIcon(notification, message.icon);\r\n    }\r\n\r\n    return notification;\r\n  }\r\n\r\n  success(text: string, title?: string, options: any = {}) {\r\n    return this.message({\r\n      text,\r\n      title,\r\n      icon: options.icon || 'check',\r\n      options,\r\n      type: MessageType.SUCCESS\r\n    });\r\n  }\r\n\r\n  error(text: string, title?: string, options: any = {}) {\r\n    return this.message({\r\n      text,\r\n      title,\r\n      icon: options.icon || 'error_outline',\r\n      options,\r\n      type: MessageType.ERROR\r\n    });\r\n  }\r\n\r\n  info(text: string, title?: string, options: any = {}) {\r\n    return this.message({\r\n      text,\r\n      title,\r\n      icon: options.icon || 'info_outline',\r\n      options,\r\n      type: MessageType.INFO\r\n    });\r\n  }\r\n\r\n  alert(text: string, title?: string, options: any = {}) {\r\n    return this.message({\r\n      text,\r\n      title,\r\n      icon: options.icon || 'access_alarm',\r\n      options,\r\n      type: MessageType.ALERT\r\n    });\r\n  }\r\n\r\n  remove(id?: string) {\r\n    this.notificationService.remove(id);\r\n  }\r\n\r\n  private addIcon(notification: Notification, icon: string) {\r\n    // There is no way to add an icon to a notification when reating\r\n    // it so we simply set it on the notification directly.\r\n    // See https://github.com/flauc/angular2-notifications/issues/165\r\n    notification.icon = `\r\n      <mat-icon class=\"material-icons mat-icon mat-list-avatar\" svgIcon=\"${icon}\">\r\n      </mat-icon>`;\r\n  }\r\n\r\n  private handleTemplate(message: Message): Message {\r\n    if (!this.options.template || message.html) {\r\n      return message;\r\n    }\r\n\r\n    let html = this.options.template;\r\n    html = html.replace('${text}', message.text);\r\n    html = html.replace('${title}', message.title);\r\n    html = html.replace('${icon}', message.icon);\r\n\r\n    message.html = html;\r\n    message.text = undefined;\r\n    message.title = undefined;\r\n    message.icon = undefined;\r\n    return message;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n  private language: string = this.translate.getBrowserLang();\r\n\r\n  constructor(public translate: TranslateService) {\r\n    const lang = this.getLanguage();\r\n    this.translate.setDefaultLang(lang);\r\n  }\r\n\r\n  public getLanguage(): string {\r\n    return this.language.match(/en|fr/) ? this.language : 'en';\r\n  }\r\n\r\n  public setLanguage(language: string) {\r\n    this.language = language.match(/en|fr/) ? language : 'en';\r\n    this.translate.use(this.language);\r\n    this.translate.reloadLang(this.language);\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpRequest,\r\n  HttpEvent,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\n\r\nimport { MessageService } from '../message/shared/message.service';\r\nimport { LanguageService } from '../language/shared/language.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorInterceptor implements HttpInterceptor {\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private injector: Injector\r\n  ) {}\r\n\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const errorContainer = { httpError: undefined };\r\n    return next.handle(req).pipe(\r\n      catchError(error => this.handleError(error, errorContainer)),\r\n      finalize(() => {\r\n        this.handleCaughtError(errorContainer);\r\n        this.handleUncaughtError(errorContainer);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleError(\r\n    httpError: HttpErrorResponse,\r\n    errorContainer: { httpError: HttpErrorResponse }\r\n  ) {\r\n    if (httpError instanceof HttpErrorResponse) {\r\n      const errorObj = httpError.error === 'object' ? httpError.error : {};\r\n      errorObj.message = httpError.error.message || httpError.statusText;\r\n      errorObj.caught = false;\r\n\r\n      httpError = new HttpErrorResponse({\r\n        error: errorObj,\r\n        headers: httpError.headers,\r\n        status: httpError.status,\r\n        statusText: httpError.statusText,\r\n        url: httpError.url\r\n      });\r\n    }\r\n\r\n    errorContainer.httpError = httpError;\r\n    return throwError(httpError);\r\n  }\r\n\r\n  private handleCaughtError(errorContainer: { httpError: HttpErrorResponse }) {\r\n    const httpError = errorContainer.httpError;\r\n    if (httpError && httpError.error.toDisplay) {\r\n      httpError.error.caught = true;\r\n      this.messageService.error(httpError.error.message, httpError.error.title);\r\n    }\r\n  }\r\n\r\n  private handleUncaughtError(errorContainer: {\r\n    httpError: HttpErrorResponse;\r\n  }) {\r\n    const httpError = errorContainer.httpError;\r\n    if (httpError && !httpError.error.caught) {\r\n      const translate = this.injector.get(LanguageService).translate;\r\n      const message = translate.instant('igo.core.errors.uncaught.message');\r\n      const title = translate.instant('igo.core.errors.uncaught.title');\r\n      httpError.error.caught = true;\r\n      this.messageService.error(message, title);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  NgModule,\r\n  ModuleWithProviders,\r\n  Optional,\r\n  SkipSelf\r\n} from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { ErrorInterceptor } from './error.interceptor';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class IgoErrorModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoErrorModule,\r\n      providers: [\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ErrorInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  constructor(@Optional() @SkipSelf() parentModule: IgoErrorModule) {\r\n    if (parentModule) {\r\n      throw new Error(\r\n        'IgoErrorModule is already loaded. Import it in the AppModule only'\r\n      );\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { MatIconRegistry } from '@angular/material';\r\n\r\nimport { IgoActivityModule } from './activity/activity.module';\r\nimport { IgoConfigModule } from './config/config.module';\r\nimport { IgoLanguageModule } from './language/language.module';\r\nimport { IgoMessageModule } from './message/message.module';\r\nimport { IgoErrorModule } from './request/error.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    IgoActivityModule.forRoot(),\r\n    IgoConfigModule.forRoot(),\r\n    IgoErrorModule.forRoot(),\r\n    IgoLanguageModule.forRoot(),\r\n    IgoMessageModule.forRoot()\r\n  ],\r\n  declarations: [],\r\n  exports: [\r\n    IgoActivityModule,\r\n    IgoConfigModule,\r\n    IgoErrorModule,\r\n    IgoLanguageModule,\r\n    IgoMessageModule\r\n  ]\r\n})\r\nexport class IgoCoreModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoCoreModule,\r\n      providers: []\r\n    };\r\n  }\r\n\r\n  constructor(matIconRegistry: MatIconRegistry, domSanitizer: DomSanitizer) {\r\n    matIconRegistry.addSvgIconSet(\r\n      domSanitizer.bypassSecurityTrustResourceUrl(\r\n        './assets/igo2/core/icons/mdi.svg'\r\n      )\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { GestureConfig, HammerManager } from '@angular/material';\r\n\r\n@Injectable()\r\nexport class IgoGestureConfig extends GestureConfig {\r\n  buildHammer(element: HTMLElement) {\r\n    const mc = super.buildHammer(element) as HammerManager;\r\n    mc.set({ touchAction: 'pan-y' });\r\n    return mc;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';\r\n\r\nimport { IgoGestureConfig } from './gesture.provider';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class IgoGestureModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoGestureModule,\r\n      providers: [\r\n        {\r\n          provide: HAMMER_GESTURE_CONFIG,\r\n          useClass: IgoGestureConfig\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpInterceptor,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpRequest,\r\n  HttpResponse\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { tap, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class LoggingInterceptor implements HttpInterceptor {\r\n  intercept(\r\n    req: HttpRequest<any>,\r\n    next: HttpHandler\r\n  ): Observable<HttpEvent<any>> {\r\n    const started = Date.now();\r\n    let ok: string;\r\n\r\n    // extend server response observable with logging\r\n    return next.handle(req).pipe(\r\n      tap(\r\n        // Succeeds when there is a response; ignore other events\r\n        event => (ok = event instanceof HttpResponse ? 'succeeded' : ''),\r\n        // Operation failed; error is an HttpErrorResponse\r\n        error => (ok = 'failed')\r\n      ),\r\n      // Log when response observable either completes or errors\r\n      finalize(() => {\r\n        const elapsed = Date.now() - started;\r\n        const msg = `${req.method} \"${req.urlWithParams}\"\r\n             ${ok} in ${elapsed} ms.`;\r\n\r\n        console.log(msg);\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport { LoggingInterceptor } from './logging.interceptor';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class IgoLoggingModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoLoggingModule,\r\n      providers: [\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: LoggingInterceptor,\r\n          multi: true\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Inject, InjectionToken, Optional } from '@angular/core';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { RouteServiceOptions } from './route.interface';\r\n\r\nexport let ROUTE_SERVICE_OPTIONS = new InjectionToken<RouteServiceOptions>(\r\n  'routeServiceOptions'\r\n);\r\n\r\nexport function provideRouteServiceOptions(options: RouteServiceOptions) {\r\n  return {\r\n    provide: ROUTE_SERVICE_OPTIONS,\r\n    useValue: options\r\n  };\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RouteService {\r\n  public options: RouteServiceOptions;\r\n\r\n  constructor(\r\n    public route: ActivatedRoute,\r\n    @Inject(ROUTE_SERVICE_OPTIONS)\r\n    @Optional()\r\n    options: RouteServiceOptions\r\n  ) {\r\n    const defaultOptions = {\r\n      centerKey: 'center',\r\n      zoomKey: 'zoom',\r\n      projectionKey: 'projection',\r\n      contextKey: 'context',\r\n      searchKey: 'search',\r\n      visibleOnLayersKey: 'visiblelayers',\r\n      visibleOffLayersKey: 'invisiblelayers',\r\n      directionsCoordKey: 'routing',\r\n      toolKey: 'tool',\r\n      llcKKey: 'llck',\r\n      llcAKey: 'llca',\r\n      llcVKey: 'llcv',\r\n      llcRKey: 'llcr',\r\n      wmsUrlKey: 'wmsUrl',\r\n      layersKey:  'layers'\r\n    };\r\n    this.options = Object.assign({}, defaultOptions, options);\r\n  }\r\n\r\n  get queryParams(): Observable<Params> {\r\n    return this.route.queryParams;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ConfigService } from '../../config/config.service';\r\n\r\nimport { AnalyticsOptions } from './analytics.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AnalyticsService {\r\n  private options: AnalyticsOptions;\r\n\r\n  get paq() {\r\n    return ((window as any)._paq = (window as any)._paq || []);\r\n  }\r\n\r\n  constructor(private config: ConfigService) {\r\n    this.options = this.config.getConfig('analytics') || {};\r\n\r\n    if (this.options.provider === 'matomo') {\r\n      this.initMatomo();\r\n    }\r\n  }\r\n\r\n  private initMatomo() {\r\n    if (!this.options.url || !this.options.id) {\r\n      return;\r\n    }\r\n    const url =\r\n      this.options.url.substr(-1) === '/'\r\n        ? this.options.url + 'matomo'\r\n        : this.options.url;\r\n\r\n    // this.paq.push(['trackPageView']);\r\n    // this.paq.push(['enableLinkTracking']);\r\n    (() => {\r\n      this.paq.push(['setTrackerUrl', url + '.php']);\r\n      this.paq.push(['setSiteId', this.options.id]);\r\n      const g = document.createElement('script');\r\n      const s = document.getElementsByTagName('script')[0];\r\n      g.type = 'text/javascript';\r\n      g.async = true;\r\n      g.defer = true;\r\n      g.src = url + '.js';\r\n      s.parentNode.insertBefore(g, s);\r\n    })();\r\n  }\r\n\r\n  public setUser(\r\n    user?: {\r\n      id: number;\r\n      sourceId?: string;\r\n      firstName?: string;\r\n      lastName?: string;\r\n    },\r\n    profils?: string[]\r\n  ) {\r\n    if (this.options.provider === 'matomo') {\r\n      if (!user) {\r\n        this.paq.push(['resetUserId']);\r\n        this.paq.push(['deleteCustomVariable', 1, 'user']);\r\n        this.paq.push(['deleteCustomVariable', 2, 'name']);\r\n        this.paq.push(['deleteCustomVariable', 3, 'profils']);\r\n      } else {\r\n        this.paq.push(['setUserId', user.id]);\r\n\r\n        const name = `${user.firstName} ${user.lastName}`;\r\n        this.paq.push(['setCustomVariable', 1, 'user', user.sourceId, 'visit']);\r\n        this.paq.push(['setCustomVariable', 2, 'name', name, 'visit']);\r\n        this.paq.push(['setCustomVariable', 3, 'profils', profils, 'visit']);\r\n      }\r\n\r\n      this.paq.push(['trackPageView']);\r\n      this.paq.push(['enableLinkTracking']);\r\n    }\r\n  }\r\n\r\n  public trackSearch(term: string, nbResults: number) {\r\n    if (this.options.provider === 'matomo') {\r\n      this.paq.push(['trackSiteSearch', term, false, nbResults]);\r\n    }\r\n  }\r\n\r\n  public trackEvent(category: string, action: string, name: string) {\r\n    if (this.options.provider === 'matomo') {\r\n      this.paq.push(['trackEvent', category, action, name]);\r\n    }\r\n  }\r\n}\r\n","export enum Media {\r\n  Mobile = 'mobile',\r\n  Tablet = 'tablet',\r\n  Desktop = 'desktop'\r\n}\r\n\r\nexport enum MediaOrientation {\r\n  Portrait = 'portrait',\r\n  Landscape = 'landscape'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Breakpoints, BreakpointObserver } from '@angular/cdk/layout';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { Media, MediaOrientation } from './media.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MediaService {\r\n  public media$ = new BehaviorSubject<Media>(undefined);\r\n  public orientation$ = new BehaviorSubject<MediaOrientation>(undefined);\r\n\r\n  constructor(breakpointObserver: BreakpointObserver) {\r\n    breakpointObserver\r\n      .observe([Breakpoints.HandsetLandscape])\r\n      .subscribe(res => {\r\n        if (res.matches) {\r\n          this.media$.next(Media.Mobile);\r\n          this.orientation$.next(MediaOrientation.Landscape);\r\n        }\r\n      });\r\n\r\n    breakpointObserver.observe([Breakpoints.HandsetPortrait]).subscribe(res => {\r\n      if (res.matches) {\r\n        this.media$.next(Media.Mobile);\r\n        this.orientation$.next(MediaOrientation.Portrait);\r\n      }\r\n    });\r\n\r\n    breakpointObserver.observe([Breakpoints.TabletLandscape]).subscribe(res => {\r\n      if (res.matches) {\r\n        this.media$.next(Media.Tablet);\r\n        this.orientation$.next(MediaOrientation.Landscape);\r\n      }\r\n    });\r\n\r\n    breakpointObserver.observe([Breakpoints.TabletPortrait]).subscribe(res => {\r\n      if (res.matches) {\r\n        this.media$.next(Media.Tablet);\r\n        this.orientation$.next(MediaOrientation.Portrait);\r\n      }\r\n    });\r\n\r\n    breakpointObserver.observe([Breakpoints.WebLandscape]).subscribe(res => {\r\n      if (res.matches) {\r\n        this.media$.next(Media.Desktop);\r\n        this.orientation$.next(MediaOrientation.Landscape);\r\n      }\r\n    });\r\n\r\n    breakpointObserver.observe([Breakpoints.WebPortrait]).subscribe(res => {\r\n      if (res.matches) {\r\n        this.media$.next(Media.Desktop);\r\n        this.orientation$.next(MediaOrientation.Portrait);\r\n      }\r\n    });\r\n  }\r\n\r\n  getMedia(): Media {\r\n    return this.media$.value;\r\n  }\r\n\r\n  getOrientation(): MediaOrientation {\r\n    return this.orientation$.value;\r\n  }\r\n\r\n  isTouchScreen(): boolean {\r\n    return 'ontouchstart' in document.documentElement ? true : false;\r\n  }\r\n}\r\n","import { Injectable, EventEmitter, OnDestroy, Injector } from '@angular/core';\r\nimport { Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { debounceTime, startWith } from 'rxjs/operators';\r\n\r\nimport { MessageService } from '../message/shared/message.service';\r\nimport { LanguageService } from '../language/shared/language.service';\r\nimport { ConnectionState } from './network.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NetworkService implements OnDestroy {\r\n  private stateChangeEventEmitter = new EventEmitter<ConnectionState>();\r\n  private onlineSubscription: Subscription;\r\n  private offlineSubscription: Subscription;\r\n\r\n  private state: ConnectionState = {\r\n    connection: window.navigator.onLine\r\n  };\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private injector: Injector\r\n  ) {\r\n      this.checkNetworkState();\r\n  }\r\n\r\n  private checkNetworkState() {\r\n    this.onlineSubscription = fromEvent(window, 'online').subscribe(() => {\r\n      const translate = this.injector.get(LanguageService).translate;\r\n      const message = translate.instant('igo.core.network.online.message');\r\n      const title = translate.instant('igo.core.network.online.title');\r\n      this.messageService.info(message, title);\r\n      this.state.connection = true;\r\n      this.emitEvent();\r\n    });\r\n\r\n    this.offlineSubscription = fromEvent(window, 'offline').subscribe(() => {\r\n      const translate = this.injector.get(LanguageService).translate;\r\n      const message = translate.instant('igo.core.network.offline.message');\r\n      const title = translate.instant('igo.core.network.offline.title');\r\n      this.messageService.info(message, title);\r\n      this.state.connection = false;\r\n      this.emitEvent();\r\n    });\r\n  }\r\n\r\n  private emitEvent() {\r\n    this.stateChangeEventEmitter.emit(this.state);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    try {\r\n      this.offlineSubscription.unsubscribe();\r\n      this.onlineSubscription.unsubscribe();\r\n    } catch (e) {}\r\n  }\r\n\r\n  currentState(reportState = true): Observable<ConnectionState> {\r\n    return reportState\r\n      ? this.stateChangeEventEmitter.pipe(\r\n          debounceTime(300),\r\n          startWith(this.state)\r\n        )\r\n      : this.stateChangeEventEmitter.pipe(debounceTime(300));\r\n  }\r\n}\r\n","import { Injectable, EventEmitter, OnDestroy, Injector } from '@angular/core';\r\nimport { Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { debounceTime, startWith } from 'rxjs/operators';\r\n\r\nimport { Network } from '@ionic-native/network/ngx';\r\nimport { Platform } from '@ionic/angular';\r\n\r\nimport { MessageService } from '../message/shared/message.service';\r\nimport { LanguageService } from '../language/shared/language.service';\r\nimport { ConnectionState } from './network.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NetworkIonicService implements OnDestroy {\r\n  private stateChangeEventEmitter = new EventEmitter<ConnectionState>();\r\n  private onlineSubscription: Subscription;\r\n  private offlineSubscription: Subscription;\r\n\r\n  private state: ConnectionState = {\r\n    connection: window.navigator.onLine\r\n  };\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private injector: Injector,\r\n    private network: Network,\r\n    private platform: Platform\r\n  ) {\r\n    this.platform.ready().then(() => {\r\n      if (this.platform.is('cordova')) {\r\n        if (this.platform.is('android')) {\r\n          this.checkNetworkStateMobile();\r\n        }\r\n      } else {\r\n        this.checkNetworkState();\r\n      }\r\n    });\r\n  }\r\n\r\n  private checkNetworkState() {\r\n    this.onlineSubscription = fromEvent(window, 'online').subscribe(() => {\r\n      const translate = this.injector.get(LanguageService).translate;\r\n      const message = translate.instant('igo.core.network.online.message');\r\n      const title = translate.instant('igo.core.network.online.title');\r\n      this.messageService.info(message, title);\r\n      this.state.connection = true;\r\n      this.emitEvent();\r\n    });\r\n\r\n    this.offlineSubscription = fromEvent(window, 'offline').subscribe(() => {\r\n      const translate = this.injector.get(LanguageService).translate;\r\n      const message = translate.instant('igo.core.network.offline.message');\r\n      const title = translate.instant('igo.core.network.offline.title');\r\n      this.messageService.info(message, title);\r\n      this.state.connection = false;\r\n      this.emitEvent();\r\n    });\r\n  }\r\n\r\n  private checkNetworkStateMobile() {\r\n    this.offlineSubscription = this.network.onDisconnect().subscribe(() => {\r\n      this.state.connection = false;\r\n      setTimeout(() => {\r\n        if (!this.state.connection) {\r\n          const translate = this.injector.get(LanguageService).translate;\r\n          const message = translate.instant('igo.core.network.offline.message');\r\n          const title = translate.instant('igo.core.network.offline.title');\r\n          this.messageService.info(message, title);\r\n          this.state.connection = false;\r\n          this.emitEvent();\r\n        }\r\n      }, 10000);\r\n    });\r\n\r\n    this.onlineSubscription = this.network.onConnect().subscribe(() => {\r\n      this.state.connection = true;\r\n      setTimeout(() => {\r\n        if (this.state.connection) {\r\n          const translate = this.injector.get(LanguageService).translate;\r\n          const message = translate.instant('igo.core.network.online.message');\r\n          const title = translate.instant('igo.core.network.online.title');\r\n          this.messageService.info(message, title);\r\n          this.state.connection = true;\r\n          this.emitEvent();\r\n        }\r\n      }, 10000);\r\n    });\r\n  }\r\n\r\n  private emitEvent() {\r\n    this.stateChangeEventEmitter.emit(this.state);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    try {\r\n      this.offlineSubscription.unsubscribe();\r\n      this.onlineSubscription.unsubscribe();\r\n    } catch (e) {}\r\n  }\r\n\r\n  currentState(reportState = true): Observable<ConnectionState> {\r\n    return reportState\r\n      ? this.stateChangeEventEmitter.pipe(\r\n          debounceTime(300),\r\n          startWith(this.state)\r\n        )\r\n      : this.stateChangeEventEmitter.pipe(debounceTime(300));\r\n  }\r\n}\r\n"],"names":["tslib_1.__extends"],"mappings":"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"}
