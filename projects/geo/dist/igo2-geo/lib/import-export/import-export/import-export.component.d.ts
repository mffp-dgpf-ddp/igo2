import { OnDestroy, OnInit, EventEmitter } from '@angular/core';
import { FormGroup, FormBuilder } from '@angular/forms';
import { BehaviorSubject } from 'rxjs';
import { MessageService, LanguageService, ConfigService } from '@igo2/core';
import { IgoMap } from '../../map/shared/map';
import { AnyLayer } from '../../layer/shared/layers/any-layer';
import { ExportOptions } from '../shared/export.interface';
import { ExportService } from '../shared/export.service';
import { ImportService } from '../shared/import.service';
import { StyleService } from '../../layer/shared/style.service';
import { StyleListService } from '../style-list/style-list.service';
import { MatTabChangeEvent } from '@angular/material';
export declare class ImportExportComponent implements OnDestroy, OnInit {
    private importService;
    private exportService;
    private languageService;
    private messageService;
    private styleListService;
    private styleService;
    private formBuilder;
    private config;
    form: FormGroup;
    formats$: BehaviorSubject<any>;
    exportableLayers$: BehaviorSubject<AnyLayer[]>;
    inputProj: string;
    loading$: BehaviorSubject<boolean>;
    forceNaming: boolean;
    private layers$$;
    private exportableLayers$$;
    private formats$$;
    private formLayer$$;
    private exportOptions$$;
    private espgCodeRegex;
    private clientSideFileSizeMax;
    activeImportExport: string;
    fileSizeMb: number;
    private previousLayerSpecs$;
    map: IgoMap;
    selectedIndex: number;
    selectedTabIndex: EventEmitter<number>;
    exportOptions$: BehaviorSubject<ExportOptions>;
    exportOptionsChange: EventEmitter<ExportOptions>;
    constructor(importService: ImportService, exportService: ExportService, languageService: LanguageService, messageService: MessageService, styleListService: StyleListService, styleService: StyleService, formBuilder: FormBuilder, config: ConfigService);
    ngOnInit(): void;
    ngOnDestroy(): void;
    private handlePreviousLayerSpecs;
    importFiles(files: File[]): void;
    handleExportFormSubmit(data: ExportOptions): void;
    private buildForm;
    private onFileImportSuccess;
    private onFileImportError;
    private onFileExportError;
    private loadConfig;
    private computeFormats;
    private validateListFormat;
    tabChanged(tab: MatTabChangeEvent): void;
    private onFileExportSuccess;
    onImportExportChange(event: any): void;
}
