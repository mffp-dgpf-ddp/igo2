{"version":3,"file":"igo2-geo.umd.js.map","sources":["ng://@igo2/geo/lib/metadata/shared/metadata.service.ts","ng://@igo2/geo/lib/metadata/metadata-button/metadata-button.component.ts","ng://@igo2/geo/lib/metadata/metadata.module.ts","node_modules/tslib/tslib.es6.js","ng://@igo2/geo/lib/datasource/shared/datasources/data.service.ts","ng://@igo2/geo/lib/utils/id-generator.ts","ng://@igo2/geo/lib/datasource/shared/datasources/datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/feature-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/osm-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/xyz-datasource.ts","ng://@igo2/geo/lib/filter/shared/ogc-filter.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wms-wfs.utils.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wfs-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wfs.service.ts","ng://@igo2/geo/lib/query/shared/query.enums.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wms-datasource.ts","ng://@igo2/geo/lib/datasource/utils/tilegrid.ts","ng://@igo2/geo/lib/datasource/shared/datasources/wmts-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/carto-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/arcgisrest-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/tilearcgisrest-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/websocket-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/mvt-datasource.ts","ng://@igo2/geo/lib/datasource/shared/datasources/cluster-datasource.ts","ng://@igo2/geo/lib/feature/shared/feature.enums.ts","ng://@igo2/geo/lib/layer/shared/layer.enums.ts","ng://@igo2/geo/lib/layer/shared/layers/layer.ts","ng://@igo2/geo/lib/layer/shared/layers/layer.interface.ts","ng://@igo2/geo/lib/layer/utils/image-watcher.ts","ng://@igo2/geo/lib/layer/utils/tile-watcher.ts","ng://@igo2/geo/lib/layer/utils/outputLegend.ts","ng://@igo2/geo/lib/layer/utils/vector-watcher.ts","ng://@igo2/geo/lib/layer/shared/layers/image-layer.ts","ng://@igo2/geo/lib/layer/shared/layers/tile-layer.ts","ng://@igo2/geo/lib/layer/shared/layers/vector-layer.ts","ng://@igo2/geo/lib/layer/shared/layers/vectortile-layer.ts","ng://@igo2/geo/lib/map/map-browser/map-browser.component.ts","ng://@igo2/geo/lib/overlay/shared/overlay.enum.ts","ng://@igo2/geo/lib/overlay/shared/overlay.service.ts","ng://@igo2/geo/lib/overlay/shared/overlay.directive.ts","ng://@igo2/geo/lib/overlay/shared/overlay.utils.ts","ng://@igo2/geo/lib/layer/shared/style.service.ts","ng://@igo2/geo/lib/query/shared/query.utils.ts","ng://@igo2/geo/lib/layer/layer-item/layer-item.component.ts","ng://@igo2/geo/lib/layer/layer-legend/layer-legend.component.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list.enum.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list.service.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list.component.ts","ng://@igo2/geo/lib/map/shared/map.service.ts","ng://@igo2/geo/lib/layer/layer-list/layer-list-binding.directive.ts","ng://@igo2/geo/lib/layer/track-feature-button/track-feature-button.component.ts","ng://@igo2/geo/lib/feature/shared/strategies/loading.ts","ng://@igo2/geo/lib/feature/shared/strategies/loading-layer.ts","ng://@igo2/geo/lib/feature/shared/store.ts","ng://@igo2/geo/lib/feature/shared/strategies/selection.ts","ng://@igo2/geo/lib/feature/shared/feature.utils.ts","ng://@igo2/geo/lib/feature/feature-form/feature-form.component.ts","ng://@igo2/geo/lib/overlay/shared/overlay.ts","ng://@igo2/geo/lib/map/utils/layer-watcher.ts","ng://@igo2/geo/lib/map/shared/map.enums.ts","ng://@igo2/geo/lib/map/shared/map.utils.ts","ng://@igo2/geo/lib/map/shared/controllers/controller.ts","ng://@igo2/geo/lib/map/shared/controllers/view.ts","ng://@igo2/geo/lib/map/shared/map.ts","ng://@igo2/geo/lib/map/shared/mapOffline.directive.ts","ng://@igo2/geo/lib/map/shared/map-pointer-position.directive.ts","ng://@igo2/geo/lib/map/shared/map-pointer-position-by-key.directive.ts","ng://@igo2/geo/lib/map/shared/projection.service.ts","ng://@igo2/geo/lib/map/zoom-button/zoom-button.component.ts","ng://@igo2/geo/lib/map/geolocate-button/geolocate-button.component.ts","ng://@igo2/geo/lib/map/offline-button/offline-button.component.ts","ng://@igo2/geo/lib/map/baselayers-switcher/baselayers-switcher.animation.ts","ng://@igo2/geo/lib/map/baselayers-switcher/baselayers-switcher.component.ts","ng://@igo2/geo/lib/map/baselayers-switcher/mini-basemap.component.ts","ng://@igo2/geo/lib/map/rotation-button/rotation-button.component.ts","ng://@igo2/geo/lib/datasource/utils/esri-style-generator.ts","ng://@igo2/geo/lib/filter/shared/time-filter.enum.ts","ng://@igo2/geo/lib/datasource/shared/capabilities.service.ts","ng://@igo2/geo/lib/datasource/shared/datasource.service.ts","ng://@igo2/geo/lib/layer/shared/layer.service.ts","ng://@igo2/geo/lib/catalog/shared/catalog.enum.ts","ng://@igo2/geo/lib/catalog/shared/catalog.abstract.ts","ng://@igo2/geo/lib/query/shared/query.service.ts","ng://@igo2/geo/lib/query/shared/query.directive.ts","ng://@igo2/geo/lib/search/shared/sources/source.ts","ng://@igo2/geo/lib/query/shared/query-search-source.ts","ng://@igo2/geo/lib/utils/googleLinks.ts","ng://@igo2/geo/lib/utils/osmLinks.ts","ng://@igo2/geo/lib/catalog/shared/catalog.service.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser.component.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser-layer.component.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser-group.component.ts","ng://@igo2/geo/lib/layer/layer.module.ts","ng://@igo2/geo/lib/catalog/catalog-browser/catalog-browser.module.ts","ng://@igo2/geo/lib/catalog/catalog-library/catalog-library.component.ts","ng://@igo2/geo/lib/catalog/catalog-library/catalog-library-item.component.ts","ng://@igo2/geo/lib/catalog/catalog-library/catalog-library.module.ts","ng://@igo2/geo/lib/catalog/catalog.module.ts","ng://@igo2/geo/lib/datasource/datasource.module.ts","ng://@igo2/geo/lib/filter/shared/filterable-datasource.pipe.ts","ng://@igo2/geo/lib/filter/shared/time-filter.service.ts","ng://@igo2/geo/lib/filter/shared/ogc-filter.enum.ts","ng://@igo2/geo/lib/filter/shared/ogc-filter.service.ts","ng://@igo2/geo/lib/filter/shared/spatial-filter.enum.ts","ng://@igo2/geo/lib/filter/shared/spatial-filter.service.ts","ng://@igo2/geo/lib/download/shared/download.service.ts","ng://@igo2/geo/lib/download/download-button/download-button.component.ts","ng://@igo2/geo/lib/download/download.module.ts","ng://@igo2/geo/lib/feature/feature-details/feature-details.component.ts","ng://@igo2/geo/lib/feature/feature-details/feature-details.module.ts","ng://@igo2/geo/lib/feature/feature-form/feature-form.module.ts","ng://@igo2/geo/lib/feature/feature.module.ts","ng://@igo2/geo/lib/geometry/geometry-form-field/geometry-form-field.component.ts","ng://@igo2/geo/lib/measure/shared/measure.enum.ts","ng://@igo2/geo/lib/measure/shared/measure.utils.ts","ng://@igo2/geo/lib/geometry/shared/geometry.errors.ts","ng://@igo2/geo/lib/geometry/shared/geometry.utils.ts","ng://@igo2/geo/lib/geometry/shared/controls/draw.ts","ng://@igo2/geo/lib/geometry/shared/controls/modify.ts","ng://@igo2/geo/lib/geometry/shared/controls/slice.ts","ng://@igo2/geo/lib/measure/measurer/measurer-dialog.component.ts","ng://@igo2/geo/lib/measure/measurer/measurer.component.ts","ng://@igo2/geo/lib/measure/measurer/measure-format.pipe.ts","ng://@igo2/geo/lib/geometry/geometry-form-field/geometry-form-field-input.component.ts","ng://@igo2/geo/lib/geometry/geometry-form-field/geometry-form-field.module.ts","ng://@igo2/geo/lib/geometry/geometry.module.ts","ng://@igo2/geo/lib/filter/time-filter-button/time-filter-button.component.ts","ng://@igo2/geo/lib/filter/time-filter-form/time-filter-form.component.ts","ng://@igo2/geo/lib/filter/time-filter-item/time-filter-item.component.ts","ng://@igo2/geo/lib/filter/time-filter-list/time-filter-list.component.ts","ng://@igo2/geo/lib/filter/time-filter-list/time-filter-list-binding.directive.ts","ng://@igo2/geo/lib/wkt/shared/wkt.service.ts","ng://@igo2/geo/lib/filter/ogc-filter-form/ogc-filter-form.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-form/ogc-filterable-form.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-item/ogc-filterable-item.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-list/ogc-filterable-list.component.ts","ng://@igo2/geo/lib/filter/ogc-filterable-list/ogc-filterable-list-binding.directive.ts","ng://@igo2/geo/lib/filter/ogc-filter-button/ogc-filter-button.component.ts","ng://@igo2/geo/lib/filter/ogc-filter-toggle-button/ogc-filter-toggle-button.component.ts","ng://@igo2/geo/lib/filter/spatial-filter/spatial-filter-type/spatial-filter-type.component.ts","ng://@igo2/geo/lib/filter/spatial-filter/spatial-filter-list/spatial-filter-list.component.ts","ng://@igo2/geo/lib/filter/spatial-filter/spatial-filter-item/spatial-filter-item.component.ts","ng://@igo2/geo/lib/filter/filter.module.ts","ng://@igo2/geo/lib/import-export/shared/export.errors.ts","ng://@igo2/geo/lib/import-export/shared/export.utils.ts","ng://@igo2/geo/lib/import-export/shared/export.type.ts","ng://@igo2/geo/lib/import-export/shared/export.service.ts","ng://@igo2/geo/lib/import-export/shared/import.errors.ts","ng://@igo2/geo/lib/import-export/shared/import.utils.ts","ng://@igo2/geo/lib/import-export/shared/import.service.ts","ng://@igo2/geo/lib/import-export/style-list/style-list.service.ts","ng://@igo2/geo/lib/import-export/import-export/import-export.component.ts","ng://@igo2/geo/lib/import-export/shared/drop-geo-file.directive.ts","ng://@igo2/geo/lib/import-export/style-list/style-list.provider.ts","ng://@igo2/geo/lib/import-export/style-list/style-list.module.ts","ng://@igo2/geo/lib/import-export/import-export.module.ts","ng://@igo2/geo/lib/map/map.module.ts","ng://@igo2/geo/lib/measure/measurer/measurer-item.component.ts","ng://@igo2/geo/lib/measure/measurer/measurer.module.ts","ng://@igo2/geo/lib/measure/measure.module.ts","ng://@igo2/geo/lib/overlay/overlay.module.ts","ng://@igo2/geo/lib/print/shared/print.service.ts","ng://@igo2/geo/lib/print/print/print.component.ts","ng://@igo2/geo/lib/print/shared/print.type.ts","ng://@igo2/geo/lib/print/print-form/print-form.component.ts","ng://@igo2/geo/lib/print/print.module.ts","ng://@igo2/geo/lib/query/shared/query-search-source.providers.ts","ng://@igo2/geo/lib/query/query.module.ts","ng://@igo2/geo/lib/search/shared/search-source.service.ts","ng://@igo2/geo/lib/search/shared/search.utils.ts","ng://@igo2/geo/lib/search/shared/search.service.ts","ng://@igo2/geo/lib/directions/directions-sources/directions-source.ts","ng://@igo2/geo/lib/directions/shared/directions-source.service.ts","ng://@igo2/geo/lib/directions/shared/directions.service.ts","ng://@igo2/geo/lib/directions/directions-form/directions-form.service.ts","ng://@igo2/geo/lib/directions/directions-form/directions-form.component.ts","ng://@igo2/geo/lib/directions/directions-form/directions-form-binding.directive.ts","ng://@igo2/geo/lib/directions/directions.module.ts","ng://@igo2/geo/lib/search/shared/search-source-service.providers.ts","ng://@igo2/geo/lib/search/shared/sources/icherche.ts","ng://@igo2/geo/lib/search/shared/sources/icherche.providers.ts","ng://@igo2/geo/lib/search/shared/sources/coordinates.ts","ng://@igo2/geo/lib/search/shared/sources/coordinates.providers.ts","ng://@igo2/geo/lib/search/shared/sources/ilayer.ts","ng://@igo2/geo/lib/search/shared/sources/ilayer.providers.ts","ng://@igo2/geo/lib/search/shared/search.enums.ts","ng://@igo2/geo/lib/search/search-selector/search-selector.component.ts","ng://@igo2/geo/lib/search/search-selector/search-selector.module.ts","ng://@igo2/geo/lib/search/search-settings/search-settings.component.ts","ng://@igo2/geo/lib/search/search-settings/search-settings.module.ts","ng://@igo2/geo/lib/search/search-bar/search-bar.component.ts","ng://@igo2/geo/lib/search/search-bar/search-url-param.directive.ts","ng://@igo2/geo/lib/search/search-bar/search-bar.module.ts","ng://@igo2/geo/lib/search/search-results/search-results.component.ts","ng://@igo2/geo/lib/search/search-results/search-results-item.component.ts","ng://@igo2/geo/lib/search/search-results/search-results-add-button.component.ts","ng://@igo2/geo/lib/search/search-results/search-results.module.ts","ng://@igo2/geo/lib/search/shared/search-pointer-summary.directive.ts","ng://@igo2/geo/lib/search/search.module.ts","ng://@igo2/geo/lib/toast/toast.component.ts","ng://@igo2/geo/lib/toast/toast.module.ts","ng://@igo2/geo/lib/workspace/widgets/ogc-filter/ogc-filter.component.ts","ng://@igo2/geo/lib/workspace/widgets/widgets.ts","ng://@igo2/geo/lib/workspace/widgets/ogc-filter/ogc-filter.module.ts","ng://@igo2/geo/lib/workspace/shared/wfs-workspace.ts","ng://@igo2/geo/lib/workspace/shared/wfs-workspace.service.ts","ng://@igo2/geo/lib/workspace/shared/wms-workspace.ts","ng://@igo2/geo/lib/workspace/shared/wms-workspace.service.ts","ng://@igo2/geo/lib/workspace/workspace-selector/workspace-selector.directive.ts","ng://@igo2/geo/lib/workspace/workspace-selector/workspace-selector.module.ts","ng://@igo2/geo/lib/workspace/workspace.module.ts","ng://@igo2/geo/lib/wkt/wkt.module.ts","ng://@igo2/geo/lib/geo.module.ts","ng://@igo2/geo/lib/search/shared/sources/cadastre.ts","ng://@igo2/geo/lib/search/shared/sources/cadastre.providers.ts","ng://@igo2/geo/lib/search/shared/sources/nominatim.ts","ng://@igo2/geo/lib/search/shared/sources/nominatim.providers.ts","ng://@igo2/geo/lib/search/shared/sources/storedqueries.ts","ng://@igo2/geo/lib/search/shared/sources/storedqueries.providers.ts","ng://@igo2/geo/lib/directions/shared/directions.enum.ts","ng://@igo2/geo/lib/directions/directions-sources/osrm-directions-source.ts","ng://@igo2/geo/lib/directions/directions-sources/directions-source.provider.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\nimport { MetadataOptions } from './metadata.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MetadataService {\r\n  constructor() {}\r\n\r\n  open(metadata: MetadataOptions) {\r\n    if (metadata.extern) {\r\n      window.open(metadata.url, '_blank');\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\nimport {\r\n  MetadataOptions,\r\n  MetadataLayerOptions\r\n} from '../shared/metadata.interface';\r\nimport { MetadataService } from '../shared/metadata.service';\r\n\r\n@Component({\r\n  selector: 'igo-metadata-button',\r\n  templateUrl: './metadata-button.component.html',\r\n  styleUrls: ['./metadata-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MetadataButtonComponent {\r\n  @Input()\r\n  get layer(): Layer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: Layer) {\r\n    this._layer = value;\r\n  }\r\n  private _layer: Layer;\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  constructor(private metadataService: MetadataService) {}\r\n\r\n  openMetadata(metadata: MetadataOptions) {\r\n    this.metadataService.open(metadata);\r\n  }\r\n\r\n  get options(): MetadataLayerOptions {\r\n    if (!this.layer) {\r\n      return;\r\n    }\r\n    return this.layer.options;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { MetadataButtonComponent } from './metadata-button/metadata-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [MetadataButtonComponent],\r\n  declarations: [MetadataButtonComponent]\r\n})\r\nexport class IgoMetadataModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoMetadataModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export abstract class DataService {\r\n    abstract getData(): string;\r\n}\r\n","import { Md5 } from 'ts-md5';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { AnyDataSourceOptions } from '../datasource/shared/datasources/any-datasource.interface';\r\nimport { DataSourceOptions } from '../datasource/shared/datasources/datasource.interface';\r\nimport { WMSDataSourceOptions } from '../datasource/shared/datasources/wms-datasource.interface';\r\nimport { WMTSDataSourceOptions } from '../datasource/shared/datasources/wmts-datasource.interface';\r\n\r\n/**\r\n * Generate a id from it's datasource options.\r\n * @param options Data source options\r\n * @returns A id\r\n */\r\nexport function generateIdFromSourceOptions(options: DataSourceOptions): string {\r\n  const generators = {\r\n    wms: generateWMSIdFromSourceOptions,\r\n    wmts: generateWMTSIdFromSourceOptions,\r\n    xyz: generateXYZIdFromSourceOptions,\r\n    feature: generateFeatureIdFromSourceOptions,\r\n    osm: (_options: AnyDataSourceOptions) => 'OSM'\r\n  };\r\n  const generator = generators[options.type] || generateId;\r\n  return generator(options);\r\n}\r\n\r\n/**\r\n * Generate a id from WMS data source options\r\n * @param options WMS data source options\r\n * @returns A md5 hash of the the url and layers\r\n */\r\nexport function generateWMSIdFromSourceOptions(options: WMSDataSourceOptions) {\r\n  const layers = options.params.LAYERS;\r\n  const url = options.url.charAt(0) === '/' ? window.location.origin + options.url : options.url;\r\n  const chain = 'wms' + url + layers;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a id from WMTS data source options\r\n * @param options WMTS data source options\r\n * @returns A md5 hash of the the url and layer\r\n */\r\nexport function generateWMTSIdFromSourceOptions(options: WMTSDataSourceOptions) {\r\n  const layer = options.layer;\r\n  const chain = 'wmts' + options.url + layer;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a id from XYZ data source options\r\n * @param options XYZ data source options\r\n * @returns A md5 hash of the the url and layer\r\n */\r\nexport function generateXYZIdFromSourceOptions(options: WMTSDataSourceOptions) {\r\n  const chain = 'xyz' + options.url;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a id from feature data source options\r\n * @param options XYZ data source options\r\n * @returns A md5 hash of the the url and layer\r\n */\r\nexport function generateFeatureIdFromSourceOptions(options: WMTSDataSourceOptions) {\r\n  if (! options.url) { return generateId(options); }\r\n  const chain = 'feature' + options.url;\r\n  return Md5.hashStr(chain) as string;\r\n}\r\n\r\n/**\r\n * Generate a unique id\r\n * @returns A uuid\r\n */\r\nexport function generateId(options: AnyDataSourceOptions) {\r\n  return uuid();\r\n}\r\n","import olSource from 'ol/source/Source';\r\n\r\nimport {\r\n  DataSourceOptions,\r\n  Legend\r\n} from './datasource.interface';\r\n\r\nimport { DataService } from './data.service';\r\nimport { generateIdFromSourceOptions } from '../../../utils/id-generator';\r\nimport { LegendOptions } from '../../../layer';\r\n\r\nexport abstract class DataSource {\r\n\r\n  public id: string;\r\n  public ol: olSource;\r\n  private legend: Legend[];\r\n\r\n  constructor(\r\n    public options: DataSourceOptions = {},\r\n    protected dataService?: DataService\r\n  ) {\r\n    this.options = options;\r\n    this.id = this.options.id ||Â this.generateId();\r\n    this.ol = this.createOlSource();\r\n  }\r\n\r\n  protected abstract createOlSource(): olSource;\r\n\r\n  protected generateId(): string {\r\n    return generateIdFromSourceOptions(this.options);\r\n  }\r\n\r\n  public getLegend(style?: string, scale?: number): Legend[] {\r\n    return this.legend ? this.legend : [];\r\n  }\r\n\r\n  public setLegend(options: LegendOptions): Legend[] {\r\n    if (options.url) {\r\n      this.legend = [{ url: options.url} ];\r\n    } else if (options.html) {\r\n      this.legend = [{ html: options.html} ];\r\n    } else {\r\n      this.legend = [];\r\n    }\r\n\r\n    return this.legend;\r\n  }\r\n\r\n  protected abstract onUnwatch();\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport * as olformat from 'ol/format';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { FeatureDataSourceOptions } from './feature-datasource.interface';\r\n\r\nexport class FeatureDataSource extends DataSource {\r\n  public options: FeatureDataSourceOptions;\r\n  public ol: olSourceVector;\r\n  protected createOlSource(): olSourceVector {\r\n    const sourceOptions = {\r\n      format: this.getSourceFormatFromOptions(this.options)\r\n    };\r\n\r\n    return new olSourceVector(Object.assign(sourceOptions, this.options));\r\n  }\r\n\r\n  protected getSourceFormatFromOptions(options: FeatureDataSourceOptions) {\r\n    if (options.format) {\r\n      return options.format;\r\n    }\r\n    let olFormatCls;\r\n    const formatType = options.formatType;\r\n    if (!formatType) {\r\n      olFormatCls = olformat.GeoJSON;\r\n    } else {\r\n      olFormatCls = olformat[formatType];\r\n      if (olFormatCls === undefined) {\r\n        throw new Error('Invalid vector source format ${formatType}.');\r\n      }\r\n    }\r\n\r\n    const formatOptions = options.formatOptions;\r\n    let format;\r\n    if (formatOptions) {\r\n      format = new olFormatCls(formatOptions);\r\n    } else {\r\n      format = new olFormatCls();\r\n    }\r\n\r\n    return format;\r\n  }\r\n\r\n  public onUnwatch() {}\r\n\r\n  get queryTitle(): string {\r\n    return (this.options as any).queryTitle\r\n      ? (this.options as any).queryTitle\r\n      : 'title';\r\n  }\r\n}\r\n","import olSourceOSM from 'ol/source/OSM';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { OSMDataSourceOptions } from './osm-datasource.interface';\r\n\r\nexport class OSMDataSource extends DataSource {\r\n  public options: OSMDataSourceOptions;\r\n  public ol: olSourceOSM;\r\n\r\n  protected createOlSource(): olSourceOSM {\r\n    this.options.url = 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\r\n    return new olSourceOSM(this.options);\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","import olSourceXYZ from 'ol/source/XYZ';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { XYZDataSourceOptions } from './xyz-datasource.interface';\r\n\r\nexport class XYZDataSource extends DataSource {\r\n  public options: XYZDataSourceOptions;\r\n  public ol: olSourceXYZ;\r\n\r\n  protected createOlSource(): olSourceXYZ {\r\n    return new olSourceXYZ(this.options);\r\n  }\r\n\r\n  public onUnwatch() {}\r\n\r\n}\r\n","import * as olfilter from 'ol/format/filter';\r\nimport olFormatWKT from 'ol/format/WKT';\r\nimport olFormatWFS from 'ol/format/WFS';\r\nimport olGeometry from 'ol/geom/Geometry';\r\n\r\nimport olProjection from 'ol/proj/Projection';\r\n\r\nimport { uuid, ObjectUtils } from '@igo2/utils';\r\n\r\nimport {\r\n  OgcFilter,\r\n  IgoOgcFilterObject,\r\n  WFSWriteGetFeatureOptions,\r\n  AnyBaseOgcFilterOptions,\r\n  OgcInterfaceFilterOptions,\r\n  OgcFilterableDataSourceOptions,\r\n  OgcFiltersOptions,\r\n  IgoPushButton,\r\n  PushButtonGroup,\r\n  OgcPushButtonBundle\r\n} from './ogc-filter.interface';\r\n\r\nexport class OgcFilterWriter {\r\n  private filterSequence: OgcInterfaceFilterOptions[] = [];\r\n  public operators = {\r\n    PropertyIsEqualTo: { spatial: false, fieldRestrict: [] },\r\n    PropertyIsNotEqualTo: { spatial: false, fieldRestrict: [] },\r\n    PropertyIsLike: { spatial: false, fieldRestrict: ['string'] },\r\n    PropertyIsGreaterThan: { spatial: false, fieldRestrict: ['number'] },\r\n    PropertyIsGreaterThanOrEqualTo: { spatial: false, fieldRestrict: ['number'] },\r\n    PropertyIsLessThan: { spatial: false, fieldRestrict: ['number'] },\r\n    PropertyIsLessThanOrEqualTo: { spatial: false, fieldRestrict: ['number'] },\r\n    PropertyIsBetween: { spatial: false, fieldRestrict: ['number'] },\r\n    During: { spatial: false, fieldRestrict: [] },\r\n    PropertyIsNull: { spatial: false, fieldRestrict: [] },\r\n    Intersects: { spatial: true, fieldRestrict: [] },\r\n    Within: { spatial: true, fieldRestrict: [] },\r\n    Contains: { spatial: true, fieldRestrict: [] }\r\n  };\r\n\r\n  defineOgcFiltersDefaultOptions(\r\n    ogcFiltersOptions: OgcFiltersOptions,\r\n    fieldNameGeometry: string,\r\n    srcType?: string): OgcFiltersOptions  {\r\n    let ogcFiltersDefaultValue = true; // default values for wfs.\r\n    if (srcType && srcType === 'wms') {\r\n      ogcFiltersDefaultValue = false;\r\n    }\r\n\r\n    ogcFiltersOptions = ogcFiltersOptions || {};\r\n    ogcFiltersOptions.enabled = ogcFiltersOptions.enabled === undefined ? ogcFiltersDefaultValue : ogcFiltersOptions.enabled;\r\n    ogcFiltersOptions.editable = ogcFiltersOptions.editable === undefined ? ogcFiltersDefaultValue : ogcFiltersOptions.editable;\r\n    ogcFiltersOptions.geometryName = fieldNameGeometry;\r\n\r\n    ogcFiltersOptions.advancedOgcFilters = true;\r\n    if (ogcFiltersOptions.enabled && ogcFiltersOptions.pushButtons) {\r\n      ogcFiltersOptions.advancedOgcFilters = false;\r\n    }\r\n    return ogcFiltersOptions;\r\n  }\r\n\r\n  public buildFilter(\r\n    filters?: IgoOgcFilterObject,\r\n    extent?: [number, number, number, number],\r\n    proj?: olProjection,\r\n    fieldNameGeometry?: string\r\n  ): string {\r\n    let ourBboxFilter;\r\n    let enableBbox: boolean;\r\n    if (/intersects|contains|within/gi.test(JSON.stringify(filters))) {\r\n      enableBbox = false;\r\n    } else {\r\n      enableBbox = true;\r\n    }\r\n    if (filters) {\r\n      fieldNameGeometry =\r\n        (filters as any).geometryName !== undefined\r\n          ? (filters as any).geometryName\r\n          : fieldNameGeometry;\r\n    }\r\n    if (extent && filters) {\r\n      ourBboxFilter = olfilter.bbox(fieldNameGeometry, extent, proj.getCode());\r\n    }\r\n    let filterAssembly: OgcFilter;\r\n    if (filters) {\r\n      filters = this.checkIgoFiltersProperties(filters, fieldNameGeometry, proj);\r\n      if (extent && enableBbox) {\r\n        filterAssembly = olfilter.and(\r\n          ourBboxFilter,\r\n          this.bundleFilter(filters)\r\n        );\r\n      } else {\r\n        filterAssembly = this.bundleFilter(filters);\r\n      }\r\n    } else {\r\n      return 'bbox=' + extent.join(',') + ',' + proj.getCode();\r\n    }\r\n\r\n    const wfsOptions: WFSWriteGetFeatureOptions = {\r\n      srsName: '',\r\n      featureNS: '',\r\n      featurePrefix: '',\r\n      featureTypes: ['featureTypes'],\r\n      filter: filterAssembly,\r\n      outputFormat: '',\r\n      geometryName: fieldNameGeometry\r\n    };\r\n\r\n    const query = new olFormatWFS().writeGetFeature(wfsOptions);\r\n    const str = new XMLSerializer().serializeToString(query);\r\n    const regexp1 = /typenames *=|typename *=\\\"featureTypes\\\" *>/gi;\r\n    const regexp2 = /<\\/Query><\\/GetFeature>/gi;\r\n\r\n    return 'filter=' + str.split(regexp1)[1].split(regexp2)[0];\r\n  }\r\n\r\n  private bundleFilter(filterObject: any) {\r\n    if (filterObject instanceof Array) {\r\n      const logicalArray = [];\r\n      filterObject.forEach(element => {\r\n        logicalArray.push(this.bundleFilter(element));\r\n      });\r\n      return logicalArray;\r\n    } else {\r\n      if (filterObject.hasOwnProperty('logical')) {\r\n        return this.createFilter({\r\n          operator: filterObject.logical,\r\n          logicalArray: this.bundleFilter(filterObject.filters)\r\n        });\r\n      } else if (filterObject.hasOwnProperty('operator')) {\r\n        return this.createFilter(filterObject as AnyBaseOgcFilterOptions);\r\n      }\r\n    }\r\n  }\r\n\r\n  private createFilter(filterOptions): OgcFilter {\r\n    const operator = filterOptions.operator;\r\n    const logicalArray = filterOptions.logicalArray;\r\n\r\n    const wfsPropertyName = filterOptions.propertyName;\r\n    const wfsPattern = filterOptions.pattern;\r\n    const wfsMatchCase = filterOptions.matchCase\r\n      ? filterOptions.matchCase\r\n      : true;\r\n    const wfsWildCard = filterOptions.wildCard ? filterOptions.wildCard : '*';\r\n    const wfsSingleChar = filterOptions.singleChar\r\n      ? filterOptions.singleChar\r\n      : '.';\r\n    const wfsEscapeChar = filterOptions.escapeChar\r\n      ? filterOptions.escapeChar\r\n      : '!';\r\n\r\n    const wfsLowerBoundary = filterOptions.lowerBoundary;\r\n    const wfsUpperBoundary = filterOptions.upperBoundary;\r\n\r\n    const wfsGeometryName = filterOptions.geometryName;\r\n    const wfsExtent = filterOptions.extent;\r\n    const wfsWktGeometry = filterOptions.wkt_geometry;\r\n    const wfsSrsName = filterOptions.srsName\r\n      ? filterOptions.srsName\r\n      : 'EPSG:3857';\r\n\r\n    const wfsBegin = filterOptions.begin;\r\n    const wfsEnd = filterOptions.end;\r\n\r\n    const wfsExpression = filterOptions.expression;\r\n\r\n    let geometry: olGeometry;\r\n    if (wfsWktGeometry) {\r\n      const wkt = new olFormatWKT();\r\n      geometry = wkt.readGeometry(wfsWktGeometry, {\r\n        dataProjection: wfsSrsName,\r\n        featureProjection: wfsSrsName || 'EPSG:3857'\r\n      });\r\n    }\r\n\r\n    switch (operator) {\r\n      case 'BBOX':\r\n        return olfilter.bbox(wfsGeometryName, wfsExtent, wfsSrsName);\r\n      case 'PropertyIsBetween':\r\n        return olfilter.between(\r\n          wfsPropertyName,\r\n          wfsLowerBoundary,\r\n          wfsUpperBoundary\r\n        );\r\n      case 'Contains':\r\n        return olfilter.contains(wfsGeometryName, geometry, wfsSrsName);\r\n      case 'During':\r\n        return olfilter.during(wfsPropertyName, wfsBegin, wfsEnd);\r\n      case 'PropertyIsEqualTo':\r\n        return olfilter.equalTo(\r\n          wfsPropertyName,\r\n          wfsExpression,\r\n          wfsMatchCase\r\n        );\r\n      case 'PropertyIsGreaterThan':\r\n        return olfilter.greaterThan(wfsPropertyName, wfsExpression);\r\n      case 'PropertyIsGreaterThanOrEqualTo':\r\n        return olfilter.greaterThanOrEqualTo(wfsPropertyName, wfsExpression);\r\n      case 'Intersects':\r\n        return olfilter.intersects(wfsGeometryName, geometry, wfsSrsName);\r\n      case 'PropertyIsNull':\r\n        return olfilter.isNull(wfsPropertyName);\r\n      case 'PropertyIsLessThan':\r\n        return olfilter.lessThan(wfsPropertyName, wfsExpression);\r\n      case 'PropertyIsLessThanOrEqualTo':\r\n        return olfilter.lessThanOrEqualTo(wfsPropertyName, wfsExpression);\r\n      case 'PropertyIsLike':\r\n        return olfilter.like(\r\n          wfsPropertyName,\r\n          wfsPattern.replace(/[()_]/gi, wfsSingleChar),\r\n          wfsWildCard,\r\n          wfsSingleChar,\r\n          wfsEscapeChar,\r\n          wfsMatchCase\r\n        );\r\n      case 'PropertyIsNotEqualTo':\r\n        return olfilter.notEqualTo(\r\n          wfsPropertyName,\r\n          wfsExpression,\r\n          wfsMatchCase\r\n        );\r\n      case 'Within':\r\n        return olfilter.within(wfsGeometryName, geometry, wfsSrsName);\r\n      // LOGICAL\r\n      case 'And':\r\n        return olfilter.and.apply(null, logicalArray);\r\n      case 'Or':\r\n        return olfilter.or.apply(null, logicalArray);\r\n      case 'Not':\r\n        return olfilter.not.apply(null, logicalArray);\r\n\r\n      default:\r\n        return undefined;\r\n    }\r\n  }\r\n\r\n  public defineInterfaceFilterSequence(\r\n    filterObject: any,\r\n    geometryName,\r\n    logical = '',\r\n    level = -1\r\n  ): OgcInterfaceFilterOptions[] {\r\n    if (filterObject instanceof Array) {\r\n      filterObject.forEach(element => {\r\n        this.filterSequence.concat(\r\n          this.defineInterfaceFilterSequence(\r\n            element,\r\n            geometryName,\r\n            logical,\r\n            level\r\n          )\r\n        );\r\n      });\r\n    } else {\r\n      if (filterObject.hasOwnProperty('logical')) {\r\n        level = level + 1;\r\n        this.filterSequence.concat(\r\n          this.defineInterfaceFilterSequence(\r\n            filterObject.filters,\r\n            geometryName,\r\n            filterObject.logical,\r\n            level\r\n          )\r\n        );\r\n      } else if (filterObject.hasOwnProperty('operator')) {\r\n        this.filterSequence.push(\r\n          this.addInterfaceFilter(filterObject, geometryName, level, logical)\r\n        );\r\n      }\r\n    }\r\n    return this.filterSequence;\r\n  }\r\n\r\n  public addInterfaceFilter(\r\n    igoOgcFilterObject?,\r\n    geometryName?,\r\n    level = 0,\r\n    parentLogical = 'Or'\r\n  ): OgcInterfaceFilterOptions {\r\n    if (!igoOgcFilterObject) {\r\n      igoOgcFilterObject = { operator: 'PropertyIsEqualTo' };\r\n    }\r\n    const f = {\r\n      propertyName: '',\r\n      operator: '',\r\n      active: '',\r\n      filterid: uuid(),\r\n      begin: '',\r\n      end: '',\r\n      lowerBoundary: '',\r\n      upperBoundary: '',\r\n      expression: '',\r\n      pattern: '',\r\n      wildCard: '*',\r\n      singleChar: '.',\r\n      escapeChar: '!',\r\n      matchCase: true,\r\n      igoSpatialSelector: '',\r\n      geometryName: '',\r\n      geometry: '',\r\n      wkt_geometry: '',\r\n      extent: '',\r\n      srsName: '',\r\n      parentLogical: '',\r\n      level: 0\r\n    };\r\n\r\n    return Object.assign(\r\n      f,\r\n      {\r\n        parentLogical,\r\n        level,\r\n        geometryName\r\n      },\r\n      igoOgcFilterObject\r\n    );\r\n  }\r\n\r\n  public checkIgoFiltersProperties(\r\n    filterObject: any,\r\n    fieldNameGeometry,\r\n    proj: olProjection,\r\n    active = false\r\n  ) {\r\n    const filterArray = [];\r\n    if (filterObject instanceof Array) {\r\n      filterObject.forEach(element => {\r\n        filterArray.push(\r\n          this.checkIgoFiltersProperties(element, fieldNameGeometry, proj, active)\r\n        );\r\n      });\r\n      return filterArray;\r\n    } else {\r\n      if (filterObject.hasOwnProperty('logical')) {\r\n        return Object.assign(\r\n          {},\r\n          {\r\n            logical: filterObject.logical,\r\n            filters: this.checkIgoFiltersProperties(\r\n              filterObject.filters,\r\n              fieldNameGeometry,\r\n              proj,\r\n              active\r\n            )\r\n          }\r\n        );\r\n      } else if (filterObject.hasOwnProperty('operator')) {\r\n        return this.addFilterProperties(\r\n          filterObject as OgcInterfaceFilterOptions,\r\n          fieldNameGeometry,\r\n          proj,\r\n          active\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  private addFilterProperties(\r\n    igoOgcFilterObject: OgcInterfaceFilterOptions,\r\n    fieldNameGeometry,\r\n    proj: olProjection,\r\n    active = false\r\n  ) {\r\n    const filterid = igoOgcFilterObject.hasOwnProperty('filterid')\r\n      ? igoOgcFilterObject.filterid\r\n      : uuid();\r\n    const status = igoOgcFilterObject.hasOwnProperty('active')\r\n      ? igoOgcFilterObject.active\r\n      : active;\r\n\r\n    const srsName = igoOgcFilterObject.hasOwnProperty('srsName')\r\n      ? igoOgcFilterObject.srsName\r\n      : proj ? proj.getCode() : 'EPSG:3857';\r\n\r\n    return Object.assign(\r\n      {},\r\n      {\r\n        filterid,\r\n        active: status,\r\n        igoSpatialSelector: 'fixedExtent',\r\n        srsName\r\n      },\r\n      igoOgcFilterObject,\r\n      { geometryName: fieldNameGeometry }\r\n    );\r\n  }\r\n\r\n  public rebuiltIgoOgcFilterObjectFromSequence(\r\n    sequence: OgcInterfaceFilterOptions[]\r\n  ): IgoOgcFilterObject {\r\n    if (sequence instanceof Array) {\r\n      if (sequence.length >= 1) {\r\n        let lastParentLogical = sequence[0].parentLogical;\r\n        let nextElement: any;\r\n        let logicalArray = [];\r\n        let lastProcessedFilter;\r\n        sequence.forEach(uiFilter => {\r\n          const element = Object.assign({}, uiFilter);\r\n          const index = sequence.indexOf(uiFilter);\r\n          if (index >= 0 && index < sequence.length - 1) {\r\n            nextElement = sequence[index + 1];\r\n          } else {\r\n            nextElement = element;\r\n          }\r\n          delete element.active;\r\n          delete element.filterid;\r\n          delete element.parentLogical;\r\n          logicalArray.push(element);\r\n\r\n          if (sequence.length === 1) {\r\n            lastProcessedFilter = element;\r\n          } else if (lastParentLogical !== nextElement.parentLogical) {\r\n            if (logicalArray.length === 1) {\r\n              console.log(\r\n                'You must set at ' +\r\n                  'least two operator in a logical (' +\r\n                  lastParentLogical +\r\n                  ')'\r\n              );\r\n            } else {\r\n              lastProcessedFilter = Object.assign(\r\n                {},\r\n                { logical: lastParentLogical, filters: logicalArray }\r\n              );\r\n              logicalArray = [lastProcessedFilter];\r\n              lastParentLogical = nextElement.parentLogical;\r\n            }\r\n          }\r\n        });\r\n        return lastProcessedFilter;\r\n      } else {\r\n        return undefined;\r\n      }\r\n    } else {\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  private computeIgoPushButton(pushButtons: IgoPushButton): IgoPushButton {\r\n    if (pushButtons.groups.every(group => group.computedButtons !== undefined)) {\r\n      return pushButtons;\r\n    }\r\n    let pb: IgoPushButton;\r\n    if (pushButtons.groups && pushButtons.bundles) {\r\n      if (!pushButtons.bundles.every(bundle => bundle.id !== undefined)) {\r\n        throw new Error('You must set an id for each of your pushButtons bundles');\r\n      }\r\n      pb = ObjectUtils.copyDeep(pushButtons);\r\n      pb.groups.forEach(group => {\r\n        group.title = group.title ? group.title : group.name;\r\n        group.enabled = group.enabled ? group.enabled : false;\r\n        group.computedButtons = ObjectUtils.copyDeep(pb.bundles.filter(b => group.ids.includes(b.id)));\r\n      });\r\n    } else if (!pushButtons.groups && pushButtons.bundles) {\r\n      pb = ObjectUtils.copyDeep(pushButtons);\r\n      pb.groups = [{ title: 'group1', name: 'group1', computedButtons: ObjectUtils.copyDeep(pb.bundles) } as PushButtonGroup];\r\n    } else {\r\n      pb = {\r\n        bundles: pushButtons as OgcPushButtonBundle[],\r\n        groups: [\r\n          {\r\n            title: 'group1', name: 'group1',\r\n            computedButtons: ObjectUtils.copyDeep(pushButtons) as OgcPushButtonBundle[]\r\n          } as PushButtonGroup]\r\n      };\r\n    }\r\n    if (!pb.groups.find(pbGroup => pbGroup.enabled)) {\r\n      pb.groups[0].enabled = true;\r\n    }\r\n    return pb;\r\n  }\r\n\r\n  public handleOgcFiltersAppliedValue(\r\n    options: OgcFilterableDataSourceOptions,\r\n    fieldNameGeometry: string,\r\n    extent?: [number, number, number, number],\r\n    proj?: olProjection): string {\r\n    const ogcFilters = options.ogcFilters;\r\n    if (!ogcFilters) {\r\n      return;\r\n    }\r\n    let filterQueryStringPushButton = '';\r\n    let filterQueryStringAdvancedFilters = '';\r\n    if (ogcFilters.enabled && ogcFilters.pushButtons) {\r\n      ogcFilters.pushButtons = this.computeIgoPushButton(ogcFilters.pushButtons);\r\n      const pushButtonBundle = ogcFilters.pushButtons.groups.find(g => g.enabled).computedButtons;\r\n      const conditions = [];\r\n      pushButtonBundle.map(buttonBundle => {\r\n        const bundleCondition = [];\r\n        buttonBundle.buttons\r\n          .filter(ogcpb => ogcpb.enabled === true)\r\n          .forEach(enabledPb => bundleCondition.push(enabledPb.filters));\r\n        if (bundleCondition.length === 1) {\r\n          conditions.push(bundleCondition[0]);\r\n        } else if (bundleCondition.length > 1) {\r\n          conditions.push({ logical: buttonBundle.logical, filters: bundleCondition });\r\n        }\r\n      });\r\n      if (conditions.length >= 1) {\r\n        filterQueryStringPushButton = this.buildFilter(\r\n            conditions.length === 1 ? conditions[0] : { logical: 'And', filters: conditions },\r\n            extent,\r\n            proj,\r\n            ogcFilters.geometryName\r\n          );\r\n      }\r\n    }\r\n\r\n    if (ogcFilters.enabled && ogcFilters.filters) {\r\n      ogcFilters.geometryName = ogcFilters.geometryName || fieldNameGeometry;\r\n      const igoFilters = ogcFilters.filters;\r\n      filterQueryStringAdvancedFilters = this.buildFilter(igoFilters, extent, proj, ogcFilters.geometryName);\r\n    }\r\n\r\n    let filterQueryString = ogcFilters.advancedOgcFilters ? filterQueryStringAdvancedFilters : filterQueryStringPushButton;\r\n    if (options.type === 'wms') {\r\n      filterQueryString = this.formatProcessedOgcFilter(filterQueryString, (options as any).params.LAYERS);\r\n    }\r\n    if (options.type === 'wfs') {\r\n      filterQueryString = this.formatProcessedOgcFilter(filterQueryString, (options as any).params.featureTypes);\r\n    }\r\n\r\n    return filterQueryString;\r\n\r\n  }\r\n\r\n  public formatProcessedOgcFilter(\r\n    processedFilter: string,\r\n    layersOrTypenames: string): string {\r\n    let appliedFilter = '';\r\n    if (processedFilter.length === 0 && layersOrTypenames.indexOf(',') === -1) {\r\n      appliedFilter = processedFilter;\r\n    } else {\r\n      layersOrTypenames.split(',').forEach(layerOrTypenames => {\r\n        appliedFilter = `${appliedFilter}(${processedFilter.replace('filter=', '')})`;\r\n      });\r\n    }\r\n    const filterValue = appliedFilter.length > 0 ? appliedFilter.replace('filter=', '') : undefined;\r\n    return filterValue;\r\n  }\r\n}\r\n","import { WFSDataSourceOptions } from './wfs-datasource.interface';\r\nimport { WMSDataSourceOptions } from './wms-datasource.interface';\r\nimport * as OlFormat from 'ol/format';\r\nimport olFormatGML2 from 'ol/format/GML2';\r\nimport olFormatGML3 from 'ol/format/GML3';\r\nimport olFormatGML32 from 'ol/format/GML32';\r\nimport olFormatOSMXML from 'ol/format/OSMXML';\r\n\r\nexport const defaultEpsg = 'EPSG:3857';\r\nexport const defaultMaxFeatures = 5000;\r\nexport const defaultWfsVersion = '2.0.0';\r\nexport const defaultFieldNameGeometry = 'geometry';\r\nexport const gmlRegex = new RegExp(/(.*)?gml(.*)?/gi);\r\nexport const jsonRegex = new RegExp(/(.*)?json(.*)?/gi);\r\n\r\n/**\r\n * This method build/standardize WFS call query params based on the layer property.\r\n * @param wfsDataSourceOptions  WFSDataSourceOptions The common wfs datasource options interface\r\n * @param count  Number: Used to control the number of feature. Used to bypass whe wfs datasource options interface (maxFeatures)\r\n * @param epsg  String: Used to control the EPSG code (es: 'EPSG3857'). Used to bypass whe wfs datasource options interface (srsName)\r\n * @param properties  String: Used to control the queried fields  (WFS service).\r\n * @returns An array array of {name: '', value: ''} of predefined query params.\r\n */\r\nexport function formatWFSQueryString(\r\n  dataSourceOptions: WFSDataSourceOptions | WMSDataSourceOptions,\r\n  count?: number,\r\n  epsg?: string,\r\n  properties?: string\r\n): { name: string; value: string }[] {\r\n  const versionWfs200 = '2.0.0'; // not the same usage as defaultWfsVersion.\r\n  const url = dataSourceOptions.urlWfs;\r\n  const paramsWFS = dataSourceOptions.paramsWFS;\r\n  const effectiveCount = count || defaultMaxFeatures;\r\n  const epsgCode = epsg || defaultEpsg;\r\n  const outputFormat = paramsWFS.outputFormat\r\n    ? `outputFormat=${paramsWFS.outputFormat}`\r\n    : '';\r\n  const version = paramsWFS.version\r\n    ? `version=${paramsWFS.version}`\r\n    : `version=${defaultWfsVersion}`;\r\n  const paramTypename =\r\n    paramsWFS.version === versionWfs200 ? 'typenames' : 'typename';\r\n  const featureTypes = `${paramTypename}=${paramsWFS.featureTypes}`;\r\n  const paramMaxFeatures =\r\n    paramsWFS.version === versionWfs200 ? 'count' : 'maxFeatures';\r\n  const cnt = count\r\n    ? `${paramMaxFeatures}=${effectiveCount}`\r\n    : paramsWFS.maxFeatures\r\n    ? `${paramMaxFeatures}=${paramsWFS.maxFeatures}`\r\n    : `${paramMaxFeatures}=${effectiveCount}`;\r\n  const srs = epsg\r\n    ? `srsname=${epsgCode}`\r\n    : paramsWFS.srsName\r\n    ? 'srsname=' + paramsWFS.srsName\r\n    : `srsname=${epsgCode}`;\r\n\r\n  let propertyName = '';\r\n  let valueReference = '';\r\n  if (properties) {\r\n    propertyName = `propertyName=${properties}`;\r\n    valueReference = `valueReference=${properties}`;\r\n  }\r\n  const sourceFields = dataSourceOptions.sourceFields;\r\n  if (!propertyName && sourceFields && sourceFields.length > 0) {\r\n    const fieldsNames = [];\r\n    dataSourceOptions.sourceFields.forEach(sourcefield => {\r\n      fieldsNames.push(sourcefield.name);\r\n    });\r\n    propertyName = `propertyName=${fieldsNames.join(',')},${\r\n      paramsWFS.fieldNameGeometry\r\n    }`;\r\n  }\r\n\r\n  const getCapabilities = `${url}?service=WFS&request=GetCapabilities&${version}`;\r\n  let getFeature = `${url}?service=WFS&request=GetFeature&${version}&${featureTypes}&`;\r\n  getFeature += `${outputFormat}&${srs}&${cnt}&${propertyName}`;\r\n\r\n  let getpropertyvalue = `${url}?service=WFS&request=GetPropertyValue&version=${versionWfs200}&${featureTypes}&`;\r\n  getpropertyvalue += `&${cnt}&${valueReference}`;\r\n\r\n  return [\r\n    { name: 'outputformat', value: outputFormat },\r\n    { name: 'version', value: version },\r\n    { name: 'typename', value: featureTypes },\r\n    { name: 'count', value: cnt },\r\n    { name: 'srsname', value: srs },\r\n    { name: 'propertyname', value: propertyName },\r\n    { name: 'valuereference', value: valueReference },\r\n    { name: 'getcapabilities', value: getCapabilities.replace(/&&/g, '&') },\r\n    { name: 'getfeature', value: getFeature.replace(/&&/g, '&') },\r\n    { name: 'getpropertyvalue', value: getpropertyvalue.replace(/&&/g, '&') }\r\n  ];\r\n}\r\n\r\n/**\r\n * Validate/Modify layer's wfs options based on :\r\n * 1- an Openlayers's issue with GML provided from WFS. Refer to\r\n * https://github.com/openlayers/openlayers/pull/6400\r\n * 2- Set default values for optionals parameters.\r\n * @param wfsDataSourceOptions  WFSDataSourceOptions The common wfs datasource options interface\r\n * @returns An array array of {name: '', value: ''} of predefined query params.\r\n */\r\nexport function checkWfsParams(wfsDataSourceOptions, srcType?: string) {\r\n  if (srcType && srcType === 'wfs') {\r\n    // reassignation of params to paramsWFS and url to urlWFS to have a common interface with wms-wfs datasources\r\n    wfsDataSourceOptions.paramsWFS = wfsDataSourceOptions.params;\r\n  }\r\n\r\n  const paramsWFS = wfsDataSourceOptions.paramsWFS;\r\n  wfsDataSourceOptions.urlWfs =\r\n    wfsDataSourceOptions.urlWfs || wfsDataSourceOptions.url;\r\n\r\n  paramsWFS.version = paramsWFS.version || defaultWfsVersion;\r\n  paramsWFS.fieldNameGeometry =\r\n    paramsWFS.fieldNameGeometry || defaultFieldNameGeometry;\r\n  paramsWFS.maxFeatures = paramsWFS.maxFeatures || defaultMaxFeatures;\r\n\r\n  let outputFormat;\r\n  if (paramsWFS.outputFormat) {\r\n    outputFormat = paramsWFS.outputFormat;\r\n  }\r\n\r\n  if (gmlRegex.test(outputFormat) || !outputFormat) {\r\n    paramsWFS.version = '1.1.0';\r\n  }\r\n  return Object.assign({}, wfsDataSourceOptions);\r\n}\r\n\r\nexport function getFormatFromOptions(\r\n  options: WFSDataSourceOptions | WMSDataSourceOptions\r\n) {\r\n  let olFormatCls = OlFormat.WFS;\r\n  const outputFormat = options.paramsWFS.outputFormat\r\n    ? options.paramsWFS.outputFormat\r\n    : undefined;\r\n\r\n  if (!outputFormat) {\r\n    return new olFormatCls();\r\n  }\r\n\r\n  if (OlFormat[outputFormat]) {\r\n    olFormatCls = OlFormat[outputFormat];\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('gml2')) {\r\n    olFormatCls = OlFormat.WFS;\r\n    return new olFormatCls({ gmlFormat: olFormatGML2 });\r\n  } else if (outputFormat.toLowerCase().match('gml32')) {\r\n    olFormatCls = OlFormat.WFS;\r\n    return new olFormatCls({ gmlFormat: olFormatGML32 });\r\n  } else if (outputFormat.toLowerCase().match('gml3')) {\r\n    olFormatCls = OlFormat.WFS;\r\n    return new olFormatCls({ gmlFormat: olFormatGML3 });\r\n  } else if (outputFormat.toLowerCase().match('topojson')) {\r\n    olFormatCls = OlFormat.TopoJSON;\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('geojson')) {\r\n    olFormatCls = OlFormat.GeoJSON;\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('esrijson')) {\r\n    olFormatCls = OlFormat.EsriJSON;\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('json')) {\r\n    olFormatCls = OlFormat.GeoJSON;\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('gpx')) {\r\n    olFormatCls = OlFormat.GPX;\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('WKT')) {\r\n    olFormatCls = OlFormat.WKT;\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('osmxml')) {\r\n    olFormatCls = olFormatOSMXML;\r\n    return new olFormatCls();\r\n  } else if (outputFormat.toLowerCase().match('kml')) {\r\n    olFormatCls = OlFormat.KML;\r\n    return new olFormatCls();\r\n  }\r\n\r\n  return new olFormatCls();\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport * as OlLoadingStrategy from 'ol/loadingstrategy';\r\nimport olProjection from 'ol/proj/Projection';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { WFSDataSourceOptions } from './wfs-datasource.interface';\r\nimport { WFSService } from './wfs.service';\r\n\r\nimport { OgcFilterWriter } from '../../../filter/shared/ogc-filter';\r\nimport { OgcFilterableDataSourceOptions, OgcFiltersOptions } from '../../../filter/shared/ogc-filter.interface';\r\nimport {\r\n  formatWFSQueryString,\r\n  defaultFieldNameGeometry,\r\n  checkWfsParams,\r\n  getFormatFromOptions\r\n} from './wms-wfs.utils';\r\n\r\nexport class WFSDataSource extends DataSource {\r\n  public ol: olSourceVector;\r\n\r\n  constructor(\r\n    public options: WFSDataSourceOptions,\r\n    protected wfsService: WFSService\r\n  ) {\r\n    super(checkWfsParams(options, 'wfs'));\r\n\r\n    const ogcFilters = (this.options as OgcFilterableDataSourceOptions).ogcFilters;\r\n    const fieldNameGeometry = this.options.paramsWFS.fieldNameGeometry || defaultFieldNameGeometry;\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n    (this.options as OgcFilterableDataSourceOptions).ogcFilters =\r\n      ogcFilterWriter.defineOgcFiltersDefaultOptions(ogcFilters, fieldNameGeometry);\r\n    if (\r\n      (this.options as OgcFilterableDataSourceOptions).ogcFilters.enabled &&\r\n      (this.options as OgcFilterableDataSourceOptions).ogcFilters.editable\r\n    ) {\r\n      this.wfsService.getSourceFieldsFromWFS(this.options);\r\n    }\r\n  }\r\n\r\n  protected createOlSource(): olSourceVector {\r\n\r\n    return new olSourceVector({\r\n      format: getFormatFromOptions(this.options),\r\n      overlaps: false,\r\n      url: (extent, resolution, proj: olProjection) => {\r\n        this.options.paramsWFS.srsName = this.options.paramsWFS.srsName || proj.getCode();\r\n        return this.buildUrl(\r\n          extent,\r\n          proj,\r\n          (this.options as OgcFilterableDataSourceOptions).ogcFilters);\r\n      },\r\n      strategy: OlLoadingStrategy.bbox\r\n    });\r\n  }\r\n\r\n  private buildUrl(extent, proj: olProjection, ogcFilters: OgcFiltersOptions): string {\r\n    const paramsWFS = this.options.paramsWFS;\r\n    const queryStringValues = formatWFSQueryString(this.options, undefined, proj.getCode());\r\n    let igoFilters;\r\n    if (ogcFilters && ogcFilters.enabled) {\r\n      igoFilters = ogcFilters.filters;\r\n    }\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n    const filterOrBox = ogcFilterWriter.buildFilter(igoFilters, extent, proj, ogcFilters.geometryName);\r\n    let filterOrPush = ogcFilterWriter.handleOgcFiltersAppliedValue(this.options, ogcFilters.geometryName);\r\n\r\n    let prefix = 'filter';\r\n    if (!filterOrPush) {\r\n      prefix = 'bbox';\r\n      filterOrPush = extent.join(',') + ',' + proj.getCode();\r\n    }\r\n\r\n    paramsWFS.xmlFilter = ogcFilters.advancedOgcFilters ? filterOrBox : `${prefix}=${filterOrPush}`;\r\n    let baseUrl = queryStringValues.find(f => f.name === 'getfeature').value;\r\n    const patternFilter = /(filter|bbox)=.*/gi;\r\n    baseUrl = patternFilter.test(paramsWFS.xmlFilter) ? `${baseUrl}&${paramsWFS.xmlFilter}` : baseUrl;\r\n    this.options.download = Object.assign({}, this.options.download, { dynamicUrl: baseUrl });\r\n    return baseUrl.replace(/&&/g, '&');\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport olFeature from 'ol/Feature';\r\nimport * as olformat from 'ol/format';\r\nimport { WFSDataSourceOptions } from './wfs-datasource.interface';\r\nimport { WMSDataSourceOptions } from './wms-datasource.interface';\r\nimport { DataService } from './data.service';\r\nimport { formatWFSQueryString,\r\n          gmlRegex,\r\n          defaultEpsg,\r\n          defaultMaxFeatures,\r\n          getFormatFromOptions} from './wms-wfs.utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WFSService extends DataService {\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n  }\r\n\r\n  getData() {\r\n    console.log('This is defining a data service.');\r\n    return 'This is defining a data service.';\r\n  }\r\n\r\n  public getSourceFieldsFromWFS(dataSourceOptions: WFSDataSourceOptions | WMSDataSourceOptions) {\r\n    if (!dataSourceOptions.sourceFields || dataSourceOptions.sourceFields.length === 0 ) {\r\n      dataSourceOptions.sourceFields = [];\r\n      this.defineFieldAndValuefromWFS(dataSourceOptions).subscribe(getfeatureSourceField => {\r\n        dataSourceOptions.sourceFields = getfeatureSourceField;\r\n      });\r\n\r\n    } else {\r\n      this.defineFieldAndValuefromWFS(dataSourceOptions).subscribe(getfeatureSourceField => {\r\n        dataSourceOptions.sourceFields.forEach(sourcefield => {\r\n          if (sourcefield.alias === undefined) {\r\n            sourcefield.alias = sourcefield.name; // to allow only a list of sourcefield with names\r\n          }\r\n          if (sourcefield.values === undefined || sourcefield.values.length === 0) {\r\n            sourcefield.values = getfeatureSourceField.find(sf => sf.name === sourcefield.name).values;\r\n          }\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  private wfsGetFeature(\r\n    dataSourceOptions: WFSDataSourceOptions | WMSDataSourceOptions,\r\n    nb: number = defaultMaxFeatures,\r\n    epsgCode: string = defaultEpsg,\r\n    propertyName?: string\r\n  ): Observable<any> {\r\n    const queryStringValues = formatWFSQueryString(dataSourceOptions, nb, epsgCode, propertyName);\r\n    const baseUrl = queryStringValues.find(f => f.name === 'getfeature').value;\r\n    const outputFormat = dataSourceOptions.paramsWFS.outputFormat;\r\n    if (gmlRegex.test(outputFormat) || !outputFormat) {\r\n      return this.http.get(baseUrl, { responseType: 'text' });\r\n    } else {\r\n      return this.http.get(baseUrl);\r\n    }\r\n  }\r\n\r\n  defineFieldAndValuefromWFS(\r\n    dataSourceOptions: WFSDataSourceOptions | WMSDataSourceOptions\r\n  ): Observable<any> {\r\n    return new Observable(d => {\r\n      const sourceFields = [];\r\n      let fieldList;\r\n      let fieldListWoGeom;\r\n      let fieldListWoGeomStr;\r\n      let olFormats;\r\n\r\n      olFormats = getFormatFromOptions(dataSourceOptions);\r\n\r\n      this.wfsGetFeature(dataSourceOptions, 1).subscribe(oneFeature => {\r\n        const features = olFormats.readFeatures(oneFeature);\r\n        fieldList = features[0].getKeys();\r\n        fieldListWoGeom = fieldList.filter(\r\n          field =>\r\n            field !== features[0].getGeometryName() &&\r\n            !field.match(/boundedby/gi)\r\n        );\r\n        fieldListWoGeomStr = fieldListWoGeom.join(',');\r\n        this.wfsGetFeature(\r\n          dataSourceOptions,\r\n          dataSourceOptions.paramsWFS.maxFeatures || defaultMaxFeatures,\r\n          undefined,\r\n          fieldListWoGeomStr\r\n        ).subscribe(manyFeatures => {\r\n          const mfeatures = olFormats.readFeatures(manyFeatures);\r\n          this.built_properties_value(mfeatures).forEach(element => {\r\n            sourceFields.push(element);\r\n          });\r\n          d.next(sourceFields);\r\n          d.complete();\r\n        });\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  private built_properties_value(features: olFeature[]): string[] {\r\n    const kv = Object.assign({}, features[0].getProperties());\r\n    delete kv[features[0].getGeometryName()];\r\n    delete kv.boundedBy;\r\n    const sourceFields = [];\r\n    for (const property in kv) {\r\n      if (kv.hasOwnProperty(property)) {\r\n        const fieldType =\r\n          typeof features[0].get(property) === 'object'\r\n            ? undefined\r\n            : typeof features[0].get(property);\r\n        sourceFields.push({\r\n          name: property,\r\n          alias: property,\r\n          type: fieldType,\r\n          values: [kv[property]]\r\n        });\r\n      }\r\n    }\r\n    features.every((element) => {\r\n      const featureProperties = element.getProperties();\r\n      for (const key in featureProperties) {\r\n        if (featureProperties.hasOwnProperty(key) && key in kv) {\r\n          sourceFields.filter(f => f.name === key).forEach(v => {\r\n            if (v.values.indexOf(featureProperties[key]) === -1) {\r\n              v.values.push(featureProperties[key]);\r\n            }\r\n          });\r\n        }\r\n      }\r\n      return true;\r\n    });\r\n    return sourceFields;\r\n  }\r\n}\r\n","export enum QueryFormat {\r\n  GML2 = 'gml2',\r\n  GML3 = 'gml3',\r\n  JSON = 'json',\r\n  GEOJSON = 'geojson',\r\n  ESRIJSON = 'esrijson',\r\n  TEXT = 'text',\r\n  HTML = 'html',\r\n  HTMLGML2 = 'htmlgml2'\r\n}\r\n\r\nexport enum QueryHtmlTarget {\r\n  IFRAME = 'iframe',\r\n  BLANK = '_blank'\r\n}\r\n","import olSourceImageWMS from 'ol/source/ImageWMS';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { Legend } from './datasource.interface';\r\nimport { WMSDataSourceOptions } from './wms-datasource.interface';\r\nimport { WFSService } from './wfs.service';\r\n\r\nimport { OgcFilterWriter } from '../../../filter/shared/ogc-filter';\r\nimport { OgcFilterableDataSourceOptions } from '../../../filter/shared/ogc-filter.interface';\r\nimport { QueryHtmlTarget } from '../../../query/shared/query.enums';\r\nimport {\r\n  formatWFSQueryString,\r\n  checkWfsParams,\r\n  defaultFieldNameGeometry\r\n} from './wms-wfs.utils';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nexport class WMSDataSource extends DataSource {\r\n  public ol: olSourceImageWMS;\r\n\r\n  get params(): any {\r\n    return this.options.params as any;\r\n  }\r\n\r\n  get queryTitle(): string {\r\n    return (this.options as any).queryTitle\r\n      ? (this.options as any).queryTitle\r\n      : 'title';\r\n  }\r\n\r\n  get mapLabel(): string {\r\n    return (this.options as any).mapLabel;\r\n  }\r\n\r\n  get queryHtmlTarget(): string {\r\n    return (this.options as any).queryHtmlTarget\r\n      ? (this.options as any).queryHtmlTarget\r\n      : QueryHtmlTarget.BLANK;\r\n  }\r\n\r\n  constructor(\r\n    public options: WMSDataSourceOptions,\r\n    protected wfsService: WFSService\r\n  ) {\r\n    super(options);\r\n    const sourceParams: any = options.params;\r\n\r\n    const dpi = sourceParams.DPI || 96;\r\n    sourceParams.DPI = dpi;\r\n    sourceParams.MAP_RESOLUTION = dpi;\r\n    sourceParams.FORMAT_OPTIONS = 'dpi:' + dpi;\r\n\r\n    if (options.refreshIntervalSec && options.refreshIntervalSec > 0) {\r\n      setInterval(() => {\r\n        this.refresh();\r\n      }, options.refreshIntervalSec * 1000); // Convert seconds to MS\r\n    }\r\n\r\n    let fieldNameGeometry = defaultFieldNameGeometry;\r\n\r\n    // ####   START if paramsWFS\r\n    if (options.paramsWFS) {\r\n      const wfsCheckup = checkWfsParams(options, 'wms');\r\n      ObjectUtils.mergeDeep(options.paramsWFS, wfsCheckup.paramsWFS);\r\n\r\n      fieldNameGeometry =\r\n        options.paramsWFS.fieldNameGeometry || fieldNameGeometry;\r\n\r\n      options.download = Object.assign({}, options.download, {\r\n        dynamicUrl: this.buildDynamicDownloadUrlFromParamsWFS(options)\r\n      });\r\n    } //  ####   END  if paramsWFS\r\n\r\n    if (!options.sourceFields || options.sourceFields.length === 0) {\r\n      options.sourceFields = [];\r\n    } else {\r\n      options.sourceFields.forEach(sourceField => {\r\n        sourceField.alias = sourceField.alias\r\n          ? sourceField.alias\r\n          : sourceField.name;\r\n        // to allow only a list of sourcefield with names\r\n      });\r\n    }\r\n    const initOgcFilters = (options as OgcFilterableDataSourceOptions)\r\n      .ogcFilters;\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n\r\n    if (!initOgcFilters) {\r\n      (options as OgcFilterableDataSourceOptions).ogcFilters = ogcFilterWriter.defineOgcFiltersDefaultOptions(\r\n        initOgcFilters,\r\n        fieldNameGeometry,\r\n        'wms'\r\n      );\r\n    } else {\r\n      initOgcFilters.advancedOgcFilters = initOgcFilters.pushButtons\r\n        ? false\r\n        : true;\r\n    }\r\n\r\n    if (\r\n      sourceParams.LAYERS.split(',').length > 1 &&\r\n      initOgcFilters &&\r\n      initOgcFilters.enabled\r\n    ) {\r\n      console.log('*******************************');\r\n      console.log(\r\n        'BE CAREFULL, YOUR WMS LAYERS (' +\r\n          sourceParams.LAYERS +\r\n          ') MUST SHARE THE SAME FIELDS TO ALLOW ogcFilters TO WORK !! '\r\n      );\r\n      console.log('*******************************');\r\n    }\r\n\r\n    if (options.paramsWFS && initOgcFilters && initOgcFilters.enabled && initOgcFilters.editable) {\r\n      this.wfsService.getSourceFieldsFromWFS(options);\r\n    }\r\n\r\n    const filterQueryString = ogcFilterWriter.handleOgcFiltersAppliedValue(\r\n      options,\r\n      fieldNameGeometry\r\n    );\r\n    sourceParams.FILTER = filterQueryString;\r\n  }\r\n\r\n  refresh() {\r\n    this.ol.updateParams({ igoRefresh: Math.random() });\r\n  }\r\n\r\n  private buildDynamicDownloadUrlFromParamsWFS(asWFSDataSourceOptions) {\r\n    const queryStringValues = formatWFSQueryString(asWFSDataSourceOptions);\r\n    const downloadUrl = queryStringValues.find(f => f.name === 'getfeature')\r\n      .value;\r\n    return downloadUrl;\r\n  }\r\n\r\n  protected createOlSource(): olSourceImageWMS {\r\n    return new olSourceImageWMS(this.options);\r\n  }\r\n\r\n  getLegend(style?: string, scale?: number): Legend[] {\r\n    let legend = super.getLegend();\r\n    if (legend.length > 0 && (style === undefined && !scale)) {\r\n      return legend;\r\n    }\r\n\r\n    const sourceParams = this.params;\r\n\r\n    let layers = [];\r\n    if (sourceParams.LAYERS !== undefined) {\r\n      layers = sourceParams.LAYERS.split(',');\r\n    }\r\n\r\n    const baseUrl = this.options.url.replace(/\\?$/, '');\r\n    const params = [\r\n      'REQUEST=GetLegendGraphic',\r\n      'SERVICE=WMS',\r\n      'FORMAT=image/png',\r\n      'SLD_VERSION=1.1.0',\r\n      `VERSION=${sourceParams.VERSION || '1.3.0'}`\r\n    ];\r\n    if (style !== undefined) {\r\n      params.push(`STYLE=${style}`);\r\n    }\r\n    if (scale !== undefined) {\r\n      params.push(`SCALE=${scale}`);\r\n    }\r\n\r\n    legend = layers.map((layer: string) => {\r\n      const separator = baseUrl.match(/\\?/) ? '&' : '?';\r\n      return {\r\n        url: `${baseUrl}${separator}${params.join('&')}&LAYER=${layer}`,\r\n        title: layers.length > 1 ? layer : undefined,\r\n        currentStyle: style === undefined ? undefined : style as string\r\n      };\r\n    });\r\n\r\n    return legend;\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","import olTileGridWMTS from 'ol/tilegrid/WMTS';\r\nimport * as olproj from 'ol/proj';\r\nimport {\r\n  getTopLeft as extentGetTopLeft,\r\n  getWidth as extentGetWidth\r\n} from 'ol/extent.js';\r\n\r\nexport function createDefaultTileGrid(epsg?: string): olTileGridWMTS {\r\n  const projection = epsg ? olproj.get(epsg) : olproj.get('EPSG:3857');\r\n  const projectionExtent = projection.getExtent();\r\n  const size = extentGetWidth(projectionExtent) / 256;\r\n  const resolutions = new Array(20);\r\n  const matrixIds = new Array(20);\r\n  for (let z = 0; z < 20; ++z) {\r\n    resolutions[z] = size / Math.pow(2, z);\r\n    matrixIds[z] = z;\r\n  }\r\n\r\n  return new olTileGridWMTS({\r\n    origin: extentGetTopLeft(projectionExtent),\r\n    resolutions,\r\n    matrixIds\r\n  });\r\n}\r\n","import olSourceWMTS from 'ol/source/WMTS';\r\n\r\nimport { createDefaultTileGrid } from '../../utils/tilegrid';\r\nimport { DataSource } from './datasource';\r\nimport { WMTSDataSourceOptions } from './wmts-datasource.interface';\r\n\r\nexport class WMTSDataSource extends DataSource {\r\n  public options: WMTSDataSourceOptions;\r\n  public ol: olSourceWMTS;\r\n\r\n  constructor(options: WMTSDataSourceOptions) {\r\n    super(options);\r\n  }\r\n\r\n  protected createOlSource(): olSourceWMTS {\r\n    const sourceOptions = Object.assign(\r\n      {\r\n        tileGrid: createDefaultTileGrid(this.options.projection as string)\r\n      },\r\n      this.options\r\n    );\r\n\r\n    return new olSourceWMTS(sourceOptions);\r\n  }\r\n\r\n  public onUnwatch() {}\r\n\r\n}\r\n","import olSourceCarto from 'ol/source/CartoDB';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { Legend } from './datasource.interface';\r\nimport { CartoDataSourceOptions } from './carto-datasource.interface';\r\nimport { QueryHtmlTarget } from '../../../query/shared/query.enums';\r\n\r\nexport class CartoDataSource extends DataSource {\r\n  public ol: olSourceCarto;\r\n  public options: CartoDataSourceOptions;\r\n\r\n  get params(): any {\r\n    return this.options.params as any;\r\n  }\r\n\r\n  get queryTitle(): string {\r\n    return (this.options as any).queryTitle\r\n      ? (this.options as any).queryTitle\r\n      : 'title';\r\n  }\r\n\r\n  get mapLabel(): string {\r\n    return (this.options as any).mapLabel;\r\n  }\r\n\r\n  get queryHtmlTarget(): string {\r\n    return (this.options as any).queryHtmlTarget\r\n      ? (this.options as any).queryHtmlTarget\r\n      : QueryHtmlTarget.BLANK;\r\n  }\r\n\r\n  protected createOlSource(): olSourceCarto {\r\n    const crossOrigin = this.options.crossOrigin\r\n      ? this.options.crossOrigin\r\n      : 'anonymous';\r\n    const sourceOptions = Object.assign(\r\n      {\r\n        crossOrigin\r\n      },\r\n      this.options\r\n    );\r\n    return new olSourceCarto(sourceOptions);\r\n  }\r\n\r\n  getLegend(): Legend[] {\r\n    const legend = super.getLegend();\r\n    if (legend.length > 0) {\r\n      return legend;\r\n    }\r\n\r\n    let htmlString = '<table>';\r\n    if (this.options.config.layers[0].legend != null) {\r\n      this.options.config.layers[0].legend.items.forEach(f => {\r\n        if (f.visible === true) {\r\n          htmlString +=\r\n            '<tr><td>' +\r\n            '<p><font size=\"5\" color=\"' +\r\n            f.value +\r\n            '\"> &#9679</font></p></td>' +\r\n            '<td>' +\r\n            f.name +\r\n            '</td></tr>';\r\n        }\r\n      });\r\n      htmlString += '</table>';\r\n      return [{ html: htmlString }];\r\n    } else {\r\n      // Try to build the legend from the cartocss options\r\n      const layerOptions = this.options.config.layers[0].options;\r\n      // All available cartocss style options\r\n      const types = [\r\n        'polygon-fill:',\r\n        'marker-fill:',\r\n        'shield-fill:',\r\n        'building-fill:',\r\n        'line-color:'\r\n      ];\r\n      for (const oneType of types) {\r\n        if (layerOptions.cartocss.includes(oneType)) {\r\n          const type = layerOptions.cartocss.split(oneType).pop();\r\n          const color = type.substr(0, type.indexOf(';'));\r\n          if (color.includes('ramp')) {\r\n            const colors = color.split(', (')[1].split(',');\r\n            const data = color.split(', (')[2].split(',');\r\n            for (let j = 0; j < colors.length; j++) {\r\n              colors[j] = colors[j].replace(/(\"|\\))/g, '');\r\n              data[j] = data[j].replace(/(\"|\\))/g, '');\r\n              if (data[j].replace(/\\s+/g, '') === '=') {\r\n                data[j] = 'Autres';\r\n              }\r\n              htmlString +=\r\n                '<tr><td>' +\r\n                '<p><font size=\"5\" color=\"' +\r\n                colors[j] +\r\n                '\"> &#9679</font></p></td>' +\r\n                '<td>' +\r\n                data[j] +\r\n                '</td></tr>';\r\n            }\r\n            break;\r\n          } else {\r\n            const title = layerOptions.layer_name\r\n              ? layerOptions.layer_name\r\n              : '';\r\n            htmlString +=\r\n              '<tr><td>' +\r\n              '<p><font size=\"5\" color=\"' +\r\n              color +\r\n              '\"> &#9679</font></p>' +\r\n              '</td><td>' +\r\n              title +\r\n              '</td></tr>';\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      htmlString += '</table>';\r\n      return [{ html: htmlString }];\r\n    }\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport olFormatEsriJSON from 'ol/format/EsriJSON';\r\nimport * as olloadingstrategy from 'ol/loadingstrategy';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { Legend } from './datasource.interface';\r\nimport { ArcGISRestDataSourceOptions } from './arcgisrest-datasource.interface';\r\n\r\nexport class ArcGISRestDataSource extends DataSource {\r\n  public ol: olSourceVector;\r\n  public options: ArcGISRestDataSourceOptions;\r\n\r\n  protected createOlSource(): olSourceVector {\r\n    const esrijsonFormat = new olFormatEsriJSON();\r\n    return new olSourceVector({\r\n      attributions: this.options.params.attributions,\r\n      overlaps: false,\r\n      format: esrijsonFormat,\r\n      url: function(extent, resolution, proj) {\r\n        const baseUrl = this.options.url + '/' + this.options.layer + '/query/';\r\n        const geometry = encodeURIComponent(\r\n          '{\"xmin\":' +\r\n            extent[0] +\r\n            ',\"ymin\":' +\r\n            extent[1] +\r\n            ',\"xmax\":' +\r\n            extent[2] +\r\n            ',\"ymax\":' +\r\n            extent[3] +\r\n            ',\"spatialReference\":{\"wkid\":102100}}'\r\n        );\r\n        const params = [\r\n          'f=json',\r\n          `geometry=${geometry}`,\r\n          'geometryType=esriGeometryEnvelope',\r\n          'inSR=102100',\r\n          'spatialRel=esriSpatialRelIntersects',\r\n          'outFields=*',\r\n          'returnGeometry=true',\r\n          'outSR=102100'\r\n        ];\r\n        if (this.options.params.timeFilter) {\r\n          const time = `time=${this.options.params.timeExtent}`;\r\n          params.push(time);\r\n        }\r\n        if (this.options.params.customParams) {\r\n          this.options.params.customParams.forEach(element => {\r\n            params.push(element);\r\n          });\r\n        }\r\n        return `${baseUrl}?${params.join('&')}`;\r\n      }.bind(this),\r\n      strategy: olloadingstrategy.bbox\r\n    });\r\n  }\r\n\r\n  getLegend(): Legend[] {\r\n    const legendInfo = this.options.params.legendInfo;\r\n    const legend = super.getLegend();\r\n    if (legendInfo === undefined || legend.length > 0) {\r\n      return legend;\r\n    }\r\n\r\n    const id = parseInt(this.options.layer, 10);\r\n    const lyr = legendInfo.layers[id];\r\n    let htmlString = '<table><tr><td>' + lyr.layerName + '</td></tr>';\r\n\r\n    for (const lyrLegend of lyr.legend) {\r\n      const modifiedUrl = this.options.url.replace(\r\n        'FeatureServer',\r\n        'MapServer'\r\n      );\r\n      const src = `${modifiedUrl}/${lyr.layerId}/images/${lyrLegend.url}`;\r\n      const label = lyrLegend.label.replace('<Null>', 'Null');\r\n      htmlString +=\r\n        `<tr><td align='left'><img src=\"` +\r\n        src +\r\n        `\" alt ='' /></td><td>` +\r\n        label +\r\n        '</td></tr>';\r\n    }\r\n    htmlString += '</table>';\r\n    return [{ html: htmlString }];\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","import olSourceTileArcGISRest from 'ol/source/TileArcGISRest';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { Legend } from './datasource.interface';\r\nimport { TileArcGISRestDataSourceOptions } from './tilearcgisrest-datasource.interface';\r\nimport { QueryHtmlTarget } from '../../../query/shared/query.enums';\r\n\r\nexport class TileArcGISRestDataSource extends DataSource {\r\n  public ol: olSourceTileArcGISRest;\r\n  public options: TileArcGISRestDataSourceOptions;\r\n\r\n  get params(): any {\r\n    return this.options.params as any;\r\n  }\r\n\r\n  get queryTitle(): string {\r\n    return (this.options as any).queryTitle\r\n      ? (this.options as any).queryTitle\r\n      : 'title';\r\n  }\r\n\r\n  get mapLabel(): string {\r\n    return (this.options as any).mapLabel;\r\n  }\r\n\r\n  get queryHtmlTarget(): string {\r\n    return (this.options as any).queryHtmlTarget\r\n      ? (this.options as any).queryHtmlTarget\r\n      : QueryHtmlTarget.BLANK;\r\n  }\r\n\r\n  protected createOlSource(): olSourceTileArcGISRest {\r\n    return new olSourceTileArcGISRest(this.options);\r\n  }\r\n\r\n  getLegend(): Legend[] {\r\n    const legend = super.getLegend();\r\n    if (this.options.legendInfo === undefined || legend.length > 0) {\r\n      return legend;\r\n    }\r\n\r\n    const id = parseInt(this.options.layer, 10);\r\n    const lyr = this.options.legendInfo.layers[id];\r\n    let htmlString = '<table><tr><td>' + lyr.layerName + '</td></tr>';\r\n\r\n    for (const lyrLegend of lyr.legend) {\r\n      const src = `${this.options.url}/${lyr.layerId}/images/${\r\n        lyrLegend.url\r\n      }`;\r\n      const label = lyrLegend.label.replace('<Null>', 'Null');\r\n      htmlString +=\r\n        `<tr><td align='left'><img src=\"` +\r\n        src +\r\n        `\" alt ='' /></td><td>` +\r\n        label +\r\n        '</td></tr>';\r\n    }\r\n    htmlString += '</table>';\r\n    return [{ html: htmlString }];\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport * as olformat from 'ol/format';\r\nimport { unByKey } from 'ol/Observable';\r\nimport { easeOut } from 'ol/easing';\r\nimport { Circle as CircleStyle, Fill, Stroke, Style } from 'ol/style';\r\n\r\nimport { Md5 } from 'ts-md5';\r\n\r\nimport { uuid } from '@igo2/utils';\r\nimport { FeatureDataSource } from './feature-datasource';\r\nimport { WebSocketDataSourceOptions } from './websocket-datasource.interface';\r\n\r\nexport class WebSocketDataSource extends FeatureDataSource {\r\n  public ws: WebSocket;\r\n  public options: WebSocketDataSourceOptions;\r\n\r\n  protected createOlSource(): olSourceVector {\r\n    this.createWebSocket();\r\n    this.options.format = this.getSourceFormatFromOptions(this.options);\r\n    return super.createOlSource();\r\n  }\r\n\r\n  private createWebSocket() {\r\n    this.ws = new WebSocket(this.options.url);\r\n    this.ws.onmessage = this.onMessage.bind(this);\r\n\r\n    if (this.options.onclose) {\r\n      this.ws.onclose = this.onClose.bind(this);\r\n    }\r\n\r\n    if (this.options.onerror) {\r\n      this.ws.onerror = this.onError.bind(this);\r\n    }\r\n\r\n    if (this.options.onopen) {\r\n      this.ws.onopen = this.onOpen.bind(this);\r\n    }\r\n  }\r\n\r\n  onMessage(event) {\r\n    const featureAdded = this.options.format.readFeature(event.data);\r\n\r\n    switch (this.options.onmessage) {\r\n      case 'update':\r\n        // ol don't add if same ID\r\n        const featureToRemove = this.ol.getFeatureById(featureAdded.getId());\r\n        if (featureToRemove) {\r\n          this.ol.removeFeature(featureToRemove);\r\n        }\r\n        this.ol.addFeature(featureAdded);\r\n        break;\r\n      case 'delete':\r\n        this.ol.clear(true);\r\n        this.ol.addFeature(featureAdded);\r\n        break;\r\n      case 'add':\r\n      default:\r\n        this.ol.addFeature(featureAdded);\r\n    }\r\n  }\r\n\r\n  onClose(event) {\r\n    // thrown message to user\r\n  }\r\n\r\n  onError(event) {\r\n    // thrown message to user\r\n  }\r\n\r\n  onOpen(event) {\r\n    // thrown message to user ?\r\n  }\r\n\r\n  public onUnwatch() {\r\n    this.ws.close();\r\n  }\r\n}\r\n","import { Md5 } from 'ts-md5';\r\nimport feature from 'ol/Feature';\r\nimport olSourceVectorTile from 'ol/source/VectorTile';\r\nimport olFormatMVT from 'ol/format/MVT';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { DataSource } from './datasource';\r\nimport { MVTDataSourceOptions } from './mvt-datasource.interface';\r\n\r\nexport class MVTDataSource extends DataSource {\r\n  public options: MVTDataSourceOptions;\r\n  public ol: olSourceVectorTile;\r\n\r\n  protected createOlSource(): olSourceVectorTile {\r\n    let mvtFormat;\r\n    if (this.options.featureClass === 'feature') {\r\n      mvtFormat = new olFormatMVT({featureClass: feature});\r\n    } else if (this.options.featureClass === undefined) {\r\n      mvtFormat = new olFormatMVT();\r\n    }\r\n    this.options.format = mvtFormat;\r\n    return new olSourceVectorTile(this.options);\r\n  }\r\n\r\n  protected generateId() {\r\n    if (!this.options.url) {\r\n        return uuid();\r\n    }\r\n    const chain = 'mvt' + this.options.url;\r\n    return Md5.hashStr(chain) as string;\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","import olSourceCluster from 'ol/source/Cluster';\r\n\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { FeatureDataSource } from './feature-datasource';\r\nimport { ClusterDataSourceOptions } from './cluster-datasource.interface';\r\n\r\nexport class ClusterDataSource extends FeatureDataSource {\r\n  public options: ClusterDataSourceOptions;\r\n  public ol: olSourceCluster;\r\n\r\n  protected createOlSource(): olSourceCluster {\r\n    this.options.format = this.getSourceFormatFromOptions(this.options);\r\n    this.options.source = super.createOlSource();\r\n    return new olSourceCluster(this.options);\r\n  }\r\n\r\n  protected generateId() {\r\n    return uuid();\r\n  }\r\n\r\n  public onUnwatch() {}\r\n}\r\n","export const FEATURE = 'Feature';\r\n\r\nexport enum FeatureMotion {\r\n  None,\r\n  Move,\r\n  Zoom,\r\n  Default\r\n}\r\n","export const LAYER = 'Layer';\r\n","import {\r\n  BehaviorSubject,\r\n  Observable,\r\n  Subject,\r\n  Subscription,\r\n  combineLatest\r\n} from 'rxjs';\r\nimport { debounceTime, map } from 'rxjs/operators';\r\n\r\nimport olLayer from 'ol/layer/Layer';\r\n\r\nimport { DataSource, Legend } from '../../../datasource';\r\nimport { IgoMap } from '../../../map';\r\n\r\nimport { AuthInterceptor } from '@igo2/auth';\r\nimport { SubjectStatus } from '@igo2/utils';\r\nimport { LayerOptions } from './layer.interface';\r\n\r\nexport abstract class Layer {\r\n  public collapsed: boolean;\r\n  public dataSource: DataSource;\r\n  public legend: Legend[];\r\n  public legendCollapsed: boolean = true;\r\n  public firstLoadComponent: boolean = true;\r\n  public map: IgoMap;\r\n  public ol: olLayer;\r\n  public status$: Subject<SubjectStatus>;\r\n\r\n  private resolution$$: Subscription;\r\n\r\n  get id(): string {\r\n    return this.options.id || this.dataSource.id;\r\n  }\r\n\r\n  get alias(): string {\r\n    return this.options.alias;\r\n  }\r\n\r\n  get title(): string {\r\n    return this.options.title;\r\n  }\r\n\r\n  set title(title: string) {\r\n    this.options.title = title;\r\n  }\r\n\r\n  get zIndex(): number {\r\n    return this.ol.getZIndex();\r\n  }\r\n\r\n  set zIndex(zIndex: number) {\r\n    this.ol.setZIndex(zIndex);\r\n  }\r\n\r\n  get baseLayer(): boolean {\r\n    return this.options.baseLayer;\r\n  }\r\n\r\n  set baseLayer(baseLayer: boolean) {\r\n    this.options.baseLayer = baseLayer;\r\n  }\r\n\r\n  get opacity(): number {\r\n    return this.ol.get('opacity');\r\n  }\r\n\r\n  set opacity(opacity: number) {\r\n    this.ol.setOpacity(opacity);\r\n  }\r\n\r\n  set isInResolutionsRange(value: boolean) { this.isInResolutionsRange$.next(value); }\r\n  get isInResolutionsRange(): boolean { return this.isInResolutionsRange$.value; }\r\n  readonly isInResolutionsRange$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  set maxResolution(value: number) {\r\n    this.ol.setMaxResolution(value);\r\n    this.updateInResolutionsRange();\r\n  }\r\n  get maxResolution(): number { return this.ol.getMaxResolution(); }\r\n\r\n  set minResolution(value: number) {\r\n    this.ol.setMinResolution(value);\r\n    this.updateInResolutionsRange();\r\n  }\r\n  get minResolution(): number { return this.ol.getMinResolution(); }\r\n\r\n  set visible(value: boolean) {\r\n    this.ol.setVisible(value);\r\n    this.visible$.next(value);\r\n  }\r\n  get visible(): boolean { return this.visible$.value; }\r\n  readonly visible$: BehaviorSubject<boolean> = new BehaviorSubject(undefined);\r\n\r\n  get displayed(): boolean { return this.visible && this.isInResolutionsRange; }\r\n  readonly displayed$: Observable<boolean> = combineLatest([\r\n    this.isInResolutionsRange$,\r\n    this.visible$\r\n  ]).pipe(\r\n    map((bunch: [boolean, boolean]) => bunch[0] && bunch[1])\r\n  );\r\n\r\n  get showInLayerList(): boolean {\r\n    return this.options.showInLayerList !== false;\r\n  }\r\n\r\n  constructor(public options: LayerOptions, protected authInterceptor?: AuthInterceptor) {\r\n    this.dataSource = options.source;\r\n\r\n    this.ol = this.createOlLayer();\r\n    if (options.zIndex !== undefined) {\r\n      this.zIndex = options.zIndex;\r\n    }\r\n\r\n    if (options.baseLayer && options.visible === undefined) {\r\n      options.visible = false;\r\n    }\r\n\r\n    if (options.maxResolution !== undefined) {\r\n      this.maxResolution = options.maxResolution;\r\n    }\r\n    if (options.minResolution !== undefined) {\r\n      this.minResolution = options.minResolution;\r\n    }\r\n\r\n    this.visible =\r\n      options.visible === undefined ? true : options.visible;\r\n    this.opacity =\r\n      options.opacity === undefined ? 1 : options.opacity;\r\n\r\n    if (\r\n      options.legendOptions &&\r\n      (options.legendOptions.url || options.legendOptions.html)\r\n    ) {\r\n      this.legend = this.dataSource.setLegend(options.legendOptions);\r\n    }\r\n\r\n    this.legendCollapsed = options.legendOptions\r\n      ? options.legendOptions.collapsed\r\n        ? options.legendOptions.collapsed\r\n        : true\r\n      : true;\r\n\r\n    this.ol.set('_layer', this, true);\r\n  }\r\n\r\n  protected abstract createOlLayer(): olLayer;\r\n\r\n  setMap(igoMap: IgoMap | undefined) {\r\n    this.map = igoMap;\r\n\r\n    this.unobserveResolution();\r\n    if (igoMap !== undefined) {\r\n      this.observeResolution();\r\n    }\r\n  }\r\n\r\n  private observeResolution() {\r\n    this.resolution$$ = this.map.viewController.resolution$\r\n      .subscribe(() => this.updateInResolutionsRange());\r\n  }\r\n\r\n  private unobserveResolution() {\r\n    if (this.resolution$$ !== undefined) {\r\n      this.resolution$$.unsubscribe();\r\n      this.resolution$$ = undefined;\r\n    }\r\n  }\r\n\r\n  private updateInResolutionsRange() {\r\n    if (this.map !== undefined) {\r\n      const resolution = this.map.viewController.getResolution();\r\n      const minResolution = this.minResolution || 0;\r\n      const maxResolution = this.maxResolution || Infinity;\r\n      this.isInResolutionsRange = resolution >= minResolution && resolution <= maxResolution;\r\n    } else {\r\n      this.isInResolutionsRange = false;\r\n    }\r\n  }\r\n}\r\n","import olLayer from 'ol/layer/Layer';\r\n\r\nimport { DataSource } from '../../../datasource/shared/datasources/datasource';\r\nimport { AnyDataSourceOptions } from '../../../datasource/shared/datasources/any-datasource.interface';\r\n\r\nexport interface LayerOptions {\r\n  source?: DataSource;\r\n  sourceOptions?: AnyDataSourceOptions;\r\n  title?: string;\r\n  id?: string;\r\n  alias?: string;\r\n  baseLayer?: boolean;\r\n  opacity?: number;\r\n  visible?: boolean;\r\n  extent?: [number, number, number, number];\r\n  zIndex?: number;\r\n  minResolution?: number;\r\n  maxResolution?: number;\r\n  showInLayerList?: boolean;\r\n  removable?: boolean;\r\n  legendOptions?: LegendOptions;\r\n  ol?: olLayer;\r\n  tooltip?: TooltipContent;\r\n}\r\n\r\nexport interface GroupLayers {\r\n  title: string;\r\n  layers?: LayerOptions;\r\n  collapsed?: boolean;\r\n}\r\n\r\nexport interface TooltipContent {\r\n  type?: TooltipType;\r\n  text?: string;\r\n}\r\nexport enum TooltipType {\r\n  TITLE = 'title',\r\n  ABSTRACT = 'abstract',\r\n  CUSTOM = 'custom'\r\n}\r\n\r\nexport interface LegendOptions {\r\n  collapsed?: boolean;\r\n  display?: boolean;\r\n  url?: string;\r\n  html?: string;\r\n  stylesAvailable?: ItemStyleOptions[];\r\n}\r\n\r\nexport interface ItemStyleOptions {\r\n  name: string;\r\n  title?: string;\r\n  }\r\n\r\nexport interface OutputLayerLegend {\r\n  title: string;\r\n  url: string;\r\n  image: string;\r\n}\r\n","import olSourceImage from 'ol/source/Image';\r\nimport { uuid, Watcher, SubjectStatus } from '@igo2/utils';\r\n\r\nimport { ImageLayer } from '../shared/layers/image-layer';\r\n\r\nexport class ImageWatcher extends Watcher {\r\n  protected id: string;\r\n  protected loaded = 0;\r\n  protected loading = 0;\r\n\r\n  private source: olSourceImage;\r\n\r\n  constructor(layer: ImageLayer) {\r\n    super();\r\n    this.source = layer.options.source.ol;\r\n    this.id = uuid();\r\n  }\r\n\r\n  protected watch() {\r\n    this.source.on(`imageloadstart`, e => this.handleLoadStart(e));\r\n    this.source.on(`imageloadend`, e => this.handleLoadEnd(e));\r\n    this.source.on(`imageloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  protected unwatch() {\r\n    this.source.un(`imageloadstart`, e => this.handleLoadStart(e));\r\n    this.source.un(`imageloadend`, e => this.handleLoadEnd(e));\r\n    this.source.un(`imageloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  private handleLoadStart(event: any) {\r\n    if (!event.image.__watchers__) {\r\n      event.image.__watchers__ = [];\r\n    }\r\n    event.image.__watchers__.push(this.id);\r\n\r\n    this.loading += 1;\r\n    this.status = SubjectStatus.Working;\r\n  }\r\n\r\n  private handleLoadEnd(event) {\r\n    if (!event.image.__watchers__) {\r\n      return;\r\n    }\r\n\r\n    const watcherIndex = event.image.__watchers__.indexOf(this.id);\r\n    if (watcherIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    event.image.__watchers__.splice(watcherIndex, 1);\r\n\r\n    this.loaded += 1;\r\n\r\n    const loading = this.loading;\r\n    if (this.loaded >= loading) {\r\n      if (loading === this.loading) {\r\n        this.status = SubjectStatus.Done;\r\n        this.loaded = this.loading = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import olSourceTile from 'ol/source/Tile';\r\nimport { uuid, Watcher, SubjectStatus } from '@igo2/utils';\r\n\r\nimport { TileLayer } from '../shared/layers/tile-layer';\r\nimport { VectorTileLayer } from '../shared/layers/vectortile-layer';\r\n\r\nexport class TileWatcher extends Watcher {\r\n  private id: string;\r\n  private loaded = 0;\r\n  private loading = 0;\r\n\r\n  private source: olSourceTile;\r\n\r\n  constructor(layer: TileLayer | VectorTileLayer) {\r\n    super();\r\n    this.source = layer.options.source.ol;\r\n    this.id = uuid();\r\n  }\r\n\r\n  protected watch() {\r\n    this.source.on(`tileloadstart`, e => this.handleLoadStart(e));\r\n    this.source.on(`tileloadend`, e => this.handleLoadEnd(e));\r\n    this.source.on(`tileloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  protected unwatch() {\r\n    this.source.un(`tileloadstart`, e => this.handleLoadStart(e));\r\n    this.source.un(`tileloadend`, e => this.handleLoadEnd(e));\r\n    this.source.un(`tileloaderror`, e => this.handleLoadEnd(e));\r\n  }\r\n\r\n  private handleLoadStart(event: any) {\r\n    // This is to avoid increasing\r\n    // the number of loaded tiles if a tile was loading\r\n    // before subscribing to this watcher\r\n    if (!event.tile.__watchers__) {\r\n      event.tile.__watchers__ = [];\r\n    }\r\n    event.tile.__watchers__.push(this.id);\r\n\r\n    this.loading += 1;\r\n    this.status = SubjectStatus.Working;\r\n  }\r\n\r\n  private handleLoadEnd(event) {\r\n    if (!event.tile.__watchers__) {\r\n      return;\r\n    }\r\n\r\n    const watcherIndex = event.tile.__watchers__.indexOf(this.id);\r\n    if (watcherIndex < 0) {\r\n      return;\r\n    }\r\n\r\n    event.tile.__watchers__.splice(watcherIndex, 1);\r\n\r\n    this.loaded += 1;\r\n\r\n    const loading = this.loading;\r\n    if (this.loaded >= loading) {\r\n      if (loading === this.loading) {\r\n        this.status = SubjectStatus.Done;\r\n        this.loaded = this.loading = 0;\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Layer } from '../shared/layers/layer';\r\nimport { OutputLayerLegend } from '../shared/layers/layer.interface';\r\n\r\n/**\r\n * Get all the layers legend\r\n * @return Array of legend\r\n */\r\nexport function getLayersLegends(layers: Layer[], scale?: number): OutputLayerLegend[] {\r\n  const legends = [];\r\n  const newCanvas = document.createElement('canvas');\r\n  const newContext = newCanvas.getContext('2d');\r\n  newContext.font = '20px Calibri';\r\n\r\n  let heightPos = 0;\r\n  for (const layer of layers) {\r\n    if (layer.visible === false) { continue; }\r\n\r\n    const legendUrls = layer.dataSource.getLegend(undefined, scale) || [];\r\n    for (const legendUrl of legendUrls) {\r\n      if (legendUrl.url === undefined) { continue; }\r\n\r\n      const title = layer.title;\r\n      // Create an image for the legend\r\n      const legendImage = new Image();\r\n      legendImage.crossOrigin = 'anonymous';\r\n      legendImage.src = legendUrl.url;\r\n      legendImage.onload = () => {\r\n        newContext.fillText(title, 0, heightPos);\r\n        newContext.drawImage(legendImage, 0, heightPos + 20);\r\n        heightPos += legendImage.height + 5;\r\n      };\r\n      // Add legend info to the list\r\n      legends.push({\r\n        title,\r\n        url: legendUrl.url,\r\n        image: legendImage\r\n      });\r\n    }\r\n  }\r\n\r\n  return legends;\r\n}\r\n","import olSourceVector from 'ol/source/Vector';\r\nimport { uuid, Watcher, SubjectStatus } from '@igo2/utils';\r\n\r\nimport { VectorLayer } from '../shared/layers/vector-layer';\r\n\r\nexport class VectorWatcher extends Watcher {\r\n  private id: string;\r\n  private loaded = 0;\r\n  private loading = 0;\r\n\r\n  private layer: VectorLayer;\r\n\r\n  constructor(layer: VectorLayer) {\r\n    super();\r\n    this.layer = layer;\r\n    this.id = uuid();\r\n  }\r\n\r\n  protected watch() {\r\n  }\r\n\r\n  protected unwatch() {\r\n    this.layer.onUnwatch();\r\n  }\r\n}\r\n","import olLayerImage from 'ol/layer/Image';\r\nimport olSourceImage from 'ol/source/Image';\r\n\r\nimport { AuthInterceptor } from '@igo2/auth';\r\n\r\nimport { ImageWatcher } from '../../utils';\r\nimport { IgoMap } from '../../../map';\r\n\r\nimport { WMSDataSource } from '../../../datasource/shared/datasources/wms-datasource';\r\n\r\nimport { Layer } from './layer';\r\nimport { ImageLayerOptions } from './image-layer.interface';\r\n\r\nexport class ImageLayer extends Layer {\r\n  public dataSource: WMSDataSource;\r\n  public options: ImageLayerOptions;\r\n  public ol: olLayerImage;\r\n\r\n  private watcher: ImageWatcher;\r\n\r\n  constructor(\r\n    options: ImageLayerOptions,\r\n    public authInterceptor?: AuthInterceptor\r\n  ) {\r\n    super(options, authInterceptor);\r\n    this.watcher = new ImageWatcher(this);\r\n    this.status$ = this.watcher.status$;\r\n  }\r\n\r\n  protected createOlLayer(): olLayerImage {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceImage\r\n    });\r\n\r\n    const image = new olLayerImage(olOptions);\r\n    if (this.authInterceptor) {\r\n      (image.getSource() as any).setImageLoadFunction((tile, src) => {\r\n        this.customLoader(tile, src);\r\n      });\r\n    }\r\n\r\n    return image;\r\n  }\r\n\r\n  public setMap(map: IgoMap | undefined) {\r\n    if (map === undefined) {\r\n      this.watcher.unsubscribe();\r\n    } else {\r\n      this.watcher.subscribe(() => {});\r\n    }\r\n    super.setMap(map);\r\n  }\r\n\r\n  private customLoader(tile, src) {\r\n    const xhr = new XMLHttpRequest();\r\n    xhr.open('GET', src);\r\n\r\n    const intercepted = this.authInterceptor.interceptXhr(xhr, src);\r\n    if (!intercepted) {\r\n      xhr.abort();\r\n      tile.getImage().src = src;\r\n      return;\r\n    }\r\n\r\n    xhr.responseType = 'arraybuffer';\r\n\r\n    xhr.onload = function() {\r\n      const arrayBufferView = new Uint8Array((this as any).response);\r\n      const blob = new Blob([arrayBufferView], { type: 'image/png' });\r\n      const urlCreator = window.URL;\r\n      const imageUrl = urlCreator.createObjectURL(blob);\r\n      tile.getImage().src = imageUrl;\r\n    };\r\n    xhr.send();\r\n  }\r\n}\r\n","import olLayerTile from 'ol/layer/Tile';\r\nimport olSourceTile from 'ol/source/Tile';\r\n\r\nimport { TileWatcher } from '../../utils';\r\nimport { IgoMap } from '../../../map';\r\n\r\nimport { OSMDataSource } from '../../../datasource/shared/datasources/osm-datasource';\r\nimport { WMTSDataSource } from '../../../datasource/shared/datasources/wmts-datasource';\r\nimport { XYZDataSource } from '../../../datasource/shared/datasources/xyz-datasource';\r\nimport { CartoDataSource } from '../../../datasource/shared/datasources/carto-datasource';\r\nimport { TileArcGISRestDataSource } from '../../../datasource/shared/datasources/tilearcgisrest-datasource';\r\n\r\nimport { Layer } from './layer';\r\nimport { TileLayerOptions } from './tile-layer.interface';\r\n\r\nexport class TileLayer extends Layer {\r\n  public dataSource:\r\n    | OSMDataSource\r\n    | WMTSDataSource\r\n    | XYZDataSource\r\n    | CartoDataSource\r\n    | TileArcGISRestDataSource;\r\n  public options: TileLayerOptions;\r\n  public ol: olLayerTile;\r\n\r\n  private watcher: TileWatcher;\r\n\r\n  constructor(options: TileLayerOptions) {\r\n    super(options);\r\n\r\n    this.watcher = new TileWatcher(this);\r\n    this.status$ = this.watcher.status$;\r\n  }\r\n\r\n  protected createOlLayer(): olLayerTile {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceTile\r\n    });\r\n\r\n    return new olLayerTile(olOptions);\r\n  }\r\n\r\n  public setMap(map: IgoMap | undefined) {\r\n    if (map === undefined) {\r\n      this.watcher.unsubscribe();\r\n    } else {\r\n      this.watcher.subscribe(() => {});\r\n    }\r\n    super.setMap(map);\r\n  }\r\n}\r\n","import olLayerVector from 'ol/layer/Vector';\r\nimport olSourceVector from 'ol/source/Vector';\r\nimport { unByKey } from 'ol/Observable';\r\nimport { easeOut } from 'ol/easing';\r\nimport { asArray as ColorAsArray } from 'ol/color';\r\n\r\nimport { FeatureDataSource } from '../../../datasource/shared/datasources/feature-datasource';\r\nimport { WFSDataSource } from '../../../datasource/shared/datasources/wfs-datasource';\r\nimport { ArcGISRestDataSource } from '../../../datasource/shared/datasources/arcgisrest-datasource';\r\nimport { WebSocketDataSource } from '../../../datasource/shared/datasources/websocket-datasource';\r\nimport { ClusterDataSource } from '../../../datasource/shared/datasources/cluster-datasource';\r\n\r\nimport { VectorWatcher } from '../../utils';\r\nimport { IgoMap } from '../../../map';\r\nimport { Layer } from './layer';\r\nimport { VectorLayerOptions } from './vector-layer.interface';\r\n\r\nexport class VectorLayer extends Layer {\r\n  public dataSource:\r\n    | FeatureDataSource\r\n    | WFSDataSource\r\n    | ArcGISRestDataSource\r\n    | WebSocketDataSource\r\n    | ClusterDataSource;\r\n  public options: VectorLayerOptions;\r\n  public ol: olLayerVector;\r\n  private watcher: VectorWatcher;\r\n  private trackFeatureListenerId;\r\n\r\n  get browsable(): boolean {\r\n    return this.options.browsable !== false;\r\n  }\r\n\r\n  get exportable(): boolean {\r\n    return this.options.exportable !== false;\r\n  }\r\n\r\n  constructor(options: VectorLayerOptions) {\r\n    super(options);\r\n    this.watcher = new VectorWatcher(this);\r\n    this.status$ = this.watcher.status$;\r\n  }\r\n\r\n  protected createOlLayer(): olLayerVector {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceVector\r\n    });\r\n\r\n    if (this.options.animation) {\r\n      this.dataSource.ol.on(\r\n        'addfeature',\r\n        function(e) {\r\n          this.flash(e.feature);\r\n        }.bind(this)\r\n      );\r\n    }\r\n\r\n    if (this.options.trackFeature) {\r\n      this.enableTrackFeature(this.options.trackFeature);\r\n    }\r\n\r\n    return new olLayerVector(olOptions);\r\n  }\r\n\r\n  protected flash(feature) {\r\n    const start = new Date().getTime();\r\n    const listenerKey = this.map.ol.on('postcompose', animate.bind(this));\r\n\r\n    function animate(event) {\r\n      const vectorContext = event.vectorContext;\r\n      const frameState = event.frameState;\r\n      const flashGeom = feature.getGeometry().clone();\r\n      const elapsed = frameState.time - start;\r\n      const elapsedRatio = elapsed / this.options.animation.duration;\r\n      const opacity = easeOut(1 - elapsedRatio);\r\n      const newColor = ColorAsArray(this.options.animation.color || 'red');\r\n      newColor[3] = opacity;\r\n      let style = this.ol\r\n        .getStyleFunction()\r\n        .call(this, feature)\r\n        .find(style2 => {\r\n          return style2.getImage();\r\n        });\r\n      if (!style) {\r\n        style = this.ol.getStyleFunction().call(this, feature)[0];\r\n      }\r\n      const styleClone = style.clone();\r\n\r\n      switch (feature.getGeometry().getType()) {\r\n        case 'Point':\r\n          const radius =\r\n            easeOut(elapsedRatio) * (styleClone.getImage().getRadius() * 3);\r\n          styleClone.getImage().setRadius(radius);\r\n          styleClone.getImage().setOpacity(opacity);\r\n          break;\r\n        case 'LineString':\r\n          // TODO\r\n          if (styleClone.getImage()) {\r\n            styleClone\r\n              .getImage()\r\n              .getStroke()\r\n              .setColor(newColor);\r\n            styleClone\r\n              .getImage()\r\n              .getStroke()\r\n              .setWidth(\r\n                easeOut(elapsedRatio) *\r\n                  (styleClone\r\n                    .getImage()\r\n                    .getStroke()\r\n                    .getWidth() *\r\n                    3)\r\n              );\r\n          }\r\n          if (styleClone.getStroke()) {\r\n            styleClone.getStroke().setColor(newColor);\r\n            styleClone\r\n              .getStroke()\r\n              .setWidth(\r\n                easeOut(elapsedRatio) * (styleClone.getStroke().getWidth() * 3)\r\n              );\r\n          }\r\n          break;\r\n        case 'Polygon':\r\n          // TODO\r\n          if (styleClone.getImage()) {\r\n            styleClone\r\n              .getImage()\r\n              .getFill()\r\n              .setColor(newColor);\r\n          }\r\n          if (styleClone.getFill()) {\r\n            styleClone.getFill().setColor(newColor);\r\n          }\r\n          break;\r\n      }\r\n\r\n      styleClone.setText('');\r\n      vectorContext.setStyle(styleClone);\r\n      vectorContext.drawGeometry(flashGeom);\r\n\r\n      if (elapsed > this.options.animation.duration) {\r\n        unByKey(listenerKey);\r\n        // remove last geometry\r\n        // there is a little flash before feature disappear, better solution ?\r\n        this.map.ol.render();\r\n        return;\r\n      }\r\n      // tell OpenLayers to continue postcompose animation\r\n      this.map.ol.render();\r\n    }\r\n  }\r\n\r\n  public setMap(map: IgoMap | undefined) {\r\n    if (map === undefined) {\r\n      this.watcher.unsubscribe();\r\n    } else {\r\n      this.watcher.subscribe(() => {});\r\n    }\r\n    super.setMap(map);\r\n  }\r\n\r\n  public onUnwatch() {\r\n    this.dataSource.onUnwatch();\r\n    this.stopAnimation();\r\n  }\r\n\r\n  public stopAnimation() {\r\n    this.dataSource.ol.un(\r\n      'addfeature',\r\n      function(e) {\r\n        if (this.visible) {\r\n          this.flash(e.feature);\r\n        }\r\n      }.bind(this)\r\n    );\r\n  }\r\n\r\n  public enableTrackFeature(id: string | number) {\r\n    this.trackFeatureListenerId = this.dataSource.ol.on(\r\n      'addfeature',\r\n      this.trackFeature.bind(this, id)\r\n    );\r\n  }\r\n  public centerMapOnFeature(id: string | number) {\r\n    const feat = this.dataSource.ol.getFeatureById(id);\r\n    if (feat) {\r\n      this.map.ol.getView().setCenter(feat.getGeometry().getCoordinates());\r\n    }\r\n  }\r\n\r\n  public trackFeature(id, feat) {\r\n    if (feat.feature.getId() === id && this.visible) {\r\n      this.centerMapOnFeature(id);\r\n    }\r\n  }\r\n\r\n  public disableTrackFeature(id?: string | number) {\r\n    unByKey(this.trackFeatureListenerId);\r\n  }\r\n}\r\n","import olLayerVectorTile from 'ol/layer/VectorTile';\r\nimport olSourceVectorTile from 'ol/source/VectorTile';\r\n\r\nimport { MVTDataSource } from '../../../datasource/shared/datasources/mvt-datasource';\r\n\r\nimport { Layer } from './layer';\r\nimport { VectorTileLayerOptions } from './vectortile-layer.interface';\r\nimport { TileWatcher } from '../../utils';\r\n\r\nexport class VectorTileLayer extends Layer {\r\n  public dataSource: MVTDataSource;\r\n  public options: VectorTileLayerOptions;\r\n  public ol: olLayerVectorTile;\r\n\r\n  private watcher: TileWatcher;\r\n\r\n  constructor(options: VectorTileLayerOptions) {\r\n    super(options);\r\n    this.watcher = new TileWatcher(this);\r\n    this.status$ = this.watcher.status$;\r\n  }\r\n\r\n  protected createOlLayer(): olLayerVectorTile {\r\n    const olOptions = Object.assign({}, this.options, {\r\n      source: this.options.source.ol as olSourceVectorTile\r\n    });\r\n\r\n    return new olLayerVectorTile(olOptions);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  AfterViewInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\nimport { ActivityService } from '@igo2/core';\r\n\r\nimport { IgoMap, MapViewOptions } from '../shared';\r\n\r\n@Component({\r\n  selector: 'igo-map-browser',\r\n  templateUrl: './map-browser.component.html',\r\n  styleUrls: ['./map-browser.component.scss']\r\n})\r\nexport class MapBrowserComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n  private activityId: string;\r\n  private status$$: Subscription;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input()\r\n  get view(): MapViewOptions { return this._view; }\r\n  set view(value: MapViewOptions) {\r\n    this._view = value;\r\n    if (this.map !== undefined) {\r\n      this.map.updateView(value);\r\n    }\r\n  }\r\n  private _view: MapViewOptions;\r\n\r\n  public id = `igo-map-target-${new Date().getTime()}`;\r\n\r\n  constructor(private activityService: ActivityService) {}\r\n\r\n  ngOnInit() {\r\n    this.status$$ = this.map.status$.subscribe(status =>\r\n      this.handleStatusChange(status)\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.map.setTarget(this.id);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.setTarget(undefined);\r\n    this.activityService.unregister(this.activityId);\r\n    this.status$$.unsubscribe();\r\n  }\r\n\r\n  private handleStatusChange(status: SubjectStatus) {\r\n    if (status === SubjectStatus.Working && this.activityId === undefined) {\r\n      this.activityId = this.activityService.register();\r\n    } else if (status === SubjectStatus.Done && this.activityId !== undefined) {\r\n      this.activityService.unregister(this.activityId);\r\n      this.activityId = undefined;\r\n    }\r\n  }\r\n}\r\n","export enum OverlayAction {\r\n    None,\r\n    Move,\r\n    Zoom,\r\n    ZoomIfOutMapExtent\r\n  }\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\n\r\nimport { OverlayAction } from './overlay.enum';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OverlayService {\r\n  public features$ = new BehaviorSubject<[Feature[], OverlayAction]>([\r\n    [],\r\n    undefined\r\n  ]);\r\n\r\n  constructor() {}\r\n\r\n  setFeatures(features: Feature[], action: OverlayAction = OverlayAction.None) {\r\n    this.features$.next([features, action]);\r\n  }\r\n\r\n  clear() {\r\n    this.features$.next([[], OverlayAction.None]);\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\nimport * as olextent from 'ol/extent';\r\nimport * as olproj from 'ol/proj';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\n\r\nimport { OverlayService } from '../shared/overlay.service';\r\nimport { OverlayAction } from '../shared/overlay.enum';\r\n\r\n@Directive({\r\n  selector: '[igoOverlay]'\r\n})\r\nexport class OverlayDirective implements OnInit, OnDestroy {\r\n  private features$$: Subscription;\r\n  private format = new olFormatGeoJSON();\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    @Self() private component: MapBrowserComponent,\r\n    private overlayService: OverlayService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.features$$ = this.overlayService.features$.subscribe(res =>\r\n      this.handleFeatures(res[0], res[1])\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.features$$.unsubscribe();\r\n  }\r\n\r\n  private handleFeatures(features: Feature[], action: OverlayAction) {}\r\n}\r\n","import * as olstyle from 'ol/style';\r\nimport OlFeature from 'ol/Feature';\r\n\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { VectorLayer, StyleService } from '../../layer';\r\n\r\n/**\r\n * Create an overlay layer and it's source\r\n * @returns Overlay layer\r\n */\r\nexport function createOverlayLayer(): VectorLayer {\r\n  const overlayDataSource = new FeatureDataSource();\r\n  return new VectorLayer({\r\n    title: 'Overlay',\r\n    zIndex: 300,\r\n    source: overlayDataSource,\r\n    style: createOverlayLayerStyle()\r\n  });\r\n}\r\n\r\n/**\r\n * Create an overlay style with markers for points and a basic stroke/fill\r\n * combination for lines and polygons\r\n * @returns Style function\r\n */\r\nfunction createOverlayLayerStyle(): (olFeature: OlFeature) => olstyle.Style {\r\n  const defaultStyle = createOverlayDefaultStyle();\r\n  const markerStyle = createOverlayMarkerStyle();\r\n\r\n  let style;\r\n\r\n  return (olFeature: OlFeature) => {\r\n    if (olFeature.getId() === 'bufferFeature') {\r\n      style = createBufferStyle(olFeature.get('bufferStroke'), 2, olFeature.get('bufferFill'), olFeature.get('bufferText'));\r\n      return style;\r\n    } else {\r\n      const customStyle = olFeature.get('_style');\r\n      if (customStyle) {\r\n        const styleService = new StyleService();\r\n        return styleService.createStyle(customStyle);\r\n      }\r\n      const geometryType = olFeature.getGeometry().getType();\r\n      style = geometryType === 'Point' ? markerStyle : defaultStyle;\r\n      style.getText().setText(olFeature.get('_mapTitle'));\r\n      return style;\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Create a basic style for lines and polygons\r\n * @returns Style\r\n */\r\nexport function createOverlayDefaultStyle(\r\n  {text, fillOpacity, strokeWidth = 2, strokeOpacity, color = [0, 161, 222, 0.3]}:\r\n    {text?: string, fillOpacity?: number, strokeWidth?: number, strokeOpacity?: number, color?: number[]}  = {}\r\n  ): olstyle.Style {\r\n  const fillWithOpacity = color.slice(0);\r\n  const strokeWithOpacity = color.slice(0);\r\n  strokeWithOpacity[3] = 1;\r\n  if (fillOpacity) {\r\n    fillWithOpacity[3] = fillOpacity;\r\n  }\r\n  if (strokeOpacity) {\r\n    strokeWithOpacity[3] = strokeOpacity;\r\n  }\r\n\r\n  const stroke = new olstyle.Stroke({\r\n    width: strokeWidth,\r\n    color: strokeWithOpacity\r\n  });\r\n\r\n  const fill = new olstyle.Fill({\r\n    color: fillWithOpacity\r\n  });\r\n\r\n  return new olstyle.Style({\r\n    stroke,\r\n    fill,\r\n    image: new olstyle.Circle({\r\n      radius: 5,\r\n      stroke,\r\n      fill\r\n    }),\r\n    text: new olstyle.Text({\r\n      text,\r\n      font: '12px Calibri,sans-serif',\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 }),\r\n      overflow: true\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Create a marker style for points\r\n * @returns Style\r\n */\r\nexport function createOverlayMarkerStyle(\r\n  {text, opacity = 1, color = 'blue'}:\r\n    {text?: string, opacity?: number, color?: string}  = {}\r\n  ): olstyle.Style {\r\n  let iconColor;\r\n  switch (color) {\r\n    case 'blue':\r\n    case 'red':\r\n    case 'yellow':\r\n    case 'green':\r\n      iconColor = color;\r\n      break;\r\n    default:\r\n      iconColor = 'blue';\r\n      break;\r\n  }\r\n  return new olstyle.Style({\r\n    image: new olstyle.Icon({\r\n      src: './assets/igo2/geo/icons/place_' + iconColor + '_36px.svg',\r\n      opacity,\r\n      imgSize: [36, 36], // for ie\r\n      anchor: [0.5, 0.92]\r\n    }),\r\n    text: new olstyle.Text({\r\n      text,\r\n      font: '12px Calibri,sans-serif',\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 }),\r\n      overflow: true\r\n    })\r\n  });\r\n}\r\n\r\nfunction createBufferStyle(\r\n  strokeRGBA: [number, number, number, number] = [0, 161, 222, 1],\r\n  strokeWidth: number = 2,\r\n  fillRGBA: [number, number, number, number] = [0, 161, 222, 0.15],\r\n  bufferRadius?\r\n): olstyle.Style {\r\n  const stroke = new olstyle.Stroke({\r\n    width: strokeWidth,\r\n    color: strokeRGBA\r\n  });\r\n\r\n  const fill = new olstyle.Stroke({\r\n    color: fillRGBA\r\n  });\r\n\r\n  return new olstyle.Style({\r\n    stroke,\r\n    fill,\r\n    image: new olstyle.Circle({\r\n      radius: 5,\r\n      stroke,\r\n      fill\r\n    }),\r\n    text: new olstyle.Text({\r\n      font: '12px Calibri,sans-serif',\r\n      text: bufferRadius,\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 }),\r\n      overflow: true\r\n    })\r\n  });\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport * as olstyle from 'ol/style';\r\nimport OlFeature from 'ol/Feature';\r\nimport { StyleByAttribute } from './vector-style.interface';\r\n\r\nimport { ClusterParam } from './clusterParam';\r\nimport { createOverlayMarkerStyle } from '../../overlay';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StyleService {\r\n  public style: olstyle.Style;\r\n\r\n  createStyle(options: { [key: string]: any }) {\r\n    if (!options) {\r\n      return createOverlayMarkerStyle();\r\n    }\r\n    if (typeof options === 'function' || options instanceof olstyle.Style) {\r\n      return options;\r\n    }\r\n    return this.parseStyle('style', options);\r\n  }\r\n\r\n  private parseStyle(key: string, value: any): olstyle {\r\n    const styleOptions = {};\r\n    const olCls = this.getOlCls(key);\r\n\r\n    if (olCls && value instanceof Object) {\r\n      Object.keys(value).forEach(_key => {\r\n        const olKey = this.getOlKey(_key);\r\n        styleOptions[olKey] = this.parseStyle(_key, value[_key]);\r\n      });\r\n      return new olCls(styleOptions);\r\n    } else {\r\n      return value;\r\n    }\r\n  }\r\n\r\n  private getOlKey(key: any) {\r\n    let olKey;\r\n    switch (key.toLowerCase()) {\r\n      case 'circle':\r\n      case 'regularshape':\r\n      case 'icon':\r\n        olKey = 'image';\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return olKey || key;\r\n  }\r\n\r\n  private getOlCls(key: any) {\r\n    let olCls = olstyle[key.charAt(0).toUpperCase() + key.slice(1)];\r\n    if (key === 'regularshape') {\r\n      olCls = olstyle.RegularShape;\r\n    }\r\n    if (key === 'backgroundFill') {\r\n      olCls = olstyle.Fill;\r\n    }\r\n    if (key === 'backgroundStroke') {\r\n      olCls = olstyle.Stroke;\r\n    }\r\n\r\n    return olCls;\r\n  }\r\n\r\n  createStyleByAttribute(feature, styleByAttribute: StyleByAttribute) {\r\n    let style;\r\n    const type = styleByAttribute.type;\r\n    const attribute = styleByAttribute.attribute;\r\n    const data = styleByAttribute.data;\r\n    const stroke = styleByAttribute.stroke;\r\n    const width = styleByAttribute.width;\r\n    const fill = styleByAttribute.fill;\r\n    const radius = styleByAttribute.radius;\r\n    const icon = styleByAttribute.icon;\r\n    const scale = styleByAttribute.scale;\r\n    const size = data.length;\r\n    const label = styleByAttribute.label.attribute || styleByAttribute.label;\r\n    const labelStyle =\r\n      this.parseStyle('text', styleByAttribute.label.style) ||\r\n      new olstyle.Text();\r\n    labelStyle.setText(this.getLabel(feature, label));\r\n    const baseStyle = styleByAttribute.baseStyle;\r\n    if (type === 'circle') {\r\n      for (let i = 0; i < size; i++) {\r\n        const val =\r\n          typeof feature.get(attribute) !== 'undefined'\r\n            ? feature.get(attribute)\r\n            : '';\r\n        if (val === data[i] || val.toString().match(data[i])) {\r\n          if (icon) {\r\n            style = [\r\n              new olstyle.Style({\r\n                image: new olstyle.Icon({\r\n                  src: icon[i],\r\n                  scale: scale ? scale[i] : 1\r\n                })\r\n              })\r\n            ];\r\n            return style;\r\n          }\r\n          style = [\r\n            new olstyle.Style({\r\n              image: new olstyle.Circle({\r\n                radius: radius ? radius[i] : 4,\r\n                stroke: new olstyle.Stroke({\r\n                  color: stroke ? stroke[i] : 'black',\r\n                  width: width ? width[i] : 1\r\n                }),\r\n                fill: new olstyle.Fill({\r\n                  color: fill ? fill[i] : 'black'\r\n                })\r\n              }),\r\n              text: labelStyle\r\n            })\r\n          ];\r\n          return style;\r\n        }\r\n      }\r\n      if (!feature.getStyle()) {\r\n        style = [\r\n          new olstyle.Style({\r\n            image: new olstyle.Circle({\r\n              radius: 4,\r\n              stroke: new olstyle.Stroke({\r\n                color: 'black'\r\n              }),\r\n              fill: new olstyle.Fill({\r\n                color: '#bbbbf2'\r\n              })\r\n            })\r\n          })\r\n        ];\r\n        return style;\r\n      }\r\n    } else if (type === 'regular') {\r\n      for (let i = 0; i < size; i++) {\r\n        const val =\r\n          typeof feature.get(attribute) !== 'undefined'\r\n            ? feature.get(attribute)\r\n            : '';\r\n        if (val === data[i] || val.toString().match(data[i])) {\r\n          style = [\r\n            new olstyle.Style({\r\n              stroke: new olstyle.Stroke({\r\n                color: stroke ? stroke[i] : 'black',\r\n                width: width ? width[i] : 1\r\n              }),\r\n              fill: new olstyle.Fill({\r\n                color: fill ? fill[i] : 'rgba(255,255,255,0.4)'\r\n              }),\r\n              text: labelStyle\r\n            })\r\n          ];\r\n          return style;\r\n        }\r\n      }\r\n      if (feature instanceof OlFeature) {\r\n        if (!feature.getStyle()) {\r\n          if (baseStyle) {\r\n            style = this.createStyle(baseStyle);\r\n            return style;\r\n          }\r\n          style = [\r\n            new olstyle.Style({\r\n              stroke: new olstyle.Stroke({\r\n                color: 'black'\r\n              }),\r\n              fill: new olstyle.Fill({\r\n                color: '#bbbbf2'\r\n              })\r\n            })\r\n          ];\r\n          return style;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  createClusterStyle(feature, clusterParam: ClusterParam = {}, layerStyle) {\r\n    let style: olstyle.Style;\r\n    const size = feature.get('features').length;\r\n    if (size !== 1) {\r\n      if (clusterParam.clusterRanges) {\r\n        for (const r of clusterParam.clusterRanges) {\r\n          if (\r\n            (!r.minRadius || r.minRadius <= size) &&\r\n            (!r.maxRadius || r.maxRadius >= size)\r\n          ) {\r\n            style = this.createStyle(r.style);\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!style) {\r\n        let clusterRadius: number;\r\n        if (clusterParam.radiusCalc) {\r\n          clusterRadius = clusterParam.radiusCalc(size);\r\n        } else {\r\n          const radiusMin = 6;\r\n          clusterRadius = 5 * Math.log(size);\r\n          if (clusterRadius < radiusMin) {\r\n            clusterRadius = radiusMin;\r\n          }\r\n        }\r\n\r\n        style = [\r\n          new olstyle.Style({\r\n            image: new olstyle.Circle({\r\n              radius: clusterRadius,\r\n              opacity: 0.4,\r\n              stroke: new olstyle.Stroke({\r\n                color: 'black'\r\n              }),\r\n              fill: new olstyle.Fill({\r\n                color: 'rgba(24, 134, 45, 0.5)'\r\n              })\r\n            }),\r\n            text: new olstyle.Text({\r\n              text: size.toString(),\r\n              fill: new olstyle.Fill({\r\n                color: '#fff'\r\n              })\r\n            })\r\n          })\r\n        ];\r\n      }\r\n    } else {\r\n      style = this.createStyle(layerStyle);\r\n    }\r\n    return style;\r\n  }\r\n\r\n  getLabel(feature, labelMatch): string {\r\n    let label = labelMatch;\r\n    const labelToGet = Array.from(labelMatch.matchAll(/\\$\\{([^\\{\\}]+)\\}/g));\r\n\r\n    labelToGet.forEach(v => {\r\n      label = label.replace(v[0], feature.get(v[1]));\r\n    });\r\n\r\n    // Nothing done? check feature's attribute\r\n    if (labelToGet.length === 0 && label === labelMatch) {\r\n      label = feature.get(labelMatch) || labelMatch;\r\n    }\r\n\r\n    return label;\r\n  }\r\n}\r\n","import OlLayer from 'ol/layer/Layer';\r\n\r\nimport { AnyLayer } from '../../layer/shared/layers/any-layer';\r\nimport { QueryableDataSource } from './query.interfaces';\r\n\r\n/**\r\n * Whether a layer is queryable\r\n * @param layer Layer\r\n * @returns True if the layer s squeryable\r\n */\r\nexport function layerIsQueryable(layer: AnyLayer): boolean {\r\n  const dataSource = layer.dataSource as QueryableDataSource;\r\n  return dataSource.options.queryable === true;\r\n}\r\n\r\n/**\r\n * Whether an OL layer is queryable\r\n * @param layer Layer\r\n * @returns True if the ol layer is queryable\r\n */\r\nexport function olLayerIsQueryable(olLayer: OlLayer): boolean {\r\n  const layer = olLayer.get('_layer');\r\n  return layer === undefined ? false : layerIsQueryable(layer);\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\n\r\nimport { MetadataLayerOptions } from '../../metadata/shared/metadata.interface';\r\nimport { layerIsQueryable } from '../../query/shared/query.utils';\r\nimport { Layer, TooltipType } from '../shared/layers';\r\nimport { NetworkService, ConnectionState } from '@igo2/core';\r\n\r\n@Component({\r\n  selector: 'igo-layer-item',\r\n  templateUrl: './layer-item.component.html',\r\n  styleUrls: ['./layer-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LayerItemComponent implements OnInit, OnDestroy {\r\n  showLegend$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  inResolutionRange$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  queryBadgeHidden$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  tooltipText: string;\r\n\r\n  state: ConnectionState;\r\n\r\n  private resolution$$: Subscription;\r\n\r\n  @Input() layer: Layer;\r\n\r\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\r\n\r\n  @Input() expandLegendIfVisible: boolean = false;\r\n\r\n  @Input() updateLegendOnResolutionChange: boolean = false;\r\n\r\n  @Input() orderable: boolean = true;\r\n\r\n  @Input() lowerDisabled: boolean = false;\r\n\r\n  @Input() raiseDisabled: boolean = false;\r\n\r\n  @Input() queryBadge: boolean = false;\r\n\r\n  get removable(): boolean {\r\n    return this.layer.options.removable !== false;\r\n  }\r\n\r\n  get opacity() {\r\n    return this.layer.opacity * 100;\r\n  }\r\n  set opacity(opacity: number) {\r\n    this.layer.opacity = opacity / 100;\r\n  }\r\n\r\n  constructor(private networkService: NetworkService) {}\r\n\r\n  ngOnInit() {\r\n    if (\r\n      this.layer.visible &&\r\n      this.expandLegendIfVisible &&\r\n      this.layer.firstLoadComponent === true\r\n    ) {\r\n      this.layer.firstLoadComponent = false;\r\n      this.layer.legendCollapsed = false;\r\n    }\r\n    this.toggleLegend(this.layer.legendCollapsed);\r\n    this.updateQueryBadge();\r\n\r\n    const resolution$ = this.layer.map.viewController.resolution$;\r\n    this.resolution$$ = resolution$.subscribe(() => {\r\n      this.onResolutionChange();\r\n    });\r\n    this.tooltipText = this.computeTooltip();\r\n\r\n    this.networkService.currentState().subscribe((state: ConnectionState) => {\r\n      this.state = state;\r\n      this.onResolutionChange();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.resolution$$.unsubscribe();\r\n  }\r\n\r\n  toggleLegend(collapsed: boolean) {\r\n    this.layer.legendCollapsed = collapsed;\r\n    this.showLegend$.next(!collapsed);\r\n  }\r\n\r\n  toggleLegendOnClick() {\r\n    this.toggleLegend(this.showLegend$.value);\r\n  }\r\n\r\n  toggleVisibility() {\r\n    this.layer.visible = !this.layer.visible;\r\n    if (this.toggleLegendOnVisibilityChange) {\r\n      this.toggleLegend(!this.layer.visible);\r\n    }\r\n    this.updateQueryBadge();\r\n  }\r\n\r\n  computeTooltip(): string {\r\n    const layerOptions = this.layer.options;\r\n    if (!layerOptions.tooltip) {\r\n      return this.layer.title;\r\n    }\r\n    const layerTooltip = layerOptions.tooltip;\r\n    const layerMetadata = (layerOptions as MetadataLayerOptions).metadata;\r\n    switch (layerOptions.tooltip.type) {\r\n      case TooltipType.TITLE:\r\n        return this.layer.title;\r\n      case TooltipType.ABSTRACT:\r\n        if (layerMetadata && layerMetadata.abstract) {\r\n          return layerMetadata.abstract;\r\n        } else {\r\n          return this.layer.title;\r\n        }\r\n      case TooltipType.CUSTOM:\r\n        if (layerTooltip && layerTooltip.text) {\r\n          return layerTooltip.text;\r\n        } else {\r\n          return this.layer.title;\r\n        }\r\n      default:\r\n        return this.layer.title;\r\n    }\r\n  }\r\n\r\n  private onResolutionChange() {\r\n    const inResolutionRange = this.layer.isInResolutionsRange;\r\n    if (\r\n      inResolutionRange === false &&\r\n      this.updateLegendOnResolutionChange === true\r\n    ) {\r\n      this.toggleLegend(true);\r\n    }\r\n    this.inResolutionRange$.next(inResolutionRange);\r\n  }\r\n\r\n  private updateQueryBadge() {\r\n    const hidden =\r\n      this.queryBadge === false ||\r\n      this.layer.visible === false ||\r\n      !layerIsQueryable(this.layer);\r\n    this.queryBadgeHidden$.next(hidden);\r\n  }\r\n}\r\n","import { Component, Input, OnInit, OnDestroy, ChangeDetectionStrategy, ViewChildren, ElementRef, QueryList } from '@angular/core';\r\n\r\nimport { Subscription, BehaviorSubject, of, Observable } from 'rxjs';\r\n\r\nimport { Legend } from '../../datasource/shared/datasources/datasource.interface';\r\nimport { Layer, ItemStyleOptions } from '../shared/layers';\r\nimport { CapabilitiesService } from '../../datasource/shared/capabilities.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { LanguageService } from '@igo2/core';\r\n\r\n@Component({\r\n  selector: 'igo-layer-legend',\r\n  templateUrl: './layer-legend.component.html',\r\n  styleUrls: ['./layer-legend.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LayerLegendComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() updateLegendOnResolutionChange: boolean = false;\r\n\r\n  /**\r\n   * Observable of the legend items\r\n   */\r\n  legendItems$: BehaviorSubject<Legend[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * Subscription to the map's resolution\r\n   */\r\n  private resolution$$: Subscription;\r\n\r\n  /**\r\n   * The available styles\r\n   */\r\n  public styles;\r\n\r\n  /**\r\n   * The style used to make the legend\r\n   */\r\n  public currentStyle;\r\n\r\n  /**\r\n   * The scale used to make the legend\r\n   */\r\n  private scale: number = undefined;\r\n\r\n  /**\r\n   * Get list of images display\r\n   */\r\n  @ViewChildren('renderedLegend') renderedLegends: QueryList<ElementRef>;\r\n\r\n  /**\r\n   * List of size of images displayed\r\n   */\r\n  public imagesHeight: { [srcKey: string]: number } = {};\r\n\r\n  /**\r\n   * Layer\r\n   */\r\n  @Input() layer: Layer;\r\n\r\n  constructor(\r\n    private capabilitiesService: CapabilitiesService,\r\n    private languageService: LanguageService) {}\r\n\r\n  /**\r\n   * On init, subscribe to the map's resolution and update the legend accordingly\r\n   */\r\n  ngOnInit() {\r\n    let lastlLegend = this.layer.legend;\r\n    this.styles = this.listStyles();\r\n    const sourceOptions = this.layer.options.source.options as any;\r\n    if (\r\n      sourceOptions &&\r\n      sourceOptions.params &&\r\n      sourceOptions.params.STYLES) {\r\n      // if a styles is provided into the layers wms params\r\n      this.currentStyle = this.styles.find(style => style.name === sourceOptions.params.STYLES).name;\r\n    } else if (!this.layer.legend) {\r\n      // if no legend is manually provided\r\n      if (this.styles && this.styles.length > 1) {\r\n        this.currentStyle = this.styles[0].name;\r\n      }\r\n    } else if (this.styles && this.styles.length > 1) {\r\n      this.currentStyle = lastlLegend[0].currentStyle;\r\n    }\r\n\r\n    lastlLegend = this.layer.dataSource.getLegend(this.currentStyle, this.scale);\r\n    if (this.updateLegendOnResolutionChange === true) {\r\n      const resolution$ = this.layer.map.viewController.resolution$;\r\n      this.resolution$$ = resolution$.subscribe((resolution: number) => this.onResolutionChange(resolution));\r\n    } else if (lastlLegend.length !== 0) {\r\n      this.legendItems$.next(lastlLegend);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On destroy, unsubscribe to the map,s resolution\r\n   */\r\n  ngOnDestroy() {\r\n    if (this.resolution$$ !== undefined) {\r\n      this.resolution$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  toggleLegendItem(collapsed: boolean, item: Legend) {\r\n    item.collapsed = collapsed;\r\n  }\r\n\r\n  private transfertToggleLegendItem(newLegends: Legend[]): Legend[] {\r\n    const outLegends: Legend[] = newLegends;\r\n    const lastLegends = this.layer.legend;\r\n    for (let i = 0; i < lastLegends.length; i++) {\r\n      outLegends[i].collapsed = lastLegends[i].collapsed;\r\n   }\r\n    return outLegends;\r\n  }\r\n\r\n  computeItemTitle(layerLegend): Observable<string> {\r\n    const layerOptions = this.layer.dataSource.options as any;\r\n    if (layerOptions.type !== 'wms') {\r\n      return of(layerLegend.title);\r\n    }\r\n\r\n    const layers = layerOptions.params.LAYERS.split(',');\r\n    const localLayerOptions = JSON.parse(JSON.stringify(layerOptions)); // to avoid to alter the original options.\r\n    localLayerOptions.params.LAYERS = layers.find(layer => layer === layerLegend.title);\r\n    return this.capabilitiesService\r\n      .getWMSOptions(localLayerOptions)\r\n      .pipe(map(wmsDataSourceOptions => {\r\n        return wmsDataSourceOptions._layerOptionsFromCapabilities.title;\r\n      }));\r\n  }\r\n\r\n  /**\r\n   * On resolution change, compute the effective scale level and update the\r\n   * legend accordingly.\r\n   * @param resolution Map resolution\r\n   */\r\n  private onResolutionChange(resolution: number) {\r\n    this.scale = this.layer.map.viewController.getScale();\r\n    this.updateLegend();\r\n  }\r\n\r\n  /**\r\n   * Update the legend with scale level and style define\r\n   */\r\n  private updateLegend() {\r\n    let legendItems = this.layer.dataSource.getLegend(this.currentStyle, this.scale);\r\n    if (this.layer.legend && this.layer.legend.length > 1) { legendItems = this.transfertToggleLegendItem(legendItems); }\r\n    this.layer.legend = legendItems;\r\n\r\n    if (legendItems.length === 0 && this.legendItems$.value.length === 0) {\r\n      return;\r\n    }\r\n    this.legendItems$.next(legendItems);\r\n  }\r\n\r\n  private listStyles() {\r\n    const layerOptions = this.layer.options;\r\n    if (layerOptions && layerOptions.legendOptions) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant('igo.geo.layer.legend.default');\r\n      const stylesAvailable =  [{ name: '', title } as ItemStyleOptions]\r\n        .concat(layerOptions.legendOptions.stylesAvailable.filter(sA => (\r\n          sA.name.normalize('NFD').replace(/[\\u0300-\\u036f]/gi, '') !== 'default' &&\r\n          sA.name.normalize('NFD').replace(/[\\u0300-\\u036f]/gi, '') !== 'defaut')));\r\n      stylesAvailable.map(s => s.title = s.title.charAt(0).toUpperCase() + s.title.slice(1).replace(/_/g, ' '));\r\n      return stylesAvailable;\r\n    }\r\n    return ;\r\n  }\r\n\r\n  onChangeStyle() {\r\n    this.updateLegend();\r\n    this.layer.dataSource.ol.updateParams({STYLES: this.currentStyle});\r\n  }\r\n\r\n  onLoadImage(id: string) {\r\n    let elemRef: HTMLImageElement;\r\n    if (this.renderedLegends.length === 1) {\r\n      elemRef = this.renderedLegends.first.nativeElement as HTMLImageElement;\r\n    } else {\r\n      elemRef = this.renderedLegends.find(renderedLegend => renderedLegend.nativeElement.id === id).nativeElement as HTMLImageElement;\r\n    }\r\n    this.imagesHeight[id] = elemRef.height;\r\n  }\r\n}\r\n","export enum LayerListControlsEnum {\r\n  always = 'always',\r\n  never = 'never',\r\n  default = 'default'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LayerListService {\r\n  public keyword: string;\r\n  public sortedAlpha = false;\r\n  public onlyVisible = false;\r\n  public onlyInRange = false;\r\n  public keywordInitialized = false;\r\n  public sortedAlphaInitialized = false;\r\n  public onlyVisibleInitialized = false;\r\n  public onlyInRangeInitialized = false;\r\n\r\n  constructor() {}\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  TemplateRef,\r\n  ContentChild,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\nimport { FloatLabelType } from '@angular/material';\r\n\r\nimport { Layer } from '../shared';\r\nimport { LayerListControlsEnum } from './layer-list.enum';\r\nimport { LayerListService } from './layer-list.service';\r\nimport {\r\n  BehaviorSubject,\r\n  ReplaySubject,\r\n  Subscription,\r\n  EMPTY,\r\n  timer\r\n} from 'rxjs';\r\nimport { debounce } from 'rxjs/operators';\r\nimport {\r\n  MetadataOptions,\r\n  MetadataLayerOptions\r\n} from '../../metadata/shared/metadata.interface';\r\n\r\n// TODO: This class could use a clean up. Also, some methods could be moved ealsewhere\r\n@Component({\r\n  selector: 'igo-layer-list',\r\n  templateUrl: './layer-list.component.html',\r\n  styleUrls: ['./layer-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class LayerListComponent implements OnInit, OnDestroy {\r\n  orderable = true;\r\n  thresholdToFilterAndSort = 5;\r\n\r\n  layers$: BehaviorSubject<Layer[]> = new BehaviorSubject([]);\r\n\r\n  change$ = new ReplaySubject<void>(1);\r\n\r\n  showToolbar$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  private change$$: Subscription;\r\n\r\n  @ContentChild('igoLayerItemToolbar') templateLayerToolbar: TemplateRef<any>;\r\n\r\n  @Input() layersAreAllVisible: boolean = true;\r\n\r\n  @Input() layersAreAllInRange: boolean = true;\r\n\r\n  @Input()\r\n  set layers(value: Layer[]) {\r\n    this._layers = value;\r\n    this.next();\r\n  }\r\n  get layers(): Layer[] {\r\n    return this._layers;\r\n  }\r\n  private _layers: Layer[];\r\n\r\n  @Input() floatLabel: FloatLabelType = 'auto';\r\n\r\n  @Input() layerFilterAndSortOptions: any = {};\r\n\r\n  @Input() excludeBaseLayers: boolean = false;\r\n\r\n  @Input() toggleLegendOnVisibilityChange: boolean = false;\r\n\r\n  @Input() expandLegendOfVisibleLayers: boolean = false;\r\n\r\n  @Input() updateLegendOnResolutionChange: boolean = false;\r\n\r\n  @Input() queryBadge: boolean = false;\r\n\r\n  get keyword(): string {\r\n    return this.layerListService.keyword;\r\n  }\r\n  set keyword(value: string) {\r\n    this.layerListService.keyword = value;\r\n    this.next();\r\n  }\r\n\r\n  get keywordInitialized(): boolean {\r\n    return this.layerListService.keywordInitialized;\r\n  }\r\n  set keywordInitialized(value: boolean) {\r\n    this.layerListService.keywordInitialized = value;\r\n  }\r\n\r\n  get onlyVisible(): boolean {\r\n    return this.layerListService.onlyVisible;\r\n  }\r\n  set onlyVisible(value: boolean) {\r\n    this.layerListService.onlyVisible = value;\r\n    this.next();\r\n  }\r\n\r\n  get onlyVisibleInitialized(): boolean {\r\n    return this.layerListService.onlyVisibleInitialized;\r\n  }\r\n  set onlyVisibleInitialized(value: boolean) {\r\n    this.layerListService.onlyVisibleInitialized = value;\r\n  }\r\n\r\n  get onlyInRange(): boolean {\r\n    return this.layerListService.onlyInRange;\r\n  }\r\n  set onlyInRange(value: boolean) {\r\n    this.layerListService.onlyInRange = value;\r\n    this.next();\r\n  }\r\n\r\n  get onlyInRangeInitialized(): boolean {\r\n    return this.layerListService.onlyInRangeInitialized;\r\n  }\r\n  set onlyInRangeInitialized(value: boolean) {\r\n    this.layerListService.onlyInRangeInitialized = value;\r\n  }\r\n\r\n  get sortedAlpha(): boolean {\r\n    return this.layerListService.sortedAlpha;\r\n  }\r\n  set sortedAlpha(value: boolean) {\r\n    this.layerListService.sortedAlpha = value;\r\n    this.next();\r\n  }\r\n\r\n  get sortedAlphaInitialized(): boolean {\r\n    return this.layerListService.sortedAlphaInitialized;\r\n  }\r\n  set sortedAlphaInitialized(value: boolean) {\r\n    this.layerListService.sortedAlphaInitialized = value;\r\n  }\r\n\r\n  constructor(private layerListService: LayerListService) {}\r\n\r\n  /**\r\n   * Subscribe to the search term stream and trigger researches\r\n   * @internal\r\n   */\r\n  ngOnInit(): void {\r\n    this.change$$ = this.change$\r\n      .pipe(\r\n        debounce(() => {\r\n          return this.layers.length === 0 ? EMPTY : timer(50);\r\n        })\r\n      )\r\n      .subscribe(() => {\r\n        this.showToolbar$.next(this.computeShowToolbar());\r\n        this.layers$.next(this.computeLayers(this.layers.slice(0)));\r\n      });\r\n\r\n    this.initLayerFilterAndSortOptions();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.change$$.unsubscribe();\r\n  }\r\n\r\n  toggleOnlyVisible() {\r\n    this.onlyVisible = !this.onlyVisible;\r\n  }\r\n\r\n  toggleOnlyInRange() {\r\n    this.onlyInRange = !this.onlyInRange;\r\n  }\r\n\r\n  toggleSort(sortAlpha: boolean) {\r\n    this.sortedAlpha = sortAlpha;\r\n  }\r\n\r\n  clearKeyword() {\r\n    this.keyword = undefined;\r\n  }\r\n\r\n  getLowerLayer() {\r\n    return this.layers\r\n      .filter(l => !l.baseLayer)\r\n      .reduce(\r\n        (prev, current) => {\r\n          return prev.zIndex < current.zIndex ? prev : current;\r\n        },\r\n        { zIndex: undefined, id: undefined }\r\n      );\r\n  }\r\n\r\n  getUpperLayer() {\r\n    return this.layers\r\n      .filter(l => !l.baseLayer)\r\n      .reduce(\r\n        (prev, current) => {\r\n          return prev.zIndex > current.zIndex ? prev : current;\r\n        },\r\n        { zIndex: undefined, id: undefined }\r\n      );\r\n  }\r\n\r\n  private next() {\r\n    this.change$.next();\r\n  }\r\n\r\n  private computeLayers(layers: Layer[]): Layer[] {\r\n    let layersOut = this.filterLayers(layers);\r\n    if (this.sortedAlpha) {\r\n      layersOut = this.sortLayersByTitle(layersOut);\r\n    } else {\r\n      layersOut = this.sortLayersByZindex(layersOut);\r\n    }\r\n    return layersOut;\r\n  }\r\n\r\n  private filterLayers(layers: Layer[]): Layer[] {\r\n    const keyword = this.keyword;\r\n    if (\r\n      this.layerFilterAndSortOptions.showToolbar === LayerListControlsEnum.never\r\n    ) {\r\n      return layers;\r\n    }\r\n    if (!keyword && !this.onlyInRange && !this.onlyVisible) {\r\n      return layers;\r\n    }\r\n\r\n    const keepLayerIds = layers.map((layer: Layer) => layer.id);\r\n\r\n    layers.forEach((layer: Layer) => {\r\n      const layerOptions = (layer.options as MetadataLayerOptions) || {};\r\n      const dataSourceOptions = layer.dataSource.options || {};\r\n      const metadata = layerOptions.metadata || ({} as MetadataOptions);\r\n      const keywords = metadata.keywordList || [];\r\n      const layerKeywords = keywords.map((kw: string) => {\r\n        return kw.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n      });\r\n\r\n      if (keyword) {\r\n        const localKeyword = keyword\r\n          .normalize('NFD')\r\n          .replace(/[\\u0300-\\u036f]/g, '');\r\n        const layerTitle = layer.title\r\n          .normalize('NFD')\r\n          .replace(/[\\u0300-\\u036f]/g, '');\r\n        const dataSourceType = dataSourceOptions.type || '';\r\n        const keywordRegex = new RegExp(localKeyword, 'gi');\r\n        const keywordInList =\r\n          layerKeywords.find((kw: string) => keywordRegex.test(kw)) !==\r\n          undefined;\r\n        if (\r\n          !keywordRegex.test(layerTitle) &&\r\n          !(keyword.toLowerCase() === dataSourceType.toLowerCase()) &&\r\n          !keywordInList\r\n        ) {\r\n          const index = keepLayerIds.indexOf(layer.id);\r\n          if (index > -1) {\r\n            keepLayerIds.splice(index, 1);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this.onlyVisible && layer.visible === false) {\r\n        const index = keepLayerIds.indexOf(layer.id);\r\n        if (index > -1) {\r\n          keepLayerIds.splice(index, 1);\r\n        }\r\n      }\r\n\r\n      if (this.onlyInRange && layer.isInResolutionsRange === false) {\r\n        const index = keepLayerIds.indexOf(layer.id);\r\n        if (index > -1) {\r\n          keepLayerIds.splice(index, 1);\r\n        }\r\n      }\r\n    });\r\n\r\n    return layers.filter(\r\n      (layer: Layer) => keepLayerIds.indexOf(layer.id) !== -1\r\n    );\r\n  }\r\n\r\n  private sortLayersByZindex(layers: Layer[]) {\r\n    return layers.sort((layer1, layer2) => layer2.zIndex - layer1.zIndex);\r\n  }\r\n\r\n  private sortLayersByTitle(layers: Layer[]) {\r\n    return layers.sort((a, b) => {\r\n      if (a.title < b.title) {\r\n        return -1;\r\n      }\r\n      if (a.title > b.title) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  private computeShowToolbar(): boolean {\r\n    switch (this.layerFilterAndSortOptions.showToolbar) {\r\n      case LayerListControlsEnum.always:\r\n        return true;\r\n      case LayerListControlsEnum.never:\r\n        return false;\r\n      default:\r\n        if (\r\n          this.layers.length >= this.thresholdToFilterAndSort ||\r\n          this.keyword ||\r\n          this.onlyInRange ||\r\n          this.onlyVisible\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n    }\r\n  }\r\n\r\n  private initLayerFilterAndSortOptions() {\r\n    if (this.layerFilterAndSortOptions.toolbarThreshold) {\r\n      this.thresholdToFilterAndSort = this.layerFilterAndSortOptions.toolbarThreshold;\r\n    }\r\n\r\n    if (this.layerFilterAndSortOptions.keyword && !this.keywordInitialized) {\r\n      this.keyword = this.layerFilterAndSortOptions.keyword;\r\n      this.keywordInitialized = true;\r\n    }\r\n    if (\r\n      this.layerFilterAndSortOptions.sortedAlpha &&\r\n      !this.sortedAlphaInitialized\r\n    ) {\r\n      this.sortedAlpha = this.layerFilterAndSortOptions.sortedAlpha;\r\n      this.sortedAlphaInitialized = true;\r\n    }\r\n    if (\r\n      this.layerFilterAndSortOptions.onlyVisible &&\r\n      !this.onlyVisibleInitialized &&\r\n      !this.layersAreAllVisible\r\n    ) {\r\n      this.onlyVisible = this.layerFilterAndSortOptions.onlyVisible;\r\n      this.onlyVisibleInitialized = true;\r\n    }\r\n    if (\r\n      this.layerFilterAndSortOptions.onlyInRange &&\r\n      !this.onlyInRangeInitialized &&\r\n      !this.layersAreAllInRange\r\n    ) {\r\n      this.onlyInRange = this.layerFilterAndSortOptions.onlyInRange;\r\n      this.onlyInRangeInitialized = true;\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { IgoMap } from './map';\r\n\r\n/**\r\n * MapService\r\n *\r\n * This service tracks the IgoMap instance, if any.\r\n * Currently, only one map instance is supported\r\n * but support for multiple maps may be added in the future.\r\n * This will impact other services such as the OverlayService\r\n * because these maps won't be sharing overlayed features.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MapService {\r\n  private map: IgoMap;\r\n\r\n  constructor() {}\r\n\r\n  getMap(): IgoMap {\r\n    return this.map;\r\n  }\r\n\r\n  setMap(map: IgoMap) {\r\n    this.map = map;\r\n  }\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy, AfterViewInit, Optional } from '@angular/core';\r\nimport { Subscription, combineLatest } from 'rxjs';\r\n\r\nimport { RouteService } from '@igo2/core';\r\nimport { MapService } from '../../map/shared/map.service';\r\nimport { LayerListComponent } from './layer-list.component';\r\nimport { LayerListService } from './layer-list.service';\r\nimport { Layer } from '../shared/layers/layer';\r\nimport { map, debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n  selector: '[igoLayerListBinding]'\r\n})\r\nexport class LayerListBindingDirective implements OnInit, AfterViewInit, OnDestroy {\r\n  private component: LayerListComponent;\r\n  private layersOrResolutionChange$$: Subscription;\r\n  layersVisibility$$: Subscription;\r\n  layersRange$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() component: LayerListComponent,\r\n    private mapService: MapService,\r\n    private layerListService: LayerListService,\r\n    @Optional() private route: RouteService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input layers\r\n    this.component.layers = [];\r\n    this.layersOrResolutionChange$$ = combineLatest([\r\n      this.mapService.getMap().layers$,\r\n      this.mapService.getMap().viewController.resolution$]\r\n    ).pipe(\r\n      debounceTime(10)\r\n    ).subscribe((bunch: [Layer[], number]) => {\r\n      const shownLayers = bunch[0].filter((layer: Layer) => {\r\n        return layer.showInLayerList === true;\r\n      });\r\n      this.component.layers = shownLayers;\r\n      this.setLayersVisibilityRangeStatus(shownLayers, this.component.excludeBaseLayers);\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initRoutes();\r\n  }\r\n\r\n  private setLayersVisibilityRangeStatus(layers: Layer[], excludeBaseLayers: boolean) {\r\n    if (this.layersVisibility$$ !== undefined) {\r\n      this.layersVisibility$$.unsubscribe();\r\n      this.layersVisibility$$ = undefined;\r\n    }\r\n    if (this.layersRange$$ !== undefined) {\r\n      this.layersRange$$.unsubscribe();\r\n      this.layersRange$$ = undefined;\r\n    }\r\n    this.layersVisibility$$ = combineLatest(layers\r\n      .filter(layer => layer.baseLayer !== excludeBaseLayers )\r\n      .map((layer: Layer) => layer.visible$))\r\n      .pipe(map((visibles: boolean[]) => visibles.every(Boolean)))\r\n      .subscribe((allLayersAreVisible: boolean) =>\r\n        this.component.layersAreAllVisible = allLayersAreVisible);\r\n\r\n    this.layersRange$$ = combineLatest(layers.map((layer: Layer) => layer.isInResolutionsRange$))\r\n      .pipe(map((inrange: boolean[]) => inrange.every(Boolean)))\r\n      .subscribe((layersAreAllInRange: boolean) =>\r\n      this.component.layersAreAllInRange = layersAreAllInRange);\r\n  }\r\n\r\n  private initRoutes() {\r\n    if (\r\n      this.route &&\r\n      (this.route.options.llcKKey || this.route.options.llcAKey ||\r\n        this.route.options.llcVKey || this.route.options.llcVKey)) {\r\n      this.route.queryParams.subscribe(params => {\r\n\r\n        const keywordFromUrl = params[this.route.options.llcKKey as string];\r\n        const sortedAplhaFromUrl = params[this.route.options.llcAKey as string];\r\n        const onlyVisibleFromUrl = params[this.route.options.llcVKey as string];\r\n        const onlyInRangeFromUrl = params[this.route.options.llcRKey as string];\r\n        if (keywordFromUrl && !this.layerListService.keywordInitialized) {\r\n          this.layerListService.keyword = keywordFromUrl;\r\n          this.layerListService.keywordInitialized = true;\r\n        }\r\n        if (sortedAplhaFromUrl && !this.layerListService.sortedAlphaInitialized) {\r\n          this.layerListService.sortedAlpha = sortedAplhaFromUrl === '1' ? true : false;\r\n          this.layerListService.sortedAlphaInitialized = true;\r\n        }\r\n        if (onlyVisibleFromUrl &&\r\n          !this.layerListService.onlyVisibleInitialized &&\r\n          !this.component.layersAreAllVisible) {\r\n          this.layerListService.onlyVisible = onlyVisibleFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyVisibleInitialized = true;\r\n        }\r\n        if (onlyInRangeFromUrl &&\r\n          !this.layerListService.onlyInRangeInitialized &&\r\n          !this.component.layersAreAllInRange) {\r\n          this.layerListService.onlyInRange = onlyInRangeFromUrl === '1' ? true : false;\r\n          this.layerListService.onlyInRangeInitialized = true;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layersOrResolutionChange$$.unsubscribe();\r\n    if (this.layersVisibility$$ !== undefined) {\r\n      this.layersVisibility$$.unsubscribe();\r\n      this.layersVisibility$$ = undefined;\r\n    }\r\n    if (this.layersRange$$ !== undefined) {\r\n      this.layersRange$$.unsubscribe();\r\n      this.layersRange$$ = undefined;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\n\r\nimport { Layer, VectorLayer } from '../shared/layers';\r\nimport { VectorLayerOptions } from '../shared/layers/vector-layer.interface';\r\n\r\n@Component({\r\n  selector: 'igo-track-feature-button',\r\n  templateUrl: './track-feature-button.component.html',\r\n  styleUrls: ['./track-feature-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TrackFeatureButtonComponent implements OnInit {\r\n\r\n  @Input() layer: VectorLayer;\r\n\r\n  @Input() trackFeature = false;\r\n\r\n  get options(): VectorLayerOptions {\r\n    if (!this.layer) {\r\n      return;\r\n    }\r\n    return this.layer.options;\r\n  }\r\n\r\n  public color: string = 'primary';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.color = this.trackFeature ? 'primary' : 'basic';\r\n  }\r\n\r\n  toggleTrackFeature() {\r\n    if (this.trackFeature) {\r\n      this.layer.disableTrackFeature(this.layer.options.trackFeature);\r\n      this.color = 'basic';\r\n    } else {\r\n      this.layer.enableTrackFeature(this.layer.options.trackFeature);\r\n      this.color = 'primary';\r\n    }\r\n    this.trackFeature = !this.trackFeature;\r\n  }\r\n}\r\n","import { Subscription } from 'rxjs';\r\n\r\nimport { EntityStoreStrategy } from '@igo2/common';\r\n\r\nimport { FeatureMotion } from '../feature.enums';\r\nimport { Feature, FeatureStoreLoadingStrategyOptions } from '../feature.interfaces';\r\nimport { FeatureStore } from '../store';\r\n\r\n/**\r\n * This strategy loads a store's features into it's layer counterpart.\r\n * The store -> layer binding is a one-way binding. That means any entity\r\n * added to the store will be added to the layer but the opposite is false.\r\n *\r\n * Important: This strategy observes filtered entities, not raw entities. This\r\n * is not configurable yet.\r\n */\r\nexport class FeatureStoreLoadingStrategy extends EntityStoreStrategy {\r\n\r\n  /**\r\n   * Subscription to the store's features\r\n   */\r\n  private stores$$ = new Map<FeatureStore, Subscription>();\r\n\r\n  constructor(protected options: FeatureStoreLoadingStrategyOptions) {\r\n    super(options);\r\n  }\r\n\r\n  /**\r\n   * Bind this strategy to a store and start watching for entities changes\r\n   * @param store Feature store\r\n   */\r\n  bindStore(store: FeatureStore) {\r\n    super.bindStore(store);\r\n    if (this.active === true) {\r\n      this.watchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind this strategy from a store and stop watching for entities changes\r\n   * @param store Feature store\r\n   */\r\n  unbindStore(store: FeatureStore) {\r\n    super.unbindStore(store);\r\n    if (this.active === true) {\r\n      this.unwatchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start watching all stores already bound to that strategy at once.\r\n   * @internal\r\n   */\r\n  protected doActivate() {\r\n    this.stores.forEach((store: FeatureStore) => this.watchStore(store));\r\n  }\r\n\r\n  /**\r\n   * Stop watching all stores bound to that strategy\r\n   * @internal\r\n   */\r\n  protected doDeactivate() {\r\n    this.unwatchAll();\r\n  }\r\n\r\n  /**\r\n   * Watch for entities changes in a store.\r\n   * Important: Never observe a store's sorted entities. It makes no sense\r\n   * to display sorted entities (instead of unsorted) on a layer and it\r\n   * would potentially result in a lot of useless computation.\r\n   * @param store Feature store\r\n   */\r\n  private watchStore(store: FeatureStore) {\r\n    if (this.stores$$.has(store)) {\r\n      return;\r\n    }\r\n\r\n    const subscription = store.view.all$()\r\n      .subscribe((features: Feature[]) => this.onFeaturesChange(features, store));\r\n    this.stores$$.set(store, subscription);\r\n  }\r\n\r\n  /**\r\n   * Stop watching for entities changes in a store.\r\n   * @param store Feature store\r\n   */\r\n  private unwatchStore(store: FeatureStore) {\r\n    const subscription = this.stores$$.get(store);\r\n    if (subscription !== undefined) {\r\n      subscription.unsubscribe();\r\n      this.stores$$.delete(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop watching for entities changes in all stores.\r\n   */\r\n  private unwatchAll() {\r\n    Array.from(this.stores$$.entries()).forEach((entries: [FeatureStore, Subscription]) => {\r\n      entries[1].unsubscribe();\r\n    });\r\n    this.stores$$.clear();\r\n  }\r\n\r\n  /**\r\n   * Load features into a layer or clear the layer if the array of features is empty.\r\n   * @param features Store filtered features\r\n   * @param store Feature store\r\n   */\r\n  private onFeaturesChange(features: Feature[], store: FeatureStore) {\r\n    if (features.length === 0) {\r\n      store.clearLayer();\r\n    } else {\r\n      store.setLayerFeatures(\r\n        features,\r\n        this.selectMotion(store),\r\n        this.options.viewScale,\r\n        this.options.areaRatio,\r\n        this.options.getFeatureId\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Selects the best motion\r\n   * @param store A FeatureStore to apply the motion\r\n   * @returns The motion selected\r\n   */\r\n  private selectMotion(store: FeatureStore) {\r\n    if (this.options.motion !== undefined) { return this.options.motion; }\r\n\r\n    if (store.pristine === true) {\r\n      // If features have just been loaded into the store, move/zoom on them\r\n      return FeatureMotion.Default;\r\n    } else if (store.count > store.view.count) {\r\n      // If features have been filtered, move/zoom on the remaining ones\r\n      return FeatureMotion.Default;\r\n    } else {\r\n      // On insert, update or delete, do nothing\r\n      return FeatureMotion.None;\r\n    }\r\n  }\r\n}\r\n","import { unByKey } from 'ol/Observable';\r\nimport { OlEvent } from 'ol/events/Event';\r\n\r\nimport { EntityStoreStrategy } from '@igo2/common';\r\n\r\nimport { FeatureStore } from '../store';\r\nimport { FeatureStoreLoadingLayerStrategyOptions } from '../feature.interfaces';\r\n\r\n/**\r\n * This strategy loads a layer's features into it's store counterpart.\r\n * The layer -> store binding is a one-way binding. That means any OL feature\r\n * added to the layer will be added to the store but the opposite is false.\r\n *\r\n * Important: In it's current state, this strategy is to meant to be combined\r\n * with a standard Loading strategy and it would probably cause recursion issues.\r\n */\r\nexport class FeatureStoreLoadingLayerStrategy extends EntityStoreStrategy {\r\n\r\n  /**\r\n   * Subscription to the store's OL source changes\r\n   */\r\n  private stores$$ = new Map<FeatureStore, string>();\r\n\r\n  constructor(protected options: FeatureStoreLoadingLayerStrategyOptions) {\r\n    super(options);\r\n  }\r\n\r\n  /**\r\n   * Bind this strategy to a store and start watching for Ol source changes\r\n   * @param store Feature store\r\n   */\r\n  bindStore(store: FeatureStore) {\r\n    super.bindStore(store);\r\n    if (this.active === true) {\r\n      this.watchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind this strategy from a store and stop watching for Ol source changes\r\n   * @param store Feature store\r\n   */\r\n  unbindStore(store: FeatureStore) {\r\n    super.unbindStore(store);\r\n    if (this.active === true) {\r\n      this.unwatchStore(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start watching all stores already bound to that strategy at once.\r\n   * @internal\r\n   */\r\n  protected doActivate() {\r\n    this.stores.forEach((store: FeatureStore) => this.watchStore(store));\r\n  }\r\n\r\n  /**\r\n   * Stop watching all stores bound to that strategy\r\n   * @internal\r\n   */\r\n  protected doDeactivate() {\r\n    this.unwatchAll();\r\n  }\r\n\r\n  /**\r\n   * Watch for a store's  OL source changes\r\n   * @param store Feature store\r\n   */\r\n  private watchStore(store: FeatureStore) {\r\n    if (this.stores$$.has(store)) {\r\n      return;\r\n    }\r\n\r\n    this.onSourceChanges(store);\r\n    const olSource = store.layer.ol.getSource();\r\n    olSource.on('change', (event: OlEvent) => {\r\n      this.onSourceChanges(store);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stop watching for a store's OL source changes\r\n   * @param store Feature store\r\n   */\r\n  private unwatchStore(store: FeatureStore) {\r\n    const key = this.stores$$.get(store);\r\n    if (key !== undefined) {\r\n      unByKey(key);\r\n      this.stores$$.delete(store);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stop watching for OL source changes in all stores.\r\n   */\r\n  private unwatchAll() {\r\n    Array.from(this.stores$$.entries()).forEach((entries: [FeatureStore, string]) => {\r\n      unByKey(entries[1]);\r\n    });\r\n    this.stores$$.clear();\r\n  }\r\n\r\n  /**\r\n   * Load features from an OL source into a  store or clear the store if the source is empty\r\n   * @param features Store filtered features\r\n   * @param store Feature store\r\n   */\r\n  private onSourceChanges(store: FeatureStore) {\r\n    const olFeatures = store.layer.ol.getSource().getFeatures();\r\n    if (olFeatures.length === 0) {\r\n      store.clear();\r\n    } else {\r\n      store.setStoreOlFeatures(olFeatures);\r\n    }\r\n  }\r\n}\r\n","import OlFeature from 'ol/Feature';\r\n\r\nimport {\r\n  getEntityId,\r\n  EntityKey,\r\n  EntityStore\r\n} from '@igo2/common';\r\n\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { FeatureMotion } from './feature.enums';\r\nimport { Feature, FeatureStoreOptions } from './feature.interfaces';\r\nimport { computeOlFeaturesDiff, featureFromOl, featureToOl, moveToOlFeatures } from './feature.utils';\r\n\r\n/**\r\n * The class is a specialized version of an EntityStore that stores\r\n * features and the map layer to display them on. Synchronization\r\n * between the store and the layer is handled by strategies.\r\n */\r\nexport class FeatureStore<T extends Feature = Feature> extends EntityStore<T> {\r\n\r\n  /**\r\n   * Vector layer to display the features on\r\n   */\r\n  layer: VectorLayer;\r\n\r\n  /**\r\n   * The map the layer is bound to\r\n   */\r\n  readonly map: IgoMap;\r\n\r\n  /**\r\n   * The layer's data source\r\n   */\r\n  get source(): FeatureDataSource {\r\n    return this.layer ? this.layer.dataSource as FeatureDataSource : undefined;\r\n  }\r\n\r\n  constructor(entities: T[], options: FeatureStoreOptions) {\r\n    super(entities, options);\r\n    this.map = options.map;\r\n  }\r\n\r\n  /**\r\n   * Bind this store to a vector layer\r\n   * @param layer Vector layer\r\n   * @returns Feature store\r\n   */\r\n  bindLayer(layer: VectorLayer): FeatureStore {\r\n    this.layer = layer;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Set the layer's features and perform a motion to make them visible. Strategies\r\n   * make extensive use of that method.\r\n   * @param features Features\r\n   * @param motion Optional: The type of motion to perform\r\n   */\r\n  setLayerFeatures(\r\n    features: Feature[],\r\n    motion: FeatureMotion = FeatureMotion.Default,\r\n    viewScale?: [number, number, number, number],\r\n    areaRatio?: number,\r\n    getId?: (Feature) => EntityKey\r\n  ) {\r\n    getId = getId ? getId : getEntityId;\r\n    this.checkLayer();\r\n\r\n    const olFeatures = features\r\n      .map((feature: Feature) => featureToOl(feature, this.map.projection, getId));\r\n    this.setLayerOlFeatures(olFeatures, motion, viewScale, areaRatio);\r\n  }\r\n\r\n  /**\r\n   * Set the store's features from an array of OL features.\r\n   * @param olFeatures Ol features\r\n   */\r\n  setStoreOlFeatures(olFeatures: OlFeature[]) {\r\n    this.checkLayer();\r\n\r\n    const features = olFeatures.map((olFeature: OlFeature) => {\r\n      olFeature.set('_featureStore', this, true);\r\n      return featureFromOl(olFeature, this.layer.map.projection);\r\n    });\r\n    this.load(features as T[]);\r\n  }\r\n\r\n  /**\r\n   * Remove all features from the layer\r\n   */\r\n  clearLayer() {\r\n    this.checkLayer();\r\n    this.source.ol.clear();\r\n  }\r\n\r\n  /**\r\n   * Check wether a layer is bound or not and throw an error if not.\r\n   */\r\n  private checkLayer() {\r\n    if (this.layer === undefined) {\r\n      throw new Error('This FeatureStore is not bound to a layer.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the layer's features and perform a motion to make them visible.\r\n   * @param features Openlayers feature objects\r\n   * @param motion Optional: The type of motion to perform\r\n   */\r\n  private setLayerOlFeatures(\r\n    olFeatures: OlFeature[],\r\n    motion: FeatureMotion = FeatureMotion.Default,\r\n    viewScale?: [number, number, number, number],\r\n    areaRatio?: number\r\n  ) {\r\n    const olSource = this.layer.ol.getSource();\r\n    const diff = computeOlFeaturesDiff(olSource.getFeatures(), olFeatures);\r\n    if (diff.remove.length > 0) {\r\n      this.removeOlFeaturesFromLayer(diff.remove);\r\n    }\r\n\r\n    if (diff.add.length > 0) {\r\n      this.addOlFeaturesToLayer(diff.add);\r\n    }\r\n\r\n    if (diff.add.length > 0) {\r\n      // If features are added, do a motion toward the newly added features\r\n      moveToOlFeatures(this.map, diff.add, motion, viewScale, areaRatio);\r\n    } else if (diff.remove.length > 0) {\r\n      // Else, do a motion toward all the features\r\n      moveToOlFeatures(this.map, olFeatures, motion, viewScale, areaRatio);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add features to the the layer\r\n   * @param features Openlayers feature objects\r\n   */\r\n  private addOlFeaturesToLayer(olFeatures: OlFeature[]) {\r\n    olFeatures.forEach((olFeature: OlFeature) => {\r\n      olFeature.set('_featureStore', this, true);\r\n    });\r\n    this.source.ol.addFeatures(olFeatures);\r\n  }\r\n\r\n  /**\r\n   * Remove features from the the layer\r\n   * @param features Openlayers feature objects\r\n   */\r\n  private removeOlFeaturesFromLayer(olFeatures: OlFeature[]) {\r\n    olFeatures.forEach((olFeature: OlFeature) => {\r\n      this.source.ol.removeFeature(olFeature);\r\n    });\r\n  }\r\n\r\n}\r\n","import OlFeature from 'ol/Feature';\r\nimport OlDragBoxInteraction from 'ol/interaction/DragBox';\r\nimport { DragBoxEvent as OlDragBoxEvent } from 'ol/interaction/DragBox';\r\nimport { ListenerFunction } from 'ol/events';\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\nimport { Subscription, combineLatest } from 'rxjs';\r\nimport { map, debounceTime, skip } from 'rxjs/operators';\r\n\r\nimport { EntityKey, EntityRecord, EntityStoreStrategy } from '@igo2/common';\r\n\r\nimport { FeatureDataSource } from '../../../datasource';\r\nimport { VectorLayer } from '../../../layer';\r\nimport { IgoMap, ctrlKeyDown } from '../../../map';\r\n\r\nimport { Feature, FeatureStoreSelectionStrategyOptions } from '../feature.interfaces';\r\nimport { FeatureStore } from '../store';\r\nimport { FeatureMotion } from '../feature.enums';\r\n\r\nclass OlDragSelectInteraction extends OlDragBoxInteraction {\r\n  constructor(options) {\r\n    super(options);\r\n  }\r\n}\r\n\r\n/**\r\n * This strategy synchronizes a store and a layer selected entities.\r\n * The store <-> layer binding is a two-way binding.\r\n *\r\n * In many cases, a single strategy bound to multiple stores\r\n * will yield better results that multiple strategies with each their\r\n * own store. In the latter scenario, a click on overlapping features\r\n * would trigger the strategy of each layer and they would cancel\r\n * each other as well as move the map view around needlessly.\r\n */\r\nexport class FeatureStoreSelectionStrategy extends EntityStoreStrategy {\r\n\r\n  /**\r\n   * Listener to the map click event that allows selecting a feature\r\n   * by clicking on the map\r\n   */\r\n  private mapClickListener: ListenerFunction;\r\n\r\n  private olDragSelectInteraction: OlDragSelectInteraction;\r\n\r\n  private olDragSelectInteractionEndKey: string;\r\n\r\n  /**\r\n   * Subscription to all stores selected entities\r\n   */\r\n  private stores$$: Subscription;\r\n\r\n  /**\r\n   * The map the layers belong to\r\n   */\r\n  get map(): IgoMap { return this.options.map; }\r\n\r\n  /**\r\n   * A feature store that'll contain the selected features. It has it's own\r\n   * layer, shared by all the stores this staretgy is bound to.\r\n   */\r\n  get overlayStore(): FeatureStore { return this._overlayStore; }\r\n  private _overlayStore: FeatureStore;\r\n\r\n  constructor(protected options: FeatureStoreSelectionStrategyOptions) {\r\n    super(options);\r\n    this._overlayStore = this.createOverlayStore();\r\n  }\r\n\r\n  /**\r\n   * Bind this strategy to a store and force this strategy's\r\n   * reactivation to properly setup watchers.\r\n   * @param store Feature store\r\n   */\r\n  bindStore(store: FeatureStore) {\r\n    super.bindStore(store);\r\n    if (this.active === true) {\r\n      // Force reactivation\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unbind this strategy from a store and force this strategy's\r\n   * reactivation to properly setup watchers.\r\n   * @param store Feature store\r\n   */\r\n  unbindStore(store: FeatureStore) {\r\n    super.unbindStore(store);\r\n    if (this.active === true) {\r\n      // Force reactivation\r\n      this.activate();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unselect all entities, from all stores\r\n   */\r\n  unselectAll() {\r\n    this.stores.forEach((store: FeatureStore) => {\r\n      store.state.updateAll({selected: false});\r\n    });\r\n  }\r\n\r\n  clear() {\r\n    this.overlayStore.source.ol.clear();\r\n    this.overlayStore.clear();\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer, setup the map click lsitener and\r\n   * start watching for stores selection\r\n   * @internal\r\n   */\r\n  protected doActivate() {\r\n    this.addOverlayLayer();\r\n    this.listenToMapClick();\r\n    if (this.options.dragBox === true) {\r\n      this.addDragBoxInteraction();\r\n    }\r\n    this.watchAll();\r\n  }\r\n\r\n  /**\r\n   * Remove the overlay layer, remove the map click lsitener and\r\n   * stop watching for stores selection\r\n   * @internal\r\n   */\r\n  protected doDeactivate() {\r\n    this.unlistenToMapClick();\r\n    this.removeDragBoxInteraction();\r\n    this.unwatchAll();\r\n    this.removeOverlayLayer();\r\n  }\r\n\r\n  /**\r\n   * Create a single observable of all the stores. With a single observable,\r\n   * features can be added all at once to the overlay layer and a single\r\n   * motion can be performed. Multiple observable would have\r\n   * a cancelling effect on each other.\r\n   */\r\n  private watchAll() {\r\n    this.unwatchAll();\r\n\r\n    const stores$ = this.stores.map((store: FeatureStore) => {\r\n      return store.stateView.manyBy$((record: EntityRecord<Feature>) => {\r\n        return record.state.selected === true;\r\n      }).pipe(\r\n        map((records: EntityRecord<Feature>[]) => records.map(record => record.entity))\r\n      );\r\n    });\r\n    this.stores$$ = combineLatest(...stores$)\r\n      .pipe(\r\n        debounceTime(5),\r\n        skip(1), // Skip intial selection\r\n        map((features: Array<Feature[]>) => features.reduce((a, b) => a.concat(b)))\r\n      ).subscribe((features: Feature[]) => this.onSelectFromStore(features));\r\n  }\r\n\r\n  /**\r\n   * Stop watching for selection in all stores.\r\n   */\r\n  private unwatchAll() {\r\n    if (this.stores$$ !== undefined) {\r\n      this.stores$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a 'singleclick' listener to the map that'll allow selecting\r\n   * features by clicking on the map. The selection will be performed\r\n   * only on the layers bound to this strategy.\r\n   */\r\n  private listenToMapClick() {\r\n    this.mapClickListener = this.map.ol.on('singleclick', (event: OlMapBrowserPointerEvent) => {\r\n      this.onMapClick(event);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove the map click listener\r\n   */\r\n  private unlistenToMapClick() {\r\n    if (this.mapClickListener !== undefined) {\r\n      this.map.ol.un(\r\n        this.mapClickListener.type,\r\n        this.mapClickListener.listener\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On map click, select feature at pixel\r\n   * @param event OL MapBrowserPointerEvent\r\n   */\r\n  private onMapClick(event: OlMapBrowserPointerEvent) {\r\n    const exclusive = !ctrlKeyDown(event);\r\n    const reverse = !exclusive;\r\n    const olFeatures = event.map.getFeaturesAtPixel(event.pixel, {\r\n      hitTolerance: this.options.hitTolerance || 0,\r\n      layerFilter: (olLayer) => {\r\n        const storeOlLayer = this.stores.find((store: FeatureStore) => {\r\n          return store.layer.ol === olLayer;\r\n        });\r\n        return storeOlLayer !== undefined;\r\n      }\r\n    });\r\n    this.onSelectFromMap(olFeatures, exclusive, reverse);\r\n  }\r\n\r\n  /**\r\n   * Add a drag box interaction and, on drag box end, select features\r\n   */\r\n  private addDragBoxInteraction() {\r\n    let olDragSelectInteraction;\r\n    const olInteractions = this.map.ol.getInteractions().getArray();\r\n\r\n    // There can only be one dragbox interaction, so find the current one, if any\r\n    // Don't keep a reference to the current dragbox because we don't want\r\n    // to remove it when this startegy is deactivated\r\n    for (const olInteraction of olInteractions) {\r\n      if (olInteraction instanceof OlDragSelectInteraction) {\r\n        olDragSelectInteraction = olInteraction;\r\n        break;\r\n      }\r\n    }\r\n    // If no drag box interaction is found, create a new one and add it to the map\r\n    if (olDragSelectInteraction === undefined) {\r\n      olDragSelectInteraction = new OlDragSelectInteraction({\r\n        condition: ctrlKeyDown\r\n      });\r\n      this.map.ol.addInteraction(olDragSelectInteraction);\r\n      this.olDragSelectInteraction = olDragSelectInteraction;\r\n    }\r\n\r\n    this.olDragSelectInteractionEndKey = olDragSelectInteraction.on(\r\n      'boxend',\r\n      (event: OlMapBrowserPointerEvent) => this.onDragBoxEnd(event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove drag box interaction\r\n   */\r\n  private removeDragBoxInteraction() {\r\n    if (this.olDragSelectInteractionEndKey !== undefined) {\r\n      unByKey(this.olDragSelectInteractionEndKey);\r\n    }\r\n    if (this.olDragSelectInteraction !== undefined) {\r\n      this.map.ol.removeInteraction(this.olDragSelectInteraction);\r\n    }\r\n    this.olDragSelectInteraction = undefined;\r\n  }\r\n\r\n  /**\r\n   * On dragbox end, select features in drag box\r\n   * @param event OL MapBrowserPointerEvent\r\n   */\r\n  private onDragBoxEnd(event: OlDragBoxEvent) {\r\n    const exclusive = !ctrlKeyDown(event.mapBrowserEvent);\r\n    const extent = event.target.getGeometry().getExtent();\r\n    const olFeatures = this.stores.reduce((acc: OlFeature[], store: FeatureStore) => {\r\n      const olSource = store.layer.ol.getSource();\r\n      acc.push(...olSource.getFeaturesInExtent(extent));\r\n      return acc;\r\n    }, []);\r\n    this.onSelectFromMap(olFeatures, exclusive, false);\r\n  }\r\n\r\n  /**\r\n   * When features are selected from the store, add\r\n   * them to this startegy's overlay layer (select on map)\r\n   * @param features Store features\r\n   */\r\n  private onSelectFromStore(features: Feature[]) {\r\n    const motion = this.options ? this.options.motion : undefined;\r\n    const olOverlayFeatures = this.overlayStore.layer.ol.getSource().getFeatures();\r\n    const overlayFeaturesKeys = olOverlayFeatures.map((olFeature: OlFeature) => olFeature.getId());\r\n    const featuresKeys = features.map(this.overlayStore.getKey);\r\n\r\n    let doMotion;\r\n    if (features.length === 0) {\r\n      doMotion = false;\r\n    } else {\r\n      doMotion = overlayFeaturesKeys.length !== featuresKeys.length ||\r\n        !overlayFeaturesKeys.every((key: EntityKey) => featuresKeys.indexOf(key) >= 0);\r\n    }\r\n\r\n    this.overlayStore.setLayerFeatures(\r\n      features,\r\n      doMotion ? motion : FeatureMotion.None,\r\n      this.options.viewScale,\r\n      this.options.areaRatio,\r\n      this.options.getFeatureId\r\n    );\r\n  }\r\n\r\n  /**\r\n   * When features are selected from the map, also select them\r\n   * in their store.\r\n   * @param olFeatures OL feature objects\r\n   */\r\n  private onSelectFromMap(olFeatures: OlFeature[], exclusive: boolean, reverse: boolean) {\r\n    const groupedFeatures = this.groupFeaturesByStore(olFeatures);\r\n\r\n    this.stores.forEach((store: FeatureStore) => {\r\n      const features = groupedFeatures.get(store);\r\n      if (features === undefined && exclusive === true) {\r\n        this.unselectAllFeaturesFromStore(store);\r\n      } else if (features === undefined && exclusive === false) {\r\n        // Do nothing\r\n      } else {\r\n        this.selectFeaturesFromStore(store, features, exclusive, reverse);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Select features in store\r\n   * @param store: Feature store\r\n   * @param features Features\r\n   */\r\n  private selectFeaturesFromStore(store: FeatureStore, features: Feature[], exclusive: boolean, reverse: boolean) {\r\n    if (reverse === true) {\r\n      store.state.reverseMany(features, ['selected']);\r\n    } else {\r\n      store.state.updateMany(features, {selected: true}, exclusive);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unselect all features from store\r\n   * @param store: Feature store\r\n   */\r\n  private unselectAllFeaturesFromStore(store: FeatureStore) {\r\n    store.state.updateAll({selected: false});\r\n  }\r\n\r\n  /**\r\n   * This method returns a store -> features mapping from a list\r\n   * of OL selected features. OL features keep a reference to the store\r\n   * they are from.\r\n   * @param olFeatures: OL feature objects\r\n   * @returns Store -> features mapping\r\n   */\r\n  private groupFeaturesByStore(olFeatures: OlFeature[]): Map<FeatureStore, Feature[]> {\r\n    const groupedFeatures = new Map<FeatureStore, Feature[]>();\r\n    if (olFeatures === null || olFeatures === undefined) {\r\n      return groupedFeatures;\r\n    }\r\n\r\n    olFeatures.forEach((olFeature: OlFeature) => {\r\n      const store = olFeature.get('_featureStore');\r\n      if (store === undefined) { return; }\r\n\r\n      let features = groupedFeatures.get(store);\r\n      if (features === undefined) {\r\n        features = [];\r\n        groupedFeatures.set(store, features);\r\n      }\r\n\r\n      const feature = store.get(olFeature.getId());\r\n      if (feature !== undefined) {\r\n        features.push(feature);\r\n      }\r\n    });\r\n\r\n    return groupedFeatures;\r\n  }\r\n\r\n  /**\r\n   * Create an overlay store that'll contain the selected features.\r\n   * @returns Overlay store\r\n   */\r\n  private createOverlayStore(): FeatureStore {\r\n    const overlayLayer = this.options.layer\r\n      ? this.options.layer\r\n      : this.createOverlayLayer();\r\n    return new FeatureStore([], {map: this.map}).bindLayer(overlayLayer);\r\n  }\r\n\r\n  /**\r\n   * Create an overlay store that'll contain the selected features.\r\n   * @returns Overlay layer\r\n   */\r\n  private createOverlayLayer(): VectorLayer {\r\n    return new VectorLayer({\r\n      zIndex: 300,\r\n      source: new FeatureDataSource(),\r\n      style: undefined,\r\n      showInLayerList: false,\r\n      exportable: false,\r\n      browsable: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add the overlay store's layer to the map to display the selected\r\n   * features.\r\n   */\r\n  private addOverlayLayer() {\r\n    if (this.overlayStore.layer.map === undefined) {\r\n      this.map.addLayer(this.overlayStore.layer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the overlay layer from the map\r\n   */\r\n  private removeOverlayLayer() {\r\n    this.overlayStore.source.ol.clear();\r\n    this.map.removeLayer(this.overlayStore.layer);\r\n  }\r\n}\r\n","import * as olextent from 'ol/extent';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olstyle from 'ol/style';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlGeometryLayout from 'ol/geom/GeometryLayout';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlPoint from 'ol/geom/Point';\r\nimport OlLineString from 'ol/geom/LineString';\r\nimport OlRenderFeature from 'ol/render/Feature';\r\nimport OlFormatGeoJSON from 'ol/format/GeoJSON';\r\nimport OlLayer from 'ol/layer/Layer';\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport {\r\n  EntityKey,\r\n  getEntityId,\r\n  getEntityTitle,\r\n  getEntityRevision,\r\n  getEntityIcon,\r\n  getEntityProperty\r\n} from '@igo2/common';\r\n\r\nimport { IgoMap } from '../../map';\r\nimport { VectorLayer } from '../../layer';\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { FEATURE, FeatureMotion } from './feature.enums';\r\nimport { Feature } from './feature.interfaces';\r\nimport { FeatureStore } from './store';\r\nimport {\r\n  FeatureStoreLoadingStrategy,\r\n  FeatureStoreSelectionStrategy\r\n} from './strategies';\r\n\r\n/**\r\n * Create an Openlayers feature object out of a feature definition.\r\n * The output object has a reference to the feature id.\r\n * @param feature Feature definition\r\n * @param projectionOut Feature object projection\r\n * @returns OpenLayers feature object\r\n */\r\nexport function featureToOl(\r\n  feature: Feature,\r\n  projectionOut: string,\r\n  getId?: (Feature) => EntityKey\r\n): OlFeature {\r\n  getId = getId ? getId : getEntityId;\r\n\r\n  const olFormat = new OlFormatGeoJSON();\r\n  const olFeature = olFormat.readFeature(feature, {\r\n    dataProjection: feature.projection,\r\n    featureProjection: projectionOut\r\n  });\r\n\r\n  olFeature.setId(getId(feature));\r\n\r\n  const title = getEntityTitle(feature);\r\n  if (title !== undefined) {\r\n    olFeature.set('_title', title, true);\r\n  }\r\n\r\n  if (feature.extent !== undefined) {\r\n    olFeature.set('_extent', feature.extent, true);\r\n  }\r\n\r\n  if (feature.projection !== undefined) {\r\n    olFeature.set('_projection', feature.projection, true);\r\n  }\r\n\r\n  const mapTitle = getEntityProperty(feature, 'meta.mapTitle');\r\n  if (mapTitle !== undefined) {\r\n    olFeature.set('_mapTitle', mapTitle, true);\r\n  }\r\n\r\n  olFeature.set('_entityRevision', getEntityRevision(feature), true);\r\n\r\n  const icon = getEntityIcon(feature);\r\n  if (icon !== undefined) {\r\n    olFeature.set('_icon', icon, true);\r\n  }\r\n\r\n  if (feature.meta && feature.meta.style) {\r\n    olFeature.set('_style', feature.meta.style, true);\r\n  }\r\n\r\n  return olFeature;\r\n}\r\n\r\nexport function renderFeatureFromOl(\r\n  olRenderFeature: OlRenderFeature,\r\n  projectionIn: string,\r\n  olLayer?: OlLayer,\r\n  projectionOut = 'EPSG:4326'\r\n  ): Feature {\r\n    let geom;\r\n    let title;\r\n    let exclude;\r\n    let excludeOffline;\r\n\r\n    if (olLayer) {\r\n      title = olLayer.get('title');\r\n      if (olLayer.get('sourceOptions')) {\r\n        exclude = olLayer.get('sourceOptions').excludeAttribute;\r\n        excludeOffline = olLayer.get('sourceOptions').excludeAttributeOffline;\r\n      }\r\n    } else {\r\n      title = olRenderFeature.get('_title');\r\n    }\r\n\r\n    const olFormat = new OlFormatGeoJSON();\r\n    const properties = olRenderFeature.getProperties();\r\n    const geometryType = olRenderFeature.getType();\r\n\r\n    if (geometryType === 'Polygon') {\r\n      const ends = olRenderFeature.ends_;\r\n      geom = new OlPolygon(olRenderFeature.flatCoordinates_, OlGeometryLayout.XY, ends);\r\n    } else if (geometryType === 'Point') {\r\n      geom = new OlPoint(olRenderFeature.flatCoordinates_, OlGeometryLayout.XY);\r\n    } else if (geometryType === 'LineString') {\r\n      geom = new OlLineString(olRenderFeature.flatCoordinates_, OlGeometryLayout.XY);\r\n    }\r\n\r\n    const geometry = olFormat.writeGeometryObject(geom, {\r\n      dataProjection: projectionOut,\r\n      featureProjection: projectionIn\r\n    });\r\n\r\n    const id = olRenderFeature.getId() ? olRenderFeature.getId() : uuid();\r\n    const mapTitle = olRenderFeature.get('_mapTitle');\r\n\r\n    return {\r\n      type: FEATURE,\r\n      projection: projectionOut,\r\n      extent: olRenderFeature.getExtent(),\r\n      meta: {\r\n        id,\r\n        title: title ? title : mapTitle ? mapTitle : id,\r\n        mapTitle,\r\n        excludeAttribute: exclude,\r\n        excludeAttributeOffline: excludeOffline\r\n      },\r\n      properties,\r\n      geometry,\r\n      ol: olRenderFeature\r\n    };\r\n  }\r\n/**\r\n * Create a feature object out of an OL feature\r\n * The output object has a reference to the feature id.\r\n * @param olFeature OL Feature\r\n * @param projectionIn OL feature projection\r\n * @param olLayer OL Layer\r\n * @param projectionOut Feature projection\r\n * @returns Feature\r\n */\r\nexport function featureFromOl(\r\n  olFeature: OlFeature,\r\n  projectionIn: string,\r\n  olLayer?: OlLayer,\r\n  projectionOut = 'EPSG:4326'\r\n): Feature {\r\n  let title;\r\n  let exclude;\r\n  let excludeOffline;\r\n  const olFormat = new OlFormatGeoJSON();\r\n\r\n  const keys = olFeature.getKeys().filter((key: string) => {\r\n    return !key.startsWith('_') && key !== 'geometry';\r\n  });\r\n  const properties = keys.reduce((acc: object, key: string) => {\r\n    acc[key] = olFeature.get(key);\r\n    return acc;\r\n  }, {});\r\n\r\n  const geometry = olFormat.writeGeometryObject(olFeature.getGeometry(), {\r\n    dataProjection: projectionOut,\r\n    featureProjection: projectionIn\r\n  });\r\n\r\n  if (olLayer) {\r\n    title = olLayer.get('title');\r\n    if (olLayer.get('sourceOptions')) {\r\n      exclude = olLayer.get('sourceOptions').excludeAttribute;\r\n      excludeOffline = olLayer.get('sourceOptions').excludeAttributeOffline;\r\n    }\r\n  } else {\r\n    title = olFeature.get('_title');\r\n  }\r\n  const mapTitle = olFeature.get('_mapTitle');\r\n  const id = olFeature.getId() ? olFeature.getId() : uuid();\r\n\r\n  return {\r\n    type: FEATURE,\r\n    projection: projectionOut,\r\n    extent: olFeature.get('_extent'),\r\n    meta: {\r\n      id,\r\n      title: title ? title : mapTitle ? mapTitle : id,\r\n      mapTitle,\r\n      revision: olFeature.getRevision(),\r\n      style: olFeature.get('_style'),\r\n      excludeAttribute: exclude,\r\n      excludeAttributeOffline: excludeOffline\r\n    },\r\n    properties,\r\n    geometry,\r\n    ol: olFeature\r\n  };\r\n}\r\n\r\n/**\r\n * Compute an OL feature extent in it's map projection\r\n * @param map Map\r\n * @param olFeature OL feature\r\n * @returns Extent in the map projection\r\n */\r\nexport function computeOlFeatureExtent(\r\n  map: IgoMap,\r\n  olFeature: OlFeature\r\n): [number, number, number, number] {\r\n  let olExtent = olextent.createEmpty();\r\n\r\n  const olFeatureExtent = olFeature.get('_extent');\r\n  const olFeatureProjection = olFeature.get('_projection');\r\n  if (olFeatureExtent !== undefined && olFeatureProjection !== undefined) {\r\n    olExtent = olproj.transformExtent(\r\n      olFeatureExtent,\r\n      olFeatureProjection,\r\n      map.projection\r\n    );\r\n  } else {\r\n    const olGeometry = olFeature.getGeometry();\r\n    if (olGeometry !== null) {\r\n      olExtent = olGeometry.getExtent();\r\n    }\r\n  }\r\n\r\n  return olExtent;\r\n}\r\n\r\n/**\r\n * Compute a multiple OL features extent in their map projection\r\n * @param map Map\r\n * @param olFeatures OL features\r\n * @returns Extent in the map projection\r\n */\r\nexport function computeOlFeaturesExtent(\r\n  map: IgoMap,\r\n  olFeatures: OlFeature[]\r\n): [number, number, number, number] {\r\n  const extent = olextent.createEmpty();\r\n\r\n  olFeatures.forEach((olFeature: OlFeature) => {\r\n    const featureExtent = computeOlFeatureExtent(map, olFeature);\r\n    olextent.extend(extent, featureExtent);\r\n  });\r\n\r\n  return extent;\r\n}\r\n\r\n/**\r\n * Scale an extent.\r\n * @param extent Extent\r\n * @param Scaling factors for top, right, bottom and left directions, in that order\r\n * @returns Scaled extent\r\n */\r\nexport function scaleExtent(\r\n  extent: [number, number, number, number],\r\n  scale: [number, number, number, number]\r\n): [number, number, number, number] {\r\n  const [width, height] = olextent.getSize(extent);\r\n  return [\r\n    scale[3] ? extent[0] - width * scale[3] : extent[0],\r\n    scale[2] ? extent[1] - height * scale[2] : extent[1],\r\n    scale[1] ? extent[2] + width * scale[1] : extent[2],\r\n    scale[0] ? extent[3] + height * scale[0] : extent[3]\r\n  ];\r\n}\r\n\r\n/**\r\n * Return true if features are out of view.\r\n * If features are too close to the edge, they are considered out of view.\r\n * We define the edge as 5% of the extent size.\r\n * @param map Map\r\n * @param featuresExtent The features's extent\r\n * @returns Return true if features are out of view\r\n */\r\nexport function featuresAreOutOfView(\r\n  map: IgoMap,\r\n  featuresExtent: [number, number, number, number]\r\n) {\r\n  const mapExtent = map.viewController.getExtent();\r\n  const edgeRatio = 0.05;\r\n  const scale = [-1, -1, -1, -1].map(x => x * edgeRatio);\r\n  const viewExtent = scaleExtent(mapExtent, scale as [\r\n    number,\r\n    number,\r\n    number,\r\n    number\r\n  ]);\r\n\r\n  return !olextent.containsExtent(viewExtent, featuresExtent);\r\n}\r\n\r\n/**\r\n * Return true if features are too deep into the view. This results\r\n * in features being too small.\r\n * Features are considered too small if their extent occupies less than\r\n * 1% of the map extent.\r\n * @param map Map\r\n * @param featuresExtent The features's extent\r\n * @param areaRatio The features extent to view extent acceptable ratio\r\n * @returns Return true if features are too deep in the view\r\n */\r\nexport function featuresAreTooDeepInView(\r\n  map: IgoMap,\r\n  featuresExtent: [number, number, number, number],\r\n  areaRatio?: number\r\n) {\r\n  // An area ratio of 0.004 means that the feature extent's width and height\r\n  // should be about 1/16 of the map extent's width and height\r\n  areaRatio = areaRatio ? areaRatio : 0.004;\r\n  const mapExtent = map.viewController.getExtent();\r\n  const mapExtentArea = olextent.getArea(mapExtent);\r\n  const featuresExtentArea = olextent.getArea(featuresExtent);\r\n\r\n  if (featuresExtentArea === 0 && map.viewController.getZoom() > 13) { // In case it's a point\r\n      return false;\r\n  }\r\n\r\n  return featuresExtentArea / mapExtentArea < areaRatio;\r\n}\r\n\r\n/**\r\n * Fit view to include the features extent.\r\n * By default, this method will let the features occupy about 50% of the viewport.\r\n * @param map Map\r\n * @param olFeatures OL features\r\n * @param motion To motion to the new map view\r\n * @param scale If this is defined, the original view will be scaled\r\n *  by that factor before any logic is applied.\r\n */\r\nexport function moveToOlFeatures(\r\n  map: IgoMap,\r\n  olFeatures: OlFeature[],\r\n  motion: FeatureMotion = FeatureMotion.Default,\r\n  scale?: [number, number, number, number],\r\n  areaRatio?: number\r\n) {\r\n  const featuresExtent = computeOlFeaturesExtent(map, olFeatures);\r\n  let viewExtent = featuresExtent;\r\n  if (scale !== undefined) {\r\n    viewExtent = scaleExtent(viewExtent, scale);\r\n  }\r\n\r\n  if (motion === FeatureMotion.Zoom) {\r\n    map.viewController.zoomToExtent(viewExtent);\r\n  } else if (motion === FeatureMotion.Move) {\r\n    map.viewController.moveToExtent(viewExtent);\r\n  } else if (motion === FeatureMotion.Default) {\r\n    if (\r\n      featuresAreOutOfView(map, featuresExtent) ||\r\n      featuresAreTooDeepInView(map, featuresExtent, areaRatio)\r\n    ) {\r\n      map.viewController.zoomToExtent(viewExtent);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Hide an OL feature\r\n * @param olFeature OL feature\r\n */\r\nexport function hideOlFeature(olFeature: OlFeature) {\r\n  olFeature.setStyle(new olstyle.Style({}));\r\n}\r\n\r\n/**\r\n * Try to bind a layer to a store if none is bound already.\r\n * The layer will also be added to the store's map.\r\n * If no layer is given to that function, a basic one will be created.\r\n * @param store The store to bind the layer\r\n * @param layer An optional VectorLayer\r\n */\r\nexport function tryBindStoreLayer(store: FeatureStore, layer?: VectorLayer) {\r\n  if (store.layer !== undefined) {\r\n    if (store.layer.map === undefined) {\r\n      store.map.addLayer(store.layer);\r\n    }\r\n    return;\r\n  }\r\n\r\n  layer = layer\r\n    ? layer\r\n    : new VectorLayer({\r\n        source: new FeatureDataSource()\r\n      });\r\n  store.bindLayer(layer);\r\n  if (store.layer.map === undefined) {\r\n    store.map.addLayer(store.layer);\r\n  }\r\n}\r\n\r\n/**\r\n * Try to add a loading strategy to a store and activate it.\r\n * If no strategy is given to that function, a basic one will be created.\r\n * @param store The store to bind the loading strategy\r\n * @param strategy An optional loading strategy\r\n */\r\nexport function tryAddLoadingStrategy(\r\n  store: FeatureStore,\r\n  strategy?: FeatureStoreLoadingStrategy\r\n) {\r\n  if (store.getStrategyOfType(FeatureStoreLoadingStrategy) !== undefined) {\r\n    store.activateStrategyOfType(FeatureStoreLoadingStrategy);\r\n    return;\r\n  }\r\n\r\n  strategy = strategy ? strategy : new FeatureStoreLoadingStrategy({});\r\n  store.addStrategy(strategy);\r\n  strategy.activate();\r\n}\r\n\r\n/**\r\n * Try to add a selection strategy to a store and activate it.\r\n * If no strategy is given to that function, a basic one will be created.\r\n * @param store The store to bind the selection strategy\r\n * @param [strategy] An optional selection strategy\r\n */\r\nexport function tryAddSelectionStrategy(\r\n  store: FeatureStore,\r\n  strategy?: FeatureStoreSelectionStrategy\r\n) {\r\n  if (store.getStrategyOfType(FeatureStoreSelectionStrategy) !== undefined) {\r\n    store.activateStrategyOfType(FeatureStoreSelectionStrategy);\r\n    return;\r\n  }\r\n  strategy = strategy\r\n    ? strategy\r\n    : new FeatureStoreSelectionStrategy({\r\n        map: store.map\r\n      });\r\n  store.addStrategy(strategy);\r\n  strategy.activate();\r\n}\r\n\r\n/**\r\n * Compute a diff between a source array of Ol features and a target array\r\n * @param source Source array of OL features\r\n * @param starget Target array of OL features\r\n * @returns Features to add and remove\r\n */\r\nexport function computeOlFeaturesDiff(\r\n  source: OlFeature[],\r\n  target: OlFeature[]\r\n): {\r\n  add: OlFeature[];\r\n  remove: OlFeature;\r\n} {\r\n  const olFeaturesMap = new Map();\r\n  target.forEach((olFeature: OlFeature) => {\r\n    olFeaturesMap.set(olFeature.getId(), olFeature);\r\n  });\r\n\r\n  const olFeaturesToRemove = [];\r\n  source.forEach((olFeature: OlFeature) => {\r\n    const newOlFeature = olFeaturesMap.get(olFeature.getId());\r\n    if (newOlFeature === undefined) {\r\n      olFeaturesToRemove.push(olFeature);\r\n    } else if (\r\n      newOlFeature.get('_entityRevision') !== olFeature.get('_entityRevision')\r\n    ) {\r\n      olFeaturesToRemove.push(olFeature);\r\n    } else {\r\n      olFeaturesMap.delete(newOlFeature.getId());\r\n    }\r\n  });\r\n\r\n  const olFeaturesToAddIds = Array.from(olFeaturesMap.keys());\r\n  const olFeaturesToAdd = target.filter((olFeature: OlFeature) => {\r\n    return olFeaturesToAddIds.indexOf(olFeature.getId()) >= 0;\r\n  });\r\n\r\n  return {\r\n    add: olFeaturesToAdd,\r\n    remove: olFeaturesToRemove\r\n  };\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { Form, FormComponent, getEntityRevision } from '@igo2/common';\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { FEATURE } from '../shared/feature.enums';\r\nimport { Feature, FeatureMeta } from '../shared/feature.interfaces';\r\n\r\n/**\r\n * A configurable form, optionnally bound to a feature.\r\n * This component creates an entity form and, on submit,\r\n * returns a feature made out of the submitted data. It also\r\n * does things like managing the feature visibility while it's being updated\r\n * as well as disabling the selection of another feature.\r\n */\r\n@Component({\r\n  selector: 'igo-feature-form',\r\n  templateUrl: './feature-form.component.html',\r\n  styleUrls: ['./feature-form.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeatureFormComponent {\r\n\r\n  /**\r\n   * Form\r\n   */\r\n  @Input() form: Form;\r\n\r\n  /**\r\n   * Feature to update\r\n   */\r\n  @Input()\r\n  set feature(value: Feature | undefined) { this.feature$.next(value); }\r\n  get feature(): Feature | undefined { return this.feature$.value; }\r\n  readonly feature$: BehaviorSubject<Feature> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Event emitted when the form is submitted\r\n   */\r\n  @Output() submitForm = new EventEmitter<Feature>();\r\n\r\n  @ViewChild('igoForm') igoForm: FormComponent;\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Transform the form data to a feature and emit an event\r\n   * @param event Form submit event\r\n   * @internal\r\n   */\r\n  onSubmit(data: { [key: string]: any }) {\r\n    const feature = this.formDataToFeature(data);\r\n    this.submitForm.emit(feature);\r\n  }\r\n\r\n  getData(): Feature {\r\n    return this.formDataToFeature(this.igoForm.getData());\r\n  }\r\n\r\n  /**\r\n   * Transform the form data to a feature\r\n   * @param data Form data\r\n   * @returns A feature\r\n   */\r\n  private formDataToFeature(data: { [key: string]: any }): Feature {\r\n    const properties = {};\r\n    const meta = {};\r\n    if (this.feature === undefined) {\r\n      (meta as any).id = uuid();\r\n    } else {\r\n      Object.assign(properties, this.feature.properties);\r\n      Object.assign(meta, this.feature.meta, {\r\n        revision: getEntityRevision(this.feature) + 1\r\n      });\r\n    }\r\n\r\n    const propertyPrefix = 'properties.';\r\n    Object.entries(data).forEach((entry: [string, any]) => {\r\n      const [key, value] = entry;\r\n      if (key.startsWith(propertyPrefix)) {\r\n        const property = key.substr(propertyPrefix.length);\r\n        properties[property] = value;\r\n      }\r\n    });\r\n\r\n    let geometry = data.geometry;\r\n    if (geometry === undefined && this.feature !== undefined) {\r\n      geometry = this.feature.geometry;\r\n    }\r\n\r\n    return {\r\n      meta: meta as FeatureMeta,\r\n      type: FEATURE,\r\n      geometry,\r\n      projection: 'EPSG:4326',\r\n      properties\r\n    };\r\n  }\r\n}\r\n","import OlFeature from 'ol/Feature';\r\n\r\nimport {\r\n  Feature,\r\n  FeatureMotion,\r\n  featureToOl,\r\n  moveToOlFeatures\r\n} from '../../feature';\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { createOverlayLayer } from './overlay.utils';\r\n\r\n/**\r\n * This class is simply a shortcut for adding features to a map.\r\n * It does nothing more than a standard layer but it's shipped with\r\n * a defautl style based on the geometry type of the features it contains.\r\n * @todo Enhance that by using a FeatureStore and strategies.\r\n */\r\nexport class Overlay {\r\n  /**\r\n   * The map to add the layer to\r\n   */\r\n  private map: IgoMap;\r\n\r\n  /**\r\n   * Overlay layer\r\n   */\r\n  private layer: VectorLayer;\r\n\r\n  /**\r\n   * Overlay layer's data source\r\n   */\r\n  get dataSource(): FeatureDataSource {\r\n    return this.layer.dataSource as FeatureDataSource;\r\n  }\r\n\r\n  constructor(map?: IgoMap) {\r\n    this.layer = createOverlayLayer();\r\n    this.setMap(map);\r\n  }\r\n\r\n  /**\r\n   * Bind this to a map and add the overlay layer to that map\r\n   * @param map Map\r\n   */\r\n  setMap(map: IgoMap) {\r\n    if (map === undefined) {\r\n      if (this.map !== undefined) {\r\n        this.map.ol.removeLayer(this.layer.ol);\r\n      }\r\n    } else {\r\n      map.ol.addLayer(this.layer.ol);\r\n    }\r\n    this.map = map;\r\n  }\r\n\r\n  /**\r\n   * Set the overlay features and, optionally, move to them\r\n   * @param features Features\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  setFeatures(\r\n    features: Feature[],\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    this.clear();\r\n    this.addFeatures(features, motion);\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the  overlay and, optionally, move to it\r\n   * @param feature Feature\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addFeature(feature: Feature, motion: FeatureMotion = FeatureMotion.Default) {\r\n    this.addFeatures([feature], motion);\r\n  }\r\n\r\n  /**\r\n   * Add features to the  overlay and, optionally, move to them\r\n   * @param features Features\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addFeatures(\r\n    features: Feature[],\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    const olFeatures = [];\r\n    features.forEach((feature: Feature) => {\r\n      const olFeature = featureToOl(feature, this.map.projection);\r\n      const olGeometry = olFeature.getGeometry();\r\n      if (olGeometry === null) {\r\n        return;\r\n      }\r\n      olFeatures.push(olFeature);\r\n    });\r\n\r\n    this.addOlFeatures(olFeatures, motion);\r\n  }\r\n\r\n  /**\r\n   * Add a OpenLayers feature to the  overlay and, optionally, move to it\r\n   * @param olFeature OpenLayers Feature\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addOlFeature(\r\n    olFeature: OlFeature,\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    this.addOlFeatures([olFeature], motion);\r\n  }\r\n\r\n  /**\r\n   * Add OpenLayers features to the overlay and, optionally, move to them\r\n   * @param olFeatures OpenLayers Features\r\n   * @param motion Optional: Apply this motion to the map view\r\n   */\r\n  addOlFeatures(\r\n    olFeatures: OlFeature[],\r\n    motion: FeatureMotion = FeatureMotion.Default\r\n  ) {\r\n    this.dataSource.ol.addFeatures(olFeatures);\r\n    moveToOlFeatures(this.map, olFeatures, motion);\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay\r\n   */\r\n  clear() {\r\n    this.dataSource.ol.clear();\r\n  }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { Watcher, SubjectStatus } from '@igo2/utils';\r\nimport { Layer } from '../../layer/shared/layers';\r\n\r\nexport class LayerWatcher extends Watcher {\r\n  private loaded = 0;\r\n  private loading = 0;\r\n  private layers: Layer[] = [];\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  watch() {}\r\n\r\n  unwatch() {\r\n    this.layers.forEach(layer => this.unwatchLayer(layer), this);\r\n  }\r\n\r\n  watchLayer(layer: Layer) {\r\n    if (layer.status$ === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.layers.push(layer);\r\n\r\n    const layer$$ = layer.status$\r\n      .pipe(distinctUntilChanged())\r\n      .subscribe(status => {\r\n        if (status === SubjectStatus.Working) {\r\n          this.loading += 1;\r\n        } else if (status === SubjectStatus.Done) {\r\n          this.loaded += 1;\r\n        }\r\n\r\n        if (this.loaded >= this.loading) {\r\n          this.loading = this.loaded = 0;\r\n          this.status = SubjectStatus.Done;\r\n        } else if (this.loading > 0) {\r\n          this.status = SubjectStatus.Working;\r\n        }\r\n      });\r\n\r\n    this.subscriptions.push(layer$$);\r\n  }\r\n\r\n  unwatchLayer(layer: Layer) {\r\n    layer.status$.next(SubjectStatus.Done);\r\n    const index = this.layers.indexOf(layer);\r\n    if (index >= 0) {\r\n      const status = (layer as any).watcher.status;\r\n      if (\r\n        [SubjectStatus.Working, SubjectStatus.Waiting].indexOf(status) !== -1\r\n      ) {\r\n        this.loaded += 1;\r\n      }\r\n      this.subscriptions[index].unsubscribe();\r\n      this.subscriptions.splice(index, 1);\r\n      this.layers.splice(index, 1);\r\n      (layer as any).watcher.unwatch();\r\n    }\r\n  }\r\n}\r\n","export enum MapViewAction {\r\n  Move,\r\n  Zoom\r\n}\r\n","import * as olproj from 'ol/proj';\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { MAC } from 'ol/has';\r\n\r\nimport { MapViewState } from './map.interface';\r\nimport proj4 from 'proj4';\r\nimport { Projection } from './projection.interfaces';\r\n\r\n/**\r\n * This method extracts a coordinate tuple from a string.\r\n * @param str Any string\r\n * @param mapProjection string Map Projection\r\n * @param opts.forceNA boolean Force North America Zone\r\n * @returns object:\r\n *             lonLat: Coordinate,\r\n *             message: Message of error,\r\n *             radius: radius of the confience of coordinate,\r\n *             conf: confidence of the coordinate}\r\n */\r\nexport function stringToLonLat(\r\n  str: string,\r\n  mapProjection: string,\r\n  opts: { forceNA?: boolean } = {}\r\n): {\r\n  lonLat: [number, number] | undefined;\r\n  message: string;\r\n  radius: number | undefined;\r\n  conf: number | undefined;\r\n} {\r\n  let lonLat: [number, number];\r\n  let coordStr: string;\r\n  let negativeLon: string;\r\n  let degreesLon: string;\r\n  let minutesLon: string;\r\n  let secondsLon: string;\r\n  let directionLon: string;\r\n  let decimalLon: string;\r\n  let negativeLat: string;\r\n  let degreesLat: string;\r\n  let minutesLat: string;\r\n  let secondsLat: string;\r\n  let directionLat: string;\r\n  let decimalLat: string;\r\n  let zone: string;\r\n  let radius: string;\r\n  let conf: string;\r\n  let lon: any;\r\n  let lat: any;\r\n\r\n  const projectionPattern = '(\\\\s*;\\\\s*[\\\\d]{4,6})';\r\n  const toProjection = '4326';\r\n  let projectionStr: string;\r\n  const projectionRegex = new RegExp(projectionPattern, 'g');\r\n\r\n  const lonlatCoord = '([-+])?([\\\\d]{1,3})([,.](\\\\d+))?';\r\n  const lonLatPattern = `${lonlatCoord}[\\\\s,]+${lonlatCoord}`;\r\n  const lonLatRegex = new RegExp(`^${lonLatPattern}$`, 'g');\r\n\r\n  const dmsCoord =\r\n    '([0-9]{1,2})[:|Â°]?\\\\s*([0-9]{1,2})?[:|\\'|â²|â]?\\\\s*([0-9]{1,2}(?:.[0-9]+){0,1})?\\\\s*[\"|â³|â]?\\\\s*';\r\n  const dmsCoordPattern = `${dmsCoord}([N|S|E|W|O]),?\\\\s*${dmsCoord}([N|S|E|W|O])`;\r\n  const dmsRegex = new RegExp(`^${dmsCoordPattern}`, 'gi');\r\n\r\n  const patternUtm =\r\n    '(UTM)-?(\\\\d{1,2})[\\\\s,]*(\\\\d+[.,]?\\\\d+)[\\\\s,]+(\\\\d+[.,]?\\\\d+)';\r\n  const utmRegex = new RegExp(`^${patternUtm}`, 'gi');\r\n\r\n  const patternMtm =\r\n    '(MTM)-?(\\\\d{1,2})[\\\\s,]*(\\\\d+[.,]?\\\\d+)[\\\\s,]+(\\\\d+[.,]?\\\\d+)';\r\n  const mtmRegex = new RegExp(`^${patternMtm}`, 'gi');\r\n\r\n  const ddCoord = '([-+])?(\\\\d{1,3})[,.](\\\\d+)';\r\n  const patternDd = `${ddCoord}\\\\s*[,]?\\\\s*${ddCoord}`;\r\n  const ddRegex = new RegExp(`^${patternDd}`, 'g');\r\n\r\n  const dmdCoord =\r\n    '([-+])?(\\\\d{1,3})[\\\\s,.]{1}(\\\\d{1,2})[\\\\s,.]{1}(\\\\d{1,2})[.,]?(\\\\d{1,5})?';\r\n  const patternDmd = `${dmdCoord}\\\\s*[,.]?\\\\s*${dmdCoord}`;\r\n  const dmdRegex = new RegExp(`^${patternDmd}`, 'g');\r\n\r\n  // tslint:disable:max-line-length\r\n  const patternBELL =\r\n    'LAT\\\\s*[\\\\s:]*\\\\s*([-+])?(\\\\d{1,2})[\\\\s.,]?(\\\\d+)?[\\\\s.,]?\\\\s*(\\\\d{1,2}([.,]\\\\d+)?)?\\\\s*(N|S|E|W)?\\\\s*LONG\\\\s*[\\\\s:]*\\\\s*([-+])?(\\\\d{1,3})[\\\\s.,]?(\\\\d+)?[\\\\s.,]?\\\\s*(\\\\d{1,2}([.,]\\\\d+)?)?\\\\s*(N|S|E|W)?\\\\s*UNC\\\\s*[\\\\s:]?\\\\s*(\\\\d+)\\\\s*CONF\\\\s*[\\\\s:]?\\\\s*(\\\\d{1,3})';\r\n  const bellRegex = new RegExp(`^${patternBELL}?`, 'gi');\r\n\r\n  const mmCoord = '([-+]?\\\\d+)[,.]?(\\\\d+)?';\r\n  const mmPattern = `${mmCoord}[\\\\s,]+${mmCoord}`;\r\n  const mmRegex = new RegExp(`^${mmPattern}$`, 'g');\r\n\r\n  let isXYCoords = false;\r\n\r\n  str = str.toLocaleUpperCase().trim();\r\n\r\n  // Extract projection\r\n  if (projectionRegex.test(str)) {\r\n    [coordStr, projectionStr] = str.split(';').map(s => s.trim());\r\n  } else {\r\n    coordStr = str;\r\n  }\r\n  if (lonLatRegex.test(coordStr)) {\r\n    [\r\n      ,\r\n      negativeLon,\r\n      lon,\r\n      ,\r\n      decimalLon,\r\n      negativeLat,\r\n      lat,\r\n      ,\r\n      decimalLat\r\n    ] = coordStr.match(lonLatPattern);\r\n\r\n    lon = parseFloat((negativeLon ? negativeLon : '') + lon + '.' + decimalLon);\r\n    lat = parseFloat((negativeLat ? negativeLat : '') + lat + '.' + decimalLat);\r\n  } else if (dmsRegex.test(coordStr)) {\r\n    [\r\n      ,\r\n      degreesLon,\r\n      minutesLon,\r\n      secondsLon,\r\n      directionLon,\r\n      degreesLat,\r\n      minutesLat,\r\n      secondsLat,\r\n      directionLat\r\n    ] = coordStr.match(dmsCoordPattern);\r\n\r\n    if (directionLon === 'S' || directionLon === 'N') {\r\n      degreesLon = [degreesLat, (degreesLat = degreesLon)][0];\r\n      minutesLon = [minutesLat, (minutesLat = minutesLon)][0];\r\n      secondsLon = [secondsLat, (secondsLat = secondsLon)][0];\r\n      directionLon = [directionLat, (directionLat = directionLon)][0];\r\n    }\r\n\r\n    lon = convertDMSToDD(\r\n      parseFloat(degreesLon),\r\n      parseFloat(minutesLon),\r\n      parseFloat(secondsLon),\r\n      directionLon\r\n    );\r\n    lat = convertDMSToDD(\r\n      parseFloat(degreesLat),\r\n      parseFloat(minutesLat),\r\n      parseFloat(secondsLat),\r\n      directionLat\r\n    );\r\n  } else if (utmRegex.test(coordStr)) {\r\n    isXYCoords = true;\r\n    [, , zone, lon, lat] = coordStr.match(patternUtm);\r\n    const epsgUtm = Number(zone) < 10 ? `EPSG:3260${zone}` : `EPSG:326${zone}`;\r\n    [lon, lat] = olproj.transform(\r\n      [parseFloat(lon), parseFloat(lat)],\r\n      epsgUtm,\r\n      'EPSG:4326'\r\n    );\r\n  } else if (mtmRegex.test(coordStr)) {\r\n    isXYCoords = true;\r\n    [, , zone, lon, lat] = coordStr.match(patternMtm);\r\n    const epsgMtm =\r\n      Number(zone) < 10 ? `EPSG:3218${zone}` : `EPSG:321${80 + Number(zone)}`;\r\n    [lon, lat] = olproj.transform(\r\n      [parseFloat(lon), parseFloat(lat)],\r\n      epsgMtm,\r\n      'EPSG:4326'\r\n    );\r\n  } else if (dmdRegex.test(coordStr)) {\r\n    [\r\n      ,\r\n      negativeLon,\r\n      degreesLon,\r\n      minutesLon,\r\n      secondsLon,\r\n      decimalLon,\r\n      negativeLat,\r\n      degreesLat,\r\n      minutesLat,\r\n      secondsLat,\r\n      decimalLat\r\n    ] = coordStr.match(patternDmd);\r\n\r\n    lon = convertDMSToDD(\r\n      parseFloat((negativeLon ? negativeLon : '') + degreesLon),\r\n      parseFloat(minutesLon),\r\n      parseFloat(secondsLon),\r\n      directionLon\r\n    );\r\n    lat = convertDMSToDD(\r\n      parseFloat((negativeLat ? negativeLat : '') + degreesLat),\r\n      parseFloat(minutesLat),\r\n      parseFloat(secondsLat),\r\n      directionLat\r\n    );\r\n  } else if (ddRegex.test(coordStr)) {\r\n    [\r\n      ,\r\n      negativeLon,\r\n      degreesLon,\r\n      decimalLon,\r\n      negativeLat,\r\n      degreesLat,\r\n      decimalLat\r\n    ] = coordStr.match(patternDd);\r\n\r\n    lon = convertDMSToDD(\r\n      parseFloat((negativeLon ? negativeLon : '') + degreesLon),\r\n      parseFloat(minutesLon),\r\n      parseFloat(secondsLon),\r\n      directionLon\r\n    );\r\n    lat = convertDMSToDD(\r\n      parseFloat((negativeLat ? negativeLat : '') + degreesLat),\r\n      parseFloat(minutesLat),\r\n      parseFloat(secondsLat),\r\n      directionLat\r\n    );\r\n  } else if (bellRegex.test(coordStr)) {\r\n    [\r\n      ,\r\n      negativeLat,\r\n      degreesLat,\r\n      minutesLat,\r\n      secondsLat,\r\n      ,\r\n      directionLat,\r\n      negativeLon,\r\n      degreesLon,\r\n      minutesLon,\r\n      secondsLon,\r\n      ,\r\n      directionLon,\r\n      radius,\r\n      conf\r\n    ] = coordStr.match(patternBELL);\r\n\r\n    // Set default value for North America\r\n    if (!directionLon) {\r\n      directionLon = 'W';\r\n    }\r\n\r\n    // Check if real minutes or decimals\r\n    if (minutesLon && minutesLon.length > 2) {\r\n      lon = parseFloat(\r\n        (negativeLon ? negativeLon : '') + degreesLon + '.' + minutesLon\r\n      );\r\n    } else {\r\n      lon = convertDMSToDD(\r\n        parseFloat(degreesLon),\r\n        parseFloat(minutesLon),\r\n        parseFloat(secondsLon),\r\n        directionLon\r\n      );\r\n    }\r\n\r\n    if (minutesLat && minutesLat.length > 2) {\r\n      lat = parseFloat(\r\n        (negativeLat ? negativeLat : '') + degreesLat + '.' + minutesLat\r\n      );\r\n    } else {\r\n      lat = convertDMSToDD(\r\n        parseFloat(degreesLat),\r\n        parseFloat(minutesLat),\r\n        parseFloat(secondsLat),\r\n        directionLat\r\n      );\r\n    }\r\n  } else if (mmRegex.test(coordStr)) {\r\n    isXYCoords = true;\r\n    [, lon, decimalLon, lat, decimalLat] = coordStr.match(mmPattern);\r\n\r\n    if (decimalLon) {\r\n      lon = parseFloat(lon + '.' + decimalLon);\r\n    }\r\n\r\n    if (decimalLat) {\r\n      lat = parseFloat(lat + '.' + decimalLat);\r\n    }\r\n  } else {\r\n    return {\r\n      lonLat: undefined,\r\n      message: '',\r\n      radius: undefined,\r\n      conf: undefined\r\n    };\r\n  }\r\n\r\n  if (opts.forceNA && !isXYCoords) {\r\n    // Set a negative coordinate for North America zone\r\n    if (lon > 0 && lat > 0) {\r\n      if (lon > lat) {\r\n        lon = -lon;\r\n      } else {\r\n        lat = -lat;\r\n      }\r\n    }\r\n\r\n    // Reverse coordinate to respect lonLat convention\r\n    if (lon > lat) {\r\n      lon = [lat, (lat = lon)][0];\r\n    }\r\n  }\r\n\r\n  lonLat = [Number(lon), Number(lat)] as [number, number];\r\n\r\n  // Reproject the coordinate if projection parameter have been set and coord is not 4326\r\n  if (\r\n    (projectionStr !== undefined && projectionStr !== toProjection) ||\r\n    (lonLat[0] > 180 || lonLat[0] < -180) ||\r\n    (lonLat[1] > 90 || lonLat[1] < -90)\r\n  ) {\r\n    const source = projectionStr ? 'EPSG:' + projectionStr : mapProjection;\r\n    const dest = 'EPSG:' + toProjection;\r\n\r\n    try {\r\n      lonLat = olproj.transform(lonLat, source, dest);\r\n    } catch (e) {\r\n      return {\r\n        lonLat: undefined,\r\n        message: 'Projection ' + source + ' not supported',\r\n        radius: undefined,\r\n        conf: undefined\r\n      };\r\n    }\r\n  }\r\n\r\n  return {\r\n    lonLat,\r\n    message: '',\r\n    radius: radius ? parseInt(radius, 10) : undefined,\r\n    conf: conf ? parseInt(conf, 10) : undefined\r\n  };\r\n}\r\n\r\n/**\r\n * Convert degrees minutes seconds to dd\r\n * @param degrees Degrees\r\n * @param minutes Minutes\r\n * @param seconds Seconds\r\n * @param direction Direction\r\n */\r\nfunction convertDMSToDD(\r\n  degrees: number,\r\n  minutes: number,\r\n  seconds: number,\r\n  direction: string\r\n) {\r\n  minutes = minutes || 0;\r\n  seconds = seconds || 0;\r\n  let dd = degrees + minutes / 60 + seconds / 3600;\r\n\r\n  if (direction === 'S' || direction === 'W') {\r\n    dd = -dd;\r\n  } // Don't do anything for N or E\r\n  return dd;\r\n}\r\n\r\n/**\r\n * Return true of two view states are equal.\r\n * @param state1 View state\r\n * @param state2 View state\r\n * @returns True if the view states are equal\r\n */\r\nexport function viewStatesAreEqual(\r\n  state1: MapViewState,\r\n  state2: MapViewState\r\n): boolean {\r\n  if (state1 === undefined || state2 === undefined) {\r\n    return false;\r\n  }\r\n\r\n  const tolerance = 1 / 10000;\r\n  return (\r\n    state1.zoom === state2.zoom &&\r\n    Math.trunc(state1.center[0] / tolerance) ===\r\n      Math.trunc(state2.center[0] / tolerance) &&\r\n    Math.trunc(state1.center[1] / tolerance) ===\r\n      Math.trunc(state2.center[1] / tolerance)\r\n  );\r\n}\r\n\r\n/**\r\n * Format the scale to a human readable text\r\n * @param Scale of the map\r\n * @returns Human readable scale text\r\n */\r\nexport function formatScale(scale) {\r\n  scale = Math.round(scale);\r\n  if (scale < 10000) {\r\n    return scale + '';\r\n  }\r\n\r\n  scale = Math.round(scale / 1000);\r\n  if (scale < 1000) {\r\n    return scale + 'K';\r\n  }\r\n\r\n  scale = Math.round(scale / 1000);\r\n  return scale + 'M';\r\n}\r\n\r\n/**\r\n * Return the resolution from a scale denom\r\n * @param scale Scale denom\r\n * @param dpi DPI\r\n * @returns Resolution\r\n */\r\nexport function getResolutionFromScale(\r\n  scale: number,\r\n  dpi: number = 96\r\n): number {\r\n  const inchesPerMeter = 39.3701;\r\n  return scale / (inchesPerMeter * dpi);\r\n}\r\n\r\n/**\r\n * Return the resolution from a scale denom\r\n * @param Scale denom\r\n * @returns Resolution\r\n */\r\nexport function getScaleFromResolution(\r\n  resolution: number,\r\n  unit: string = 'm',\r\n  dpi: number = 96\r\n): number {\r\n  const inchesPerMeter = 39.3701;\r\n  return resolution * olproj.METERS_PER_UNIT[unit] * inchesPerMeter * dpi;\r\n}\r\n\r\n/**\r\n * Returns true if the CTRL key is pushed during an Ol MapBrowserPointerEvent\r\n * @param event OL MapBrowserPointerEvent\r\n * @returns Whether the CTRL key is pushed\r\n */\r\nexport function ctrlKeyDown(event: OlMapBrowserPointerEvent): boolean {\r\n  const originalEvent = event.originalEvent;\r\n  return (\r\n    !originalEvent.altKey &&\r\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\r\n    !originalEvent.shiftKey\r\n  );\r\n}\r\n\r\nexport function roundCoordTo(coord: [number, number], decimal: number = 3) {\r\n  return [coord[0].toFixed(decimal), coord[1].toFixed(decimal)];\r\n}\r\n\r\n/**\r\n * Returns an array of converted coordinates.\r\n * Conversion is done for every configured projections\r\n * and for the current UTM zone and MTM zone.\r\n * @param lonLat [number, number] array of the coordinate to transform.\r\n * @param projections  Projection[] Array of destination projection.\r\n * @returns Returns an array of converted coordinates.\r\n */\r\nexport function lonLatConversion(\r\n  lonLat: [number, number],\r\n  projections: Projection[]\r\n): {\r\n  code: string;\r\n  alias: string;\r\n  coord: [number, number];\r\n  igo2CoordFormat: string;\r\n}[] {\r\n  const rawCoord3857 = olproj.transform(lonLat, 'EPSG:4326', 'EPSG:3857');\r\n  const convertedLonLat = [\r\n    {\r\n      code: 'EPSG:3857',\r\n      alias: 'Web mercator',\r\n      coord: rawCoord3857,\r\n      igo2CoordFormat: `${roundCoordTo(rawCoord3857).join(', ')} ; 3857`\r\n    }\r\n  ];\r\n\r\n  // detect the current utm zone.\r\n  const utmZone = utmZoneFromLonLat(lonLat);\r\n  const epsgUtm = utmZone < 10 ? `EPSG:3260${utmZone}` : `EPSG:326${utmZone}`;\r\n  const utmName = `UTM-${utmZone}`;\r\n  const rawCoordUtm = olproj.transform(lonLat, 'EPSG:4326', epsgUtm);\r\n  convertedLonLat.push({\r\n    code: epsgUtm,\r\n    alias: 'UTM',\r\n    coord: rawCoordUtm,\r\n    igo2CoordFormat: `${utmName} ${roundCoordTo(rawCoordUtm).join(', ')}`\r\n  });\r\n\r\n  // detect the current mtm zone.\r\n  const mtmZone = mtmZoneFromLonLat(lonLat);\r\n  if (mtmZone) {\r\n    const epsgMtm =\r\n      mtmZone < 10 ? `EPSG:3218${mtmZone}` : `EPSG:321${80 + mtmZone}`;\r\n    const mtmName = `MTM-${mtmZone}`;\r\n    const rawCoordMtm = olproj.transform(lonLat, 'EPSG:4326', epsgMtm);\r\n    convertedLonLat.push({\r\n      code: epsgMtm,\r\n      alias: 'MTM',\r\n      coord: rawCoordMtm,\r\n      igo2CoordFormat: `${mtmName} ${roundCoordTo(rawCoordMtm).join(', ')}`\r\n    });\r\n  }\r\n\r\n  projections.forEach(projection => {\r\n    const rawCoord = olproj.transform(lonLat, 'EPSG:4326', projection.code);\r\n    const numericEpsgCode = projection.code.split(':')[1];\r\n    convertedLonLat.push({\r\n      code: projection.code,\r\n      alias: projection.alias || projection.code,\r\n      coord: rawCoord,\r\n      igo2CoordFormat: `${roundCoordTo(rawCoord).join(\r\n        ', '\r\n      )} ; ${numericEpsgCode}`\r\n    });\r\n  });\r\n\r\n  return convertedLonLat;\r\n}\r\n\r\n/**\r\n * Detect the current utm zone of the lon/lat coordinate.\r\n * @param lonLat [number, number] array of the coordinate to detect the UTM zone.\r\n * @returns number The UTM zone.\r\n */\r\nexport function utmZoneFromLonLat(lonLat: [number, number]) {\r\n  return Math.ceil((lonLat[0] + 180) / 6);\r\n}\r\n\r\n/**\r\n * Detect the current mtm zone of the lon/lat coordinate.\r\n * @param lonLat [number, number] array of the coordinate to detect the MTM zone.\r\n * @returns number The MTM zone. Undefined if outside of the mtm application zone.\r\n */\r\nexport function mtmZoneFromLonLat(lonLat: [number, number]) {\r\n  const long = lonLat[0];\r\n  let mtmZone;\r\n  if (long < -51 && long > -54) {\r\n    mtmZone = 1;\r\n  }\r\n  if (long < -54 && long > -57) {\r\n    mtmZone = 2;\r\n  }\r\n  if (long < -57 && long > -60) {\r\n    mtmZone = 3;\r\n  }\r\n  if (long < -60 && long > -63) {\r\n    mtmZone = 4;\r\n  }\r\n  if (long < -63 && long > -66) {\r\n    mtmZone = 5;\r\n  }\r\n  if (long < -66 && long > -69) {\r\n    mtmZone = 6;\r\n  }\r\n  if (long < -69 && long > -72) {\r\n    mtmZone = 7;\r\n  }\r\n  if (long < -72 && long > -75) {\r\n    mtmZone = 8;\r\n  }\r\n  if (long < -75 && long > -78) {\r\n    mtmZone = 9;\r\n  }\r\n  if (long < -78 && long > -81) {\r\n    mtmZone = 10;\r\n  }\r\n  return mtmZone;\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\n/**\r\n * Base map controller\r\n */\r\nexport class MapController {\r\n\r\n  /**\r\n   * OL Map\r\n   */\r\n  protected olMap: OlMap;\r\n\r\n  /**\r\n   * Array of observer keys\r\n   */\r\n  protected observerKeys: string[] = [];\r\n\r\n  /**\r\n   * Return the OL map this controller is bound to\r\n   * @returns OL Map\r\n   */\r\n  getOlMap(): OlMap {\r\n    return this.olMap;\r\n  }\r\n\r\n  /**\r\n   * Add or remove this controller to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap !== undefined && this.getOlMap() !== undefined) {\r\n      throw new Error('This controller is already bound to a map.');\r\n    }\r\n\r\n    if (olMap === undefined) {\r\n      this.teardownObservers();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n  }\r\n\r\n  /**\r\n   * Teardown any observers\r\n   */\r\n  teardownObservers() {\r\n    this.observerKeys.forEach((key: string) => unByKey(key));\r\n    this.observerKeys = [];\r\n  }\r\n\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlMapEvent from 'ol/MapEvent';\r\n\r\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport * as oleasing from 'ol/easing';\r\nimport * as olproj from 'ol/proj';\r\nimport OlProjection from 'ol/proj/Projection';\r\nimport OlView from 'ol/View';\r\n\r\nimport { MapViewAction } from '../map.enums';\r\nimport { MapExtent, MapViewState } from '../map.interface';\r\nimport { getScaleFromResolution, viewStatesAreEqual } from '../map.utils';\r\nimport { MapController } from './controller';\r\n\r\nexport interface MapViewControllerOptions {\r\n  stateHistory: boolean;\r\n}\r\n\r\n/**\r\n * Controller to handle map view interactions\r\n */\r\nexport class MapViewController extends MapController {\r\n  /**\r\n   * Observable of the current resolution\r\n   */\r\n  resolution$ = new BehaviorSubject<number>(undefined);\r\n\r\n  /**\r\n   * Observable of the current state\r\n   */\r\n  state$ = new BehaviorSubject<MapViewState>(undefined);\r\n\r\n  /**\r\n   * View Padding\r\n   */\r\n  padding = [0, 0, 0, 0];\r\n\r\n  /**\r\n   * Max zoom after set extent\r\n   */\r\n  maxZoomOnExtent = 19;\r\n\r\n  /**\r\n   * Extent stream\r\n   */\r\n  private extent$ = new Subject<{ extent: MapExtent; action: MapViewAction }>();\r\n\r\n  /**\r\n   * Subscription to the movement stream\r\n   */\r\n  private extent$$: Subscription;\r\n\r\n  /**\r\n   * History of states\r\n   */\r\n  private states: MapViewState[] = [];\r\n\r\n  /**\r\n   * Current state index\r\n   */\r\n  private stateIndex: number = 0;\r\n\r\n  /**\r\n   * Whether the view controller should keep the view's state history\r\n   */\r\n  get stateHistory(): boolean {\r\n    return this.options ? this.options.stateHistory === true : false;\r\n  }\r\n\r\n  /**\r\n   * OL View\r\n   */\r\n  get olView(): OlView {\r\n    return this.olMap.getView();\r\n  }\r\n\r\n  constructor(private options?: MapViewControllerOptions) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Add or remove this controller to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    super.setOlMap(olMap);\r\n    this.setupObservers();\r\n  }\r\n\r\n  /**\r\n   * Observe move moveend and subscribe to the extent stream\r\n   */\r\n  setupObservers() {\r\n    if (this.stateHistory === true) {\r\n      this.observerKeys.push(\r\n        this.olMap.on('moveend', (event: OlMapEvent) => this.onMoveEnd(event))\r\n      );\r\n    }\r\n\r\n    this.extent$$ = this.extent$\r\n      .pipe(debounceTime(25))\r\n      .subscribe((value: { extent: MapExtent; action: MapViewAction }) => {\r\n        this.setExtent(value.extent, value.action);\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Teardown any observers\r\n   */\r\n  teardownObservers() {\r\n    super.teardownObservers();\r\n    if (this.extent$$ !== undefined) {\r\n      this.extent$$.unsubscribe();\r\n      this.extent$$ = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the view's OL projection\r\n   * @returns OL projection\r\n   */\r\n  getOlProjection(): OlProjection {\r\n    return this.olView.getProjection();\r\n  }\r\n\r\n  /**\r\n   * Get the current map view center\r\n   * @param projection Output projection\r\n   * @returns Center\r\n   */\r\n  getCenter(projection?: string | OlProjection): [number, number] {\r\n    let center = this.olView.getCenter();\r\n    if (projection && center) {\r\n      center = olproj.transform(center, this.getOlProjection(), projection);\r\n    }\r\n    return center;\r\n  }\r\n\r\n  /**\r\n   * Get the current view extent\r\n   * @param projection Output projection\r\n   * @returns Extent\r\n   */\r\n  getExtent(projection?: string | OlProjection): MapExtent {\r\n    let extent = this.olView.calculateExtent(this.olMap.getSize());\r\n    if (projection && extent) {\r\n      extent = olproj.transformExtent(\r\n        extent,\r\n        this.getOlProjection(),\r\n        projection\r\n      );\r\n    }\r\n    return extent;\r\n  }\r\n\r\n  /**\r\n   * Get the current scale\r\n   * @param dpi Dot per inches\r\n   * @returns View scale\r\n   */\r\n  getScale(dpi = 96) {\r\n    return getScaleFromResolution(\r\n      this.getResolution(),\r\n      this.getOlProjection().getUnits(),\r\n      dpi\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get the current resolution\r\n   * @returns Projection denominator\r\n   */\r\n  getResolution(): number {\r\n    return this.olView.getResolution();\r\n  }\r\n\r\n  /**\r\n   * Get the current zoom level\r\n   * @returns Zoom level\r\n   */\r\n  getZoom(): number {\r\n    return Math.round(this.olView.getZoom());\r\n  }\r\n\r\n  /**\r\n   * Zoom in\r\n   */\r\n  zoomIn() {\r\n    this.zoomTo(this.olView.getZoom() + 1);\r\n  }\r\n\r\n  /**\r\n   * Zoom out\r\n   */\r\n  zoomOut() {\r\n    this.zoomTo(this.olView.getZoom() - 1);\r\n  }\r\n\r\n  /**\r\n   * Zoom to specific zoom level\r\n   * @param zoom Zoom level\r\n   */\r\n  zoomTo(zoom: number) {\r\n    this.olView.cancelAnimations();\r\n    this.olView.animate({\r\n      zoom,\r\n      duration: 250,\r\n      easing: oleasing.easeOut\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Move to extent after a short delay (100ms) unless\r\n   * a new movement gets registered in the meantime.\r\n   * @param extent Extent to move to\r\n   */\r\n  moveToExtent(extent: [number, number, number, number]) {\r\n    this.extent$.next({ extent, action: MapViewAction.Move });\r\n  }\r\n\r\n  /**\r\n   * Zoom to extent after a short delay (100ms) unless\r\n   * a new movement gets registered in the meantime.\r\n   * @param extent Extent to zoom to\r\n   */\r\n  zoomToExtent(extent: [number, number, number, number]) {\r\n    this.extent$.next({ extent, action: MapViewAction.Zoom });\r\n  }\r\n\r\n  /**\r\n   * Return the current view rotation\r\n   * @returns Rotation angle in degrees\r\n   */\r\n  getRotation(): number {\r\n    return this.olView.getRotation();\r\n  }\r\n\r\n  /**\r\n   * Reset the view rotation to 0\r\n   */\r\n  resetRotation() {\r\n    this.olView.animate({ rotation: 0 });\r\n  }\r\n\r\n  /**\r\n   * Whether the view has a previous state\r\n   * @returns True if the view has a previous state\r\n   */\r\n  hasPreviousState(): boolean {\r\n    return this.states.length > 1 && this.stateIndex > 0;\r\n  }\r\n\r\n  /**\r\n   * Whether the view has a next state\r\n   * @returns True if the view has a next state\r\n   */\r\n  hasNextState(): boolean {\r\n    return this.states.length > 1 && this.stateIndex < this.states.length - 1;\r\n  }\r\n\r\n  /**\r\n   * Restore the previous view state\r\n   */\r\n  previousState() {\r\n    if (this.hasPreviousState()) {\r\n      this.setStateIndex(this.stateIndex - 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Restore the next view state\r\n   */\r\n  nextState() {\r\n    if (this.hasNextState()) {\r\n      this.setStateIndex(this.stateIndex + 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the state history\r\n   */\r\n  clearStateHistory() {\r\n    this.states = [];\r\n    this.stateIndex = 0;\r\n  }\r\n\r\n  /**\r\n   * Update the the view to it's intial state\r\n   */\r\n  setInitialState() {\r\n    if (this.states.length > 0) {\r\n      this.setStateIndex(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move to the extent retrieved from the stream\r\n   * @param extent Extent\r\n   * @param action Either zoom or move\r\n   * @param animation With or without animation to the target extent.\r\n   */\r\n  private setExtent(\r\n    extent: MapExtent,\r\n    action: MapViewAction,\r\n    animation: boolean = true\r\n  ) {\r\n    const olView = this.olView;\r\n    olView.cancelAnimations();\r\n    const duration = animation ? 500 : 0;\r\n    const zoom = olView.getZoom();\r\n\r\n    const fromCenter = olView.getCenter();\r\n    const toCenter = [\r\n      extent[0] + (extent[2] - extent[0]) / 2,\r\n      extent[1] + (extent[3] - extent[1]) / 2\r\n    ];\r\n    const distCenter = Math.sqrt(\r\n      Math.pow(fromCenter[0] - toCenter[0], 2) +\r\n        Math.pow(fromCenter[1] - toCenter[1], 2)\r\n    );\r\n    const fromExtent = olView.calculateExtent();\r\n    const fromSize = Math.sqrt(\r\n      Math.pow(fromExtent[2] - fromExtent[0], 2) +\r\n        Math.pow(fromExtent[3] - fromExtent[1], 2)\r\n    );\r\n    const toSize = Math.sqrt(\r\n      Math.pow(extent[2] - extent[0], 2) + Math.pow(extent[3] - extent[1], 2)\r\n    );\r\n    const moySize = (toSize + fromSize) / 2;\r\n    const xSize = distCenter / moySize;\r\n\r\n    const maxZoom =\r\n      action === MapViewAction.Move || zoom > this.maxZoomOnExtent\r\n        ? zoom\r\n        : this.maxZoomOnExtent;\r\n\r\n    olView.fit(extent, {\r\n      maxZoom,\r\n      padding: this.padding,\r\n      duration: xSize > 4 ? 0 : duration\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set the view state index\r\n   * @param index State index\r\n   */\r\n  private setStateIndex(index: number) {\r\n    this.stateIndex = index;\r\n    this.setState(this.states[index]);\r\n  }\r\n\r\n  /**\r\n   * Set the view state\r\n   * @param state View state\r\n   */\r\n  private setState(state: MapViewState) {\r\n    this.olView.animate({\r\n      resolution: state.resolution,\r\n      center: state.center,\r\n      duration: 0\r\n    });\r\n  }\r\n\r\n  /**\r\n   * On move end, get the view state and record it.\r\n   * @param event Map event\r\n   */\r\n  private onMoveEnd(event: OlMapEvent) {\r\n    const resolution = this.getResolution();\r\n    if (this.resolution$.value !== resolution) {\r\n      this.resolution$.next(resolution);\r\n    }\r\n\r\n    const state = {\r\n      resolution,\r\n      center: this.getCenter(),\r\n      zoom: this.getZoom()\r\n    };\r\n\r\n    if (this.stateHistory === true) {\r\n      const stateIndex = this.stateIndex;\r\n      const stateAtIndex =\r\n        this.states.length === 0 ? undefined : this.states[stateIndex];\r\n      if (!viewStatesAreEqual(state, stateAtIndex)) {\r\n        this.states = this.states.slice(0, stateIndex + 1).concat([state]);\r\n        this.stateIndex = this.states.length - 1;\r\n      }\r\n    }\r\n\r\n    this.state$.next(state);\r\n  }\r\n}\r\n","import olMap from 'ol/Map';\r\nimport olView from 'ol/View';\r\nimport olFeature from 'ol/Feature';\r\nimport olGeolocation from 'ol/Geolocation';\r\nimport olControlAttribution from 'ol/control/Attribution';\r\nimport olControlScaleLine from 'ol/control/ScaleLine';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olproj4 from 'ol/proj/proj4';\r\nimport OlProjection from 'ol/proj/Projection';\r\nimport * as olinteraction from 'ol/interaction';\r\nimport olCircle from 'ol/geom/Circle';\r\n\r\nimport proj4 from 'proj4';\r\nimport { BehaviorSubject, Subject, Subscription } from 'rxjs';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\n\r\nimport { Layer } from '../../layer/shared/layers';\r\nimport { Overlay } from '../../overlay/shared/overlay';\r\n\r\nimport { LayerWatcher } from '../utils/layer-watcher';\r\nimport {\r\n  MapViewOptions,\r\n  MapOptions,\r\n  MapAttributionOptions,\r\n  MapScaleLineOptions,\r\n  MapExtent\r\n} from './map.interface';\r\nimport { MapViewController } from './controllers/view';\r\nimport { FeatureDataSource } from '../../datasource/shared/datasources/feature-datasource';\r\n\r\n// TODO: This class is messy. Clearly define it's scope and the map browser's.\r\n// Move some stuff into controllers.\r\nexport class IgoMap {\r\n  public ol: olMap;\r\n  public offlineButtonToggle$ = new BehaviorSubject<boolean>(false);\r\n  public layers$ = new BehaviorSubject<Layer[]>([]);\r\n  public status$: Subject<SubjectStatus>;\r\n  public geolocation$ = new BehaviorSubject<olGeolocation>(undefined);\r\n  public geolocationFeature: olFeature;\r\n  public bufferGeom: olCircle;\r\n  public bufferFeature: olFeature;\r\n  public buffer: Overlay;\r\n  public overlay: Overlay;\r\n  public viewController: MapViewController;\r\n\r\n  public bufferDataSource: FeatureDataSource;\r\n\r\n  private layerWatcher: LayerWatcher;\r\n  private geolocation: olGeolocation;\r\n  private geolocation$$: Subscription;\r\n\r\n  private options: MapOptions;\r\n  private defaultOptions: Partial<MapOptions> = {\r\n    controls: { attribution: false }\r\n  };\r\n\r\n  get layers(): Layer[] {\r\n    return this.layers$.value;\r\n  }\r\n\r\n  get projection(): string {\r\n    return this.viewController.getOlProjection().getCode();\r\n  }\r\n\r\n  constructor(options?: MapOptions) {\r\n    this.options = Object.assign({}, this.defaultOptions, options);\r\n    this.layerWatcher = new LayerWatcher();\r\n    this.status$ = this.layerWatcher.status$;\r\n    olproj4.register(proj4);\r\n    this.init();\r\n  }\r\n\r\n  init() {\r\n    const controls = [];\r\n    if (this.options.controls) {\r\n      if (this.options.controls.attribution) {\r\n        const attributionOpt = (this.options.controls.attribution === true\r\n          ? {}\r\n          : this.options.controls.attribution) as MapAttributionOptions;\r\n        controls.push(new olControlAttribution(attributionOpt));\r\n      }\r\n      if (this.options.controls.scaleLine) {\r\n        const scaleLineOpt = (this.options.controls.scaleLine === true\r\n          ? {}\r\n          : this.options.controls.scaleLine) as MapScaleLineOptions;\r\n        controls.push(new olControlScaleLine(scaleLineOpt));\r\n      }\r\n    }\r\n    let interactions = {};\r\n    if (this.options.interactions === false) {\r\n      interactions = {\r\n        altShiftDragRotate: false,\r\n        doubleClickZoom: false,\r\n        keyboard: false,\r\n        mouseWheelZoom: false,\r\n        shiftDragZoom: false,\r\n        dragPan: false,\r\n        pinchRotate: false,\r\n        pinchZoom: false\r\n      };\r\n    }\r\n\r\n    this.ol = new olMap({\r\n      interactions: olinteraction.defaults(interactions),\r\n      controls\r\n    });\r\n\r\n    this.setView(this.options.view || {});\r\n    this.viewController = new MapViewController({\r\n      stateHistory: true\r\n    });\r\n    this.viewController.setOlMap(this.ol);\r\n    this.overlay = new Overlay(this);\r\n    this.buffer = new Overlay(this);\r\n  }\r\n\r\n  setTarget(id: string) {\r\n    this.ol.setTarget(id);\r\n    if (id !== undefined) {\r\n      this.layerWatcher.subscribe(() => {}, null);\r\n    } else {\r\n      this.layerWatcher.unsubscribe();\r\n    }\r\n  }\r\n\r\n  updateView(options: MapViewOptions) {\r\n    const currentView = this.ol.getView();\r\n    const viewOptions = Object.assign(\r\n      {\r\n        zoom: currentView.getZoom()\r\n      },\r\n      currentView.getProperties()\r\n    );\r\n\r\n    this.setView(Object.assign(viewOptions, options));\r\n    if (options.maxZoomOnExtent) {\r\n      this.viewController.maxZoomOnExtent = options.maxZoomOnExtent;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the map view\r\n   * @param options Map view options\r\n   */\r\n  setView(options: MapViewOptions) {\r\n    if (this.viewController !== undefined) {\r\n      this.viewController.clearStateHistory();\r\n    }\r\n\r\n    const view = new olView(options);\r\n    this.ol.setView(view);\r\n\r\n    this.unsubscribeGeolocate();\r\n    if (options) {\r\n      if (options.center) {\r\n        const projection = view.getProjection().getCode();\r\n        const center = olproj.fromLonLat(options.center, projection);\r\n        view.setCenter(center);\r\n      }\r\n\r\n      if (options.geolocate) {\r\n        this.geolocate(true);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Deprecated\r\n   * TODO: Move to ViewController and update every place it's used\r\n   */\r\n  getCenter(projection?: string | OlProjection): [number, number] {\r\n    return this.viewController.getCenter(projection);\r\n  }\r\n\r\n  /**\r\n   * Deprecated\r\n   * TODO: Move to ViewController and update every place it's used\r\n   */\r\n  getExtent(projection?: string | OlProjection): MapExtent {\r\n    return this.viewController.getExtent(projection);\r\n  }\r\n\r\n  // TODO: Move to ViewController and update every place it's used\r\n  getZoom(): number {\r\n    return this.viewController.getZoom();\r\n  }\r\n\r\n  changeBaseLayer(baseLayer: Layer) {\r\n    if (!baseLayer) {\r\n      return;\r\n    }\r\n\r\n    for (const bl of this.getBaseLayers()) {\r\n      bl.visible = false;\r\n    }\r\n\r\n    baseLayer.visible = true;\r\n\r\n    this.viewController.olView.setMinZoom(\r\n      baseLayer.dataSource.options.minZoom || (this.options.view || {}).minZoom\r\n    );\r\n    this.viewController.olView.setMaxZoom(\r\n      baseLayer.dataSource.options.maxZoom || (this.options.view || {}).maxZoom\r\n    );\r\n  }\r\n\r\n  getBaseLayers(): Layer[] {\r\n    return this.layers.filter((layer: Layer) => layer.baseLayer === true);\r\n  }\r\n\r\n  getLayerById(id: string): Layer {\r\n    return this.layers.find((layer: Layer) => layer.id && layer.id === id);\r\n  }\r\n\r\n  getLayerByAlias(alias: string): Layer {\r\n    return this.layers.find(\r\n      (layer: Layer) => layer.alias && layer.alias === alias\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Add a single layer\r\n   * @param layer Layer to add\r\n   * @param push DEPRECATED\r\n   */\r\n  addLayer(layer: Layer, push = true) {\r\n    this.addLayers([layer]);\r\n  }\r\n\r\n  /**\r\n   * Add many layers\r\n   * @param layers Layers to add\r\n   * @param push DEPRECATED\r\n   */\r\n  addLayers(layers: Layer[], push = true) {\r\n    let incrementArray = 0;\r\n    const addedLayers = layers\r\n      .map((layer: Layer) => this.doAddLayer(layer, incrementArray++))\r\n      .filter((layer: Layer | undefined) => layer !== undefined);\r\n    this.setLayers([].concat(this.layers, addedLayers));\r\n  }\r\n\r\n  /**\r\n   * Remove a single layer\r\n   * @param layer Layer to remove\r\n   */\r\n  removeLayer(layer: Layer) {\r\n    this.removeLayers([layer]);\r\n  }\r\n\r\n  /**\r\n   * Remove many layers\r\n   * @param layers Layers to remove\r\n   */\r\n  removeLayers(layers: Layer[]) {\r\n    const newLayers = this.layers$.value.slice(0);\r\n    const layersToRemove = [];\r\n    layers.forEach((layer: Layer) => {\r\n      const index = this.getLayerIndex(layer);\r\n      if (index >= 0) {\r\n        layersToRemove.push(layer);\r\n        newLayers.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    layersToRemove.forEach((layer: Layer) => this.doRemoveLayer(layer));\r\n    this.setLayers(newLayers);\r\n  }\r\n\r\n  /**\r\n   * Remove all layers\r\n   */\r\n  removeAllLayers() {\r\n    this.layers.forEach((layer: Layer) => this.doRemoveLayer(layer));\r\n    this.layers$.next([]);\r\n  }\r\n\r\n  raiseLayer(layer: Layer) {\r\n    const index = this.getLayerIndex(layer);\r\n    if (index > 0) {\r\n      this.moveLayer(layer, index, index - 1);\r\n    }\r\n  }\r\n\r\n  lowerLayer(layer: Layer) {\r\n    const index = this.getLayerIndex(layer);\r\n    if (index < this.layers.length - 1) {\r\n      this.moveLayer(layer, index, index + 1);\r\n    }\r\n  }\r\n\r\n  moveLayer(layer: Layer, from: number, to: number) {\r\n    const layerTo = this.layers[to];\r\n    const zIndexTo = layerTo.zIndex;\r\n    const zIndexFrom = layer.zIndex;\r\n\r\n    if (layerTo.baseLayer) {\r\n      return;\r\n    }\r\n\r\n    layer.zIndex = zIndexTo;\r\n    layerTo.zIndex = zIndexFrom;\r\n\r\n    this.layers[to] = layer;\r\n    this.layers[from] = layerTo;\r\n    this.layers$.next(this.layers.slice(0));\r\n  }\r\n\r\n  /**\r\n   * Add a layer to the OL map and start watching. If the layer is already\r\n   * added to this map, make it visible but don't add it one again.\r\n   * @param layer Layer\r\n   * @returns The layer added, if any\r\n   */\r\n  private doAddLayer(layer: Layer, length: number) {\r\n    if (layer.baseLayer && layer.visible) {\r\n      this.changeBaseLayer(layer);\r\n    }\r\n\r\n    const existingLayer = this.getLayerById(layer.id);\r\n    if (existingLayer !== undefined) {\r\n      existingLayer.visible = true;\r\n      return;\r\n    }\r\n\r\n    if (layer.zIndex === undefined || layer.zIndex === 0) {\r\n      const offset = layer.baseLayer ? 1 : 10;\r\n      layer.zIndex = this.layers.length + offset + length;\r\n    }\r\n\r\n    layer.setMap(this);\r\n    this.layerWatcher.watchLayer(layer);\r\n    this.ol.addLayer(layer.ol);\r\n\r\n    return layer;\r\n  }\r\n\r\n  /**\r\n   * Remove a layer from the OL map and stop watching\r\n   * @param layer Layer\r\n   */\r\n  private doRemoveLayer(layer: Layer) {\r\n    this.layerWatcher.unwatchLayer(layer);\r\n    this.ol.removeLayer(layer.ol);\r\n    layer.setMap(undefined);\r\n  }\r\n\r\n  /**\r\n   * Update the layers observable\r\n   * @param layers Layers\r\n   */\r\n  private setLayers(layers: Layer[]) {\r\n    this.layers$.next(this.sortLayersByZIndex(layers).slice(0));\r\n  }\r\n\r\n  /**\r\n   * Sort layers by descending zIndex\r\n   * @param layers Array of layers\r\n   * @returns The original array, sorted by zIndex\r\n   */\r\n  private sortLayersByZIndex(layers: Layer[]) {\r\n    // Sort by descending zIndex\r\n    return layers.sort(\r\n      (layer1: Layer, layer2: Layer) => layer2.zIndex - layer1.zIndex\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Get layer index in the map's inenr array of layers\r\n   * @param layer Layer\r\n   * @returns The layer index\r\n   */\r\n  private getLayerIndex(layer: Layer) {\r\n    return this.layers.findIndex((_layer: Layer) => _layer === layer);\r\n  }\r\n\r\n  // TODO: Create a GeolocationController with everything below\r\n  geolocate(track = false) {\r\n    let first = true;\r\n    if (this.geolocation$$) {\r\n      track = this.geolocation.getTracking();\r\n      this.unsubscribeGeolocate();\r\n    }\r\n    this.startGeolocation();\r\n\r\n    this.geolocation$$ = this.geolocation$.subscribe(geolocation => {\r\n      if (!geolocation) {\r\n        return;\r\n      }\r\n      const accuracy = geolocation.getAccuracy();\r\n      if (accuracy < 10000) {\r\n        const geometry = geolocation.getAccuracyGeometry();\r\n        const extent = geometry.getExtent();\r\n        if (\r\n          this.geolocationFeature &&\r\n          this.overlay.dataSource.ol.getFeatureById(\r\n            this.geolocationFeature.getId()\r\n          )\r\n        ) {\r\n          this.overlay.dataSource.ol.removeFeature(this.geolocationFeature);\r\n          this.buffer.dataSource.ol.removeFeature(this.bufferFeature);\r\n        }\r\n        this.geolocationFeature = new olFeature({ geometry });\r\n        this.geolocationFeature.setId('geolocationFeature');\r\n        this.overlay.addOlFeature(this.geolocationFeature);\r\n\r\n        if (this.ol.getView().options_.buffer) {\r\n          const bufferRadius = this.ol.getView().options_.buffer.bufferRadius;\r\n          const coordinates = geolocation.getPosition();\r\n          this.bufferGeom = new olCircle(coordinates, bufferRadius);\r\n          const bufferStroke = this.ol.getView().options_.buffer.bufferStroke;\r\n          const bufferFill = this.ol.getView().options_.buffer.bufferFill;\r\n\r\n          let bufferText;\r\n          if (this.ol.getView().options_.buffer.showBufferRadius) {\r\n            bufferText = bufferRadius.toString() + 'm';\r\n          } else {\r\n            bufferText = '';\r\n          }\r\n\r\n          this.bufferFeature = new olFeature(this.bufferGeom);\r\n          this.bufferFeature.setId('bufferFeature');\r\n          this.bufferFeature.set('bufferStroke', bufferStroke);\r\n          this.bufferFeature.set('bufferFill', bufferFill);\r\n          this.bufferFeature.set('bufferText', bufferText);\r\n          this.buffer.addOlFeature(this.bufferFeature);\r\n        }\r\n        if (first) {\r\n          this.viewController.zoomToExtent(extent);\r\n        }\r\n      } else if (first) {\r\n        const view = this.ol.getView();\r\n        const coordinates = geolocation.getPosition();\r\n        view.setCenter(coordinates);\r\n        view.setZoom(14);\r\n      }\r\n      if (track) {\r\n        this.unsubscribeGeolocate();\r\n      }\r\n      first = false;\r\n    });\r\n  }\r\n\r\n  unsubscribeGeolocate() {\r\n    this.stopGeolocation();\r\n    if (this.geolocation$$) {\r\n      this.geolocation$$.unsubscribe();\r\n      this.geolocation$$ = undefined;\r\n    }\r\n  }\r\n\r\n  private startGeolocation() {\r\n    if (!this.geolocation) {\r\n      this.geolocation = new olGeolocation({\r\n        trackingOptions: {\r\n          enableHighAccuracy: true\r\n        },\r\n        projection: this.projection,\r\n        tracking: true\r\n      });\r\n\r\n      this.geolocation.on('change', evt => {\r\n        this.geolocation$.next(this.geolocation);\r\n      });\r\n    } else {\r\n      this.geolocation.setTracking(true);\r\n    }\r\n  }\r\n\r\n  private stopGeolocation() {\r\n    if (this.geolocation) {\r\n      this.geolocation.setTracking(false);\r\n    }\r\n  }\r\n\r\n  onOfflineToggle(offline: boolean) {\r\n    this.offlineButtonToggle$.next(offline);\r\n  }\r\n}\r\n","import { Directive, AfterViewInit } from '@angular/core';\r\nimport { NetworkService, ConnectionState, MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { IgoMap } from './map';\r\nimport { MapBrowserComponent } from '../map-browser/map-browser.component';\r\nimport { FeatureDataSourceOptions } from '../../datasource/shared/datasources/feature-datasource.interface';\r\nimport { XYZDataSourceOptions } from '../../datasource/shared/datasources/xyz-datasource.interface';\r\nimport { MVTDataSourceOptions } from '../../datasource/shared/datasources/mvt-datasource.interface';\r\nimport { ClusterDataSourceOptions } from '../../datasource/shared/datasources/cluster-datasource.interface';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\n@Directive({\r\n    selector: '[igoMapOffline]'\r\n  })\r\nexport class MapOfflineDirective implements AfterViewInit {\r\n\r\n  private component: MapBrowserComponent;\r\n  private offlineButtonStatus: boolean = false;\r\n  private networkState: ConnectionState = {\r\n    connection: true\r\n  };\r\n  private offlineButtonState: ConnectionState = {\r\n    connection: true\r\n  };\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    component: MapBrowserComponent,\r\n    private networkService: NetworkService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService\r\n    ) {\r\n      this.component = component;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n      this.map.offlineButtonToggle$.subscribe((offlineButtonToggle: boolean) => {\r\n        this.offlineButtonStatus = offlineButtonToggle;\r\n        const translate = this.languageService.translate;\r\n        if (this.offlineButtonStatus && this.networkState.connection) {\r\n          const message = translate.instant('igo.geo.network.offline.message');\r\n          const title = translate.instant('igo.geo.network.offline.title');\r\n          this.messageService.info(message, title);\r\n          this.offlineButtonState.connection = false;\r\n          this.changeLayer();\r\n        } else if (!this.offlineButtonStatus && !this.networkState.connection) {\r\n          const message = translate.instant('igo.geo.network.offline.message');\r\n          const title = translate.instant('igo.geo.network.offline.title');\r\n          this.messageService.info(message, title);\r\n          this.offlineButtonState.connection = false;\r\n          this.changeLayer();\r\n        } else if (!this.offlineButtonStatus && this.networkState.connection) {\r\n          let message;\r\n          let title;\r\n          const messageObs = translate.get('igo.geo.network.online.message');\r\n          const titleObs = translate.get('igo.geo.network.online.title');\r\n          messageObs.subscribe((message1: string) => {\r\n            message = message1;\r\n          });\r\n          titleObs.subscribe((title1: string) => {\r\n            title = title1;\r\n          });\r\n          this.messageService.info(message, title);\r\n          this.offlineButtonState.connection = true;\r\n          this.changeLayer();\r\n        }\r\n      });\r\n\r\n      this.networkService.currentState().subscribe((state: ConnectionState) => {\r\n        this.networkState = state;\r\n        if (!this.offlineButtonStatus) {\r\n          this.changeLayer();\r\n        }\r\n      });\r\n\r\n      this.map.layers$.subscribe((layers: Layer[]) => {\r\n        this.changeLayer();\r\n      });\r\n    }\r\n\r\n  private changeLayer() {\r\n    let sourceOptions;\r\n    const layerList = this.map.layers$.value;\r\n    layerList.forEach(layer => {\r\n      if (layer.options.sourceOptions.type === 'mvt') {\r\n        sourceOptions = (layer.options.sourceOptions as MVTDataSourceOptions);\r\n        layer.ol.getSource().clear();\r\n      } else if (layer.options.sourceOptions.type === 'xyz') {\r\n        sourceOptions = (layer.options.sourceOptions as XYZDataSourceOptions);\r\n      } else if (layer.options.sourceOptions.type === 'vector') {\r\n        sourceOptions = (layer.options.sourceOptions as FeatureDataSourceOptions);\r\n      } else if (layer.options.sourceOptions.type === 'cluster') {\r\n        sourceOptions = (layer.options.sourceOptions as ClusterDataSourceOptions);\r\n      } else {\r\n        if (this.networkState.connection === false || this.offlineButtonState.connection === false) {\r\n          layer.ol.setMaxResolution(0);\r\n          return;\r\n        } else if (this.networkState.connection === true || this.offlineButtonState.connection === true) {\r\n          layer.ol.setMaxResolution(Infinity);\r\n          return;\r\n        }\r\n      }\r\n\r\n      if (sourceOptions.pathOffline && this.networkState.connection === false ||\r\n        sourceOptions.pathOffline && this.offlineButtonState.connection === false) {\r\n          if (sourceOptions.type === 'vector' || sourceOptions.type === 'cluster') {\r\n            return;\r\n          }\r\n          layer.ol.getSource().setUrl(sourceOptions.pathOffline);\r\n      } else if (sourceOptions.pathOffline && this.networkState.connection === false ||\r\n        sourceOptions.pathOffline && this.offlineButtonState.connection === true) {\r\n          if (sourceOptions.type === 'vector' || sourceOptions.type === 'cluster') {\r\n            return;\r\n          }\r\n          layer.ol.getSource().setUrl(sourceOptions.url);\r\n      } else {\r\n        if (this.networkState.connection === false || this.offlineButtonState.connection === false) {\r\n          layer.ol.setMaxResolution(0);\r\n        } else if (this.networkState.connection === true || this.offlineButtonState.connection === true) {\r\n          layer.ol.setMaxResolution(Infinity);\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  Self,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { ListenerFunction } from 'ol/events';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\n\r\nimport { transform } from 'ol/proj';\r\nimport { MediaService } from '@igo2/core';\r\n/**\r\n * This directive return the pointer coordinate (on click or pointermove)\r\n * in [longitude, latitude], delayed by in input (pointerMoveDelay)\r\n * to avoid too many emitted values.\r\n */\r\n@Directive({\r\n  selector: '[igoPointerPosition]'\r\n})\r\nexport class PointerPositionDirective implements OnInit, OnDestroy {\r\n\r\n  private lastTimeoutRequest;\r\n\r\n  /**\r\n   * Listener to the pointer move event\r\n   */\r\n  private pointerMoveListener: ListenerFunction;\r\n\r\n  /**\r\n   * Listener to the map click event\r\n   */\r\n  private mapClickListener: ListenerFunction;\r\n\r\n  /**\r\n   * Delay before emitting an event\r\n   */\r\n  @Input() pointerPositionDelay: number = 1000;\r\n\r\n  /**\r\n   * Event emitted when the pointer move, delayed by pointerMoveDelay\r\n   */\r\n  @Output() pointerPositionCoord = new EventEmitter<[number, number]>();\r\n\r\n  /**\r\n   * IGO map\r\n   * @internal\r\n   */\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  get mapProjection(): string {\r\n    return (this.component.map as IgoMap).projection;\r\n  }\r\n\r\n  constructor(\r\n    @Self() private component: MapBrowserComponent,\r\n    private mediaService: MediaService\r\n  ) { }\r\n\r\n  /**\r\n   * Start listening to pointermove\r\n   * @internal\r\n   */\r\n  ngOnInit(): void {\r\n    this.listenToMapPointerMove();\r\n    this.listenToMapClick();\r\n  }\r\n\r\n  /**\r\n   * Stop listening to pointermove\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.unlistenToMapPointerMove();\r\n    this.unlistenToMapClick();\r\n  }\r\n\r\n  /**\r\n   * On map pointermove\r\n   */\r\n  private listenToMapPointerMove() {\r\n    this.pointerMoveListener = this.map.ol.on(\r\n      'pointermove',\r\n      (event: OlMapBrowserPointerEvent) => this.onPointerEvent(event, this.pointerPositionDelay)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * On map click\r\n   */\r\n  private listenToMapClick() {\r\n    this.mapClickListener = this.map.ol.on(\r\n      'singleclick',\r\n      (event: OlMapBrowserPointerEvent) => this.onPointerEvent(event, 0)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stop listening for map pointermove\r\n   */\r\n  private unlistenToMapPointerMove() {\r\n    this.map.ol.un(this.pointerMoveListener.type, this.pointerMoveListener.listener);\r\n    this.pointerMoveListener = undefined;\r\n  }\r\n\r\n  /**\r\n   * Stop listening for map clicks\r\n   */\r\n  private unlistenToMapClick() {\r\n    this.map.ol.un(this.mapClickListener.type, this.mapClickListener.listener);\r\n    this.mapClickListener = undefined;\r\n  }\r\n\r\n  /**\r\n   * emit delayed coordinate (longitude, latitude array) based on pointerMoveDelay or on click\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private onPointerEvent(event: OlMapBrowserPointerEvent, delay: number) {\r\n    if (event.dragging || this.mediaService.isTouchScreen()) {return; }\r\n    if (typeof this.lastTimeoutRequest !== 'undefined') { // cancel timeout when the mouse moves\r\n      clearTimeout(this.lastTimeoutRequest);\r\n    }\r\n\r\n    const lonlat = transform(event.coordinate, this.mapProjection, 'EPSG:4326');\r\n    this.lastTimeoutRequest = setTimeout(() => {\r\n      this.pointerPositionCoord.emit(lonlat);\r\n    }, delay);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  Self,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { ListenerFunction } from 'ol/events';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\n\r\nimport { transform } from 'ol/proj';\r\nimport { Subscription, BehaviorSubject, fromEvent } from 'rxjs';\r\nimport { MediaService } from '@igo2/core';\r\n/**\r\n * This directive return the pointer coordinate (on click or pointermove)\r\n * in [longitude, latitude], delayed by in input (pointerMoveDelay)\r\n * to avoid too many emitted values.\r\n * User needs to hold the key defined by pointerByKeyEventKeyCode to emit a coord.\r\n */\r\n@Directive({\r\n  selector: '[igoPointerPositionByKey]'\r\n})\r\nexport class PointerPositionByKeyDirective implements OnInit, OnDestroy {\r\n\r\n  private keyDown$$: Subscription;\r\n  private keyUp$$: Subscription;\r\n  private definedKeyIsDown$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  private lastTimeoutRequest;\r\n\r\n  /**\r\n   * Listener to the pointer move event\r\n   */\r\n  private pointerMoveListener: ListenerFunction;\r\n\r\n  /**\r\n   * Listener to the map click event\r\n   */\r\n  private mapClickListener: ListenerFunction;\r\n\r\n  /**\r\n   * Delay before emitting an event\r\n   */\r\n  @Input() pointerPositionByKeyDelay: number = 1000;\r\n\r\n  /**\r\n   * The key pressed (must be hold) to trigger the output\r\n   */\r\n  @Input() pointerPositionByKeyCode: number = 17;\r\n\r\n  /**\r\n   * Event emitted when the pointer move, delayed by pointerMoveDelay\r\n   */\r\n  @Output() pointerPositionByKeyCoord = new EventEmitter<[number, number]>();\r\n\r\n  /**\r\n   * IGO map\r\n   * @internal\r\n   */\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  get mapProjection(): string {\r\n    return (this.component.map as IgoMap).projection;\r\n  }\r\n\r\n  constructor(\r\n    @Self() private component: MapBrowserComponent,\r\n    private mediaService: MediaService\r\n  ) { }\r\n\r\n  /**\r\n   * Start listening to pointermove\r\n   * @internal\r\n   */\r\n  ngOnInit(): void {\r\n    this.listenToMapPointerMove();\r\n    this.listenToMapClick();\r\n    this.subscribeToKeyDown();\r\n    this.subscribeToKeyUp();\r\n  }\r\n\r\n  /**\r\n   * Stop listening to pointermove\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.unlistenToMapPointerMove();\r\n    this.unlistenToMapClick();\r\n    this.unsubscribeToKeyDown();\r\n    this.unsubscribeToKeyUp();\r\n  }\r\n\r\n  /**\r\n   * On map pointermove\r\n   */\r\n  private listenToMapPointerMove() {\r\n    this.pointerMoveListener = this.map.ol.on(\r\n      'pointermove',\r\n      (event: OlMapBrowserPointerEvent) => this.onPointerEvent(event, this.pointerPositionByKeyDelay)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * On map click\r\n   */\r\n  private listenToMapClick() {\r\n    this.mapClickListener = this.map.ol.on(\r\n      'singleclick',\r\n      (event: OlMapBrowserPointerEvent) => this.onPointerEvent(event, 0)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Subscribe to user defined key keyDown, hold down to activate the emit\r\n   */\r\n  private subscribeToKeyDown() {\r\n    this.unsubscribeToKeyDown();\r\n    this.keyDown$$ = fromEvent(document, 'keydown')\r\n    .subscribe((event: KeyboardEvent) => {\r\n      // On user defined key is down,\r\n      if (event.keyCode === this.pointerPositionByKeyCode) {\r\n        this.definedKeyIsDown$.next(true);\r\n        return;\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * Subscribe to user defined key keyUp, release to desactivate the emit\r\n   */\r\n  private subscribeToKeyUp() {\r\n    this.unsubscribeToKeyUp();\r\n    this.keyUp$$ = fromEvent(document, 'keyup')\r\n    .subscribe((event: KeyboardEvent) => {\r\n      // When user defined key is released,\r\n      if (event.keyCode === this.pointerPositionByKeyCode) {\r\n        this.definedKeyIsDown$.next(false);\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Stop listening for map pointermove\r\n   */\r\n  private unlistenToMapPointerMove() {\r\n    this.map.ol.un(this.pointerMoveListener.type, this.pointerMoveListener.listener);\r\n    this.pointerMoveListener = undefined;\r\n  }\r\n\r\n  /**\r\n   * Stop listening for map clicks\r\n   */\r\n  private unlistenToMapClick() {\r\n    this.map.ol.un(this.mapClickListener.type, this.mapClickListener.listener);\r\n    this.mapClickListener = undefined;\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key down\r\n   */\r\n  private unsubscribeToKeyDown() {\r\n    if (this.keyDown$$ !== undefined) {\r\n      this.keyDown$$.unsubscribe();\r\n      this.keyDown$$ = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key up\r\n   */\r\n  private unsubscribeToKeyUp() {\r\n    if (this.keyUp$$ !== undefined) {\r\n      this.keyUp$$.unsubscribe();\r\n      this.keyUp$$ = undefined;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * emit delayed coordinate (longitude, latitude array) based on pointerMoveDelay or on click\r\n   * User must hold the defined key to allow the emit.\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private onPointerEvent(event: OlMapBrowserPointerEvent, delay: number) {\r\n    if (event.dragging || this.mediaService.isTouchScreen()) {return; }\r\n    if (typeof this.lastTimeoutRequest !== 'undefined') { // cancel timeout when the mouse moves\r\n      clearTimeout(this.lastTimeoutRequest);\r\n    }\r\n\r\n    if (this.definedKeyIsDown$.value) {\r\n    const lonlat = transform(event.coordinate, this.mapProjection, 'EPSG:4326');\r\n    this.lastTimeoutRequest = setTimeout(() => {\r\n      this.pointerPositionByKeyCoord.emit(lonlat);\r\n    }, delay);\r\n  }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport proj4 from 'proj4';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olproj4 from 'ol/proj/proj4';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { Projection } from './projection.interfaces';\r\n\r\n/**\r\n * When injected, this service automatically registers and\r\n * projection defined in the application config. A custom projection\r\n * needs to be registered to be usable by OL.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectionService {\r\n\r\n  constructor(private config: ConfigService) {\r\n    const projections = this.config.getConfig('projections') || [];\r\n    projections.forEach((projection: Projection) => {\r\n      projection.alias = projection.alias ? projection.alias : projection.code;\r\n      this.registerProjection(projection);\r\n    });\r\n\r\n    // register all utm zones\r\n    for (let utmZone = 1; utmZone < 61; utmZone++) {\r\n      const code = utmZone < 10 ? `EPSG:3260${utmZone}` : `EPSG:326${utmZone}`;\r\n      const def = `+proj=utm +zone=${utmZone} +datum=WGS84 +units=m +no_defs`;\r\n      const proj: Projection = { code, def, extent : undefined};\r\n      this.registerProjection(proj);\r\n    }\r\n\r\n    // register all mtm zones\r\n    for (let mtmZone = 1; mtmZone < 11; mtmZone++) {\r\n      const code = mtmZone < 10 ? `EPSG:3218${mtmZone}` : `EPSG:321${80 + mtmZone}`;\r\n      let lon0;\r\n      if (Number(mtmZone) <= 2) {\r\n        lon0 = -50 - Number(mtmZone) * 3;\r\n      } else if (Number(mtmZone) >= 12) {\r\n        lon0 = -81 - (Number(mtmZone) - 12) * 3;\r\n      } else {\r\n        lon0 = -49.5 - Number(mtmZone) * 3;\r\n      }\r\n      const def = `+proj=tmerc +lat_0=0 +lon_0=${lon0} +k=0.9999 +x_0=304800 +y_0=0 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\"`;\r\n      const proj: Projection = { code, def, extent : undefined};\r\n      this.registerProjection(proj);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Define a proj4 projection and register it in OL\r\n   * @param projection Projection\r\n   */\r\n  registerProjection(projection: Projection) {\r\n    proj4.defs(projection.code, projection.def);\r\n    olproj4.register(proj4);\r\n    if (projection.extent) {\r\n      olproj.get(projection.code).setExtent(projection.extent);\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-zoom-button',\r\n  templateUrl: './zoom-button.component.html',\r\n  styleUrls: ['./zoom-button.component.scss']\r\n})\r\nexport class ZoomButtonComponent {\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() color: string;\r\n\r\n  get zoom(): number { return this.map.viewController.getZoom(); }\r\n\r\n  get minZoom(): number { return this.map.viewController.olView.getMinZoom() || 1; }\r\n\r\n  get maxZoom(): number { return this.map.viewController.olView.getMaxZoom(); }\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-geolocate-button',\r\n  templateUrl: './geolocate-button.component.html',\r\n  styleUrls: ['./geolocate-button.component.scss']\r\n})\r\nexport class GeolocateButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input, EventEmitter, Output, AfterViewInit } from '@angular/core';\r\nimport { IgoMap } from '../shared/map';\r\nimport { Observable, BehaviorSubject, Subscription, fromEvent } from 'rxjs';\r\nimport { debounceTime, startWith } from 'rxjs/operators';\r\nimport { ConfigService } from '@igo2/core';\r\n\r\n@Component({\r\n  selector: 'igo-offline-button',\r\n  templateUrl: './offline-button.component.html',\r\n  styleUrls: ['./offline-button.component.scss']\r\n})\r\n\r\nexport class OfflineButtonComponent {\r\n\r\n  btnStyle: string = 'baseStyle';\r\n  colorOff: string = 'rgb(255,255,255)';\r\n\r\n  @Output() change = new EventEmitter<boolean>();\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  @Input() public check: boolean = false;\r\n\r\n  get checked(): boolean {\r\n    return this.check;\r\n  }\r\n\r\n  public visible = false;\r\n\r\n  constructor(\r\n    private config: ConfigService\r\n    ) {\r\n    this.visible = this.config.getConfig('offlineButton') ? true : false;\r\n  }\r\n\r\n  onToggle() {\r\n    this.check = !this.check;\r\n    if (this.check) {\r\n      this.btnStyle = 'toggleStyle';\r\n    } else {\r\n      this.btnStyle = 'baseStyle';\r\n    }\r\n  }\r\n}\r\n","import {\r\n  trigger,\r\n  state,\r\n  style,\r\n  transition,\r\n  animate,\r\n  AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\nexport function baseLayersSwitcherSlideInOut(): AnimationTriggerMetadata {\r\n  return trigger('baseLayerSwitcherState', [\r\n    state(\r\n      'collapseIcon',\r\n      style({\r\n        height: '40px',\r\n        width: '40px',\r\n        overflow: 'hidden'\r\n      })\r\n    ),\r\n    state(\r\n      'collapseMap',\r\n      style({\r\n        height: '85px',\r\n        overflow: 'hidden'\r\n      })\r\n    ),\r\n    state(\r\n      'expand',\r\n      style({\r\n        overflow: 'hidden'\r\n      })\r\n    ),\r\n    transition('collapse => expand', animate('200ms')),\r\n    transition('expand => collapse', animate('200ms'))\r\n  ]);\r\n}\r\n","import { Component, Input, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MediaService, Media } from '@igo2/core';\r\nimport { Layer } from '../../layer';\r\nimport { IgoMap } from '../shared';\r\nimport { baseLayersSwitcherSlideInOut } from './baselayers-switcher.animation';\r\n\r\n@Component({\r\n  selector: 'igo-baselayers-switcher',\r\n  templateUrl: './baselayers-switcher.component.html',\r\n  styleUrls: ['./baselayers-switcher.component.scss'],\r\n  animations: [baseLayersSwitcherSlideInOut()]\r\n})\r\nexport class BaseLayersSwitcherComponent implements AfterViewInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get useStaticIcon(): boolean {\r\n    return this._useStaticIcon;\r\n  }\r\n  set useStaticIcon(value: boolean) {\r\n    this._useStaticIcon = value;\r\n  }\r\n  private _useStaticIcon: boolean;\r\n\r\n  public _baseLayers: Layer[] = [];\r\n  public expand = false;\r\n  public showButton = true;\r\n\r\n  private layers$$: Subscription;\r\n\r\n  constructor(private mediaService: MediaService) {\r\n    const media = this.mediaService.media$.value;\r\n    if (media === Media.Mobile && this.useStaticIcon === undefined) {\r\n      this.useStaticIcon = true;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.layers$$ = this.map.layers$.subscribe(arrayLayers => {\r\n      this._baseLayers = arrayLayers.filter(l => l.baseLayer);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n\r\n  collapseOrExpand() {\r\n    if (this.baseLayers.length > 1 || this.useStaticIcon) {\r\n      this.expand = !this.expand;\r\n    } else {\r\n      this.expand = false;\r\n    }\r\n  }\r\n\r\n  get baseLayers(): Layer[] {\r\n    const mapResolution = this.map.viewController.getResolution();\r\n    const mapZoom = this.map.viewController.getZoom();\r\n\r\n    const bl = this._baseLayers.filter(l => {\r\n      return (\r\n        (!l.options.maxResolution ||\r\n          mapResolution <= l.options.maxResolution) &&\r\n        (!l.options.minResolution || mapResolution >= l.options.minResolution) &&\r\n        (!l.options.source.options.maxZoom || mapZoom <= l.options.source.options.maxZoom) &&\r\n        (!l.options.source.options.minZoom || mapZoom >= l.options.source.options.minZoom)\r\n      );\r\n    });\r\n\r\n    const blHidden = bl.filter(l => !l.visible);\r\n    return blHidden.length + 1 === bl.length ? blHidden : bl;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  AfterViewInit,\r\n  OnDestroy,\r\n  ApplicationRef\r\n} from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared';\r\nimport { LayerService } from '../../layer/shared/layer.service';\r\nimport { IgoMap } from '../shared';\r\n\r\n@Component({\r\n  selector: 'igo-mini-basemap',\r\n  templateUrl: './mini-basemap.component.html',\r\n  styleUrls: ['./mini-basemap.component.scss']\r\n})\r\nexport class MiniBaseMapComponent implements AfterViewInit, OnDestroy {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n    this.handleMoveEnd();\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get baseLayer(): Layer {\r\n    return this._baseLayer;\r\n  }\r\n  set baseLayer(value: Layer) {\r\n    this._baseLayer = value;\r\n    this.handleBaseLayerChanged(value);\r\n  }\r\n  private _baseLayer: Layer;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  @Input()\r\n  get display(): boolean {\r\n    return this._display;\r\n  }\r\n  set display(value: boolean) {\r\n    this._display = value;\r\n  }\r\n  private _display: boolean;\r\n\r\n  public basemap = new IgoMap({\r\n    controls: {},\r\n    interactions: false\r\n  });\r\n\r\n  @Input() title: string;\r\n\r\n  constructor(\r\n    private layerService: LayerService,\r\n    private appRef: ApplicationRef\r\n  ) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.map.ol.on('moveend', () => this.handleMoveEnd());\r\n    this.handleMoveEnd();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.map.ol.un('moveend', () => this.handleMoveEnd());\r\n  }\r\n\r\n  changeBaseLayer(baseLayer: Layer) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n    this.map.changeBaseLayer(baseLayer);\r\n    this.appRef.tick();\r\n  }\r\n\r\n  private handleMoveEnd() {\r\n    this.basemap.ol.setView(this.map.ol.getView());\r\n  }\r\n\r\n  private handleBaseLayerChanged(baselayer: Layer) {\r\n    this.basemap.removeAllLayers();\r\n\r\n    const options: any = Object.assign(\r\n      Object.create(baselayer.options),\r\n      baselayer.options,\r\n      {\r\n        visible: true,\r\n        baseLayer: false\r\n      }\r\n    );\r\n\r\n    const layer = this.layerService.createLayer(options);\r\n    this.basemap.addLayer(layer);\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-rotation-button',\r\n  templateUrl: './rotation-button.component.html',\r\n  styleUrls: ['./rotation-button.component.scss']\r\n})\r\nexport class RotationButtonComponent {\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get showIfNoRotation(): boolean {\r\n    return this._showIfNoRotation;\r\n  }\r\n  set showIfNoRotation(value: boolean) {\r\n    this._showIfNoRotation = value;\r\n  }\r\n  private _showIfNoRotation: boolean;\r\n\r\n  @Input()\r\n  get color(): string {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color: string;\r\n\r\n  get rotated(): boolean {\r\n    return this.map.viewController.getRotation() !== 0;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  rotationStyle(radians): {} {\r\n    const rotation = 'rotate(' + radians + 'rad)';\r\n    return {\r\n      transform: rotation\r\n    };\r\n  }\r\n}\r\n","import * as olstyle from 'ol/style';\r\nimport * as olproj from 'ol/proj';\r\n\r\nexport class EsriStyleGenerator {\r\n  public _converters: any;\r\n  public _renderers: any;\r\n\r\n  constructor() {\r\n    this._converters = {};\r\n    this._converters.esriPMS = EsriStyleGenerator._convertEsriPMS;\r\n    this._converters.esriSFS = EsriStyleGenerator._convertEsriSFS;\r\n    this._converters.esriSLS = EsriStyleGenerator._convertEsriSLS;\r\n    this._converters.esriSMS = EsriStyleGenerator._convertEsriSMS;\r\n    this._converters.esriTS = EsriStyleGenerator._convertEsriTS;\r\n    this._renderers = {};\r\n    this._renderers.uniqueValue = this._renderUniqueValue;\r\n    this._renderers.simple = this._renderSimple;\r\n    this._renderers.classBreaks = this._renderClassBreaks;\r\n  }\r\n  static _convertPointToPixel(point) {\r\n    return point / 0.75;\r\n  }\r\n  static _transformColor(color): [number, number, number, number] {\r\n    // alpha channel is different, runs from 0-255 but in ol3 from 0-1\r\n    return [color[0], color[1], color[2], color[3] / 255];\r\n  }\r\n\r\n  static _getResolutionForScale(scale, units) {\r\n    const dpi = 96;\r\n    const mpu = olproj.METERS_PER_UNIT[units];\r\n    const inchesPerMeter = 39.3701;\r\n    return parseFloat(scale) / (mpu * inchesPerMeter * dpi);\r\n  }\r\n\r\n  /* convert an Esri Text Symbol */\r\n  static _convertEsriTS(symbol) {\r\n    const rotation = EsriStyleGenerator._transformAngle(symbol.angle);\r\n    const text = symbol.text !== undefined ? symbol.text : undefined;\r\n    return new olstyle.Style({\r\n      text: new olstyle.Text({\r\n        fill: new olstyle.Fill({\r\n          color: EsriStyleGenerator._transformColor(symbol.color)\r\n        }),\r\n        font:\r\n          symbol.font.style +\r\n          ' ' +\r\n          symbol.font.weight +\r\n          ' ' +\r\n          symbol.font.size +\r\n          ' px ' +\r\n          symbol.font.family,\r\n        textBaseline: symbol.verticalAlignment,\r\n        textAlign: symbol.horizontalAlignment,\r\n        offsetX: EsriStyleGenerator._convertPointToPixel(symbol.xoffset),\r\n        offsetY: EsriStyleGenerator._convertPointToPixel(symbol.yoffset),\r\n        rotation,\r\n        text\r\n      })\r\n    });\r\n  }\r\n  /* convert an Esri Picture Marker Symbol */\r\n  static _convertEsriPMS(symbol) {\r\n    const src = 'data:' + symbol.contentType + ';base64, ' + symbol.imageData;\r\n    const rotation = EsriStyleGenerator._transformAngle(symbol.angle);\r\n\r\n    return new olstyle.Style({\r\n      image: new olstyle.Icon({\r\n        src,\r\n        rotation\r\n      })\r\n    });\r\n  }\r\n  /* convert an Esri Simple Fill Symbol */\r\n  static _convertEsriSFS(symbol) {\r\n    // there is no support in openlayers currently for fill patterns, so style is not interpreted\r\n    const fill = new olstyle.Fill({\r\n      color: EsriStyleGenerator._transformColor(symbol.color)\r\n    });\r\n    const stroke = symbol.outline\r\n      ? EsriStyleGenerator._convertOutline(symbol.outline)\r\n      : undefined;\r\n    return new olstyle.Style({\r\n      fill,\r\n      stroke\r\n    });\r\n  }\r\n  static _convertOutline(outline) {\r\n    let lineDash;\r\n    const color = EsriStyleGenerator._transformColor(outline.color);\r\n    if (outline.style === 'esriSLSDash') {\r\n      lineDash = [5];\r\n    } else if (outline.style === 'esriSLSDashDot') {\r\n      lineDash = [5, 5, 1, 2];\r\n    } else if (outline.style === 'esriSLSDashDotDot') {\r\n      lineDash = [5, 5, 1, 2, 1, 2];\r\n    } else if (outline.style === 'esriSLSDot') {\r\n      lineDash = [1, 2];\r\n    } else if (outline.style === 'esriSLSNull') {\r\n      // line not visible, make color fully transparent\r\n      color[3] = 0;\r\n    }\r\n    return new olstyle.Stroke({\r\n      color,\r\n      lineDash,\r\n      width: EsriStyleGenerator._convertPointToPixel(outline.width)\r\n    });\r\n  }\r\n  /* convert an Esri Simple Line Symbol */\r\n  static _convertEsriSLS(symbol) {\r\n    return new olstyle.Style({\r\n      stroke: EsriStyleGenerator._convertOutline(symbol)\r\n    });\r\n  }\r\n  static _transformAngle(angle) {\r\n    if (angle === 0 || angle === undefined) {\r\n      return undefined;\r\n    }\r\n    const normalRad = (angle * Math.PI) / 180;\r\n    const ol3Rad = -normalRad + Math.PI / 2;\r\n    if (ol3Rad < 0) {\r\n      return 2 * Math.PI + ol3Rad;\r\n    } else {\r\n      return ol3Rad;\r\n    }\r\n  }\r\n  /* convert an Esri Simple Marker Symbol */\r\n  static _convertEsriSMS(symbol) {\r\n    const fill = new olstyle.Fill({\r\n      color: EsriStyleGenerator._transformColor(symbol.color)\r\n    });\r\n    const stroke = symbol.outline\r\n      ? EsriStyleGenerator._convertOutline(symbol.outline)\r\n      : undefined;\r\n    const radius = EsriStyleGenerator._convertPointToPixel(symbol.size) / 2;\r\n    const rotation = EsriStyleGenerator._transformAngle(symbol.angle);\r\n    if (symbol.style === 'esriSMSCircle') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.Circle({\r\n          radius,\r\n          fill,\r\n          stroke\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSCross') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          radius2: 0,\r\n          angle: 0,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSDiamond') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSSquare') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          angle: Math.PI / 4,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSX') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 4,\r\n          radius,\r\n          radius2: 0,\r\n          angle: Math.PI / 4,\r\n          rotation\r\n        })\r\n      });\r\n    } else if (symbol.style === 'esriSMSTriangle') {\r\n      return new olstyle.Style({\r\n        image: new olstyle.RegularShape({\r\n          fill,\r\n          stroke,\r\n          points: 3,\r\n          radius,\r\n          angle: 0,\r\n          rotation\r\n        })\r\n      });\r\n    }\r\n  }\r\n\r\n  _convertLabelingInfo(labelingInfo, mapUnits) {\r\n    const styles = [];\r\n    for (let i = 0, ii = labelingInfo.length; i < ii; ++i) {\r\n      const labelExpression = labelingInfo[i].labelExpression;\r\n      // only limited support for label expressions\r\n      const field = labelExpression.substr(\r\n        labelExpression.indexOf('[') + 1,\r\n        labelExpression.indexOf(']') - 1\r\n      );\r\n      const symbol = labelingInfo[i].symbol;\r\n      const maxScale = labelingInfo[i].maxScale;\r\n      const minScale = labelingInfo[i].minScale;\r\n      let minResolution = null;\r\n      if (maxScale !== 0) {\r\n        minResolution = EsriStyleGenerator._getResolutionForScale(\r\n          maxScale,\r\n          mapUnits\r\n        );\r\n      }\r\n      let maxResolution = null;\r\n      if (minScale !== 0) {\r\n        maxResolution = EsriStyleGenerator._getResolutionForScale(\r\n          minScale,\r\n          mapUnits\r\n        );\r\n      }\r\n      const style = this._converters[symbol.type].call(this, symbol);\r\n      styles.push(\r\n        (() => {\r\n          return function(feature, resolution) {\r\n            let visible = true;\r\n            if (this.minResolution !== null && this.maxResolution !== null) {\r\n              visible =\r\n                resolution < this.maxResolution &&\r\n                resolution >= this.minResolution;\r\n            } else if (this.minResolution !== null) {\r\n              visible = resolution >= this.minResolution;\r\n            } else if (this.maxResolution !== null) {\r\n              visible = resolution < this.maxResolution;\r\n            }\r\n            if (visible) {\r\n              const value = feature.get(this.field);\r\n              this.style.getText().setText(value);\r\n              return [this.style];\r\n            }\r\n          };\r\n        })().bind({\r\n          minResolution,\r\n          maxResolution,\r\n          field,\r\n          style\r\n        })\r\n      );\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  _renderSimple(renderer) {\r\n    const style = this._converters[renderer.symbol.type].call(\r\n      this,\r\n      renderer.symbol\r\n    );\r\n    return (() => {\r\n      return () => {\r\n        return [style];\r\n      };\r\n    })();\r\n  }\r\n  _renderClassBreaks(renderer) {\r\n    const defaultSymbol = renderer.defaultSymbol;\r\n    const defaultStyle = this._converters[defaultSymbol.type].call(\r\n      this,\r\n      defaultSymbol\r\n    );\r\n    const field = renderer.field;\r\n    const classes = [];\r\n    for (let i = 0, ii = renderer.classBreakInfos.length; i < ii; ++i) {\r\n      const classBreakInfo = renderer.classBreakInfos[i];\r\n      let min;\r\n      if (\r\n        classBreakInfo.classMinValue === null ||\r\n        classBreakInfo.classMinValue === undefined\r\n      ) {\r\n        if (i === 0) {\r\n          min = renderer.minValue;\r\n        } else {\r\n          min = renderer.classBreakInfos[i - 1].classMaxValue;\r\n        }\r\n      } else {\r\n        min = classBreakInfo.classMinValue;\r\n      }\r\n      const max = classBreakInfo.classMaxValue;\r\n      const symbol = classBreakInfo.symbol;\r\n      const style = this._converters[symbol.type].call(this, symbol);\r\n      classes.push({ min, max, style });\r\n    }\r\n    return (() => {\r\n      return (feature) => {\r\n        const value = feature.get(field);\r\n        for (let i = 0, ii = classes.length; i < ii; ++i) {\r\n          let condition;\r\n          if (i === 0) {\r\n            condition = value >= classes[i].min && value <= classes[i].max;\r\n          } else {\r\n            condition = value > classes[i].min && value <= classes[i].max;\r\n          }\r\n          if (condition) {\r\n            return [classes[i].style];\r\n          }\r\n        }\r\n        return [defaultStyle];\r\n      };\r\n    })();\r\n  }\r\n  _renderUniqueValue(renderer) {\r\n    const defaultSymbol = renderer.defaultSymbol;\r\n    let defaultStyle = [];\r\n    if (defaultSymbol) {\r\n      defaultStyle = [\r\n        this._converters[defaultSymbol.type].call(this, defaultSymbol)\r\n      ];\r\n    }\r\n    const field = renderer.field1;\r\n    const infos = renderer.uniqueValueInfos;\r\n    const me = this;\r\n    return (() => {\r\n      const hash = {};\r\n      for (let i = 0, ii = infos.length; i < ii; ++i) {\r\n        const info = infos[i];\r\n        const symbol = info.symbol;\r\n        hash[info.value] = [me._converters[symbol.type].call(me, symbol)];\r\n      }\r\n\r\n      return (feature) => {\r\n        const style = hash[feature.get(field)];\r\n        return style ? style : defaultStyle;\r\n      };\r\n    })();\r\n  }\r\n  generateStyle(layerInfo, mapUnits) {\r\n    const drawingInfo = layerInfo.drawingInfo;\r\n    let styleFunctions = [];\r\n    const drawingInfoStyle = this._renderers[drawingInfo.renderer.type].call(\r\n      this,\r\n      drawingInfo.renderer\r\n    );\r\n    if (drawingInfoStyle !== undefined) {\r\n      styleFunctions.push(drawingInfoStyle);\r\n    }\r\n    if (layerInfo.labelingInfo) {\r\n      const labelingInfoStyleFunctions = this._convertLabelingInfo(\r\n        layerInfo.labelingInfo,\r\n        mapUnits\r\n      );\r\n      styleFunctions = styleFunctions.concat(labelingInfoStyleFunctions);\r\n    }\r\n    if (styleFunctions.length === 1) {\r\n      return styleFunctions[0];\r\n    } else {\r\n      return (() => {\r\n        return (feature, resolution) => {\r\n          let styles = [];\r\n          for (let i = 0, ii = styleFunctions.length; i < ii; ++i) {\r\n            const result = styleFunctions[i].call(null, feature, resolution);\r\n            if (result) {\r\n              styles = styles.concat(result);\r\n            }\r\n          }\r\n          return styles;\r\n        };\r\n      })();\r\n    }\r\n  }\r\n}\r\n","export enum TimeFilterType {\r\n    DATE = 'date',\r\n    TIME = 'time',\r\n    DATETIME = 'datetime',\r\n    YEAR = 'year',\r\n}\r\n\r\nexport enum TimeFilterStyle {\r\n    CALENDAR = 'calendar',\r\n    SLIDER = 'slider',\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, forkJoin, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { Cacheable } from 'ngx-cacheable';\r\n\r\nimport { WMSCapabilities, WMTSCapabilities } from 'ol/format';\r\nimport { optionsFromCapabilities } from 'ol/source/WMTS.js';\r\nimport olAttribution from 'ol/control/Attribution';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { getResolutionFromScale } from '../../map';\r\nimport { EsriStyleGenerator } from '../utils/esri-style-generator';\r\n\r\nimport {\r\n  WMTSDataSourceOptions,\r\n  WMSDataSourceOptions,\r\n  CartoDataSourceOptions,\r\n  ArcGISRestDataSourceOptions,\r\n  TileArcGISRestDataSourceOptions\r\n} from './datasources';\r\nimport {\r\n  LegendOptions,\r\n  ItemStyleOptions\r\n} from '../../layer/shared/layers/layer.interface';\r\nimport {\r\n  TimeFilterType,\r\n  TimeFilterStyle\r\n} from '../../filter/shared/time-filter.enum';\r\n\r\nexport enum TypeCapabilities {\r\n  wms = 'wms', wmts = 'wmts'\r\n}\r\n\r\nexport type TypeCapabilitiesStrings = keyof typeof TypeCapabilities;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CapabilitiesService {\r\n  private capabilitiesStore: any[] = [];\r\n  private parsers = {\r\n    wms: new WMSCapabilities(),\r\n    wmts: new WMTSCapabilities()\r\n  };\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getWMSOptions(\r\n    baseOptions: WMSDataSourceOptions\r\n  ): Observable<WMSDataSourceOptions> {\r\n    const url = baseOptions.url;\r\n    const version = (baseOptions.params as any).VERSION;\r\n\r\n    return this.getCapabilities('wms', url, version).pipe(\r\n      map((capabilities: any) => {\r\n        return capabilities\r\n          ? this.parseWMSOptions(baseOptions, capabilities)\r\n          : undefined;\r\n      })\r\n    );\r\n  }\r\n\r\n  getWMTSOptions(\r\n    baseOptions: WMTSDataSourceOptions\r\n  ): Observable<WMTSDataSourceOptions> {\r\n    const url = baseOptions.url;\r\n    const version = baseOptions.version;\r\n\r\n    const options = this.getCapabilities('wmts', url, version).pipe(\r\n      map((capabilities: any) => {\r\n        return capabilities\r\n          ? this.parseWMTSOptions(baseOptions, capabilities)\r\n          : undefined;\r\n      })\r\n    );\r\n\r\n    return options;\r\n  }\r\n\r\n  getCartoOptions(\r\n    baseOptions: CartoDataSourceOptions\r\n  ): Observable<CartoDataSourceOptions> {\r\n    const baseUrl =\r\n      'https://' +\r\n      baseOptions.account +\r\n      '.carto.com/api/v2/viz/' +\r\n      baseOptions.mapId +\r\n      '/viz.json';\r\n\r\n    return this.http\r\n      .jsonp(baseUrl, 'callback')\r\n      .pipe(\r\n        map((cartoOptions: any) =>\r\n          this.parseCartoOptions(baseOptions, cartoOptions)\r\n        )\r\n      );\r\n  }\r\n\r\n  getArcgisOptions(\r\n    baseOptions: ArcGISRestDataSourceOptions\r\n  ): Observable<ArcGISRestDataSourceOptions> {\r\n    const baseUrl = baseOptions.url + '/' + baseOptions.layer + '?f=json';\r\n    const modifiedUrl = baseOptions.url.replace('FeatureServer', 'MapServer');\r\n    const legendUrl = modifiedUrl + '/legend?f=json';\r\n    const arcgisOptions = this.http.get(baseUrl);\r\n    const legend = this.http.get(legendUrl).pipe(\r\n      map((res: any) => res),\r\n      catchError(err => {\r\n        console.log('No legend associated with this Feature Service');\r\n        return of(err);\r\n      })\r\n    );\r\n    return forkJoin([arcgisOptions, legend]).pipe(\r\n      map((res: any) => {\r\n        return this.parseArcgisOptions(baseOptions, res[0], res[1]);\r\n      })\r\n    );\r\n  }\r\n\r\n  getTileArcgisOptions(\r\n    baseOptions: TileArcGISRestDataSourceOptions\r\n  ): Observable<TileArcGISRestDataSourceOptions> {\r\n    const baseUrl = baseOptions.url + '/' + baseOptions.layer + '?f=json';\r\n    const legendUrl = baseOptions.url + '/legend?f=json';\r\n    const arcgisOptions = this.http.get(baseUrl);\r\n    const legendInfo = this.http.get(legendUrl);\r\n\r\n    return forkJoin([arcgisOptions, legendInfo]).pipe(\r\n      map((res: any) =>\r\n        this.parseTileArcgisOptions(baseOptions, res[0], res[1])\r\n      )\r\n    );\r\n  }\r\n\r\n  @Cacheable({\r\n    maxCacheCount: 20\r\n  })\r\n  getCapabilities(\r\n    service: TypeCapabilitiesStrings,\r\n    baseUrl: string,\r\n    version?: string\r\n  ): Observable<any> {\r\n    const params = new HttpParams({\r\n      fromObject: {\r\n        request: 'GetCapabilities',\r\n        service: service.toUpperCase(),\r\n        version: version || '1.3.0',\r\n        _i: 'true'\r\n      }\r\n    });\r\n\r\n    const request = this.http.get(baseUrl, {\r\n      params,\r\n      responseType: 'text'\r\n    });\r\n\r\n    return request.pipe(\r\n      map(res => {\r\n        try {\r\n          return this.parsers[service].read(res);\r\n        } catch (e) {\r\n          return undefined;\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  private parseWMSOptions(\r\n    baseOptions: WMSDataSourceOptions,\r\n    capabilities: any\r\n  ): WMSDataSourceOptions {\r\n    const layers = (baseOptions.params as any).LAYERS;\r\n    const layer = this.findDataSourceInCapabilities(\r\n      capabilities.Capability.Layer,\r\n      layers\r\n    );\r\n\r\n    if (!layer) {\r\n      return baseOptions;\r\n    }\r\n    const metadata = layer.DataURL ? layer.DataURL[0] : undefined;\r\n    const abstract = layer.Abstract ? layer.Abstract : undefined;\r\n    const keywordList = layer.KeywordList ? layer.KeywordList : undefined;\r\n    const queryable = layer.queryable;\r\n    const timeFilter = this.getTimeFilter(layer);\r\n    const timeFilterable = timeFilter && Object.keys(timeFilter).length > 0;\r\n    const legendOptions = layer.Style ? this.getStyle(layer.Style) : undefined;\r\n\r\n    const options: WMSDataSourceOptions = ObjectUtils.removeUndefined({\r\n      _layerOptionsFromCapabilities: {\r\n        title: layer.Title,\r\n        maxResolution:\r\n          getResolutionFromScale(layer.MaxScaleDenominator) || Infinity,\r\n        minResolution: getResolutionFromScale(layer.MinScaleDenominator) || 0,\r\n        metadata: {\r\n          url: metadata ? metadata.OnlineResource : undefined,\r\n          extern: metadata ? true : undefined,\r\n          abstract,\r\n          keywordList\r\n        },\r\n        legendOptions\r\n      },\r\n      queryable,\r\n      timeFilter: timeFilterable ? timeFilter : undefined,\r\n      timeFilterable: timeFilterable ? true : undefined\r\n    });\r\n\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private parseWMTSOptions(\r\n    baseOptions: WMTSDataSourceOptions,\r\n    capabilities: any\r\n  ): WMTSDataSourceOptions {\r\n    const options = optionsFromCapabilities(capabilities, baseOptions);\r\n\r\n    return Object.assign(options, baseOptions);\r\n  }\r\n\r\n  private parseCartoOptions(\r\n    baseOptions: CartoDataSourceOptions,\r\n    cartoOptions: any\r\n  ): CartoDataSourceOptions {\r\n    const layers = [];\r\n    const params = cartoOptions.layers[1].options.layer_definition;\r\n    params.layers.forEach(element => {\r\n      layers.push({\r\n        type: element.type.toLowerCase(),\r\n        options: element.options,\r\n        legend: element.legend\r\n      });\r\n    });\r\n    const options = ObjectUtils.removeUndefined({\r\n      config: {\r\n        version: params.version,\r\n        layers\r\n      }\r\n    });\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private parseArcgisOptions(\r\n    baseOptions: ArcGISRestDataSourceOptions,\r\n    arcgisOptions: any,\r\n    legend?: any\r\n  ): ArcGISRestDataSourceOptions {\r\n    const legendInfo = legend.layers ? legend : undefined;\r\n    const styleGenerator = new EsriStyleGenerator();\r\n    const units = arcgisOptions.units === 'esriMeters' ? 'm' : 'degrees';\r\n    const style = styleGenerator.generateStyle(arcgisOptions, units);\r\n    const attributions = new olAttribution({\r\n      html: arcgisOptions.copyrightText\r\n    });\r\n    let timeExtent;\r\n    let timeFilter;\r\n    if (arcgisOptions.timeInfo) {\r\n      const time = arcgisOptions.timeInfo.timeExtent;\r\n      timeExtent = time[0] + ',' + time[1];\r\n      const min = new Date();\r\n      min.setTime(time[0]);\r\n      const max = new Date();\r\n      max.setTime(time[1]);\r\n      timeFilter = {\r\n        min: min.toUTCString(),\r\n        max: max.toUTCString(),\r\n        range: true,\r\n        type: TimeFilterType.DATETIME,\r\n        style: TimeFilterStyle.CALENDAR\r\n      };\r\n    }\r\n    const params = Object.assign(\r\n      {},\r\n      {\r\n        legendInfo,\r\n        style,\r\n        timeFilter,\r\n        timeExtent,\r\n        attributions\r\n      }\r\n    );\r\n    const options = ObjectUtils.removeUndefined({\r\n      params\r\n    });\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private parseTileArcgisOptions(\r\n    baseOptions: TileArcGISRestDataSourceOptions,\r\n    arcgisOptions: any,\r\n    legend: any\r\n  ): TileArcGISRestDataSourceOptions {\r\n    const legendInfo = legend.layers ? legend : undefined;\r\n    const attributions = new olAttribution({\r\n      html: arcgisOptions.copyrightText\r\n    });\r\n    let timeExtent;\r\n    let timeFilter;\r\n    if (arcgisOptions.timeInfo) {\r\n      const time = arcgisOptions.timeInfo.timeExtent;\r\n      timeExtent = time[0] + ',' + time[1];\r\n      const min = new Date();\r\n      min.setTime(time[0]);\r\n      const max = new Date();\r\n      max.setTime(time[1]);\r\n      timeFilter = {\r\n        min: min.toUTCString(),\r\n        max: max.toUTCString(),\r\n        range: true,\r\n        type: TimeFilterType.DATETIME,\r\n        style: TimeFilterStyle.CALENDAR\r\n      };\r\n    }\r\n    const params = Object.assign(\r\n      {},\r\n      {\r\n        layers: 'show:' + baseOptions.layer,\r\n        time: timeExtent\r\n      }\r\n    );\r\n    const options = ObjectUtils.removeUndefined({\r\n      params,\r\n      legendInfo,\r\n      timeFilter,\r\n      attributions\r\n    });\r\n    return ObjectUtils.mergeDeep(options, baseOptions);\r\n  }\r\n\r\n  private findDataSourceInCapabilities(layerArray, name): any {\r\n    if (Array.isArray(layerArray)) {\r\n      let layer;\r\n      layerArray.find(value => {\r\n        layer = this.findDataSourceInCapabilities(value, name);\r\n        return layer !== undefined;\r\n      }, this);\r\n\r\n      return layer;\r\n    } else if (layerArray.Layer) {\r\n      return this.findDataSourceInCapabilities(layerArray.Layer, name);\r\n    } else {\r\n      if (layerArray.Name && layerArray.Name === name) {\r\n        return layerArray;\r\n      }\r\n      return undefined;\r\n    }\r\n  }\r\n\r\n  getTimeFilter(layer) {\r\n    let dimension;\r\n\r\n    if (layer.Dimension) {\r\n      const timeFilter: any = {};\r\n      dimension = layer.Dimension[0];\r\n\r\n      if (dimension.values) {\r\n        const minMaxDim = dimension.values.split('/');\r\n        timeFilter.min = minMaxDim[0] !== undefined ? minMaxDim[0] : undefined;\r\n        timeFilter.max = minMaxDim[1] !== undefined ? minMaxDim[1] : undefined;\r\n        timeFilter.step = minMaxDim[2] !== undefined ? minMaxDim[2] : undefined;\r\n      }\r\n\r\n      if (dimension.default) {\r\n        timeFilter.value = dimension.default;\r\n      }\r\n      return timeFilter;\r\n    }\r\n  }\r\n\r\n  getStyle(Style): LegendOptions {\r\n    const styleOptions: ItemStyleOptions[] = Style.map(style => {\r\n      return {\r\n        name: style.Name,\r\n        title: style.Title\r\n      };\r\n    })\r\n      // Handle repeat the style \"default\" in output  (MapServer or OpenLayer)\r\n      .filter(\r\n        (item, index, self) =>\r\n          self.findIndex((i: ItemStyleOptions) => i.name === item.name) ===\r\n          index\r\n      );\r\n\r\n    const legendOptions: LegendOptions = {\r\n      stylesAvailable: styleOptions\r\n    } as LegendOptions;\r\n\r\n    return legendOptions;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { CapabilitiesService } from './capabilities.service';\r\nimport { WFSService } from './datasources/wfs.service';\r\nimport {\r\n  DataSource,\r\n  OSMDataSource,\r\n  OSMDataSourceOptions,\r\n  FeatureDataSource,\r\n  FeatureDataSourceOptions,\r\n  XYZDataSource,\r\n  XYZDataSourceOptions,\r\n  WFSDataSource,\r\n  WFSDataSourceOptions,\r\n  WMTSDataSource,\r\n  WMTSDataSourceOptions,\r\n  WMSDataSource,\r\n  WMSDataSourceOptions,\r\n  CartoDataSource,\r\n  CartoDataSourceOptions,\r\n  ArcGISRestDataSource,\r\n  ArcGISRestDataSourceOptions,\r\n  TileArcGISRestDataSource,\r\n  TileArcGISRestDataSourceOptions,\r\n  WebSocketDataSource,\r\n  AnyDataSourceOptions,\r\n  MVTDataSource,\r\n  MVTDataSourceOptions,\r\n  ClusterDataSource,\r\n  ClusterDataSourceOptions\r\n} from './datasources';\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataSourceService {\r\n  public datasources$ = new BehaviorSubject<DataSource[]>([]);\r\n\r\n  constructor(\r\n    private capabilitiesService: CapabilitiesService,\r\n    private wfsDataSourceService: WFSService\r\n  ) {}\r\n\r\n  createAsyncDataSource(context: AnyDataSourceOptions): Observable<DataSource> {\r\n    if (!context.type) {\r\n      console.error(context);\r\n      throw new Error('Datasource needs a type');\r\n    }\r\n    let dataSource;\r\n    switch (context.type.toLowerCase()) {\r\n      case 'osm':\r\n        dataSource = this.createOSMDataSource(context as OSMDataSourceOptions);\r\n        break;\r\n      case 'vector':\r\n        dataSource = this.createFeatureDataSource(\r\n          context as FeatureDataSourceOptions\r\n        );\r\n        break;\r\n      case 'wfs':\r\n        dataSource = this.createWFSDataSource(context as WFSDataSourceOptions);\r\n        break;\r\n      case 'wms':\r\n        const wmsContext = context as WMSDataSourceOptions;\r\n        ObjectUtils.removeDuplicateCaseInsensitive(wmsContext.params);\r\n        dataSource = this.createWMSDataSource(wmsContext);\r\n        break;\r\n      case 'wmts':\r\n        dataSource = this.createWMTSDataSource(\r\n          context as WMTSDataSourceOptions\r\n        );\r\n        break;\r\n      case 'xyz':\r\n        dataSource = this.createXYZDataSource(context as XYZDataSourceOptions);\r\n        break;\r\n      case 'carto':\r\n        dataSource = this.createCartoDataSource(\r\n          context as CartoDataSourceOptions\r\n        );\r\n        break;\r\n      case 'arcgisrest':\r\n        dataSource = this.createArcGISRestDataSource(\r\n          context as ArcGISRestDataSourceOptions\r\n        );\r\n        break;\r\n      case 'websocket':\r\n        dataSource = this.createWebSocketDataSource(\r\n          context as FeatureDataSourceOptions\r\n        );\r\n        break;\r\n      case 'mvt':\r\n        dataSource = this.createMVTDataSource(context as MVTDataSourceOptions);\r\n        break;\r\n      case 'tilearcgisrest':\r\n        dataSource = this.createTileArcGISRestDataSource(\r\n          context as TileArcGISRestDataSourceOptions\r\n        );\r\n        break;\r\n      case 'cluster':\r\n        dataSource = this.createClusterDataSource(\r\n          context as ClusterDataSourceOptions\r\n        );\r\n        break;\r\n      default:\r\n        console.error(context);\r\n        throw new Error('Invalid datasource type');\r\n    }\r\n\r\n    this.datasources$.next(this.datasources$.value.concat([dataSource]));\r\n\r\n    return dataSource;\r\n  }\r\n\r\n  private createOSMDataSource(\r\n    context: OSMDataSourceOptions\r\n  ): Observable<OSMDataSource> {\r\n    return new Observable(d => d.next(new OSMDataSource(context)));\r\n  }\r\n\r\n  private createFeatureDataSource(\r\n    context: FeatureDataSourceOptions\r\n  ): Observable<FeatureDataSource> {\r\n    return new Observable(d => d.next(new FeatureDataSource(context)));\r\n  }\r\n\r\n  private createWebSocketDataSource(\r\n    context: FeatureDataSourceOptions\r\n  ): Observable<WebSocketDataSource> {\r\n    return new Observable(d => d.next(new WebSocketDataSource(context)));\r\n  }\r\n\r\n  private createWFSDataSource(\r\n    context: WFSDataSourceOptions\r\n  ): Observable<WFSDataSource> {\r\n    return new Observable(d =>\r\n      d.next(new WFSDataSource(context, this.wfsDataSourceService))\r\n    );\r\n  }\r\n\r\n  private createWMSDataSource(\r\n    context: WMSDataSourceOptions\r\n  ): Observable<WMSDataSource> {\r\n    if (context.optionsFromCapabilities) {\r\n      return this.capabilitiesService.getWMSOptions(context).pipe(\r\n        map((options: WMSDataSourceOptions) => {\r\n          return options\r\n            ? new WMSDataSource(options, this.wfsDataSourceService)\r\n            : undefined;\r\n        })\r\n      );\r\n    }\r\n\r\n    return new Observable(d =>\r\n      d.next(new WMSDataSource(context, this.wfsDataSourceService))\r\n    );\r\n  }\r\n\r\n  private createWMTSDataSource(\r\n    context: WMTSDataSourceOptions\r\n  ): Observable<WMTSDataSource> {\r\n    if (context.optionsFromCapabilities) {\r\n      return this.capabilitiesService.getWMTSOptions(context).pipe(\r\n        map((options: WMTSDataSourceOptions) => {\r\n          return options ? new WMTSDataSource(options) : undefined;\r\n        })\r\n      );\r\n    }\r\n\r\n    return new Observable(d => d.next(new WMTSDataSource(context)));\r\n  }\r\n\r\n  private createXYZDataSource(\r\n    context: XYZDataSourceOptions\r\n  ): Observable<XYZDataSource> {\r\n    return new Observable(d => d.next(new XYZDataSource(context)));\r\n  }\r\n\r\n  private createCartoDataSource(\r\n    context: CartoDataSourceOptions\r\n  ): Observable<CartoDataSource> {\r\n    if (context.mapId) {\r\n      return this.capabilitiesService\r\n        .getCartoOptions(context)\r\n        .pipe(\r\n          map((options: CartoDataSourceOptions) => new CartoDataSource(options))\r\n        );\r\n    }\r\n    return new Observable(d => d.next(new CartoDataSource(context)));\r\n  }\r\n\r\n  private createArcGISRestDataSource(\r\n    context: ArcGISRestDataSourceOptions\r\n  ): Observable<ArcGISRestDataSource> {\r\n    return this.capabilitiesService\r\n      .getArcgisOptions(context)\r\n      .pipe(\r\n        map(\r\n          (options: ArcGISRestDataSourceOptions) =>\r\n            new ArcGISRestDataSource(options)\r\n        )\r\n      );\r\n  }\r\n\r\n  private createTileArcGISRestDataSource(\r\n    context: TileArcGISRestDataSourceOptions\r\n  ): Observable<TileArcGISRestDataSource> {\r\n    return this.capabilitiesService\r\n      .getTileArcgisOptions(context)\r\n      .pipe(\r\n        map(\r\n          (options: TileArcGISRestDataSourceOptions) =>\r\n            new TileArcGISRestDataSource(options)\r\n        )\r\n      );\r\n  }\r\n\r\n  private createMVTDataSource(\r\n    context: MVTDataSourceOptions\r\n  ): Observable<MVTDataSource> {\r\n    return new Observable(d => d.next(new MVTDataSource(context)));\r\n  }\r\n\r\n  private createClusterDataSource(\r\n    context: ClusterDataSourceOptions\r\n  ): Observable<ClusterDataSource> {\r\n    return new Observable(d => d.next(new ClusterDataSource(context)));\r\n  }\r\n}\r\n","import { Injectable, Injector, Optional } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport stylefunction from 'ol-mapbox-style/stylefunction';\r\nimport { AuthInterceptor } from '@igo2/auth';\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport {\r\n  OSMDataSource,\r\n  FeatureDataSource,\r\n  XYZDataSource,\r\n  WFSDataSource,\r\n  WMTSDataSource,\r\n  WMSDataSource,\r\n  CartoDataSource,\r\n  ArcGISRestDataSource,\r\n  TileArcGISRestDataSource,\r\n  WebSocketDataSource,\r\n  MVTDataSource,\r\n  ClusterDataSource\r\n} from '../../datasource';\r\n\r\nimport { DataSourceService } from '../../datasource/shared/datasource.service';\r\n\r\nimport {\r\n  Layer,\r\n  ImageLayer,\r\n  ImageLayerOptions,\r\n  TileLayer,\r\n  TileLayerOptions,\r\n  VectorLayer,\r\n  VectorLayerOptions,\r\n  AnyLayerOptions,\r\n  VectorTileLayer,\r\n  VectorTileLayerOptions\r\n} from './layers';\r\n\r\nimport { StyleService } from './style.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LayerService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private styleService: StyleService,\r\n    private dataSourceService: DataSourceService,\r\n    @Optional() private authInterceptor: AuthInterceptor\r\n  ) {}\r\n\r\n  createLayer(layerOptions: AnyLayerOptions): Layer {\r\n    if (!layerOptions.source) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      layerOptions.source.options &&\r\n      layerOptions.source.options.optionsFromCapabilities\r\n    ) {\r\n      layerOptions = ObjectUtils.mergeDeep(\r\n        (layerOptions.source.options as any)._layerOptionsFromCapabilities ||\r\n          {},\r\n        layerOptions || {}\r\n      );\r\n    }\r\n\r\n    let layer;\r\n    switch (layerOptions.source.constructor) {\r\n      case OSMDataSource:\r\n      case WMTSDataSource:\r\n      case XYZDataSource:\r\n      case CartoDataSource:\r\n      case TileArcGISRestDataSource:\r\n        layer = this.createTileLayer(layerOptions as TileLayerOptions);\r\n        break;\r\n      case FeatureDataSource:\r\n      case WFSDataSource:\r\n      case ArcGISRestDataSource:\r\n      case WebSocketDataSource:\r\n      case ClusterDataSource:\r\n        layer = this.createVectorLayer(layerOptions as VectorLayerOptions);\r\n        break;\r\n      case WMSDataSource:\r\n        layer = this.createImageLayer(layerOptions as ImageLayerOptions);\r\n        break;\r\n      case MVTDataSource:\r\n        layer = this.createVectorTileLayer(\r\n          layerOptions as VectorTileLayerOptions\r\n        );\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return layer;\r\n  }\r\n\r\n  createAsyncLayer(layerOptions: AnyLayerOptions): Observable<Layer> {\r\n    if (layerOptions.source) {\r\n      return new Observable(d => d.next(this.createLayer(layerOptions)));\r\n    }\r\n\r\n    return this.dataSourceService\r\n      .createAsyncDataSource(layerOptions.sourceOptions)\r\n      .pipe(\r\n        map(source => {\r\n          if (source === undefined) {\r\n            return undefined;\r\n          }\r\n          return this.createLayer(Object.assign(layerOptions, { source }));\r\n        })\r\n      );\r\n  }\r\n\r\n  private createImageLayer(layerOptions: ImageLayerOptions): ImageLayer {\r\n    return new ImageLayer(layerOptions, this.authInterceptor);\r\n  }\r\n\r\n  private createTileLayer(layerOptions: TileLayerOptions): TileLayer {\r\n    return new TileLayer(layerOptions);\r\n  }\r\n\r\n  private createVectorLayer(layerOptions: VectorLayerOptions): VectorLayer {\r\n    let style;\r\n    let olLayer;\r\n    if (layerOptions.style !== undefined) {\r\n      style = this.styleService.createStyle(layerOptions.style);\r\n    }\r\n\r\n    if (layerOptions.source instanceof ArcGISRestDataSource) {\r\n      const source = layerOptions.source as ArcGISRestDataSource;\r\n      style = source.options.params.style;\r\n    } else if (layerOptions.styleByAttribute) {\r\n      const serviceStyle = this.styleService;\r\n      layerOptions.style = feature => {\r\n        return serviceStyle.createStyleByAttribute(\r\n          feature,\r\n          layerOptions.styleByAttribute\r\n        );\r\n      };\r\n      olLayer = new VectorLayer(layerOptions);\r\n    }\r\n\r\n    if (layerOptions.source instanceof ClusterDataSource) {\r\n      const serviceStyle = this.styleService;\r\n      const baseStyle = layerOptions.style;\r\n      layerOptions.style = feature => {\r\n        return serviceStyle.createClusterStyle(\r\n          feature,\r\n          layerOptions.clusterParam,\r\n          baseStyle\r\n        );\r\n      };\r\n      olLayer = new VectorLayer(layerOptions);\r\n    }\r\n\r\n    const layerOptionsOl = Object.assign({}, layerOptions, {\r\n      style\r\n    });\r\n\r\n    if (!olLayer) {\r\n      olLayer = new VectorLayer(layerOptionsOl);\r\n    }\r\n\r\n    this.applyMapboxStyle(olLayer, layerOptionsOl);\r\n\r\n    return olLayer;\r\n  }\r\n\r\n  private createVectorTileLayer(\r\n    layerOptions: VectorTileLayerOptions\r\n  ): VectorTileLayer {\r\n    let style;\r\n    let olLayer;\r\n\r\n    if (layerOptions.style !== undefined) {\r\n      style = this.styleService.createStyle(layerOptions.style);\r\n    }\r\n\r\n    if (layerOptions.styleByAttribute) {\r\n      const serviceStyle = this.styleService;\r\n      layerOptions.style = feature => {\r\n        return serviceStyle.createStyleByAttribute(\r\n          feature,\r\n          layerOptions.styleByAttribute\r\n        );\r\n      };\r\n      olLayer = new VectorTileLayer(layerOptions);\r\n    }\r\n\r\n    const layerOptionsOl = Object.assign({}, layerOptions, {\r\n      style\r\n    });\r\n\r\n    if (!olLayer) {\r\n      olLayer = new VectorTileLayer(layerOptionsOl);\r\n    }\r\n\r\n    this.applyMapboxStyle(olLayer, layerOptionsOl);\r\n    return olLayer;\r\n  }\r\n\r\n  private applyMapboxStyle(layer: Layer, layerOptions: VectorTileLayerOptions) {\r\n    if (layerOptions.mapboxStyle) {\r\n      this.getMapboxGlStyle(layerOptions.mapboxStyle.url).subscribe(res => {\r\n        stylefunction(layer.ol, res, layerOptions.mapboxStyle.source);\r\n      });\r\n    }\r\n  }\r\n\r\n  public getMapboxGlStyle(url: string) {\r\n    return this.http.get(url).pipe(\r\n      map((res: any) => res),\r\n      catchError(err => {\r\n        console.log('No style was found');\r\n        return of(err);\r\n      })\r\n    );\r\n  }\r\n}\r\n","export enum CatalogItemType {\r\n  Layer = 'layer',\r\n  Group = 'group'\r\n}\r\n\r\nexport enum TypeCatalog {\r\n  wms, wmts, baselayers, composite\r\n}\r\n\r\nexport type TypeCatalogStrings = keyof typeof TypeCatalog;\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { TooltipType } from '../../layer';\r\nimport { TimeFilterOptions } from '../../filter';\r\nimport { QueryFormat, QueryHtmlTarget  } from '../../query';\r\n\r\nimport { ICatalog, ICompositeCatalog , CatalogItem, CatalogItemGroup } from './catalog.interface';\r\nimport { CatalogService } from './catalog.service';\r\nimport { TypeCatalog, TypeCatalogStrings } from './catalog.enum';\r\n\r\nexport abstract class Catalog implements ICatalog {\r\n\r\n    // ICatalog -----------------------------\r\n    id: string;\r\n    title: string;\r\n    url: string;\r\n    items?: CatalogItem[];\r\n    type?: TypeCatalogStrings;\r\n    version?: string;\r\n    matrixSet?: string;\r\n    requestEncoding?: string;\r\n    regFilters?: string[];\r\n    groupImpose?: CatalogItemGroup;\r\n    timeFilter?: TimeFilterOptions;\r\n    queryFormat?: QueryFormat;\r\n    queryHtmlTarget?: QueryHtmlTarget;\r\n    queryParams?: { [key: string]: string; };\r\n    sourceOptions?: { [key: string]: any; };\r\n    count?: number;\r\n    tooltipType?: TooltipType.ABSTRACT | TooltipType.TITLE;\r\n    sortDirection?: 'asc' | 'desc';\r\n    setCrossOriginAnonymous?: boolean;\r\n    showLegend?: boolean;\r\n    // ICatalog -----------------------------\r\n\r\n    protected catalogService: CatalogService;\r\n\r\n    constructor(options: Catalog, service: CatalogService) {\r\n        Object.assign(this, options);\r\n        this.catalogService = service;\r\n    }\r\n\r\n    public abstract collectCatalogItems(): Observable<CatalogItem[]>;\r\n}\r\n\r\nclass WMSCatalog extends Catalog {\r\n    constructor(options: Catalog, service: CatalogService) {\r\n        super(options, service);\r\n        const sType: string = TypeCatalog[TypeCatalog.wms];\r\n        this.type =  TypeCatalog[sType];\r\n    }\r\n\r\n    public collectCatalogItems(): Observable<CatalogItem[]> {\r\n        return this.catalogService.loadCatalogWMSLayerItems(this);\r\n    }\r\n}\r\n\r\nclass WMTSCatalog extends Catalog {\r\n    constructor(options: Catalog, service: CatalogService) {\r\n        super(options, service);\r\n        const sType: string = TypeCatalog[TypeCatalog.wmts];\r\n        this.type =  TypeCatalog[sType];\r\n    }\r\n\r\n    public collectCatalogItems(): Observable<CatalogItem[]> {\r\n        return this.catalogService.loadCatalogWMTSLayerItems(this);\r\n    }\r\n}\r\n\r\nclass BaselayersCatalog extends Catalog {\r\n    constructor(options: Catalog, service: CatalogService) {\r\n        super(options, service);\r\n        const sType: string = TypeCatalog[TypeCatalog.baselayers];\r\n        this.type =  TypeCatalog[sType];\r\n    }\r\n\r\n    public collectCatalogItems(): Observable<CatalogItemGroup[]> {\r\n        return this.catalogService.loadCatalogBaseLayerItems(this);\r\n    }\r\n}\r\n\r\nexport class CompositeCatalog extends Catalog implements ICompositeCatalog {\r\n    composite: ICatalog[];\r\n\r\n    constructor(options: Catalog, service: CatalogService) {\r\n        super(options, service);\r\n        const sType: string = TypeCatalog[TypeCatalog.composite];\r\n        this.type =  TypeCatalog[sType];\r\n        this.url = null;\r\n    }\r\n\r\n    public collectCatalogItems(): Observable<CatalogItem[]> {\r\n        return this.catalogService.loadCatalogCompositeLayerItems(this);\r\n    }\r\n}\r\n\r\nexport class CatalogFactory {\r\n\r\n    public static createInstanceCatalog(options: Catalog, service: CatalogService): Catalog {\r\n\r\n        let catalog: Catalog;\r\n        if (options.hasOwnProperty('composite')) {\r\n            catalog = new CompositeCatalog(options, service);\r\n        } else if (options.type === TypeCatalog[TypeCatalog.baselayers]) {\r\n            catalog = new BaselayersCatalog(options, service);\r\n        } else if (options.type === TypeCatalog[TypeCatalog.wmts]) {\r\n            catalog = new WMTSCatalog(options, service);\r\n        } else {\r\n            catalog = new WMSCatalog(options, service);\r\n        }\r\n\r\n        return catalog;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\nimport * as olformat from 'ol/format';\r\nimport * as olextent from 'ol/extent';\r\nimport olFormatGML2 from 'ol/format/GML2';\r\nimport olFormatGML3 from 'ol/format/GML3';\r\nimport olFormatEsriJSON from 'ol/format/EsriJSON';\r\nimport olFeature from 'ol/Feature';\r\nimport * as olgeom from 'ol/geom';\r\n\r\nimport { uuid } from '@igo2/utils';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { FEATURE } from '../../feature/shared/feature.enums';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport {\r\n  WMSDataSource,\r\n  CartoDataSource,\r\n  TileArcGISRestDataSource,\r\n  WMSDataSourceOptions\r\n} from '../../datasource';\r\n\r\nimport { QueryFormat, QueryHtmlTarget } from './query.enums';\r\nimport {\r\n  QueryOptions,\r\n  QueryableDataSource,\r\n  QueryableDataSourceOptions\r\n} from './query.interfaces';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class QueryService {\r\n  public queryEnabled = true;\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  query(layers: Layer[], options: QueryOptions): Observable<Feature[]>[] {\r\n    return layers\r\n      .filter((layer: Layer) => layer.visible && layer.isInResolutionsRange)\r\n      .map((layer: Layer) => this.queryLayer(layer, options));\r\n  }\r\n\r\n  queryLayer(layer: Layer, options: QueryOptions): Observable<Feature[]> {\r\n    const url = this.getQueryUrl(layer.dataSource, options);\r\n    if (!url) {\r\n      return of([]);\r\n    }\r\n\r\n    if (\r\n      (layer.dataSource as QueryableDataSource).options.queryFormat ===\r\n      QueryFormat.HTMLGML2\r\n    ) {\r\n      const urlGml = this.getQueryUrl(layer.dataSource, options, true);\r\n      return this.http.get(urlGml, { responseType: 'text' }).pipe(\r\n        mergeMap(gmlRes => {\r\n          const imposedGeom = this.mergeGML(gmlRes, url);\r\n          return this.http\r\n            .get(url, { responseType: 'text' })\r\n            .pipe(\r\n              map(res =>\r\n                this.extractData(res, layer, options, url, imposedGeom)\r\n              )\r\n            );\r\n        })\r\n      );\r\n    }\r\n\r\n    const request = this.http.get(url, { responseType: 'text' });\r\n    return request.pipe(map(res => this.extractData(res, layer, options, url)));\r\n  }\r\n\r\n  private mergeGML(gmlRes, url) {\r\n    let parser = new olFormatGML2();\r\n    let features = parser.readFeatures(gmlRes);\r\n    // Handle non standard GML output (MapServer)\r\n    if (features.length === 0) {\r\n      parser = new olformat.WMSGetFeatureInfo();\r\n      features = parser.readFeatures(gmlRes);\r\n    }\r\n    const olmline = new olgeom.MultiLineString([]);\r\n    let pts;\r\n    const ptsArray = [];\r\n    let olmpoly = new olgeom.MultiPolygon([]);\r\n    let firstFeatureType;\r\n    const nbFeatures = features.length;\r\n\r\n    // Check if geometry intersect bbox\r\n    // for geoserver getfeatureinfo response in data projection, not call projection\r\n    const searchParams: any = this.getQueryParams(url.toLowerCase());\r\n    const bboxRaw = searchParams.bbox;\r\n    const bbox = bboxRaw.split(',');\r\n    const bboxExtent = olextent.createEmpty();\r\n    olextent.extend(bboxExtent, bbox);\r\n    const outBboxExtent = false;\r\n    features.map(feature => {\r\n      /*  if (!feature.getGeometry().simplify(100).intersectsExtent(bboxExtent)) {\r\n        outBboxExtent = true;\r\n        // TODO: Check to project the geometry?\r\n      }*/\r\n      const featureGeometryCoordinates = feature.getGeometry().getCoordinates();\r\n      const featureGeometryType = feature.getGeometry().getType();\r\n\r\n      if (!firstFeatureType && !outBboxExtent) {\r\n        firstFeatureType = featureGeometryType;\r\n      }\r\n      if (!outBboxExtent) {\r\n        switch (featureGeometryType) {\r\n          case 'Point':\r\n            if (nbFeatures === 1) {\r\n              pts = new olgeom.Point(featureGeometryCoordinates, 'XY');\r\n            } else {\r\n              ptsArray.push(featureGeometryCoordinates);\r\n            }\r\n            break;\r\n          case 'LineString':\r\n            olmline.appendLineString(\r\n              new olgeom.LineString(featureGeometryCoordinates, 'XY')\r\n            );\r\n            break;\r\n          case 'Polygon':\r\n            olmpoly.appendPolygon(\r\n              new olgeom.Polygon(featureGeometryCoordinates, 'XY')\r\n            );\r\n            break;\r\n          case 'MultiPolygon':\r\n            olmpoly = new olgeom.MultiPolygon(featureGeometryCoordinates, 'XY');\r\n            break;\r\n          default:\r\n            return;\r\n        }\r\n      }\r\n    });\r\n\r\n    let olmpts;\r\n    if (ptsArray.length === 0 && pts) {\r\n      olmpts = {\r\n        type: pts.getType(),\r\n        coordinates: pts.getCoordinates()\r\n      };\r\n    } else {\r\n      olmpts = {\r\n        type: 'Polygon',\r\n        coordinates: [this.convexHull(ptsArray)]\r\n      };\r\n    }\r\n\r\n    switch (firstFeatureType) {\r\n      case 'LineString':\r\n        return {\r\n          type: olmline.getType(),\r\n          coordinates: olmline.getCoordinates()\r\n        };\r\n      case 'Point':\r\n        return olmpts;\r\n      case 'Polygon':\r\n        return {\r\n          type: olmpoly.getType(),\r\n          coordinates: olmpoly.getCoordinates()\r\n        };\r\n      case 'MultiPolygon':\r\n        return {\r\n          type: olmpoly.getType(),\r\n          coordinates: olmpoly.getCoordinates()\r\n        };\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  cross(a, b, o) {\r\n    return (a[0] - o[0]) * (b[1] - o[1]) - (a[1] - o[1]) * (b[0] - o[0]);\r\n  }\r\n\r\n  /**\r\n   * @param points An array of [X, Y] coordinates\r\n   * This method is use instead of turf.js convexHull because Turf needs at least 3 point to make a hull.\r\n   * https://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain#JavaScript\r\n   */\r\n  convexHull(points) {\r\n    points.sort((a, b) => {\r\n      return a[0] === b[0] ? a[1] - b[1] : a[0] - b[0];\r\n    });\r\n\r\n    const lower = [];\r\n    for (const point of points) {\r\n      while (\r\n        lower.length >= 2 &&\r\n        this.cross(lower[lower.length - 2], lower[lower.length - 1], point) <= 0\r\n      ) {\r\n        lower.pop();\r\n      }\r\n      lower.push(point);\r\n    }\r\n\r\n    const upper = [];\r\n    for (let i = points.length - 1; i >= 0; i--) {\r\n      while (\r\n        upper.length >= 2 &&\r\n        this.cross(\r\n          upper[upper.length - 2],\r\n          upper[upper.length - 1],\r\n          points[i]\r\n        ) <= 0\r\n      ) {\r\n        upper.pop();\r\n      }\r\n      upper.push(points[i]);\r\n    }\r\n\r\n    upper.pop();\r\n    lower.pop();\r\n    return lower.concat(upper);\r\n  }\r\n\r\n  private extractData(\r\n    res,\r\n    layer: Layer,\r\n    options: QueryOptions,\r\n    url: string,\r\n    imposedGeometry?\r\n  ): Feature[] {\r\n    const queryDataSource = layer.dataSource as QueryableDataSource;\r\n\r\n    const allowedFieldsAndAlias = this.getAllowedFieldsAndAlias(layer);\r\n    let features = [];\r\n    switch (queryDataSource.options.queryFormat) {\r\n      case QueryFormat.GML3:\r\n        features = this.extractGML3Data(\r\n          res,\r\n          layer.zIndex,\r\n          allowedFieldsAndAlias\r\n        );\r\n        break;\r\n      case QueryFormat.JSON:\r\n      case QueryFormat.GEOJSON:\r\n        features = this.extractGeoJSONData(res);\r\n        break;\r\n      case QueryFormat.ESRIJSON:\r\n        features = this.extractEsriJSONData(res, layer.zIndex);\r\n        break;\r\n      case QueryFormat.TEXT:\r\n        features = this.extractTextData(res);\r\n        break;\r\n      case QueryFormat.HTML:\r\n        features = this.extractHtmlData(\r\n          res,\r\n          queryDataSource.queryHtmlTarget,\r\n          url\r\n        );\r\n        break;\r\n      case QueryFormat.HTMLGML2:\r\n        features = this.extractHtmlData(\r\n          res,\r\n          queryDataSource.queryHtmlTarget,\r\n          url,\r\n          imposedGeometry\r\n        );\r\n        break;\r\n      case QueryFormat.GML2:\r\n      default:\r\n        features = this.extractGML2Data(res, layer, allowedFieldsAndAlias);\r\n        break;\r\n    }\r\n\r\n    return features.map((feature: Feature, index: number) => {\r\n      const mapLabel = feature.properties[queryDataSource.mapLabel];\r\n\r\n      let exclude;\r\n      if (layer.options.sourceOptions.type === 'wms') {\r\n        const sourceOptions = layer.options\r\n          .sourceOptions as WMSDataSourceOptions;\r\n        exclude = sourceOptions ? sourceOptions.excludeAttribute : undefined;\r\n      }\r\n\r\n      let title = this.getQueryTitle(feature, layer);\r\n      if (!title && features.length > 1) {\r\n        title = `${layer.title} (${index + 1})`;\r\n      } else if (!title) {\r\n        title = layer.title;\r\n      }\r\n\r\n      const meta = Object.assign({}, feature.meta || {}, {\r\n        id: uuid(),\r\n        title,\r\n        mapTitle: mapLabel,\r\n        sourceTitle: layer.title,\r\n        order: 1000 - layer.zIndex,\r\n        excludeAttribute: exclude\r\n      });\r\n\r\n      return Object.assign(feature, {\r\n        meta,\r\n        projection:\r\n          queryDataSource.options.type === 'carto'\r\n            ? 'EPSG:4326'\r\n            : options.projection\r\n      });\r\n    });\r\n  }\r\n\r\n  private extractGML2Data(res, zIndex, allowedFieldsAndAlias?) {\r\n    let parser = new olFormatGML2();\r\n    let features = parser.readFeatures(res);\r\n    // Handle non standard GML output (MapServer)\r\n    if (features.length === 0) {\r\n      parser = new olformat.WMSGetFeatureInfo();\r\n      try {\r\n        features = parser.readFeatures(res);\r\n      } catch (e) {\r\n        console.warn(\r\n          'query.service: Multipolygons are badly managed in mapserver in GML2. Use another format.'\r\n        );\r\n      }\r\n    }\r\n\r\n    return features.map(feature =>\r\n      this.featureToResult(feature, zIndex, allowedFieldsAndAlias)\r\n    );\r\n  }\r\n\r\n  private extractGML3Data(res, zIndex, allowedFieldsAndAlias?) {\r\n    const parser = new olFormatGML3();\r\n    const features = parser.readFeatures(res);\r\n    return features.map(feature =>\r\n      this.featureToResult(feature, zIndex, allowedFieldsAndAlias)\r\n    );\r\n  }\r\n\r\n  private extractGeoJSONData(res) {\r\n    let features = [];\r\n    try {\r\n      features = JSON.parse(res).features;\r\n    } catch (e) {\r\n      console.warn('query.service: Unable to parse geojson', '\\n', res);\r\n    }\r\n    return features;\r\n  }\r\n\r\n  private extractEsriJSONData(res, zIndex) {\r\n    const parser = new olFormatEsriJSON();\r\n    const features = parser.readFeatures(res);\r\n\r\n    return features.map(feature => this.featureToResult(feature, zIndex));\r\n  }\r\n\r\n  private extractTextData(res) {\r\n    // TODO\r\n    return [];\r\n  }\r\n\r\n  private extractHtmlData(\r\n    res,\r\n    htmlTarget: QueryHtmlTarget,\r\n    url,\r\n    imposedGeometry?\r\n  ) {\r\n    // _blank , iframe or undefined\r\n    const searchParams: any = this.getQueryParams(url.toLowerCase());\r\n    const bboxRaw = searchParams.bbox;\r\n    const width = parseInt(searchParams.width, 10);\r\n    const height = parseInt(searchParams.height, 10);\r\n    const xPosition = parseInt(searchParams.i || searchParams.x, 10);\r\n    const yPosition = parseInt(searchParams.j || searchParams.y, 10);\r\n    const projection = searchParams.crs || searchParams.srs || 'EPSG:3857';\r\n\r\n    const bbox = bboxRaw.split(',');\r\n    let threshold =\r\n      (Math.abs(parseFloat(bbox[0])) - Math.abs(parseFloat(bbox[2]))) * 0.05;\r\n\r\n    // for context in degree (EPSG:4326,4269...)\r\n    if (Math.abs(parseFloat(bbox[0])) < 180) {\r\n      threshold = 0.045;\r\n    }\r\n\r\n    const clickx =\r\n      parseFloat(bbox[0]) +\r\n      (Math.abs(parseFloat(bbox[0]) - parseFloat(bbox[2])) * xPosition) /\r\n        width -\r\n      threshold;\r\n    const clicky =\r\n      parseFloat(bbox[1]) +\r\n      (Math.abs(parseFloat(bbox[1]) - parseFloat(bbox[3])) * yPosition) /\r\n        height -\r\n      threshold;\r\n    const clickx1 = clickx + threshold * 2;\r\n    const clicky1 = clicky + threshold * 2;\r\n\r\n    const wktPoly =\r\n      'POLYGON((' +\r\n      clickx +\r\n      ' ' +\r\n      clicky +\r\n      ', ' +\r\n      clickx +\r\n      ' ' +\r\n      clicky1 +\r\n      ', ' +\r\n      clickx1 +\r\n      ' ' +\r\n      clicky1 +\r\n      ', ' +\r\n      clickx1 +\r\n      ' ' +\r\n      clicky +\r\n      ', ' +\r\n      clickx +\r\n      ' ' +\r\n      clicky +\r\n      '))';\r\n\r\n    const format = new olformat.WKT();\r\n    const tenPercentWidthGeom = format.readFeature(wktPoly);\r\n    const f = tenPercentWidthGeom.getGeometry() as any;\r\n\r\n    if (\r\n      htmlTarget !== QueryHtmlTarget.BLANK &&\r\n      htmlTarget !== QueryHtmlTarget.IFRAME\r\n    ) {\r\n      htmlTarget = QueryHtmlTarget.IFRAME;\r\n    }\r\n\r\n    const bodyTagStart = res.toLowerCase().indexOf('<body>');\r\n    const bodyTagEnd = res.toLowerCase().lastIndexOf('</body>') + 7;\r\n    // replace \\r \\n  and ' ' with '' to validate if the body is really empty.\r\n    const body = res.slice(bodyTagStart, bodyTagEnd).replace(/(\\r|\\n|\\s)/g, '');\r\n    if (body === '<body></body>' || res === '') {\r\n      return [];\r\n    }\r\n\r\n    return [\r\n      {\r\n        type: FEATURE,\r\n        projection,\r\n        properties: { target: htmlTarget, body: res, url },\r\n        geometry: imposedGeometry || {\r\n          type: f.getType(),\r\n          coordinates: f.getCoordinates()\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  private getQueryParams(url) {\r\n    const queryString = url.split('?');\r\n    if (!queryString[1]) {\r\n      return;\r\n    }\r\n    const pairs = queryString[1].split('&');\r\n\r\n    const result = {};\r\n    pairs.forEach(pair => {\r\n      pair = pair.split('=');\r\n      result[pair[0]] = decodeURIComponent(pair[1] || '');\r\n    });\r\n    return result;\r\n  }\r\n\r\n  public featureToResult(\r\n    featureOL: olFeature,\r\n    zIndex: number,\r\n    allowedFieldsAndAlias?\r\n  ): Feature {\r\n    const featureGeometry = featureOL.getGeometry() as any;\r\n    const properties: any = Object.assign({}, featureOL.getProperties());\r\n    delete properties.geometry;\r\n    delete properties.boundedBy;\r\n    delete properties.shape;\r\n    delete properties.SHAPE;\r\n    delete properties.the_geom;\r\n\r\n    let geometry;\r\n    if (featureGeometry !== undefined) {\r\n      geometry = {\r\n        type: featureGeometry.getType(),\r\n        coordinates: featureGeometry.getCoordinates()\r\n      };\r\n    }\r\n\r\n    return {\r\n      type: FEATURE,\r\n      projection: undefined,\r\n      properties,\r\n      geometry,\r\n      meta: {\r\n        id: uuid(),\r\n        order: 1000 - zIndex,\r\n        alias: allowedFieldsAndAlias\r\n      }\r\n    };\r\n  }\r\n\r\n  private getQueryUrl(\r\n    datasource: QueryableDataSource,\r\n    options: QueryOptions,\r\n    forceGML2 = false\r\n  ): string {\r\n    let url;\r\n    switch (datasource.constructor) {\r\n      case WMSDataSource:\r\n        const wmsDatasource = datasource as WMSDataSource;\r\n\r\n        const WMSGetFeatureInfoOptions = {\r\n          INFO_FORMAT:\r\n            wmsDatasource.params.INFO_FORMAT ||\r\n            this.getMimeInfoFormat(datasource.options.queryFormat),\r\n          QUERY_LAYERS: wmsDatasource.params.LAYERS,\r\n          FEATURE_COUNT: wmsDatasource.params.FEATURE_COUNT || '5'\r\n        };\r\n\r\n        if (forceGML2) {\r\n          WMSGetFeatureInfoOptions.INFO_FORMAT = this.getMimeInfoFormat(\r\n            QueryFormat.GML2\r\n          );\r\n        }\r\n\r\n        url = wmsDatasource.ol.getGetFeatureInfoUrl(\r\n          options.coordinates,\r\n          options.resolution,\r\n          options.projection,\r\n          WMSGetFeatureInfoOptions\r\n        );\r\n        // const wmsVersion =\r\n        //   wmsDatasource.params.VERSION ||\r\n        //   wmsDatasource.params.version ||\r\n        //   '1.3.0';\r\n        // if (wmsVersion !== '1.3.0') {\r\n        //   url = url.replace('&I=', '&X=');\r\n        //   url = url.replace('&J=', '&Y=');\r\n        // }\r\n        break;\r\n      case CartoDataSource:\r\n        const cartoDatasource = datasource as CartoDataSource;\r\n        const baseUrl =\r\n          'https://' +\r\n          cartoDatasource.options.account +\r\n          '.carto.com/api/v2/sql?';\r\n        const format = 'format=GeoJSON';\r\n        const sql =\r\n          '&q=' + cartoDatasource.options.config.layers[0].options.sql;\r\n        const clause =\r\n          ' WHERE ST_Intersects(the_geom_webmercator,ST_BUFFER(ST_SetSRID(ST_POINT(';\r\n        const meters = cartoDatasource.options.queryPrecision\r\n          ? cartoDatasource.options.queryPrecision\r\n          : '1000';\r\n        const coordinates =\r\n          options.coordinates[0] +\r\n          ',' +\r\n          options.coordinates[1] +\r\n          '),3857),' +\r\n          meters +\r\n          '))';\r\n\r\n        url = `${baseUrl}${format}${sql}${clause}${coordinates}`;\r\n        break;\r\n      case TileArcGISRestDataSource:\r\n        const tileArcGISRestDatasource = datasource as TileArcGISRestDataSource;\r\n        let extent = olextent.boundingExtent([options.coordinates]);\r\n        if (tileArcGISRestDatasource.options.queryPrecision) {\r\n          extent = olextent.buffer(\r\n            extent,\r\n            tileArcGISRestDatasource.options.queryPrecision\r\n          );\r\n        }\r\n        const serviceUrl =\r\n          tileArcGISRestDatasource.options.url +\r\n          '/' +\r\n          tileArcGISRestDatasource.options.layer +\r\n          '/query/';\r\n        const geometry = encodeURIComponent(\r\n          '{\"xmin\":' +\r\n            extent[0] +\r\n            ',\"ymin\":' +\r\n            extent[1] +\r\n            ',\"xmax\":' +\r\n            extent[2] +\r\n            ',\"ymax\":' +\r\n            extent[3] +\r\n            ',\"spatialReference\":{\"wkid\":102100}}'\r\n        );\r\n        const params = [\r\n          'f=json',\r\n          `geometry=${geometry}`,\r\n          'geometryType=esriGeometryEnvelope',\r\n          'inSR=102100',\r\n          'spatialRel=esriSpatialRelIntersects',\r\n          'outFields=*',\r\n          'returnGeometry=true',\r\n          'outSR=102100'\r\n        ];\r\n        url = `${serviceUrl}?${params.join('&')}`;\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return url;\r\n  }\r\n\r\n  private getMimeInfoFormat(queryFormat) {\r\n    let mime;\r\n    switch (queryFormat) {\r\n      case QueryFormat.GML2:\r\n        mime = 'application/vnd.ogc.gml';\r\n        break;\r\n      case QueryFormat.GML3:\r\n        mime = 'application/vnd.ogc.gml/3.1.1';\r\n        break;\r\n      case QueryFormat.JSON:\r\n        mime = 'application/json';\r\n        break;\r\n      case QueryFormat.GEOJSON:\r\n        mime = 'application/geojson';\r\n        break;\r\n      case QueryFormat.TEXT:\r\n        mime = 'text/plain';\r\n        break;\r\n      case QueryFormat.HTML:\r\n        mime = 'text/html';\r\n        break;\r\n      case QueryFormat.HTMLGML2:\r\n        mime = 'text/html';\r\n        break;\r\n      default:\r\n        mime = 'application/vnd.ogc.gml';\r\n        break;\r\n    }\r\n\r\n    return mime;\r\n  }\r\n\r\n  getAllowedFieldsAndAlias(layer: any) {\r\n    let allowedFieldsAndAlias;\r\n    if (\r\n      layer.options &&\r\n      layer.options.source &&\r\n      layer.options.source.options &&\r\n      layer.options.source.options.sourceFields &&\r\n      layer.options.source.options.sourceFields.length >= 1\r\n    ) {\r\n      allowedFieldsAndAlias = {};\r\n      layer.options.source.options.sourceFields.forEach(sourceField => {\r\n        const alias = sourceField.alias ? sourceField.alias : sourceField.name;\r\n        allowedFieldsAndAlias[sourceField.name] = alias;\r\n      });\r\n    }\r\n    return allowedFieldsAndAlias;\r\n  }\r\n\r\n  getQueryTitle(feature: Feature, layer: Layer): string {\r\n    let title;\r\n    if (layer.options && layer.options.source && layer.options.source.options) {\r\n      const dataSourceOptions = layer.options.source\r\n        .options as QueryableDataSourceOptions;\r\n      if (dataSourceOptions.queryTitle) {\r\n        title = this.getLabelMatch(feature, dataSourceOptions.queryTitle);\r\n      }\r\n    }\r\n\r\n    return title;\r\n  }\r\n\r\n  getLabelMatch(feature: Feature, labelMatch): string {\r\n    let label = labelMatch;\r\n    const labelToGet = Array.from(labelMatch.matchAll(/\\$\\{([^\\{\\}]+)\\}/g));\r\n\r\n    labelToGet.forEach(v => {\r\n      label = label.replace(v[0], feature.properties[v[1]]);\r\n    });\r\n\r\n    // Nothing done? check feature's attribute\r\n    if (labelToGet.length === 0 && label === labelMatch) {\r\n      label = feature.properties[labelMatch] || labelMatch;\r\n    }\r\n\r\n    return label;\r\n  }\r\n}\r\n","import { getEntityTitle } from '@igo2/common';\r\nimport {\r\n  Directive,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  AfterViewInit,\r\n  Self\r\n} from '@angular/core';\r\n\r\nimport { Subscription, Observable, of, zip } from 'rxjs';\r\n\r\nimport OlFeature from 'ol/Feature';\r\nimport OlRenderFeature from 'ol/render/Feature';\r\nimport OlLayer from 'ol/layer/Layer';\r\n\r\nimport OlDragBoxInteraction from 'ol/interaction/DragBox';\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { ListenerFunction } from 'ol/events';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { renderFeatureFromOl } from '../../feature/shared/feature.utils';\r\nimport { featureFromOl } from '../../feature/shared/feature.utils';\r\nimport { QueryService } from './query.service';\r\nimport { layerIsQueryable, olLayerIsQueryable } from './query.utils';\r\nimport { AnyLayer } from '../../layer/shared/layers/any-layer';\r\n\r\n/**\r\n * This directive makes a map queryable with a click of with a drag box.\r\n * By default, all layers are queryable but this can ben controlled at\r\n * the layer level.\r\n */\r\n@Directive({\r\n  selector: '[igoQuery]'\r\n})\r\nexport class QueryDirective implements AfterViewInit, OnDestroy {\r\n  /**\r\n   * Subscriptions to ongoing queries\r\n   */\r\n  private queries$$: Subscription[] = [];\r\n\r\n  /**\r\n   * Listener to the map click event\r\n   */\r\n  private mapClickListener: ListenerFunction;\r\n\r\n  /**\r\n   * OL drag box interaction\r\n   */\r\n  private olDragBoxInteraction: OlDragBoxInteraction;\r\n\r\n  /**\r\n   * Ol drag box \"end\" event key\r\n   */\r\n  private olDragBoxInteractionEndKey: string;\r\n\r\n  /**\r\n   * Whter to query features or not\r\n   */\r\n  @Input() queryFeatures: boolean = false;\r\n\r\n  /**\r\n   * Feature query hit tolerance\r\n   */\r\n  @Input() queryFeaturesHitTolerance: number = 0;\r\n\r\n  /**\r\n   * Feature query hit tolerance\r\n   */\r\n  @Input() queryFeaturesCondition: (olLayer: OlLayer) => boolean;\r\n\r\n  /**\r\n   * Whether all query should complete before emitting an event\r\n   */\r\n  @Input() waitForAllQueries: boolean = true;\r\n\r\n  /**\r\n   * Event emitted when a query (or all queries) complete\r\n   */\r\n  @Output() query = new EventEmitter<{\r\n    features: Feature[] | Feature[][];\r\n    event: OlMapBrowserPointerEvent;\r\n  }>();\r\n\r\n  /**\r\n   * IGO map\r\n   * @internal\r\n   */\r\n  get map(): IgoMap {\r\n    return (this.component.map as any) as IgoMap;\r\n  }\r\n\r\n  constructor(\r\n    @Self() private component: MapBrowserComponent,\r\n    private queryService: QueryService\r\n  ) {}\r\n\r\n  /**\r\n   * Start listening to click and drag box events\r\n   * @internal\r\n   */\r\n  ngAfterViewInit() {\r\n    this.listenToMapClick();\r\n  }\r\n\r\n  /**\r\n   * Stop listening to click and drag box events and cancel ongoind requests\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.cancelOngoingQueries();\r\n    this.unlistenToMapClick();\r\n  }\r\n\r\n  /**\r\n   * On map click, issue queries\r\n   */\r\n  private listenToMapClick() {\r\n    this.mapClickListener = this.map.ol.on(\r\n      'singleclick',\r\n      (event: OlMapBrowserPointerEvent) => this.onMapEvent(event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Stop listening for map clicks\r\n   */\r\n  private unlistenToMapClick() {\r\n    this.map.ol.un(this.mapClickListener.type, this.mapClickListener.listener);\r\n    this.mapClickListener = undefined;\r\n  }\r\n\r\n  /**\r\n   * Issue queries from a map event and emit events with the results\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private onMapEvent(event: OlMapBrowserPointerEvent) {\r\n    this.cancelOngoingQueries();\r\n    if (!this.queryService.queryEnabled) {\r\n      return;\r\n    }\r\n\r\n    const queries$ = [];\r\n    if (this.queryFeatures) {\r\n      queries$.push(this.doQueryFeatures(event));\r\n    }\r\n\r\n    const resolution = this.map.ol.getView().getResolution();\r\n    const queryLayers = this.map.layers.filter(layerIsQueryable);\r\n    queries$.push(\r\n      ...this.queryService.query(queryLayers, {\r\n        coordinates: event.coordinate,\r\n        projection: this.map.projection,\r\n        resolution\r\n      })\r\n    );\r\n\r\n    if (queries$.length === 0) {\r\n      return;\r\n    }\r\n\r\n    if (this.waitForAllQueries) {\r\n      this.queries$$.push(\r\n        zip(...queries$).subscribe((results: Feature[][]) => {\r\n          const features = [].concat(...results);\r\n          this.query.emit({ features, event });\r\n        })\r\n      );\r\n    } else {\r\n      this.queries$$ = queries$.map((query$: Observable<Feature[]>) => {\r\n        return query$.subscribe((features: Feature[]) => {\r\n          this.query.emit({ features, event });\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Query features already present on the map\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private doQueryFeatures(\r\n    event: OlMapBrowserPointerEvent\r\n  ): Observable<Feature[]> {\r\n    const clickedFeatures = [];\r\n\r\n    this.map.ol.forEachFeatureAtPixel(\r\n      event.pixel,\r\n      (featureOL: OlFeature, layerOL: OlLayer) => {\r\n        if (featureOL) {\r\n          if (featureOL.get('features')) {\r\n            for (const feature of featureOL.get('features')) {\r\n              const newFeature = featureFromOl(feature, this.map.projection);\r\n              newFeature.meta = {\r\n                title: feature.values_.nom,\r\n                id: feature.id_,\r\n                icon: feature.values_._icon,\r\n                sourceTitle: layerOL.values_.title\r\n              };\r\n              clickedFeatures.push(newFeature);\r\n            }\r\n          } else if (featureOL instanceof OlRenderFeature) {\r\n            const featureFromRender: OlFeature = featureOL;\r\n            const feature = renderFeatureFromOl(\r\n              featureOL,\r\n              this.map.projection,\r\n              layerOL\r\n            );\r\n            clickedFeatures.push(feature);\r\n          } else {\r\n            const feature = featureFromOl(\r\n              featureOL,\r\n              this.map.projection,\r\n              layerOL\r\n            );\r\n            clickedFeatures.push(feature);\r\n          }\r\n        }\r\n      },\r\n      {\r\n        hitTolerance: this.queryFeaturesHitTolerance || 0,\r\n        layerFilter: this.queryFeaturesCondition\r\n          ? this.queryFeaturesCondition\r\n          : olLayerIsQueryable\r\n      }\r\n    );\r\n\r\n    const queryableLayers = this.map.layers.filter(layerIsQueryable);\r\n    clickedFeatures.forEach((feature: Feature) => {\r\n      queryableLayers.forEach((layer: AnyLayer) => {\r\n        if (typeof layer.ol.getSource().hasFeature !== 'undefined') {\r\n          if (layer.ol.getSource().hasFeature(feature.ol)) {\r\n            (feature.meta.id = feature.ol._id),\r\n              (feature.meta.alias = this.queryService.getAllowedFieldsAndAlias(\r\n                layer\r\n              ));\r\n            feature.meta.title =\r\n              feature.meta.title ||\r\n              this.queryService.getQueryTitle(feature, layer);\r\n            feature.meta.sourceTitle = layer.title;\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    return of(clickedFeatures);\r\n  }\r\n\r\n  /**\r\n   * Cancel ongoing requests, if any\r\n   */\r\n  private cancelOngoingQueries() {\r\n    this.queries$$.forEach((sub: Subscription) => sub.unsubscribe());\r\n    this.queries$$ = [];\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport {\r\n  SearchSourceOptions,\r\n  TextSearchOptions,\r\n  ReverseSearchOptions,\r\n  SearchSourceSettings\r\n} from './source.interfaces';\r\n\r\n/**\r\n * Base search source class\r\n */\r\nexport class SearchSource {\r\n  /**\r\n   * Search source ID\r\n   * @internal\r\n   */\r\n  static id = '';\r\n\r\n  /**\r\n   * Search source type\r\n   * @internal\r\n   */\r\n  static type = '';\r\n\r\n  /**\r\n   * Search source options\r\n   * @internal\r\n   */\r\n  protected options: SearchSourceOptions;\r\n\r\n  /**\r\n   * Get search source's id\r\n   * @returns Search source's id\r\n   */\r\n  getId(): string {\r\n    throw new Error('You have to implement the method \"getId\".');\r\n  }\r\n  /**\r\n   * Get search source's type\r\n   * @returns Search source's type\r\n   */\r\n  getType(): string {\r\n    throw new Error('You have to implement the method \"getType\".');\r\n  }\r\n\r\n  /**\r\n   * Get search source's default options\r\n   * @returns Search source default options\r\n   */\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    throw new Error('You have to implement the method \"getDefaultOptions\".');\r\n  }\r\n\r\n  /**\r\n   * Search source's title\r\n   */\r\n  get title(): string {\r\n    return this.options.title;\r\n  }\r\n\r\n  /**\r\n   * Whether the search source is available\r\n   */\r\n  get available(): boolean {\r\n    return this.options.available !== false;\r\n  }\r\n\r\n  /**\r\n   * Whether the search source is enabled\r\n   */\r\n  set enabled(value: boolean) {\r\n    this.options.enabled = value;\r\n  }\r\n  get enabled(): boolean {\r\n    return this.available && this.options.enabled !== false;\r\n  }\r\n\r\n  get showInPointerSummary(): boolean {\r\n    const showInPointerSummary = this.options.showInPointerSummary;\r\n    return showInPointerSummary ? showInPointerSummary : false;\r\n  }\r\n\r\n  get showInSettings(): boolean {\r\n    const showInSettings = this.options.showInSettings;\r\n    return showInSettings === undefined ? true : showInSettings;\r\n  }\r\n\r\n  /**\r\n   * Search url\r\n   */\r\n  get searchUrl(): string {\r\n    return this.options.searchUrl;\r\n  }\r\n\r\n  /**\r\n   * Search query params\r\n   */\r\n  get params(): { [key: string]: string } {\r\n    return this.options.params === undefined ? {} : this.options.params;\r\n  }\r\n\r\n  /**\r\n   * Search settings\r\n   */\r\n  get settings(): SearchSourceSettings[] {\r\n    return this.options.settings === undefined ? [] : this.options.settings;\r\n  }\r\n\r\n  /**\r\n   * Set params from selected settings\r\n   */\r\n  setParamFromSetting(setting: SearchSourceSettings) {\r\n    switch (setting.type) {\r\n      case 'radiobutton':\r\n        setting.values.forEach(conf => {\r\n          if (conf.enabled) {\r\n            this.options.params = Object.assign(this.options.params || {}, {\r\n              [setting.name]: conf.value\r\n            });\r\n          }\r\n        });\r\n        break;\r\n      case 'checkbox':\r\n        let confValue = '';\r\n        setting.values\r\n          .filter(s => s.available !== false)\r\n          .forEach(conf => {\r\n            if (conf.enabled) {\r\n              confValue += conf.value + ',';\r\n            }\r\n          });\r\n        confValue = confValue.slice(0, -1);\r\n        this.options.params = Object.assign(this.options.params || {}, {\r\n          [setting.name]: confValue\r\n        });\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Search results display order\r\n   */\r\n  get displayOrder(): number {\r\n    return this.options.order === undefined ? 99 : this.options.order;\r\n  }\r\n\r\n  constructor(options: SearchSourceOptions) {\r\n    this.options = options;\r\n    this.options = Object.assign({}, this.getDefaultOptions(), options);\r\n\r\n    // Set Default Params from Settings\r\n    this.settings.forEach(setting => {\r\n      this.setParamFromSetting(setting);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get hashtags valid\r\n   * @param hashtag hashtag from query\r\n   */\r\n  getHashtagsValid(term: string, settingsName: string): string[] {\r\n    const hashtags = term.match(/(#[^\\s]+)/g);\r\n    if (!hashtags) {\r\n      return undefined;\r\n    }\r\n\r\n    const searchSourceSetting = this.getSettingsValues(settingsName);\r\n    const hashtagsValid = [];\r\n    hashtags.forEach(hashtag => {\r\n      searchSourceSetting.values.forEach(conf => {\r\n        const hashtagKey = hashtag.substring(1);\r\n        if (typeof conf.value === 'string') {\r\n          const types = conf.value\r\n            .toLowerCase()\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '')\r\n            .split(',');\r\n          const index = types.indexOf(\r\n            hashtagKey\r\n              .toLowerCase()\r\n              .normalize('NFD')\r\n              .replace(/[\\u0300-\\u036f]/g, '')\r\n          );\r\n          if (index !== -1) {\r\n            hashtagsValid.push(types[index]);\r\n          }\r\n        }\r\n        if (conf.hashtags && conf.hashtags.indexOf(hashtagKey) !== -1) {\r\n          hashtagsValid.push(conf.value);\r\n        }\r\n      });\r\n    });\r\n\r\n    return hashtagsValid.filter((a, b) => hashtagsValid.indexOf(a) === b);\r\n  }\r\n\r\n  getSettingsValues(search: string): SearchSourceSettings {\r\n    return this.getDefaultOptions().settings.find(\r\n      (value: SearchSourceSettings) => {\r\n        return value.name === search;\r\n      }\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Search sources that allow searching by text implement this class\r\n */\r\nexport interface TextSearch {\r\n  /**\r\n   * Search by text\r\n   * @param term Text\r\n   * @param options Optional: TextSearchOptions\r\n   * @returns Observable or search results\r\n   */\r\n  search(\r\n    term: string | undefined,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult[]>;\r\n}\r\n\r\n/**\r\n * Search sources that allow searching by coordinates implement this class\r\n */\r\nexport interface ReverseSearch {\r\n  /**\r\n   * Search by text\r\n   * @param lonLat Coordinates\r\n   * @param options Optional: ReverseSearchOptions\r\n   * @returns Observable or search results\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): Observable<SearchResult[]>;\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { FEATURE } from '../../feature/shared/feature.enums';\r\nimport { SearchSource } from '../../search/shared/sources/source';\r\nimport { SearchSourceOptions } from '../../search/shared/sources/source.interfaces';\r\n/**\r\n * Map search source. For now it has no search capability. All it does\r\n * is act as a placeholder for the map query results' \"search source\".\r\n */\r\n@Injectable()\r\nexport class QuerySearchSource extends SearchSource {\r\n  static id = 'map';\r\n  static type = FEATURE;\r\n\r\n  constructor(@Inject('options') options: SearchSourceOptions) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return QuerySearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return QuerySearchSource.type;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Carte'\r\n    };\r\n  }\r\n}\r\n","export class GoogleLinks {\r\n  static getGoogleMapsLink(lon, lat) {\r\n    return 'https://www.google.com/maps?q=' + lat + ',' + lon;\r\n  }\r\n\r\n  static getGoogleStreetViewLink(lon, lat) {\r\n    return 'https://www.google.com/maps?q=&layer=c&cbll=' + lat + ',' + lon;\r\n  }\r\n}\r\n","export class OsmLinks {\r\n  static getOpenStreetMapLink(lon, lat, zoom: number = 17) {\r\n    // return 'https://www.google.com/maps?q=' + lat + ',' + lon;\r\n    return  `https://www.openstreetmap.org/?mlat=${lat}&mlon=${lon}#map=${zoom}/${lat}/${lon}`;\r\n  }\r\n\r\n  static getOpenStreetCamLink(lon, lat, zoom: number = 17) {\r\n    return  `https://openstreetcam.org/map/@${lat},${lon},${zoom}z`;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { EMPTY, Observable, of, zip } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { uuid } from '@igo2/utils';\r\nimport { LanguageService, ConfigService } from '@igo2/core';\r\nimport {\r\n  CapabilitiesService,\r\n  TypeCapabilities,\r\n  WMSDataSourceOptions,\r\n  WMTSDataSourceOptions,\r\n  WMSDataSourceOptionsParams\r\n} from '../../datasource';\r\nimport {\r\n  LayerOptions,\r\n  ImageLayerOptions,\r\n  TooltipContent,\r\n  TooltipType\r\n} from '../../layer';\r\nimport { getResolutionFromScale } from '../../map';\r\n\r\nimport {\r\n  CatalogItem,\r\n  CatalogItemLayer,\r\n  CatalogItemGroup\r\n} from './catalog.interface';\r\nimport {\r\n  Catalog,\r\n  CatalogFactory,\r\n  CompositeCatalog\r\n} from './catalog.abstract';\r\nimport { CatalogItemType, TypeCatalog } from './catalog.enum';\r\nimport { QueryHtmlTarget, QueryFormat } from '../../query';\r\nimport { generateIdFromSourceOptions } from '../../utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CatalogService {\r\n  constructor(\r\n    private http: HttpClient,\r\n    private config: ConfigService,\r\n    private languageService: LanguageService,\r\n    private capabilitiesService: CapabilitiesService\r\n  ) {}\r\n\r\n  loadCatalogs(): Observable<Catalog[]> {\r\n    const contextConfig = this.config.getConfig('context') || {};\r\n    const catalogConfig = this.config.getConfig('catalog') || {};\r\n    const apiUrl = catalogConfig.url || contextConfig.url;\r\n    const catalogsFromConfig = catalogConfig.sources || [];\r\n\r\n    const observables$ = [];\r\n\r\n    if (apiUrl) {\r\n      // Base layers catalog\r\n      if (catalogConfig.baseLayers) {\r\n        const translate = this.languageService.translate;\r\n        const title = translate.instant('igo.geo.catalog.baseLayers');\r\n        const baseLayersCatalog = [\r\n          {\r\n            id: 'catalog.baselayers',\r\n            title,\r\n            url: `${apiUrl}/baselayers`,\r\n            type: 'baselayers'\r\n          }\r\n        ];\r\n        observables$.push(of(baseLayersCatalog));\r\n      }\r\n\r\n      // Catalogs from API\r\n      const catalogsFromApi$ = this.http\r\n        .get<Catalog[]>(`${apiUrl}/catalogs`)\r\n        .pipe(\r\n          map(catalogs => catalogs.map((c: any) => Object.assign(c, c.options))),\r\n          catchError((response: HttpErrorResponse) => EMPTY)\r\n        );\r\n      observables$.push(catalogsFromApi$);\r\n    }\r\n\r\n    // Catalogs from config\r\n    if (catalogsFromConfig.length > 0) {\r\n      observables$.push(\r\n        of(catalogsFromConfig).pipe(\r\n          map((catalogs: Catalog[]) =>\r\n            catalogs.map(c => {\r\n              if (!c.id) {\r\n                c.id = uuid();\r\n              }\r\n              return c;\r\n            })\r\n          )\r\n        )\r\n      );\r\n    }\r\n\r\n    return zip(...observables$).pipe(\r\n      map((catalogs: Catalog[][]) => [].concat.apply([], catalogs))\r\n    ) as Observable<Catalog[]>;\r\n  }\r\n\r\n  loadCatalogItems(catalog: Catalog): Observable<CatalogItem[]> {\r\n    let newCatalog: Catalog;\r\n    newCatalog = CatalogFactory.createInstanceCatalog(catalog, this);\r\n    return newCatalog.collectCatalogItems();\r\n  }\r\n\r\n  loadCatalogBaseLayerItems(\r\n    catalog: Catalog\r\n  ): Observable<CatalogItemGroup[]> {\r\n    return this.getCatalogBaseLayersOptions(catalog).pipe(\r\n      map((layersOptions: LayerOptions[]) => {\r\n        const items = layersOptions.map((layerOptions: LayerOptions) => {\r\n          return {\r\n            id: generateIdFromSourceOptions(layerOptions.sourceOptions),\r\n            title: layerOptions.title,\r\n            type: CatalogItemType.Layer,\r\n            options: layerOptions\r\n          } as CatalogItemLayer;\r\n        });\r\n        return [\r\n          {\r\n            id: 'catalog.group.baselayers',\r\n            type: CatalogItemType.Group,\r\n            title: catalog.title,\r\n            items\r\n          }\r\n        ];\r\n      })\r\n    );\r\n  }\r\n\r\n  private getCatalogBaseLayersOptions(\r\n    catalog: Catalog\r\n  ): Observable<LayerOptions[]> {\r\n    return this.http.get<LayerOptions[]>(catalog.url);\r\n  }\r\n\r\n  loadCatalogWMSLayerItems(\r\n    catalog: Catalog\r\n  ): Observable<CatalogItem[]> {\r\n    return this.getCatalogCapabilities(catalog).pipe(\r\n      map((capabilities: any) => {\r\n        const items = [];\r\n        this.includeRecursiveItems(\r\n          catalog,\r\n          capabilities.Capability.Layer,\r\n          items\r\n        );\r\n        return items;\r\n      })\r\n    );\r\n  }\r\n\r\n  loadCatalogWMTSLayerItems(\r\n    catalog: Catalog\r\n  ): Observable<CatalogItem[]> {\r\n    return this.getCatalogCapabilities(catalog).pipe(\r\n      map((capabilities: any) => this.getWMTSItems(catalog, capabilities))\r\n    );\r\n  }\r\n\r\n  loadCatalogCompositeLayerItems(\r\n    catalog: Catalog\r\n  ): Observable<CatalogItem[]> {\r\n\r\n    const compositeCatalog = (catalog as CompositeCatalog).composite;\r\n\r\n    const catalogsFromInstance = [] as Catalog[];\r\n    compositeCatalog.map((component: Catalog) => catalogsFromInstance.push(CatalogFactory.createInstanceCatalog(component, this)));\r\n\r\n    // get CatalogItems for each original Catalog-----------------------------------------------------\r\n    const request1$ = [];\r\n    catalogsFromInstance.map((component: Catalog) => request1$.push(component.collectCatalogItems()));\r\n\r\n    // integrate imposed group -----------------------------------------------------\r\n    let request2$ = [];\r\n\r\n    function flatDeepLayer(arr) {\r\n      return arr.reduce((acc, val) => acc.concat(val.type === CatalogItemType.Group ? flatDeepLayer(val.items) : val), []);\r\n    }\r\n\r\n    if (Object.keys(compositeCatalog).find(k => compositeCatalog[k].groupImpose)) {\r\n      const pushImposeGroup = (item, index) => {\r\n        const c = catalogsFromInstance[index];\r\n        const outGroupImpose = Object.assign({}, c.groupImpose);\r\n        outGroupImpose.address = c.id;\r\n        outGroupImpose.type = CatalogItemType.Group;\r\n        outGroupImpose.items = [];\r\n\r\n        const flatLayer = flatDeepLayer(item);\r\n        flatLayer.map((v) => v.address = `${outGroupImpose.address}.${outGroupImpose.id}`);\r\n        outGroupImpose.items = flatLayer;\r\n\r\n        return outGroupImpose;\r\n      };\r\n\r\n      request2$ = request1$.map((obs, idx) => obs.pipe(\r\n        map((items) => compositeCatalog[idx].groupImpose ? pushImposeGroup(items, idx) : items )\r\n      ));\r\n    } else {\r\n      request2$ = request1$;\r\n    }\r\n\r\n    // concat Group -----------------------------------------------------\r\n    const request3$ = zip(...request2$)\r\n      .pipe(\r\n          map((output: CatalogItem[]) => [].concat(...output) // [].concat.apply([], result1\r\n      ));\r\n\r\n    // merge Group (first level only) -----------------------------------------------------\r\n    const groupByGroupId = (data, keyFn) => data.reduce((acc, group) => {\r\n      const groupId = keyFn(group);\r\n      const ind = acc.find((x) => x.id === groupId);\r\n\r\n      if (!ind) {\r\n        acc[acc.length] = group;\r\n      } else {\r\n        const ix = acc.indexOf(ind);\r\n        if (acc[ix].address.split('|').indexOf(group.address) === -1) {\r\n          acc[ix].address = `${acc[ix].address}|${group.address}`;\r\n        }\r\n        acc[ix].items.push(...group.items);\r\n      }\r\n      return acc;\r\n    }, []);\r\n\r\n    // merge Layer for each Level (catalog, group(recursive))\r\n    const recursiveGroupByLayerAddress = (items, keyFn) => items.reduce((acc, item, idx, arr) => {\r\n\r\n      const layerTitle = keyFn(item);\r\n      const outItem = Object.assign({}, item);\r\n\r\n      if (item.type === CatalogItemType.Layer) {\r\n        // same title, same address => result: only one item is keep\r\n\r\n        // same title, address diff\r\n        const indicesMatchTitle = [];\r\n        const diffAddress = arr.filter((x, i) => {\r\n          let bInd = false;\r\n          if (x.title === layerTitle && x.type === CatalogItemType.Layer) {\r\n            if (i !== idx && x.address !== item.address) {\r\n              bInd = true;\r\n            }\r\n            indicesMatchTitle.push(i);\r\n          }\r\n          return bInd;\r\n        }); // $& i !== idx\r\n\r\n        if (diffAddress.length > 0) {\r\n          const nPosition = indicesMatchTitle.findIndex(x => x === idx) + 1;\r\n          outItem.title = `${item.title} (${nPosition})`; // source: ${item.address.split('.')[0]}\r\n        }\r\n\r\n        const exist = acc.find((x) => x.title === outItem.title && x.type === CatalogItemType.Layer);\r\n        if (!exist) {\r\n          acc[acc.length] = outItem;\r\n        }\r\n      } else if (item.type === CatalogItemType.Group) {\r\n          outItem.items = recursiveGroupByLayerAddress(item.items,  layer => layer.title);\r\n          acc[acc.length] = outItem;\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    const request4$ = request3$.pipe(\r\n      map(output => groupByGroupId(output, group => group.id)),\r\n      map((output) => [].concat(...output)),\r\n      map(data => recursiveGroupByLayerAddress(data,  layer => layer.title))\r\n    );\r\n\r\n    return request4$;\r\n  }\r\n\r\n  private getCatalogCapabilities(catalog: Catalog): Observable<any> {\r\n    const sType: string = TypeCatalog[catalog.type as string];\r\n    return this.capabilitiesService.getCapabilities(\r\n      TypeCapabilities[sType],\r\n      catalog.url,\r\n      catalog.version\r\n    );\r\n  }\r\n\r\n  private prepareCatalogItemLayer(layer, idParent, layersQueryFormat, catalog,\r\n                                  catalogQueryParams, catalogSourceOptions, catalogTooltipType) {\r\n    const configuredQueryFormat = this.retriveLayerInfoFormat(\r\n      layer.Name,\r\n      layersQueryFormat\r\n    );\r\n\r\n    const metadata = layer.DataURL ? layer.DataURL[0] : undefined;\r\n    const abstract = layer.Abstract ? layer.Abstract : undefined;\r\n    const keywordList = layer.KeywordList\r\n      ? layer.KeywordList\r\n      : undefined;\r\n    const timeFilter = this.capabilitiesService.getTimeFilter(layer);\r\n    const timeFilterable =\r\n      timeFilter && Object.keys(timeFilter).length > 0 ? true : false;\r\n    const legendOptions = layer.Style\r\n      ? this.capabilitiesService.getStyle(layer.Style)\r\n      : undefined;\r\n\r\n    const params = Object.assign({}, catalogQueryParams, {\r\n      LAYERS: layer.Name,\r\n      FEATURE_COUNT: catalog.count,\r\n      VERSION: catalog.version || '1.3.0'\r\n    } as WMSDataSourceOptionsParams\r\n    );\r\n    const baseSourceOptions = {\r\n      type: 'wms',\r\n      url: catalog.url,\r\n      crossOrigin: catalog.setCrossOriginAnonymous\r\n        ? 'anonymous'\r\n        : undefined,\r\n      timeFilter: { ...timeFilter, ...catalog.timeFilter },\r\n      timeFilterable: timeFilterable ? true : false,\r\n      queryable: layer.queryable,\r\n      queryFormat: configuredQueryFormat,\r\n      queryHtmlTarget: catalog.queryHtmlTarget || QueryHtmlTarget.IFRAME\r\n    };\r\n    const sourceOptions = Object.assign(\r\n      {},\r\n      baseSourceOptions,\r\n      catalogSourceOptions,\r\n      { params }\r\n    ) as WMSDataSourceOptions;\r\n\r\n    const layerPrepare = {\r\n      id: generateIdFromSourceOptions(sourceOptions),\r\n      type: CatalogItemType.Layer,\r\n      title: layer.Title,\r\n      address: idParent,\r\n      options: {\r\n        title: layer.Title,\r\n        maxResolution:\r\n          getResolutionFromScale(layer.MaxScaleDenominator) || Infinity,\r\n        minResolution:\r\n          getResolutionFromScale(layer.MinScaleDenominator) || 0,\r\n        metadata: {\r\n          url: metadata ? metadata.OnlineResource : undefined,\r\n          extern: metadata ? true : undefined,\r\n          abstract,\r\n          keywordList\r\n        },\r\n        legendOptions,\r\n        tooltip: { type: catalogTooltipType } as TooltipContent,\r\n        sourceOptions\r\n      }\r\n    };\r\n\r\n    return layerPrepare;\r\n  }\r\n\r\n  private prepareCatalogItemGroup(itemListIn, regexes, idGroup, layersQueryFormat, catalog,\r\n                                  catalogQueryParams, catalogSourceOptions, catalogTooltipType) {\r\n     const groupPrepare = {\r\n        id: idGroup,\r\n        type: CatalogItemType.Group,\r\n        title: itemListIn.Title,\r\n        address: catalog.id,\r\n        items: itemListIn.Layer.reduce(\r\n          (items: CatalogItem[], layer: any) => {\r\n\r\n            if (layer.Layer !== undefined) {\r\n              // recursive, check next level\r\n              const idGroupItemNextLevel = idGroup + `.group.${layer.Name || layer.Layer[0].Name}`;\r\n              const groupItem: CatalogItemGroup = this.prepareCatalogItemGroup(layer, regexes, idGroupItemNextLevel,\r\n                layersQueryFormat, catalog, catalogQueryParams, catalogSourceOptions, catalogTooltipType);\r\n\r\n              items.push(groupItem);\r\n            } else {\r\n              if (this.testLayerRegexes(layer.Name, regexes) === false) {\r\n                return items;\r\n              }\r\n\r\n              const layerItem: CatalogItemLayer<ImageLayerOptions> = this.prepareCatalogItemLayer(layer, idGroup, layersQueryFormat,\r\n                catalog, catalogQueryParams, catalogSourceOptions, catalogTooltipType);\r\n\r\n              items.push(layerItem);\r\n            }\r\n            return items;\r\n          },\r\n          []\r\n        )\r\n      };\r\n     return groupPrepare;\r\n  }\r\n\r\n  private includeRecursiveItems(\r\n    catalog: Catalog,\r\n    itemListIn: any,\r\n    itemsPrepare: CatalogItem[],\r\n    loopLevel: number = 0,\r\n  ) {\r\n    // Dig all levels until last level (layer object are not defined on last level)\r\n    const regexes = (catalog.regFilters || []).map(\r\n      (pattern: string) => new RegExp(pattern)\r\n    );\r\n    const catalogQueryParams = catalog.queryParams || {};\r\n    const catalogSourceOptions = catalog.sourceOptions || {};\r\n\r\n    if (!itemListIn.Layer) {\r\n      return;\r\n    }\r\n\r\n    for (const item of itemListIn.Layer) {\r\n      if (item.Layer !== undefined) {\r\n        // recursive, check next level\r\n        this.includeRecursiveItems(catalog, item, itemsPrepare, loopLevel + 1);\r\n        continue;\r\n      }\r\n\r\n      const catalogTooltipType = this.retrieveTooltipType(catalog);\r\n      const layersQueryFormat = this.findCatalogInfoFormat(catalog);\r\n\r\n      // group(with layers) and layer(without group) level 1\r\n      if (loopLevel !== 0) {\r\n\r\n        // TODO: Slice that into multiple methods\r\n        // Define object of group layer\r\n        const idGroupItem = `catalog.group.${itemListIn.Name || item.Name}`;\r\n        const groupItem = this.prepareCatalogItemGroup(itemListIn, regexes, idGroupItem, layersQueryFormat, catalog,\r\n          catalogQueryParams, catalogSourceOptions, catalogTooltipType);\r\n\r\n        if (groupItem.items.length !== 0) {\r\n          itemsPrepare.push(groupItem);\r\n        }\r\n\r\n        // Break the group (don't add a group of layer for each of their layer!)\r\n        break;\r\n      } else {\r\n        // layer without group\r\n        const layerItem = this.prepareCatalogItemLayer(item, catalog.id, layersQueryFormat,\r\n          catalog, catalogQueryParams, catalogSourceOptions, catalogTooltipType);\r\n        itemsPrepare.push(layerItem);\r\n      }\r\n    }\r\n  }\r\n\r\n  private getWMTSItems(\r\n    catalog: Catalog,\r\n    capabilities: { [key: string]: any }\r\n  ): CatalogItemLayer[] {\r\n    const layers = capabilities.Contents.Layer;\r\n    const regexes = (catalog.regFilters || []).map(\r\n      (pattern: string) => new RegExp(pattern)\r\n    );\r\n    const catalogQueryParams = catalog.queryParams || {};\r\n    const catalogSourceOptions = catalog.sourceOptions || {};\r\n\r\n    return layers\r\n      .map((layer: any) => {\r\n        if (this.testLayerRegexes(layer.Identifier, regexes) === false) {\r\n          return undefined;\r\n        }\r\n        const params = Object.assign({}, catalogQueryParams, {\r\n          version: '1.0.0'\r\n        });\r\n        const baseSourceOptions = {\r\n          type: 'wmts',\r\n          url: catalog.url,\r\n          crossOrigin: catalog.setCrossOriginAnonymous\r\n            ? 'anonymous'\r\n            : undefined,\r\n          layer: layer.Identifier,\r\n          matrixSet: catalog.matrixSet,\r\n          optionsFromCapabilities: true,\r\n          requestEncoding: catalog.requestEncoding || 'KVP',\r\n          style: 'default'\r\n        } as WMTSDataSourceOptions;\r\n        const sourceOptions = Object.assign(\r\n          {},\r\n          baseSourceOptions,\r\n          catalogSourceOptions,\r\n          { params }\r\n        ) as WMTSDataSourceOptions;\r\n\r\n        return {\r\n          id: generateIdFromSourceOptions(sourceOptions),\r\n          type: CatalogItemType.Layer,\r\n          title: layer.Title,\r\n          address: catalog.id,\r\n          options: {\r\n            title: layer.Title,\r\n            sourceOptions,\r\n            maxResolution: Infinity,\r\n            minResolution: 0\r\n          }\r\n        };\r\n      })\r\n      .filter((item: CatalogItemLayer | undefined) => item !== undefined);\r\n  }\r\n\r\n  private testLayerRegexes(layerName, regexes): boolean {\r\n    if (regexes.length === 0) {\r\n      return true;\r\n    }\r\n    return regexes.find((regex: RegExp) => regex.test(layerName)) !== undefined;\r\n  }\r\n\r\n  private retriveLayerInfoFormat(\r\n    layerNameFromCatalog: string,\r\n    layersQueryFormat: { layer: string; queryFormat: QueryFormat }[]\r\n  ): QueryFormat {\r\n    const currentLayerInfoFormat = layersQueryFormat.find(\r\n      f => f.layer === layerNameFromCatalog\r\n    );\r\n    const baseInfoFormat = layersQueryFormat.find(f => f.layer === '*');\r\n    let queryFormat: QueryFormat;\r\n    if (currentLayerInfoFormat) {\r\n      queryFormat = currentLayerInfoFormat.queryFormat;\r\n    } else if (baseInfoFormat) {\r\n      queryFormat = baseInfoFormat.queryFormat;\r\n    }\r\n    return queryFormat;\r\n  }\r\n\r\n  private retrieveTooltipType(catalog: Catalog): TooltipType {\r\n    if (!catalog.tooltipType) {\r\n      return TooltipType.TITLE;\r\n    }\r\n    return catalog.tooltipType;\r\n  }\r\n\r\n  private findCatalogInfoFormat(\r\n    catalog: Catalog\r\n  ): { layer: string; queryFormat: QueryFormat }[] {\r\n    const layersQueryFormat: { layer: string; queryFormat: QueryFormat }[] = [];\r\n    if (!catalog.queryFormat) {\r\n      return layersQueryFormat;\r\n    }\r\n    Object.keys(catalog.queryFormat).forEach(configuredInfoFormat => {\r\n      if (catalog.queryFormat[configuredInfoFormat] instanceof Array) {\r\n        catalog.queryFormat[configuredInfoFormat].forEach(layerName => {\r\n          if (\r\n            !layersQueryFormat.find(specific => specific.layer === layerName)\r\n          ) {\r\n            layersQueryFormat.push({\r\n              layer: layerName,\r\n              queryFormat: configuredInfoFormat as QueryFormat\r\n            });\r\n          }\r\n        });\r\n      } else {\r\n        if (\r\n          !layersQueryFormat.find(\r\n            specific =>\r\n              specific.layer === catalog.queryFormat[configuredInfoFormat]\r\n          )\r\n        ) {\r\n          layersQueryFormat.push({\r\n            layer: catalog.queryFormat[configuredInfoFormat],\r\n            queryFormat: configuredInfoFormat as QueryFormat\r\n          });\r\n        }\r\n      }\r\n    });\r\n    return layersQueryFormat;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { zip, BehaviorSubject } from 'rxjs';\r\n\r\nimport { EntityStore, EntityStoreWatcher } from '@igo2/common';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { LayerService } from '../../layer/shared/layer.service';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport {\r\n  Catalog,\r\n  CatalogItem,\r\n  CatalogItemLayer,\r\n  CatalogItemGroup,\r\n  CatalogItemState,\r\n  CatalogItemType\r\n} from '../shared';\r\n\r\n/**\r\n * Component to browse a catalog's groups and layers and display them on a map.\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-browser',\r\n  templateUrl: './catalog-browser.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogBrowserComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Catalog items store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<CatalogItem>;\r\n\r\n // private resolution$$: Subscription;\r\n\r\n  get resolution$(): BehaviorSubject<number> { return this.map.viewController.resolution$; }\r\n\r\n  @Input() catalogAllowLegend = false;\r\n\r\n  /**\r\n   * Catalog\r\n   */\r\n  @Input() catalog: Catalog;\r\n\r\n  /**\r\n   * Store holding the catalog's items\r\n   */\r\n  @Input() store: EntityStore<CatalogItem, CatalogItemState>;\r\n\r\n  /**\r\n   * Map to add the catalog items to\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * Whether a group can be toggled when it's collapsed\r\n   */\r\n  @Input() toggleCollapsedGroup: boolean = true;\r\n\r\n  constructor(\r\n    private layerService: LayerService,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {}\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    const currentItems = this.map.layers.map((layer: Layer) => {\r\n      return {\r\n        id: layer.options.source.id,\r\n        title: layer.title,\r\n        type: CatalogItemType.Layer\r\n      };\r\n    });\r\n    this.store.state.updateMany(currentItems, { added: true }, true);\r\n    if (this.catalog && this.catalog.sortDirection !== undefined) {\r\n      this.store.view.sort({\r\n        direction: this.catalog.sortDirection,\r\n        valueAccessor: (item: CatalogItem) => item.title\r\n      });\r\n    }\r\n\r\n    this.catalogAllowLegend = this.catalog.showLegend ? this.catalog.showLegend : this.catalogAllowLegend;\r\n\r\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isGroup(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Group;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isLayer(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Layer;\r\n  }\r\n\r\n  /**\r\n   * When a layer is added or removed, add or remove it from the map\r\n   * @internal\r\n   * @param event Layer added event\r\n   */\r\n  onLayerAddedChange(event: { added: boolean; layer: CatalogItemLayer }) {\r\n    const layer = event.layer;\r\n    this.store.state.update(layer, { added: event.added }, false);\r\n    event.added ? this.addLayerToMap(layer) : this.removeLayerFromMap(layer);\r\n  }\r\n\r\n  /**\r\n   * When a froup is added or removed, add or remove it from the map\r\n   * @internal\r\n   * @param event Group added event\r\n   */\r\n  onGroupAddedChange(event: { added: boolean; group: CatalogItemGroup }) {\r\n    const group = event.group;\r\n    this.store.state.update(group, { added: event.added }, false);\r\n    event.added ? this.addGroupToMap(group) : this.removeGroupFromMap(group);\r\n  }\r\n\r\n  /**\r\n   * Add layer to map\r\n   * @param layer Catalog layer\r\n   */\r\n  private addLayerToMap(layer: CatalogItemLayer) {\r\n    this.addLayersToMap([layer]);\r\n  }\r\n\r\n  /**\r\n   * Remove layer from map\r\n   * @param layer Catalog layer\r\n   */\r\n  private removeLayerFromMap(layer: CatalogItemLayer) {\r\n    this.removeLayersFromMap([layer]);\r\n  }\r\n\r\n  /**\r\n   * Add multiple layers to map\r\n   * @param layers Catalog layers\r\n   */\r\n  private addLayersToMap(layers: CatalogItemLayer[]) {\r\n    const layers$ = layers.map((layer: CatalogItemLayer) => {\r\n      return this.layerService.createAsyncLayer(layer.options);\r\n    });\r\n\r\n    zip(...layers$).subscribe((oLayers: Layer[]) => {\r\n      this.store.state.updateMany(layers, { added: true });\r\n      this.map.addLayers(oLayers);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Remove multiple layers from map\r\n   * @param layers Catalog layers\r\n   */\r\n  private removeLayersFromMap(layers: CatalogItemLayer[]) {\r\n    layers.forEach((layer: CatalogItemLayer) => {\r\n      this.store.state.update(layer, { added: false });\r\n      if (layer.options.baseLayer === true) {\r\n        const oLayer = this.map.getLayerById(layer.options.id);\r\n        if (oLayer !== undefined) {\r\n          this.map.removeLayer(oLayer);\r\n        }\r\n      } else {\r\n        const oLayer = this.map.getLayerById(layer.id);\r\n        if (oLayer !== undefined) {\r\n          this.map.removeLayer(oLayer);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Sort the layers by title. asc or desc.\r\n   * @internal\r\n   */\r\n  private sortCatalogItemsByTitle(items: CatalogItem[], direction) {\r\n    const returnItem = items.sort((a, b) => {\r\n      const titleA = a.title.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n      const titleB = b.title.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n\r\n      if (titleA < titleB) {\r\n        return -1;\r\n      }\r\n      if (titleA > titleB) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n    switch (direction) {\r\n      case 'asc':\r\n        return returnItem;\r\n      case 'desc':\r\n        return returnItem.reverse();\r\n      default:\r\n        return items;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add all the layers of a group to map\r\n   * @param group Catalog group\r\n   */\r\n  private addGroupToMap(group: CatalogItemGroup) {\r\n    let layers = group.items.filter((item: CatalogItem) => {\r\n      const added = this.store.state.get(item).added || false;\r\n      return this.isLayer(item) && added === false;\r\n    });\r\n    if (this.catalog && this.catalog.sortDirection !== undefined) {\r\n      layers = this.sortCatalogItemsByTitle(layers, this.catalog.sortDirection);\r\n  }\r\n    this.addLayersToMap(layers.reverse() as CatalogItemLayer[]);\r\n  }\r\n\r\n  /**\r\n   * Remove all the layers of a group from map\r\n   * @param group Catalog group\r\n   */\r\n  private removeGroupFromMap(group: CatalogItemGroup) {\r\n    const layers = group.items.filter((item: CatalogItem) => {\r\n      const added = this.store.state.get(item).added || false;\r\n      return this.isLayer(item) && added === true;\r\n    });\r\n    this.removeLayersFromMap(layers as CatalogItemLayer[]);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { getEntityTitle, getEntityIcon } from '@igo2/common';\r\n\r\nimport { CatalogItemLayer } from '../shared';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { LayerService } from '../../layer/shared/layer.service';\r\nimport { first } from 'rxjs/operators';\r\nimport { Layer } from '../../layer/shared/layers';\r\n\r\n/**\r\n * Catalog browser layer item\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-browser-layer',\r\n  templateUrl: './catalog-browser-layer.component.html',\r\n  styleUrls: ['./catalog-browser-layer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogBrowserLayerComponent implements OnInit {\r\n  public inRange$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n  public isPreview$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  private lastTimeoutRequest;\r\n\r\n  public layerLegendShown$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  public igoLayer$ = new BehaviorSubject<Layer>(undefined);\r\n\r\n  @Input() resolution: number;\r\n\r\n  @Input() catalogAllowLegend = false;\r\n\r\n  /**\r\n   * Catalog layer\r\n   */\r\n  @Input() layer: CatalogItemLayer;\r\n\r\n  /**\r\n   * Whether the layer is already added to the map\r\n   */\r\n  @Input() added = false;\r\n\r\n  /**\r\n   * Event emitted when the add/remove button is clicked\r\n   */\r\n  @Output() addedChange = new EventEmitter<{\r\n    added: boolean;\r\n    layer: CatalogItemLayer;\r\n  }>();\r\n\r\n  @Output() addedLayerIsPreview = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string {\r\n    return getEntityTitle(this.layer);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get icon(): string {\r\n    return getEntityIcon(this.layer) || 'layers';\r\n  }\r\n\r\n  constructor(private layerService: LayerService ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.isInResolutionsRange();\r\n    this.isPreview$.subscribe(value => this.addedLayerIsPreview.emit(value));\r\n  }\r\n\r\n  /**\r\n   * On mouse event, mouseenter /mouseleave\r\n   * @internal\r\n   */\r\n  onMouseEvent(event) {\r\n    this.onToggleClick(event);\r\n  }\r\n\r\n  askForLegend(event) {\r\n    this.layerLegendShown$.next(!this.layerLegendShown$.value);\r\n    this.layerService.createAsyncLayer(this.layer.options).pipe(first())\r\n    .subscribe(layer => this.igoLayer$.next(layer));\r\n  }\r\n\r\n  /**\r\n   * On toggle button click, emit the added change event\r\n   * @internal\r\n   */\r\n  onToggleClick(event) {\r\n    if (typeof this.lastTimeoutRequest !== 'undefined') {\r\n      clearTimeout(this.lastTimeoutRequest);\r\n    }\r\n\r\n    switch (event.type) {\r\n      case 'click':\r\n        if (!this.isPreview$.value) {\r\n          if (this.added) {\r\n            this.remove();\r\n          } else {\r\n            this.add();\r\n          }\r\n        }\r\n        this.isPreview$.next(false);\r\n        break;\r\n      case 'mouseenter':\r\n        if (!this.isPreview$.value && !this.added) {\r\n          this.lastTimeoutRequest = setTimeout(() => {\r\n            this.add();\r\n            this.isPreview$.next(true);\r\n          }, 500);\r\n        }\r\n        break;\r\n      case 'mouseleave':\r\n        if (this.isPreview$.value) {\r\n          this.remove();\r\n          this.isPreview$.next(false);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = true\r\n   */\r\n  private add() {\r\n    if (!this.added) {\r\n      this.added = true;\r\n      this.addedChange.emit({ added: true, layer: this.layer });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = false\r\n   */\r\n  private remove() {\r\n    if (this.added) {\r\n      this.added = false;\r\n      this.addedChange.emit({ added: false, layer: this.layer });\r\n    }\r\n  }\r\n\r\n  haveGroup(): boolean {\r\n    return !(!this.layer.address || this.layer.address.split('.').length === 1);\r\n  }\r\n\r\n  isInResolutionsRange(): boolean {\r\n    const minResolution = this.layer.options.minResolution;\r\n    const maxResolution = this.layer.options.maxResolution;\r\n    this.inRange$.next(\r\n      this.resolution >= minResolution && this.resolution <= maxResolution\r\n    );\r\n    return this.inRange$.value;\r\n  }\r\n\r\n  computeTooltip(): string {\r\n    if (this.added) {\r\n      return this.isPreview$.value\r\n        ? 'igo.geo.catalog.layer.addToMap'\r\n        : this.inRange$.value\r\n        ? 'igo.geo.catalog.layer.removeFromMap'\r\n        : 'igo.geo.catalog.layer.removeFromMapOutRange';\r\n    } else {\r\n      return this.inRange$.value\r\n        ? 'igo.geo.catalog.layer.addToMap'\r\n        : 'igo.geo.catalog.layer.addToMapOutRange';\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { EntityStateManager, EntityStore } from '@igo2/common';\r\n\r\nimport {\r\n  Catalog,\r\n  CatalogItem,\r\n  CatalogItemGroup,\r\n  CatalogItemLayer,\r\n  CatalogItemState,\r\n  CatalogItemType\r\n} from '../shared';\r\n\r\n/**\r\n * Catalog browser group item\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-browser-group',\r\n  templateUrl: './catalog-browser-group.component.html',\r\n  styleUrls: ['./catalog-browser-group.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogBrowserGroupComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Group's items store\r\n   * @internal\r\n   */\r\n  store = new EntityStore<CatalogItem, CatalogItemState>([]);\r\n\r\n  /**\r\n   * Whether all the layers of the group are added\r\n   * @internal\r\n   */\r\n  added$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  preview$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n  /**\r\n   * Whether the toggle button is disabled\r\n   * @internal\r\n   */\r\n  disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * Catalog\r\n   */\r\n  @Input() catalog: Catalog;\r\n\r\n  /**\r\n   * Catalog group\r\n   */\r\n  @Input() group: CatalogItemGroup;\r\n\r\n  /**\r\n   * Whether the group is collapsed\r\n   */\r\n  @Input() collapsed: boolean = true;\r\n\r\n  @Input() resolution: number;\r\n\r\n  @Input() catalogAllowLegend = false;\r\n\r\n  /**\r\n   * Whether the group can be toggled when it's collapsed\r\n   */\r\n  @Input() toggleCollapsed: boolean = true;\r\n\r\n  /**\r\n   * Parent catalog's items store state. Groups share a unique\r\n   * EntityState that tracks the group and it's layers state (whether they are added or not).\r\n   * Sharing a unique state would also allow us to expand this component to allow\r\n   * the selection of a layer while unselecting any layer already selected in another group.\r\n   * This could be useful to display some layer info before adding it, for example.\r\n   */\r\n  @Input() state: EntityStateManager<CatalogItem, CatalogItemState>;\r\n\r\n  /**\r\n   * Event emitted when the add/remove button of the group is clicked\r\n   */\r\n  @Output() addedChange = new EventEmitter<{\r\n    added: boolean;\r\n    group: CatalogItemGroup;\r\n  }>();\r\n\r\n  /**\r\n   * Event emitted when the add/remove button of a layer is clicked\r\n   */\r\n  @Output() layerAddedChange = new EventEmitter<{\r\n    added: boolean;\r\n    layer: CatalogItemLayer;\r\n  }>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string {\r\n    return this.group.title;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.store.load(this.group.items);\r\n    this.evaluateAdded();\r\n    this.evaluateDisabled(this.collapsed);\r\n    if (this.catalog && this.catalog.sortDirection !== undefined) {\r\n      this.store.view.sort({\r\n        direction: this.catalog.sortDirection,\r\n        valueAccessor: (item: CatalogItem) => item.title\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.store.destroy();\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isGroup(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Group;\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  isLayer(item: CatalogItem): boolean {\r\n    return item.type === CatalogItemType.Layer;\r\n  }\r\n\r\n  /**\r\n   * On toggle button click, emit the added change event\r\n   * @internal\r\n   */\r\n  onToggleClick() {\r\n    this.added$.value ? this.remove() : this.add();\r\n  }\r\n\r\n  /**\r\n   * On toggle button click, emit the added change event\r\n   * @internal\r\n   */\r\n  onToggleCollapsed(collapsed: boolean) {\r\n    this.evaluateDisabled(collapsed);\r\n  }\r\n\r\n  /**\r\n   * When a layer is added or removed, evaluate if all the layers of the group\r\n   * are now added or removed. If so, consider that the group itself is added\r\n   * or removed.\r\n   * @internal\r\n   * @param event Layer added change event\r\n   */\r\n  onLayerAddedChange(event: { added: boolean; layer: CatalogItemLayer }) {\r\n    this.layerAddedChange.emit(event);\r\n    this.tryToggleGroup(event);\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = true\r\n   */\r\n  private add() {\r\n    this.added$.next(true);\r\n    this.addedChange.emit({\r\n      added: true,\r\n      group: this.group\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = true\r\n   */\r\n  private remove() {\r\n    this.added$.next(false);\r\n    this.addedChange.emit({\r\n      added: false,\r\n      group: this.group\r\n    });\r\n  }\r\n\r\n  onLayerPreview(event) {\r\n    this.preview$.next(event);\r\n  }\r\n\r\n  /**\r\n   * If all the layers of the group added or removed, add or remove the group itself.\r\n   * @param event The last layer added change event to occur\r\n   */\r\n  private tryToggleGroup(event: { added: boolean; layer: CatalogItemLayer }) {\r\n    const added = event.added;\r\n    const layer = event.layer;\r\n\r\n    const layersAdded = this.store.view\r\n      .all()\r\n      .filter((item: CatalogItem) => item.id !== layer.id)\r\n      .map((item: CatalogItem) => this.state.get(item).added || false);\r\n\r\n    if (layersAdded.every(value => value === added)) {\r\n      added ? this.add() : this.remove();\r\n    } else if (this.added$.value === true) {\r\n      this.added$.next(false);\r\n    }\r\n  }\r\n\r\n  private evaluateAdded() {\r\n    const added = this.store.all().every((item: CatalogItem) => {\r\n      return (this.state.get(item).added || false) === true;\r\n    });\r\n    this.added$.next(added);\r\n  }\r\n\r\n  private evaluateDisabled(collapsed: boolean) {\r\n    let disabled = false;\r\n    if (this.toggleCollapsed === false) {\r\n      disabled = collapsed;\r\n    }\r\n    this.disabled$.next(disabled);\r\n  }\r\n\r\n  onTitleClick() {\r\n    this.collapsed = !this.collapsed;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport {\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule,\r\n  MatListModule,\r\n  MatSliderModule,\r\n  MatBadgeModule,\r\n  MatSelectModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoListModule,\r\n  IgoCollapsibleModule,\r\n  IgoImageModule\r\n} from '@igo2/common';\r\n\r\nimport { LayerService } from './shared/layer.service';\r\nimport { StyleService } from './shared/style.service';\r\nimport { LayerListService } from './layer-list/layer-list.service';\r\nimport { LayerItemComponent } from './layer-item/layer-item.component';\r\nimport { LayerLegendComponent } from './layer-legend/layer-legend.component';\r\nimport { LayerListComponent } from './layer-list/layer-list.component';\r\nimport { LayerListBindingDirective } from './layer-list/layer-list-binding.directive';\r\nimport { TrackFeatureButtonComponent } from './track-feature-button/track-feature-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatListModule,\r\n    MatSliderModule,\r\n    MatBadgeModule,\r\n    IgoLanguageModule,\r\n    IgoListModule,\r\n    IgoCollapsibleModule,\r\n    IgoImageModule\r\n  ],\r\n  exports: [\r\n    LayerItemComponent,\r\n    LayerLegendComponent,\r\n    LayerListComponent,\r\n    LayerListBindingDirective,\r\n    TrackFeatureButtonComponent\r\n  ],\r\n  declarations: [\r\n    LayerItemComponent,\r\n    LayerLegendComponent,\r\n    LayerListComponent,\r\n    LayerListBindingDirective,\r\n    TrackFeatureButtonComponent\r\n  ]\r\n})\r\nexport class IgoLayerModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoLayerModule,\r\n      providers: [LayerService, StyleService, LayerListService]\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatBadgeModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatListModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoMatBadgeIconModule,\r\n  IgoCollapsibleModule,\r\n  IgoListModule\r\n} from '@igo2/common';\r\n\r\nimport { IgoMetadataModule } from './../../metadata/metadata.module';\r\nimport { CatalogBrowserComponent } from './catalog-browser.component';\r\nimport { CatalogBrowserLayerComponent } from './catalog-browser-layer.component';\r\nimport { CatalogBrowserGroupComponent } from './catalog-browser-group.component';\r\nimport { IgoLayerModule } from '../../layer/layer.module';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatBadgeModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    IgoMatBadgeIconModule,\r\n    IgoLanguageModule,\r\n    IgoListModule,\r\n    IgoCollapsibleModule,\r\n    IgoMetadataModule,\r\n    IgoLayerModule\r\n  ],\r\n  exports: [\r\n    CatalogBrowserComponent\r\n  ],\r\n  declarations: [\r\n    CatalogBrowserComponent,\r\n    CatalogBrowserGroupComponent,\r\n    CatalogBrowserLayerComponent\r\n  ]\r\n})\r\nexport class IgoCatalogBrowserModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport { EntityStore } from '@igo2/common';\r\nimport { IgoMap } from '../../map';\r\nimport { Catalog } from '../shared/catalog.abstract';\r\n\r\n/**\r\n * Component to browse a list of available catalogs\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-library',\r\n  templateUrl: './catalog-library.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogLibaryComponent implements OnInit {\r\n\r\n  /**\r\n   * Store holding the catalogs\r\n   */\r\n  @Input() store: EntityStore<Catalog>;\r\n\r\n  /**\r\n   * Map to add the catalog items to\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * Event emitted a catalog is selected or unselected\r\n   */\r\n  @Output() catalogSelectChange = new EventEmitter<{\r\n    selected: boolean;\r\n    catalog: Catalog;\r\n  }>();\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.store.state.clear();\r\n  }\r\n\r\n  /**\r\n   * When a catalog is selected, update it's state in the store\r\n   * and emit the catalog select change event\r\n   * @internal\r\n   */\r\n  onCatalogSelect(catalog: Catalog) {\r\n    this.store.state.update(catalog, {\r\n      selected: true,\r\n      focused: true\r\n    }, true);\r\n    this.catalogSelectChange.emit({selected: true, catalog});\r\n  }\r\n\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { getEntityTitle } from '@igo2/common';\r\nimport { IgoMap } from '../../map';\r\nimport { Catalog } from '../shared/catalog.abstract';\r\n\r\n/**\r\n * Catalog library item\r\n */\r\n@Component({\r\n  selector: 'igo-catalog-library-item',\r\n  templateUrl: './catalog-library-item.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class CatalogLibaryItemComponent {\r\n\r\n  /**\r\n   * Catalog\r\n   */\r\n  @Input() catalog: Catalog;\r\n\r\n  /**\r\n   * Map to add the catalog items to\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string { return getEntityTitle(this.catalog); }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatListModule\r\n} from '@angular/material';\r\n\r\nimport { IgoListModule } from '@igo2/common';\r\n\r\nimport { CatalogLibaryComponent, } from './catalog-library.component';\r\nimport { CatalogLibaryItemComponent } from './catalog-library-item.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    IgoListModule\r\n  ],\r\n  exports: [\r\n    CatalogLibaryComponent\r\n  ],\r\n  declarations: [\r\n    CatalogLibaryComponent,\r\n    CatalogLibaryItemComponent\r\n  ]\r\n})\r\nexport class IgoCatalogLibraryModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatTooltipModule,\r\n  MatBadgeModule\r\n} from '@angular/material';\r\n\r\nimport { IgoListModule, IgoCollapsibleModule, IgoMatBadgeIconModule } from '@igo2/common';\r\n\r\nimport { IgoCatalogBrowserModule } from './catalog-browser/catalog-browser.module';\r\nimport { IgoCatalogLibraryModule } from './catalog-library/catalog-library.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatBadgeModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    IgoMatBadgeIconModule,\r\n    IgoListModule,\r\n    IgoCollapsibleModule\r\n  ],\r\n  exports: [\r\n    IgoCatalogBrowserModule,\r\n    IgoCatalogLibraryModule\r\n  ],\r\n  declarations: []\r\n})\r\nexport class IgoCatalogModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [],\r\n  declarations: []\r\n})\r\nexport class IgoDataSourceModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoDataSourceModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { DataSource } from '../../datasource/shared/datasources/datasource';\r\n\r\nimport { OgcFilterableDataSource } from './ogc-filter.interface';\r\nimport { TimeFilterableDataSource } from './time-filter.interface';\r\n\r\n@Pipe({\r\n  name: 'filterableDataSource'\r\n})\r\nexport class FilterableDataSourcePipe implements PipeTransform {\r\n  transform(value: Layer[], arg: string): Layer[] {\r\n    let layers;\r\n\r\n    if (arg === 'time') {\r\n      layers = value.filter((layer: Layer) => {\r\n        const datasource = layer.dataSource as TimeFilterableDataSource;\r\n        return (\r\n          this.isTimeFilterable(datasource) &&\r\n          datasource.options.timeFilter !== undefined &&\r\n          Object.keys(datasource.options.timeFilter).length\r\n        );\r\n      });\r\n    }\r\n    if (arg === 'ogc') {\r\n      layers = value.filter((layer: Layer) => {\r\n        const datasource = layer.dataSource as OgcFilterableDataSource;\r\n        return this.isOgcFilterable(datasource);\r\n      });\r\n    }\r\n    return layers;\r\n  }\r\n\r\n  private isTimeFilterable(dataSource: TimeFilterableDataSource) {\r\n    if (dataSource.options.type !== 'wms') {\r\n      return false;\r\n    }\r\n    return dataSource.options.timeFilterable;\r\n  }\r\n\r\n  private isOgcFilterable(dataSource: OgcFilterableDataSource): boolean {\r\n    let isOgcFilterable = false;\r\n    if (\r\n      dataSource.options.ogcFilters &&\r\n      dataSource.options.ogcFilters.enabled &&\r\n      dataSource.options.ogcFilters.editable\r\n    ) {\r\n      isOgcFilterable = true;\r\n    }\r\n    if (\r\n      dataSource.options.ogcFilters &&\r\n      dataSource.options.ogcFilters.enabled &&\r\n      dataSource.options.ogcFilters.pushButtons) {\r\n        isOgcFilterable = true;\r\n    }\r\n    return isOgcFilterable;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\nimport { WMSDataSource } from '../../datasource/shared/datasources/wms-datasource';\r\nimport { TileArcGISRestDataSource } from '../../datasource/shared/datasources/tilearcgisrest-datasource';\r\n\r\n@Injectable()\r\nexport class TimeFilterService {\r\n  constructor() {}\r\n\r\n  filterByDate(\r\n    datasource: WMSDataSource | TileArcGISRestDataSource,\r\n    date: Date | [Date, Date]\r\n  ) {\r\n    let time;\r\n    let newdateform;\r\n    let newdateformStart;\r\n    let newdateformEnd;\r\n\r\n    if (Array.isArray(date)) {\r\n      const dates = [];\r\n      if (date[0]) {\r\n        newdateformStart = this.reformatDateTime(date[0]);\r\n        dates.push(date[0]);\r\n      }\r\n      if (date[1]) {\r\n        newdateformEnd = this.reformatDateTime(date[1]);\r\n        dates.push(date[1]);\r\n      }\r\n      if (dates.length === 2 && newdateformStart !== newdateformEnd) {\r\n        if (datasource instanceof TileArcGISRestDataSource) {\r\n          time = newdateformStart + ',' + newdateformEnd;\r\n        } else {\r\n          time = newdateformStart + '/' + newdateformEnd;\r\n        }\r\n      }\r\n      if (newdateformStart === newdateformEnd) {\r\n        time = newdateformStart;\r\n      }\r\n    } else if (date) {\r\n      newdateform = this.reformatDateTime(date);\r\n      time = newdateform;\r\n    }\r\n\r\n    const params = { TIME: time };\r\n    datasource.ol.updateParams(params);\r\n  }\r\n\r\n  filterByYear(\r\n    datasource: WMSDataSource | TileArcGISRestDataSource,\r\n    year: string | [string, string]\r\n  ) {\r\n    let time;\r\n    let newdateformStart;\r\n    let newdateformEnd;\r\n\r\n    if (Array.isArray(year)) {\r\n      const years = [];\r\n      if (year[0]) {\r\n        newdateformStart = year[0];\r\n        years.push(year[0]);\r\n      }\r\n      if (year[1]) {\r\n        newdateformEnd = year[1];\r\n        years.push(year[1]);\r\n      }\r\n      if (years.length === 2 && newdateformStart !== newdateformEnd) {\r\n        if (datasource instanceof TileArcGISRestDataSource) {\r\n          time = newdateformStart + ',' + newdateformEnd;\r\n        } else {\r\n          time = newdateformStart + '/' + newdateformEnd;\r\n        }\r\n      }\r\n      if (newdateformStart === newdateformEnd) {\r\n        time = newdateformStart;\r\n      }\r\n    } else {  // to reset filter.\r\n      time = year;\r\n    }\r\n\r\n    const params = { TIME: time };\r\n    datasource.ol.updateParams(params);\r\n  }\r\n\r\n  private reformatDateTime(value) {\r\n    const year = value.getFullYear();\r\n    let month = value.getMonth() + 1;\r\n    let day = value.getUTCDate();\r\n    let hour = value.getUTCHours();\r\n    let minute = value.getUTCMinutes();\r\n\r\n    if (Number(month) < 10) {\r\n      month = '0' + month;\r\n    }\r\n\r\n    if (Number(day) < 10) {\r\n      day = '0' + day;\r\n    }\r\n\r\n    if (Number(hour) < 10) {\r\n      hour = '0' + hour;\r\n    }\r\n\r\n    if (Number(minute) < 10) {\r\n      minute = '0' + minute;\r\n    }\r\n\r\n    return year + '-' + month + '-' + day + 'T' + hour + ':' + minute + ':00Z';\r\n  }\r\n}\r\n","export enum OgcFilterOperatorType {\r\n    BasicNumericOperator = 'BasicNumericOperator',\r\n    Basic = 'Basic',\r\n    BasicAndSpatial = 'BasicAndSpatial',\r\n    Spatial = 'Spatial',\r\n    All = 'All'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport olProjection from 'ol/proj/Projection';\r\n\r\nimport { WMSDataSource } from '../../datasource/shared/datasources/wms-datasource';\r\nimport { OgcFilterWriter } from './ogc-filter';\r\nimport { OgcFilterableDataSource } from './ogc-filter.interface';\r\n\r\n@Injectable()\r\nexport class OGCFilterService {\r\n  constructor() {}\r\n\r\n  public filterByOgc(wmsDatasource: WMSDataSource, filterString: string) {\r\n    const appliedFilter = new OgcFilterWriter().formatProcessedOgcFilter(filterString, wmsDatasource.options.params.LAYERS);\r\n    wmsDatasource.ol.updateParams({ FILTER: appliedFilter });\r\n  }\r\n\r\n  public setOgcWFSFiltersOptions(wfsDatasource: OgcFilterableDataSource) {\r\n    const options: any = wfsDatasource.options;\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n\r\n    if (options.ogcFilters.enabled && options.ogcFilters.filters) {\r\n      options.ogcFilters.filters = ogcFilterWriter.checkIgoFiltersProperties(\r\n        options.ogcFilters.filters,\r\n        options.paramsWFS.fieldNameGeometry,\r\n        new olProjection({ code: options.paramsWFS.srsName }),\r\n        true\r\n      );\r\n      if (!options.ogcFilters.interfaceOgcFilters) {\r\n        options.ogcFilters.interfaceOgcFilters = ogcFilterWriter.defineInterfaceFilterSequence(\r\n          options.ogcFilters.filters,\r\n          options.paramsWFS.fieldNameGeometry\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  public setOgcWMSFiltersOptions(wmsDatasource: OgcFilterableDataSource) {\r\n    const options: any = wmsDatasource.options;\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n\r\n    if (options.ogcFilters.enabled && options.ogcFilters.filters) {\r\n      options.ogcFilters.filters = ogcFilterWriter.checkIgoFiltersProperties(\r\n        options.ogcFilters.filters,\r\n        options.fieldNameGeometry,\r\n        undefined,\r\n        true\r\n      );\r\n      if (!options.ogcFilters.interfaceOgcFilters) {\r\n        options.ogcFilters.interfaceOgcFilters = ogcFilterWriter.defineInterfaceFilterSequence(\r\n          // With some wms server, this param must be set to make spatials call.\r\n          options.ogcFilters.filters,\r\n          options.fieldNameGeometry\r\n        );\r\n      }\r\n      this.filterByOgc(\r\n        wmsDatasource as WMSDataSource,\r\n        ogcFilterWriter.buildFilter(options.ogcFilters.filters)\r\n      );\r\n      options.filtered = true;\r\n    } else {\r\n      options.ogcFilters.filters = undefined;\r\n      options.ogcFilters.interfaceOgcFilters = [];\r\n      options.filtered = false;\r\n    }\r\n  }\r\n}\r\n","export enum SpatialFilterQueryType {\r\n    AdmRegion = 'AdmRegion',\r\n    Mun = 'Mun',\r\n    Arrond = 'Arrond',\r\n    CircFed = 'CircFed',\r\n    CircProv = 'CircProv',\r\n    DirReg = 'DirReg',\r\n    MRC = 'MRC',\r\n    RegTour = 'RegTour'\r\n}\r\n\r\nexport enum SpatialFilterType {\r\n    Predefined = 'Predefined',\r\n    Polygon = 'Polygon',\r\n    Point = 'Point'\r\n}\r\n\r\nexport enum SpatialFilterItemType {\r\n    Address = 'Address',\r\n    Thematics = 'Thematics'\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { Feature } from '../../feature/shared';\r\nimport {\r\n  SpatialFilterQueryType,\r\n  SpatialFilterItemType\r\n} from './spatial-filter.enum';\r\nimport { SpatialFilterThematic } from './spatial-filter.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SpatialFilterService {\r\n  public baseUrl: string = 'https://geoegl.msp.gouv.qc.ca/apis/terrapi/';\r\n\r\n  /*\r\n   * Type association with URL\r\n   */\r\n  public urlFilterList = {\r\n    AdmRegion: 'regadmin',\r\n    Arrond: 'arrondissements',\r\n    CircFed: 'circ-fed',\r\n    CircProv: 'circ-prov',\r\n    DirReg: 'dir-reg',\r\n    MRC: 'mrc',\r\n    Mun: 'municipalites',\r\n    RegTour: 'tourisme',\r\n    bornes: 'bornes-sumi',\r\n    hydro: 'hydro',\r\n    routes: 'routes'\r\n  };\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private languageService: LanguageService,\r\n    private configService: ConfigService\r\n  ) {\r\n    this.baseUrl =\r\n      this.configService.getConfig('spatialFilter.url') || this.baseUrl;\r\n  }\r\n\r\n  getKeyByValue(object, value) {\r\n    return Object.keys(object).find(key => object[key] === value);\r\n  }\r\n\r\n  /*\r\n   * Loading data for spatial filter list component (NO GEOMETRY)\r\n   */\r\n  loadFilterList(type: SpatialFilterQueryType): Observable<Feature[]> {\r\n    const urlPath = type as string;\r\n    if (urlPath) {\r\n      return this.http\r\n        .get<{ features: Feature[] }>(\r\n          this.baseUrl + this.urlFilterList[urlPath]\r\n        )\r\n        .pipe(\r\n          map(featureCollection =>\r\n            featureCollection.features.map(f => {\r\n              f.meta = {\r\n                id: f.properties.code\r\n              };\r\n              return f;\r\n            })\r\n          )\r\n        );\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Loading item list (STRING)\r\n   */\r\n  loadThematicsList() {\r\n    const url = 'types';\r\n    const items: SpatialFilterThematic[] = [];\r\n    return this.http.get(this.baseUrl + url).pipe(\r\n      map((types: string[]) => {\r\n        types.forEach(type => {\r\n          if (type.startsWith('lieux')) {\r\n            const item: SpatialFilterThematic = {\r\n              name: undefined,\r\n              source: type\r\n            };\r\n            let substr = type.substring(6, type.length);\r\n            let name = substr;\r\n            if (substr.includes('.')) {\r\n              const index = substr.indexOf('.');\r\n              name = substr.substring(index + 1, substr.length);\r\n              substr = substr.substring(0, index);\r\n            }\r\n            try {\r\n              item.name = this.languageService.translate.instant(\r\n                'igo.geo.terrapi.' + name\r\n              );\r\n            } catch (e) {\r\n              item.name = name.substring(0, 1).toUpperCase() + name.substring(1, name.length - 1);\r\n            }\r\n\r\n            try {\r\n              item.group = this.languageService.translate.instant(\r\n                'igo.geo.spatialFilter.group.' + substr\r\n              );\r\n            } catch (e) {\r\n              item.group = substr.substring(0, 1).toUpperCase() + substr.substring(1, name.length - 1);\r\n            }\r\n\r\n            items.push(item);\r\n          } else {\r\n            if (this.getKeyByValue(this.urlFilterList, type)) {\r\n              const item: SpatialFilterThematic = {\r\n                name: undefined,\r\n                source: type\r\n              };\r\n              const name = this.getKeyByValue(this.urlFilterList, type);\r\n              try {\r\n                item.name = this.languageService.translate.instant(\r\n                  'igo.geo.terrapi.' + name\r\n                );\r\n              } catch (e) {\r\n                item.name = name.substring(0, 1).toUpperCase() + name.substring(1, name.length - 1);\r\n              }\r\n              item.source = type;\r\n\r\n              items.push(item);\r\n            }\r\n          }\r\n        });\r\n        return items;\r\n      })\r\n    );\r\n  }\r\n\r\n  /*\r\n   * Loading data for spatial filter item component (Address or Thematics) depends on predefined zone or draw zone (feature)\r\n   */\r\n  loadFilterItem(\r\n    feature,\r\n    itemType: SpatialFilterItemType,\r\n    type?: SpatialFilterQueryType,\r\n    thematic?: SpatialFilterThematic,\r\n    buffer?: number\r\n  ) {\r\n    if (type) {\r\n      // Predefined type\r\n      const urlType = type as string;\r\n      const url = this.baseUrl + this.urlFilterList[urlType];\r\n      let urlItem = '';\r\n      if (itemType === SpatialFilterItemType.Address) {\r\n        urlItem = 'adresses';\r\n        return this.http\r\n          .get<{ features: Feature[] }>(\r\n            url + '/' + feature.properties.code + '/' + urlItem,\r\n            {\r\n              params: {\r\n                geometry: 'true',\r\n                icon: 'true'\r\n              }\r\n            }\r\n          )\r\n          .pipe(\r\n            map(featureCollection =>\r\n              featureCollection.features.map(f => {\r\n                f.meta = {\r\n                  id: f.properties.code,\r\n                  title: this.languageService.translate.instant(\r\n                    'igo.geo.spatialFilter.Address'\r\n                  ),\r\n                  icon: (f as any).icon\r\n                };\r\n                return f;\r\n              })\r\n            )\r\n          );\r\n      } else {\r\n        // If thematics search\r\n        urlItem = thematic.source;\r\n        return this.http\r\n          .get<{ features: Feature[] }>(\r\n            url + '/' + feature.properties.code + '/' + urlItem,\r\n            {\r\n              params: {\r\n                geometry: 'true',\r\n                icon: 'true'\r\n              }\r\n            }\r\n          )\r\n          .pipe(\r\n            map(featureCollection =>\r\n              featureCollection.features.map(f => {\r\n                f.meta = {\r\n                  id: f.properties.code,\r\n                  title: thematic.name,\r\n                  icon: (f as any).icon\r\n                };\r\n                return f;\r\n              })\r\n            )\r\n          );\r\n      }\r\n    } else {\r\n      // Draw type\r\n      const url = this.baseUrl + 'locate';\r\n      if (itemType === SpatialFilterItemType.Address) {\r\n        const urlItem = '?type=adresses';\r\n        return this.http\r\n          .post<{ features: Feature[] }>(url + urlItem, {\r\n            geometry: 'true',\r\n            icon: 'true',\r\n            buffer,\r\n            loc: JSON.stringify(feature)\r\n          })\r\n          .pipe(\r\n            map(featureCollection =>\r\n              featureCollection.features.map(f => {\r\n                f.meta = {\r\n                  id: f.properties.code,\r\n                  title: this.languageService.translate.instant(\r\n                    'igo.geo.spatialFilter.Address'\r\n                  ),\r\n                  icon: (f as any).icon\r\n                };\r\n                return f;\r\n              })\r\n            )\r\n          );\r\n      } else {\r\n        // If thematics search\r\n        const urlItem = '?type=' + thematic.source;\r\n        return this.http\r\n          .post<{ features: Feature[] }>(url + urlItem, {\r\n            geometry: 'true',\r\n            icon: 'true',\r\n            buffer,\r\n            loc: JSON.stringify(feature)\r\n          })\r\n          .pipe(\r\n            map(featureCollection =>\r\n              featureCollection.features.map(f => {\r\n                f.meta = {\r\n                  id: f.properties.code,\r\n                  title: thematic.name,\r\n                  icon: (f as any).icon\r\n                };\r\n                return f;\r\n              })\r\n            )\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Get one territory by id (WITH GEOMETRY)\r\n   */\r\n  loadItemById(\r\n    feature: Feature,\r\n    type: SpatialFilterQueryType\r\n  ): Observable<Feature> {\r\n    const featureType = this.urlFilterList[type];\r\n    const featureCode = '/' + feature.properties.code;\r\n    if (featureType && featureCode) {\r\n      return this.http\r\n        .get<Feature>(this.baseUrl + featureType + featureCode, {\r\n          params: {\r\n            geometry: 'true'\r\n          }\r\n        })\r\n        .pipe(\r\n          map(f => {\r\n            f.meta = {\r\n              id: f.properties.code,\r\n              alias: f.properties.nom,\r\n              title: f.properties.nom\r\n            };\r\n            return f;\r\n          })\r\n        );\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport olProjection from 'ol/proj/Projection';\r\n\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\nimport { Layer } from '../../layer/shared';\r\nimport { OgcFilterWriter, OgcFilterableDataSourceOptions } from '../../filter/shared';\r\n\r\nimport { DataSourceOptions } from '../../datasource/shared/datasources/datasource.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DownloadService {\r\n\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService\r\n  ) {}\r\n\r\n  open(layer: Layer) {\r\n    const translate = this.languageService.translate;\r\n    const title = translate.instant('igo.geo.download.title');\r\n    this.messageService.success(\r\n      translate.instant('igo.geo.download.start'),\r\n      title\r\n    );\r\n\r\n    const DSOptions: DataSourceOptions = layer.dataSource.options;\r\n    if (Object.keys(DSOptions.download).length > 0) {\r\n      if (\r\n        DSOptions.download.dynamicUrl &&\r\n        DSOptions.download.url === undefined\r\n      ) {\r\n        let wfsOptions;\r\n        if (\r\n          (layer.dataSource.options as any).paramsWFS &&\r\n          Object.keys((layer.dataSource.options as any).paramsWFS).length > 0\r\n        ) {\r\n          wfsOptions = (layer.dataSource.options as any).paramsWFS;\r\n        } else {\r\n          wfsOptions = (layer.dataSource.options as any).params;\r\n        }\r\n\r\n        const outputFormatDownload =\r\n          wfsOptions.outputFormatDownload === undefined\r\n            ? 'outputformat=' + wfsOptions.outputFormat\r\n            : 'outputformat=' + wfsOptions.outputFormatDownload;\r\n\r\n        const baseurl = DSOptions.download.dynamicUrl\r\n          .replace(/&?outputformat=[^&]*/gi, '')\r\n          .replace(/&?filter=[^&]*/gi, '')\r\n          .replace(/&?bbox=[^&]*/gi, '');\r\n\r\n        const ogcFilters = (layer.dataSource.options as OgcFilterableDataSourceOptions).ogcFilters;\r\n\r\n        let filterQueryString;\r\n        filterQueryString = new OgcFilterWriter()\r\n        .handleOgcFiltersAppliedValue(\r\n          layer.dataSource.options,\r\n          ogcFilters.geometryName,\r\n          layer.map.viewController.getExtent(),\r\n          new olProjection({ code: layer.map.projection }));\r\n        if (!filterQueryString) {\r\n          // Prevent getting all the features for empty filter\r\n            filterQueryString = new OgcFilterWriter().buildFilter(\r\n            undefined,\r\n            layer.map.viewController.getExtent(),\r\n            new olProjection({ code: layer.map.projection }),\r\n            ogcFilters.geometryName\r\n          );\r\n        } else {\r\n          filterQueryString = 'filter=' + encodeURIComponent(filterQueryString);\r\n        }\r\n        window.open(\r\n          `${baseurl}&${filterQueryString}&${outputFormatDownload}`,\r\n          '_blank'\r\n        );\r\n      } else if (DSOptions.download) {\r\n        window.open(DSOptions.download.url, '_blank');\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\nimport { DownloadDataSourceOptions } from '../shared/download.interface';\r\nimport { DownloadService } from '../shared/download.service';\r\n\r\n@Component({\r\n  selector: 'igo-download-button',\r\n  templateUrl: './download-button.component.html',\r\n  styleUrls: ['./download-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DownloadButtonComponent {\r\n  @Input()\r\n  get layer(): Layer {\r\n    return this._layer;\r\n  }\r\n  set layer(value: Layer) {\r\n    this._layer = value;\r\n  }\r\n  private _layer: Layer;\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  constructor(private downloadService: DownloadService) {}\r\n\r\n  openDownload(layer: Layer) {\r\n    this.downloadService.open(layer);\r\n  }\r\n\r\n  get options(): DownloadDataSourceOptions {\r\n    if (!this.layer) {\r\n      return;\r\n    }\r\n    return this.layer.dataSource.options;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { DownloadButtonComponent } from './download-button/download-button.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [DownloadButtonComponent],\r\n  declarations: [DownloadButtonComponent]\r\n})\r\nexport class IgoDownloadModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoDownloadModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\r\nimport { NetworkService, ConnectionState } from '@igo2/core';\r\n\r\nimport { getEntityTitle, getEntityIcon } from '@igo2/common';\r\n\r\nimport { Feature } from '../shared';\r\nimport { SearchSource } from '../../search/shared/sources/source';\r\n\r\n@Component({\r\n  selector: 'igo-feature-details',\r\n  templateUrl: './feature-details.component.html',\r\n  styleUrls: ['./feature-details.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FeatureDetailsComponent {\r\n  private state: ConnectionState;\r\n\r\n  @Input()\r\n  get source(): SearchSource {\r\n    return this._source;\r\n  }\r\n  set source(value: SearchSource ) {\r\n    this._source = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  private _feature: Feature;\r\n  private _source: SearchSource;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string {\r\n    return getEntityTitle(this.feature);\r\n  }\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get icon(): string {\r\n    return getEntityIcon(this.feature) || 'link';\r\n  }\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private sanitizer: DomSanitizer,\r\n    private networkService: NetworkService\r\n  ) {\r\n    this.networkService.currentState().subscribe((state: ConnectionState) => {\r\n      this.state = state;\r\n    });\r\n  }\r\n\r\n  htmlSanitizer(value): SafeResourceUrl {\r\n    return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n  }\r\n\r\n  isObject(value) {\r\n    return typeof value === 'object';\r\n  }\r\n\r\n  isUrl(value) {\r\n    if (typeof value === 'string') {\r\n      return (\r\n        value.slice(0, 8) === 'https://' || value.slice(0, 7) === 'http://'\r\n      );\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  filterFeatureProperties(feature) {\r\n    const allowedFieldsAndAlias = feature.meta ? feature.meta.alias : undefined;\r\n    const properties = {};\r\n\r\n    if (allowedFieldsAndAlias) {\r\n      Object.keys(allowedFieldsAndAlias).forEach(field => {\r\n        properties[allowedFieldsAndAlias[field]] = feature.properties[field];\r\n      });\r\n      return properties;\r\n    } else {\r\n        if (this.state.connection && feature.meta && feature.meta.excludeAttribute) {\r\n          const excludeAttribute = feature.meta.excludeAttribute;\r\n          excludeAttribute.forEach(attribute => {\r\n            delete feature.properties[attribute];\r\n          });\r\n        } else if (!this.state.connection && feature.meta && feature.meta.excludeAttributeOffline) {\r\n          const excludeAttributeOffline = feature.meta.excludeAttributeOffline;\r\n          excludeAttributeOffline.forEach(attribute => {\r\n            delete feature.properties[attribute];\r\n          });\r\n        }\r\n        return feature.properties;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoKeyValueModule } from '@igo2/common';\r\n\r\nimport { FeatureDetailsComponent } from './feature-details.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    IgoLanguageModule,\r\n    IgoKeyValueModule\r\n  ],\r\n  exports: [FeatureDetailsComponent],\r\n  declarations: [FeatureDetailsComponent]\r\n})\r\nexport class IgoFeatureDetailsModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoFormModule } from '@igo2/common';\r\n\r\nimport { FeatureFormComponent } from './feature-form.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoFormModule\r\n  ],\r\n  exports: [\r\n    IgoFormModule,\r\n    FeatureFormComponent\r\n  ],\r\n  declarations: [\r\n    FeatureFormComponent\r\n  ]\r\n})\r\nexport class IgoFeatureFormModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoFeatureDetailsModule } from './feature-details/feature-details.module';\r\nimport { IgoFeatureFormModule } from './feature-form/feature-form.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n    IgoFeatureDetailsModule,\r\n    IgoFeatureFormModule\r\n  ],\r\n  declarations: [],\r\n  providers: []\r\n})\r\nexport class IgoFeatureModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport OlGeometryType from 'ol/geom/GeometryType';\r\nimport { Style as OlStyle } from 'ol/style';\r\n\r\nimport { FormFieldComponent } from '@igo2/common';\r\n\r\nimport { IgoMap } from '../../map';\r\nimport { GeoJSONGeometry } from '../shared/geometry.interfaces';\r\n\r\n/**\r\n * This input allows a user to draw a new geometry or to edit\r\n * an existing one on a map.\r\n */\r\n@FormFieldComponent('geometry')\r\n@Component({\r\n  selector: 'igo-geometry-form-field',\r\n  templateUrl: './geometry-form-field.component.html',\r\n  styleUrls: ['./geometry-form-field.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GeometryFormFieldComponent implements OnInit, OnDestroy {\r\n\r\n  readonly value$: BehaviorSubject<GeoJSONGeometry> = new BehaviorSubject(undefined);\r\n\r\n  private value$$: Subscription;\r\n\r\n  public drawControlIsActive = true;\r\n  public freehandDrawIsActive = false;\r\n\r\n  /**\r\n   * The field's form control\r\n   */\r\n  @Input() formControl: FormControl;\r\n\r\n  /**\r\n   * The map to draw the geometry on\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  @Input()\r\n  set geometryType(value: OlGeometryType) { this.geometryType$.next(value); }\r\n  get geometryType(): OlGeometryType { return this.geometryType$.value; }\r\n  readonly geometryType$: BehaviorSubject<OlGeometryType> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Whether a geometry type toggle should be displayed\r\n   */\r\n  @Input() geometryTypeField: boolean = false;\r\n\r\n  /**\r\n   * Available geometry types\r\n   */\r\n  @Input() geometryTypes: string[] = ['Point', 'LineString', 'Polygon'];\r\n\r\n  /**\r\n   * Whether a draw guide field should be displayed\r\n   */\r\n  @Input() drawGuideField: boolean = false;\r\n\r\n  /**\r\n   * The drawGuide around the mouse pointer to help drawing\r\n   */\r\n  @Input()\r\n  set drawGuide(value: number) { this.drawGuide$.next(value); }\r\n  get drawGuide(): number { return this.drawGuide$.value; }\r\n  readonly drawGuide$: BehaviorSubject<number> = new BehaviorSubject(0);\r\n\r\n  /**\r\n   * Draw guide placeholder\r\n   */\r\n  @Input() drawGuidePlaceholder: string = '';\r\n\r\n  /**\r\n   * Whether a measure tooltip should be displayed\r\n   */\r\n  @Input() measure: boolean = false;\r\n\r\n  /**\r\n   * Style for the draw control (applies while the geometry is being drawn)\r\n   */\r\n  @Input() drawStyle: OlStyle;\r\n\r\n  /**\r\n   * Style for the overlay layer (applies once the geometry is added to the map)\r\n   * If not specified, drawStyle applies\r\n   */\r\n  @Input() overlayStyle: OlStyle;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Set up a value stream\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.value$.next(this.formControl.value ? this.formControl.value : undefined);\r\n    this.value$$ = this.formControl.valueChanges.subscribe((value: GeoJSONGeometry) => {\r\n      this.value$.next(value ? value : undefined);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the value stream\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.value$$.unsubscribe();\r\n  }\r\n}\r\n","\r\nexport const MEASURE_UNIT_AUTO = 'auto';\r\n\r\nexport enum MeasureType {\r\n  Length = 'length',\r\n  Area = 'area'\r\n}\r\n\r\nexport enum MeasureLengthUnit {\r\n  Meters = 'meters',\r\n  Kilometers = 'kilometers',\r\n  Miles = 'miles',\r\n  Feet = 'feet'\r\n}\r\n\r\nexport const MeasureLengthUnitAbbreviation = {\r\n  [MeasureLengthUnit.Meters]: 'm',\r\n  [MeasureLengthUnit.Kilometers]: 'km',\r\n  [MeasureLengthUnit.Miles]: 'mi',\r\n  [MeasureLengthUnit.Feet]: 'ft'\r\n};\r\n\r\nexport enum MeasureAreaUnit {\r\n  SquareMeters = 'squareMeters',\r\n  SquareKilometers = 'squareKilometers',\r\n  SquareMiles = 'squareMiles',\r\n  SquareFeet = 'squareFeet',\r\n  Hectares = 'hectares',\r\n  Acres = 'acres'\r\n}\r\n\r\nexport const MeasureAreaUnitAbbreviation = {\r\n  [MeasureAreaUnit.SquareMeters]: 'mÂ²',\r\n  [MeasureAreaUnit.SquareKilometers]: 'kmÂ²',\r\n  [MeasureAreaUnit.SquareMiles]: 'miÂ²',\r\n  [MeasureAreaUnit.SquareFeet]: 'ftÂ²',\r\n  [MeasureAreaUnit.Hectares]: 'ha',\r\n  [MeasureAreaUnit.Acres]: 'ac'\r\n};\r\n","import { LanguageService } from '@igo2/core';\r\nimport * as olstyle from 'ol/style';\r\nimport OlGeometry from 'ol/geom/Geometry';\r\nimport OlPoint from 'ol/geom/Point';\r\nimport OlLineString from 'ol/geom/LineString';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlOverlay from 'ol/Overlay';\r\nimport { getCenter as olGetCenter } from 'ol/extent';\r\nimport {\r\n  getLength as olGetLength,\r\n  getArea as olGetArea\r\n} from 'ol/sphere';\r\n\r\nimport { Measure } from './measure.interfaces';\r\nimport {\r\n  MeasureAreaUnit,\r\n  MeasureAreaUnitAbbreviation,\r\n  MeasureLengthUnit,\r\n  MeasureLengthUnitAbbreviation\r\n} from './measure.enum';\r\n\r\n/**\r\n * Convert value from meters to kilometers\r\n * @param value Value in meters\r\n * @returns Value in kilometers\r\n */\r\nexport function metersToKilometers(value: number): number {\r\n  return value * 0.001;\r\n}\r\n\r\n/**\r\n * Convert value from meters to feet\r\n * @param value Value in meters\r\n * @returns Value in feet\r\n */\r\nexport function metersToFeet(value: number): number {\r\n  return value * 3.2808;\r\n}\r\n\r\n/**\r\n * Convert value from meters to miles\r\n * @param value Value in meters\r\n * @returns Value in miles\r\n */\r\nexport function metersToMiles(value: number): number {\r\n  return value * 0.000621;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to square kilometers\r\n * @param value Value in square meters\r\n * @returns Value in square kilometers\r\n */\r\nexport function squareMetersToSquareKilometers(value: number): number {\r\n  return value * 0.000001;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to square miles\r\n * @param value Value in square meters\r\n * @returns Value in square miles\r\n */\r\nexport function squareMetersToSquareMiles(value: number): number {\r\n  return value * 0.0000003861;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to square feet\r\n * @param value Value in square meters\r\n * @returns Value in square feet\r\n */\r\nexport function squareMetersToSquareFeet(value: number): number {\r\n  return value * 10.764;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to hectares\r\n * @param value Value in square meters\r\n * @returns Value in hectares\r\n */\r\nexport function squareMetersToHectares(value: number): number {\r\n  return value * 0.0001;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to acres\r\n * @param value Value in square meters\r\n * @returns Value in acres\r\n */\r\nexport function squareMetersToAcres(value: number): number {\r\n  return value * 0.00024711;\r\n}\r\n\r\n/**\r\n * Convert value from meters to the specified length unit\r\n * @param value Value in meters\r\n * @param unit Length unit\r\n * @returns Value in unit\r\n */\r\nexport function metersToUnit(value: number, unit: MeasureLengthUnit): number | undefined {\r\n  const conversionMapper = new Map([\r\n    [MeasureLengthUnit.Meters, (val: number) => val],\r\n    [MeasureLengthUnit.Kilometers, metersToKilometers],\r\n    [MeasureLengthUnit.Miles, metersToMiles],\r\n    [MeasureLengthUnit.Feet, metersToFeet],\r\n  ]);\r\n  const conversion = conversionMapper.get(unit);\r\n\r\n  return conversion ? conversion(value) : undefined;\r\n}\r\n\r\n/**\r\n * Convert value from square meters to the specified area unit\r\n * @param value Value in meters\r\n * @param unit Area unit\r\n * @returns Value in unit\r\n */\r\nexport function squareMetersToUnit(value: number, unit: MeasureAreaUnit): number | undefined {\r\n  const conversionMapper = new Map([\r\n    [MeasureAreaUnit.SquareMeters, (val: number) => val],\r\n    [MeasureAreaUnit.SquareKilometers, squareMetersToSquareKilometers],\r\n    [MeasureAreaUnit.SquareMiles, squareMetersToSquareMiles],\r\n    [MeasureAreaUnit.SquareFeet, squareMetersToSquareFeet],\r\n    [MeasureAreaUnit.Hectares, squareMetersToHectares],\r\n    [MeasureAreaUnit.Acres, squareMetersToAcres],\r\n  ]);\r\n  const conversion = conversionMapper.get(unit);\r\n\r\n  return conversion ? conversion(value) : undefined;\r\n}\r\n\r\n/**\r\n * This method format a measure to a readable format\r\n * @param measure Measure\r\n * @param options Formatting options\r\n * @returns Formatted measure\r\n */\r\nexport function formatMeasure(\r\n  measure: number,\r\n  options?: {\r\n    decimal?: number;\r\n    unit?: MeasureAreaUnit | MeasureLengthUnit;\r\n    unitAbbr?: boolean;\r\n    locale?: string;\r\n  },\r\n  languageService?: LanguageService) {\r\n  let decimal = options.decimal;\r\n  if (decimal === undefined || decimal < 0) {\r\n    decimal = 1;\r\n  }\r\n\r\n  const parts = [];\r\n  if (options.locale !== undefined) {\r\n    parts.push(measure.toLocaleString(options.locale, {\r\n      minimumFractionDigits: decimal,\r\n      maximumFractionDigits: decimal\r\n    }));\r\n  } else {\r\n    parts.push(measure.toFixed(decimal).toString());\r\n  }\r\n\r\n  if (options.unit !== undefined && options.unitAbbr === true) {\r\n    if (languageService) {\r\n      parts.push(\r\n        MeasureLengthUnitAbbreviation[options.unit] ?\r\n          languageService.translate.instant('igo.geo.measure.' + MeasureLengthUnitAbbreviation[options.unit]) :\r\n          languageService.translate.instant('igo.geo.measure.' + MeasureAreaUnitAbbreviation[options.unit])\r\n      );\r\n    } else {\r\n      parts.push(\r\n        MeasureLengthUnitAbbreviation[options.unit] || MeasureAreaUnitAbbreviation[options.unit]\r\n      );\r\n    }\r\n  }\r\n\r\n  return parts.filter(p => p !== undefined).join(' ');\r\n}\r\n\r\n/**\r\n * Compute best length measure unit for a given measure in meters\r\n * @param value Value in meters\r\n * @returns Measure unit\r\n */\r\nexport function computeBestLengthUnit(value: number): MeasureLengthUnit {\r\n  let unit = MeasureLengthUnit.Meters;\r\n  let converted = value;\r\n  const possibleUnits = [MeasureLengthUnit.Kilometers];\r\n  while (converted > 1000 && possibleUnits.length > 0) {\r\n    unit = possibleUnits.pop();\r\n    converted = metersToUnit(value, unit);\r\n  }\r\n  return unit;\r\n}\r\n\r\n/**\r\n * Compute best length measure unit for a given measure in square meters\r\n * @param value Value in meters\r\n * @returns Measure unit\r\n */\r\nexport function computeBestAreaUnit(value: number): MeasureAreaUnit {\r\n  let unit = MeasureAreaUnit.SquareMeters;\r\n  let converted = value;\r\n  const possibleUnits = [MeasureAreaUnit.SquareKilometers];\r\n  while (converted > 1000000 && possibleUnits.length > 0) {\r\n    unit = possibleUnits.pop();\r\n    converted = squareMetersToUnit(value, unit);\r\n  }\r\n  return unit;\r\n}\r\n\r\n/**\r\n * Create a default style for a measure interaction\r\n * @returns OL style\r\n */\r\nexport function createMeasureInteractionStyle(): olstyle.Style {\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color: '#ffcc33',\r\n      lineDash: [10, 10],\r\n      width: 2\r\n    }),\r\n    fill:  new olstyle.Fill({\r\n      color: 'rgba(255, 255, 255, 0.2)'\r\n    }),\r\n    image: new olstyle.Circle({\r\n      radius: 5,\r\n      stroke: new olstyle.Stroke({\r\n        color: '#ffcc33',\r\n      }),\r\n      fill: new olstyle.Fill({\r\n        color: 'rgba(255, 255, 255, 0.2)'\r\n      })\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Create a default style for a measure layer\r\n * @returns OL style\r\n */\r\nexport function createMeasureLayerStyle(): olstyle.Style {\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color: '#ffcc33',\r\n      width: 2\r\n    }),\r\n    fill:  new olstyle.Fill({\r\n      color: 'rgba(255, 255, 255, 0.2)'\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Compute the length in meters of an OL geometry with a given projection\r\n * @param olGeometry Ol geometry\r\n * @param projection olGeometry's projection\r\n * @returns Length in meters\r\n */\r\nexport function measureOlGeometryLength(olGeometry: OlGeometry, projection: string): number | undefined {\r\n  if (olGeometry instanceof OlPoint) {\r\n    return undefined;\r\n  }\r\n  if (olGeometry.getFlatCoordinates().length === 0) {\r\n    return undefined;\r\n  }\r\n  return olGetLength(olGeometry, {projection});\r\n}\r\n\r\n/**\r\n * Compute the area in square meters of an OL geometry with a given projection\r\n * @param olGeometry Ol geometry\r\n * @param projection olGeometry's projection\r\n * @returns Area in square meters\r\n */\r\nexport function measureOlGeometryArea(olGeometry: OlGeometry, projection: string): number | undefined {\r\n  if (olGeometry instanceof OlPoint || olGeometry instanceof OlLineString) {\r\n    return undefined;\r\n  }\r\n  if (olGeometry.getFlatCoordinates().length === 0) {\r\n    return undefined;\r\n  }\r\n  return olGetArea(olGeometry, {projection});\r\n}\r\n\r\n/**\r\n * Compute the area (square meters), length (meters) and last length (meters)\r\n * of an OL geometry with a given projection.\r\n * @param olGeometry Ol geometry\r\n * @param projection olGeometry's projection\r\n * @returns Computed measure\r\n */\r\nexport function measureOlGeometry(olGeometry: OlGeometry, projection: string): Measure {\r\n  const length = measureOlGeometryLength(olGeometry, projection);\r\n  const area = measureOlGeometryArea(olGeometry, projection);\r\n\r\n  const lengths = [];\r\n  const coordinates = olGeometry.flatCoordinates;\r\n  const coordinatesLength = coordinates.length;\r\n  for (let i = 0; i <= coordinatesLength - 4; i += 2) {\r\n    const olSegment = new OlLineString([\r\n      [coordinates[i], coordinates[i + 1]],\r\n      [coordinates[i + 2], coordinates[i + 3]]\r\n    ]);\r\n\r\n    lengths.push(measureOlGeometryLength(olSegment, projection));\r\n  }\r\n\r\n  return {\r\n    area,\r\n    length,\r\n    lengths\r\n  };\r\n}\r\n\r\n/**\r\n * Update an OL geometry midpoints and return an array of those points\r\n * @param olGeometry OL Geometry\r\n * @returns OL points\r\n */\r\nexport function updateOlGeometryMidpoints(olGeometry: OlLineString | OlPolygon): OlPoint[] {\r\n  const olMidpoints = getOlGeometryMidpoints(olGeometry);\r\n\r\n  // TODO: handle multi geometries\r\n  const coordinates = olGeometry.flatCoordinates;\r\n  const midpointsLength = olMidpoints.length;\r\n  for (let i = 0; i < midpointsLength; i++) {\r\n    const j = i * 2;\r\n    const olSegment = new OlLineString([\r\n      [coordinates[j], coordinates[j + 1]],\r\n      [coordinates[j + 2], coordinates[j + 3]]\r\n    ]);\r\n\r\n    const midpointCoordinate = olSegment.getCoordinateAt(0.5);\r\n    const olMidpoint = olMidpoints[i];\r\n    if (olMidpoint !== undefined) {\r\n      olMidpoint.setCoordinates(midpointCoordinate);\r\n    } else {\r\n      olMidpoints[i] = new OlPoint(midpointCoordinate);\r\n    }\r\n  }\r\n  return olMidpoints;\r\n}\r\n\r\n/**\r\n * Clear an OL geometry midpoints and return an array of those points\r\n * @param olGeometry OL Geometry\r\n */\r\nexport function clearOlGeometryMidpoints(olGeometry: OlLineString | OlPolygon) {\r\n  const olMidpoints = olGeometry.get('_midpoints') || [];\r\n  const midpointsLength = olMidpoints.length;\r\n  for (let i = 0; i < midpointsLength; i++) {\r\n    const olMidpoint = olMidpoints[i];\r\n    if (olMidpoint !== undefined) {\r\n      if (olMidpoint !== undefined) {\r\n        clearOlMidpointTooltip(olMidpoint);\r\n      }\r\n    }\r\n  }\r\n\r\n  olGeometry.set('_midpoints', undefined, true);\r\n\r\n  return olMidpoints;\r\n}\r\n\r\n/**\r\n * Return an array of  OL geometry midpoints, if any\r\n * @param olGeometry OL Geometry\r\n * @returns OL points\r\n */\r\nfunction getOlGeometryMidpoints(olGeometry: OlLineString | OlPolygon): OlPoint[] {\r\n  const expectedNumber = Math.max((olGeometry.flatCoordinates.length / 2) - 1, 0);\r\n\r\n  // TODO: This works but it's quite messy. If time permits,\r\n  // clean this. Maybe a Tooltip class could handle that\r\n  let olMidpoints = olGeometry.get('_midpoints');\r\n  if (olMidpoints === undefined) {\r\n    olMidpoints = new Array(expectedNumber);\r\n    olGeometry.set('_midpoints', olMidpoints, true);\r\n    return olMidpoints;\r\n  }\r\n\r\n  if (expectedNumber === olMidpoints.length) {\r\n    return olMidpoints;\r\n  }\r\n\r\n  if (expectedNumber > olMidpoints.length) {\r\n    olMidpoints.push(...new Array(expectedNumber - olMidpoints.length));\r\n    return olMidpoints;\r\n  }\r\n\r\n  for (let i = expectedNumber; i < olMidpoints.length; i++) {\r\n    const olMidpoint = olMidpoints[expectedNumber];\r\n    if (olMidpoint !== undefined) {\r\n      clearOlMidpointTooltip(olMidpoint);\r\n    }\r\n  }\r\n  olMidpoints.splice(expectedNumber);\r\n\r\n  return olMidpoints;\r\n}\r\n\r\n/**\r\n * Remove an OL midpoint's tooltip from the map\r\n * @param olMidpoint OL Point\r\n */\r\nfunction clearOlMidpointTooltip(olMidpoint: OlPoint) {\r\n  const olTooltip = olMidpoint.get('_tooltip');\r\n  if (olTooltip !== undefined) {\r\n    const olMap = olTooltip.getMap();\r\n    if (olMap !== undefined) {\r\n      olMap.removeOverlay(olTooltip);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Add an OL overlay at each midpoint and return an array of those overlays\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function updateOlTooltipsAtMidpoints(olGeometry: OlLineString | OlPolygon): OlOverlay[] {\r\n  const olMidpoints = updateOlGeometryMidpoints(olGeometry);\r\n  const olTooltips = olMidpoints.map((olMidpoint: OlPoint) => {\r\n    let olTooltip = olMidpoint.get('_tooltip');\r\n    if (olTooltip === undefined) {\r\n      olTooltip = createOlTooltipAtPoint(olMidpoint);\r\n    } else {\r\n      olTooltip.setPosition(olMidpoint.flatCoordinates);\r\n    }\r\n    return olTooltip;\r\n  });\r\n  return olTooltips;\r\n}\r\n\r\n/**\r\n * Return an array of OL overlay at midspoints, if any\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function getOlTooltipsAtMidpoints(olGeometry: OlLineString | OlPolygon): OlOverlay[] {\r\n  const olMidpoints = getOlGeometryMidpoints(olGeometry);\r\n  return olMidpoints.map((olMidpoint: OlPoint) => {\r\n    return olMidpoint ? olMidpoint.get('_tooltip') : undefined;\r\n  });\r\n}\r\n\r\n/**\r\n * Update an OL geometry center and return it\r\n * @param olGeometry OL Geometry\r\n * @returns OL point\r\n */\r\nexport function updateOlGeometryCenter(olGeometry: OlLineString | OlPolygon): OlPoint {\r\n  let olCenter = olGeometry.get('_center');\r\n  const centerCoordinate = olGetCenter(olGeometry.getExtent());\r\n  if (olCenter !== undefined) {\r\n    olCenter.setCoordinates(centerCoordinate);\r\n  } else {\r\n    olCenter = new OlPoint(centerCoordinate);\r\n    olGeometry.set('_center', olCenter);\r\n  }\r\n\r\n  return olCenter;\r\n}\r\n\r\n/**\r\n * Add an OL overlay at the center of a geometry and return that overlay\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlay\r\n */\r\nexport function updateOlTooltipAtCenter(olGeometry: OlLineString | OlPolygon): OlOverlay {\r\n  const olCenter = updateOlGeometryCenter(olGeometry);\r\n  let olTooltip = olCenter.get('_tooltip');\r\n  if (olTooltip === undefined) {\r\n    olTooltip = createOlTooltipAtPoint(olCenter);\r\n  } else {\r\n    olTooltip.setPosition(olCenter.flatCoordinates);\r\n  }\r\n  return olTooltip;\r\n}\r\n\r\n/**\r\n * Return an array of OL overlay at midspoints, if any\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function getOlTooltipAtCenter(olGeometry: OlLineString | OlPolygon): OlOverlay {\r\n  const olCenter = olGeometry.get('_center');\r\n  return olCenter ? olCenter.get('_tooltip') : undefined;\r\n}\r\n\r\n/**\r\n * Get all the tooltips of an OL geometry\r\n * @param olGeometry OL Geometry\r\n * @returns OL overlays\r\n */\r\nexport function getTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon): OlOverlay[] {\r\n  const olTooltips = [].concat(getOlTooltipsAtMidpoints(olGeometry) || []);\r\n  const olCenterTooltip = getOlTooltipAtCenter(olGeometry);\r\n  if (olCenterTooltip !== undefined) {\r\n    olTooltips.push(olCenterTooltip);\r\n  }\r\n  return olTooltips;\r\n}\r\n\r\n/**\r\n * Create an OL overlay at a point and bind the overlay to the point\r\n * @param olPoint OL Point\r\n * @returns OL overlay\r\n */\r\nexport function createOlTooltipAtPoint(olPoint: OlPoint): OlOverlay {\r\n  const olTooltip = new OlOverlay({\r\n    element: document.createElement('div'),\r\n    offset: [-30, -10],\r\n    className: [\r\n      'igo-map-tooltip',\r\n      'igo-map-tooltip-measure'\r\n    ].join(' '),\r\n    stopEvent: false\r\n  });\r\n  olTooltip.setPosition(olPoint.flatCoordinates);\r\n  olPoint.set('_tooltip', olTooltip);\r\n\r\n  return olTooltip;\r\n}\r\n","/* tslint:disable */\r\n// See this issue: https://github.com/Microsoft/TypeScript/issues/13965\r\n// And the solution: https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\n// for an explanation as to why the prototype is set manually\r\n/* tslint:enable */\r\n\r\nexport class GeometrySliceError extends Error {}\r\n\r\nexport class GeometrySliceMultiPolygonError extends GeometrySliceError {\r\n  constructor() {\r\n    super('Can\\'t slice a MultiPolygon.');\r\n    Object.setPrototypeOf(this, GeometrySliceMultiPolygonError.prototype);\r\n  }\r\n}\r\n\r\nexport class GeometrySliceLineStringError extends GeometrySliceError {\r\n  constructor() {\r\n    super('Can\\'t slice with a line that has more than 2 points.');\r\n    Object.setPrototypeOf(this, GeometrySliceLineStringError.prototype);\r\n  }\r\n}\r\n\r\nexport class GeometrySliceTooManyIntersectionError extends GeometrySliceError {\r\n  constructor() {\r\n    super('More than 2 intersections found between the target polygon and the slicing line.');\r\n    Object.setPrototypeOf(this, GeometrySliceTooManyIntersectionError.prototype);\r\n  }\r\n}\r\n","import * as olstyle from 'ol/style';\r\nimport OlLineString from 'ol/geom/LineString';\r\nimport OlLinearRing from 'ol/geom/LinearRing';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport { GeometryEvent as OlGeometryEvent } from 'ol/geom/Geometry';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\nimport lineIntersect from '@turf/line-intersect';\r\nimport { lineString } from '@turf/helpers';\r\n\r\nimport {\r\n  GeometrySliceMultiPolygonError,\r\n  GeometrySliceLineStringError,\r\n  GeometrySliceTooManyIntersectionError\r\n } from './geometry.errors';\r\n\r\n/**\r\n * Create a default style for draw and modify interactions\r\n * @param color Style color (R, G, B)\r\n * @returns OL style\r\n */\r\nexport function createDrawInteractionStyle(color?: [number, number, number]): olstyle.Style {\r\n  color = color || [0, 153, 255];\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color: color.concat([1]),\r\n      width: 2\r\n    }),\r\n    fill:  new olstyle.Fill({\r\n      color: color.concat([0.2])\r\n    }),\r\n    image: new olstyle.Circle({\r\n      radius: 8,\r\n      stroke: new olstyle.Stroke({\r\n        color: color.concat([1])\r\n      }),\r\n      fill: new olstyle.Fill({\r\n        color: color.concat([0.2])\r\n      })\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Create a default style for drawing a hole\r\n * @returns OL style\r\n */\r\nexport function createDrawHoleInteractionStyle(): olstyle.Style {\r\n  return new olstyle.Style({\r\n    stroke: new olstyle.Stroke({\r\n      color:  [0, 153, 255, 1],\r\n      width: 2\r\n    })\r\n  });\r\n}\r\n\r\n/**\r\n * Slice geometry into two parts\r\n * @param olGeometry OL geometry\r\n * @param olSlicer Slicing line\r\n * @returns New OL geometries\r\n */\r\nexport function sliceOlGeometry(\r\n  olGeometry: OlLineString | OlPolygon,\r\n  olSlicer: OlLineString\r\n): Array<OlLineString | OlPolygon> {\r\n  if (olGeometry instanceof OlPolygon) {\r\n    return sliceOlPolygon(olGeometry, olSlicer);\r\n  } else if (olGeometry instanceof OlLineString) {\r\n    return sliceOlLineString(olGeometry, olSlicer);\r\n  }\r\n  return [];\r\n}\r\n\r\n/**\r\n * Slice OL LineString into one or more lines\r\n * @param olLineString OL line string\r\n * @param olSlicer Slicing line\r\n * @returns New OL line strings\r\n */\r\nexport function sliceOlLineString(olLineString: OlLineString, olSlicer: OlLineString): OlLineString[] {\r\n  return [];\r\n}\r\n\r\n/**\r\n * Slice OL Polygon into one or more polygons\r\n * @param olPolygon OL polygon\r\n * @param olSlicer Slicing line\r\n * @returns New OL polygons\r\n */\r\nexport function sliceOlPolygon(olPolygon: OlPolygon, olSlicer: OlLineString): OlPolygon[] {\r\n  if (olPolygon.getLinearRingCount() > 1) {\r\n    throw new GeometrySliceMultiPolygonError();\r\n  }\r\n\r\n  if (olSlicer.getCoordinates().length > 2) {\r\n    throw new GeometrySliceLineStringError();\r\n  }\r\n\r\n  const olGeoJSON = new OlGeoJSON();\r\n  const slicer = olGeoJSON.writeGeometryObject(olSlicer);\r\n  const outerCoordinates = olPolygon.getLinearRing(0).getCoordinates();\r\n\r\n  const parts = [[], []];\r\n  let totalIntersectionCount = 0;\r\n  for (let i = 0, ii = outerCoordinates.length - 1; i < ii; i++) {\r\n    const segmentCoordinates = [outerCoordinates[i], outerCoordinates[i + 1]];\r\n    const segment = lineString(segmentCoordinates);\r\n    const intersections = lineIntersect(segment, slicer).features;\r\n\r\n    const intersectionCount = intersections.length;\r\n    totalIntersectionCount += intersectionCount;\r\n    if (intersectionCount > 1 || totalIntersectionCount > 2) {\r\n      throw new GeometrySliceTooManyIntersectionError();\r\n    }\r\n\r\n    parts[0].push(segmentCoordinates[0]);\r\n    if (intersectionCount === 1) {\r\n      const intersection = intersections[0].geometry.coordinates;\r\n      parts[0].push(intersection);\r\n      parts[1].push(intersection);\r\n      parts.reverse();\r\n    }\r\n  }\r\n\r\n  if (totalIntersectionCount <= 1) {\r\n    return [];\r\n  }\r\n\r\n  parts[0].push(parts[0][0]);\r\n  parts[1].push(parts[1][0]);\r\n\r\n  return [new OlPolygon([parts[0]]), new OlPolygon([parts[1]])];\r\n}\r\n\r\n/**\r\n * Splice geometry into two parts\r\n * @param olGeometry OL geometry\r\n * @param olSlicer Slicing line\r\n * @returns New OL geometries\r\n */\r\nexport function addLinearRingToOlPolygon(olPolygon: OlPolygon, olLinearRing: OlLinearRing ): OlPolygon {\r\n  // TODO: make some validation and support updating an existing linear ring\r\n  olPolygon.appendLinearRing(olLinearRing);\r\n}\r\n\r\nexport function getMousePositionFromOlGeometryEvent(\r\n  olEvent: OlGeometryEvent\r\n): [number, number] {\r\n  const olGeometry = olEvent.target;\r\n  if (olGeometry instanceof OlPolygon) {\r\n    return olGeometry.flatCoordinates.slice(-4, -2);\r\n  }\r\n  return olGeometry.flatCoordinates.slice(-2);\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlStyle from 'ol/style';\r\nimport OlGeometryType from 'ol/geom/GeometryType';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlDraw from 'ol/interaction/Draw';\r\nimport {\r\n  Geometry as OlGeometry,\r\n  GeometryEvent as OlGeometryEvent\r\n} from 'ol/geom/Geometry';\r\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\nimport { Subject, Subscription, fromEvent, BehaviorSubject } from 'rxjs';\r\n\r\nimport { getMousePositionFromOlGeometryEvent } from '../geometry.utils';\r\n\r\nexport interface DrawControlOptions {\r\n  geometryType: OlGeometryType;\r\n  source?: OlVectorSource;\r\n  layer?: OlVectorLayer;\r\n  layerStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  drawStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  maxPoints?: number;\r\n}\r\n\r\n/**\r\n * Control to draw geometries\r\n */\r\nexport class DrawControl {\r\n\r\n  /**\r\n   * Draw start observable\r\n   */\r\n  public start$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Draw end observable\r\n   */\r\n  public end$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Geometry changes observable\r\n   */\r\n  public changes$: Subject<OlGeometry> = new Subject();\r\n\r\n  private olMap: OlMap;\r\n  private olOverlayLayer: OlVectorLayer;\r\n  private olDrawInteraction: OlDraw;\r\n  private onDrawStartKey: string;\r\n  private onDrawEndKey: string;\r\n  private onChangesKey: string;\r\n\r\n  private mousePosition: [number, number];\r\n\r\n  private keyDown$$: Subscription;\r\n\r\n  freehand$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  /**\r\n   * Wheter the control is active\r\n   */\r\n  get active(): boolean {\r\n    return this.olMap !== undefined;\r\n  }\r\n\r\n  /**\r\n   * Geometry type\r\n   * @internal\r\n   */\r\n  get geometryType(): OlGeometryType {\r\n    return this.options.geometryType;\r\n  }\r\n\r\n  /**\r\n   * OL overlay source\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  constructor(private options: DrawControlOptions) {\r\n    if (options.layer !== undefined) {\r\n      this.olOverlayLayer = options.layer;\r\n    } else {\r\n      this.olOverlayLayer = this.createOlInnerOverlayLayer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add or remove this control to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap === undefined) {\r\n      this.clearOlInnerOverlaySource();\r\n      this.removeOlInnerOverlayLayer();\r\n      this.removeOlDrawInteraction();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n    this.addOlInnerOverlayLayer();\r\n    this.addOlDrawInteraction();\r\n  }\r\n\r\n  /**\r\n   * Return the overlay source\r\n   */\r\n  getSource(): OlVectorSource {\r\n    return this.olOverlaySource;\r\n  }\r\n\r\n  /**\r\n   * Create an overlay source if none is defined in the options\r\n   */\r\n  private createOlInnerOverlayLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: this.options.source ? this.options.source : new OlVectorSource(),\r\n      style: this.options.layerStyle,\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer if it wasn't defined in the options\r\n   */\r\n  private removeOlInnerOverlayLayer() {\r\n    if (this.options.layer === undefined && this.olMap !== undefined) {\r\n      this.olMap.removeLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer if it wasn't defined in the options\r\n   */\r\n  private addOlInnerOverlayLayer(): OlVectorLayer {\r\n    if (this.options.layer === undefined) {\r\n      this.olMap.addLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay source if it wasn't defined in the options\r\n   */\r\n  private clearOlInnerOverlaySource() {\r\n    if (this.options.layer === undefined && this.options.source === undefined) {\r\n      this.olOverlaySource.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a draw interaction to the map an set up some listeners\r\n   */\r\n  addOlDrawInteraction() {\r\n    let olDrawInteraction;\r\n    if (this.freehand$.getValue() === false) {\r\n      olDrawInteraction = new OlDraw({\r\n        type: this.geometryType,\r\n        source: this.getSource(),\r\n        stopClick: true,\r\n        style: this.options.drawStyle,\r\n        maxPoints: this.options.maxPoints,\r\n        freehand: false,\r\n        freehandCondition: () => false\r\n      });\r\n    } else {\r\n      if (this.geometryType === 'Point') {\r\n        olDrawInteraction = new OlDraw({\r\n          type: 'Circle',\r\n          source: this.getSource(),\r\n          maxPoints: this.options.maxPoints,\r\n          freehand: true\r\n        });\r\n      } else {\r\n        olDrawInteraction = new OlDraw({\r\n          type: this.geometryType,\r\n          source: this.getSource(),\r\n          maxPoints: this.options.maxPoints,\r\n          freehand: true\r\n        });\r\n      }\r\n    }\r\n\r\n    this.onDrawStartKey = olDrawInteraction\r\n      .on('drawstart', (event: OlDrawEvent) => this.onDrawStart(event));\r\n    this.onDrawEndKey = olDrawInteraction\r\n      .on('drawend', (event: OlDrawEvent) => this.onDrawEnd(event));\r\n    this.olMap.addInteraction(olDrawInteraction);\r\n    this.olDrawInteraction = olDrawInteraction;\r\n  }\r\n\r\n  /**\r\n   * Remove the draw interaction\r\n   */\r\n  private removeOlDrawInteraction() {\r\n    if (this.olDrawInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.unsubscribeToKeyDown();\r\n    unByKey(this.onDrawStartKey);\r\n    unByKey(this.onDrawEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olDrawInteraction);\r\n    }\r\n    this.olDrawInteraction = undefined;\r\n  }\r\n\r\n  /**\r\n   * When drawing starts, clear the overlay and start watching from changes\r\n   * @param event Draw start event\r\n   */\r\n  private onDrawStart(event: OlDrawEvent) {\r\n    const olGeometry = event.feature.getGeometry();\r\n    this.start$.next(olGeometry);\r\n    this.clearOlInnerOverlaySource();\r\n    this.onChangesKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      this.mousePosition = getMousePositionFromOlGeometryEvent(olGeometryEvent);\r\n      this.changes$.next(olGeometryEvent.target);\r\n    });\r\n    this.subscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * When drawing ends, update the geometry observable and start watching from changes\r\n   * @param event Draw end event\r\n   */\r\n  private onDrawEnd(event: OlDrawEvent) {\r\n    this.unsubscribeToKeyDown();\r\n    if (this.onChangesKey !== undefined) {\r\n      unByKey(this.onChangesKey);\r\n    }\r\n    this.end$.next(event.feature.getGeometry());\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key down to activate the draw control\r\n   */\r\n  private subscribeToKeyDown() {\r\n    this.unsubscribeToKeyDown();\r\n    this.keyDown$$ = fromEvent(document, 'keydown').subscribe((event: KeyboardEvent) => {\r\n      // On ESC key down, remove the last vertex\r\n      if (event.keyCode === 27) {\r\n        this.olDrawInteraction.removeLastPoint();\r\n        return;\r\n      }\r\n\r\n      // On space bar, pan to the current mouse position\r\n      if (event.keyCode === 32) {\r\n        this.olMap.getView().animate({\r\n          center: this.mousePosition,\r\n          duration: 0\r\n        });\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key down\r\n   */\r\n  private unsubscribeToKeyDown() {\r\n    if (this.keyDown$$ !== undefined) {\r\n      this.keyDown$$.unsubscribe();\r\n      this.keyDown$$ = undefined;\r\n    }\r\n  }\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlStyle from 'ol/style';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlModify from 'ol/interaction/Modify';\r\nimport OlTranslate from 'ol/interaction/Translate';\r\nimport OlDraw from 'ol/interaction/Draw';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlLinearRing from 'ol/geom/LinearRing';\r\nimport OlInteraction from 'ol/interaction/Interaction';\r\nimport OlDragBoxInteraction from 'ol/interaction/DragBox';\r\nimport { MapBrowserEvent as OlMapBrowserEvent } from 'ol/MapBrowserEvent';\r\nimport {\r\n  Geometry as OlGeometry,\r\n  GeometryEvent as OlGeometryEvent\r\n} from 'ol/geom/Geometry';\r\nimport { ModifyEvent as OlModifyEvent } from 'ol/interaction/Modify';\r\nimport { TranslateEvent as OlTranslateEvent } from 'ol/interaction/Translate';\r\nimport { DrawEvent as OlDrawEvent } from 'ol/interaction/Draw';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\nimport { Subject, Subscription, fromEvent } from 'rxjs';\r\n\r\nimport {\r\n  addLinearRingToOlPolygon,\r\n  createDrawHoleInteractionStyle,\r\n  getMousePositionFromOlGeometryEvent\r\n} from '../geometry.utils';\r\n\r\nexport interface ModifyControlOptions {\r\n  source?: OlVectorSource;\r\n  layer?: OlVectorLayer;\r\n  layerStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  drawStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n}\r\n\r\n/**\r\n * Control to modify geometries\r\n */\r\nexport class ModifyControl {\r\n\r\n  /**\r\n   * Modify start observable\r\n   */\r\n  public start$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Modify end observable\r\n   */\r\n  public end$: Subject<OlGeometry> = new Subject();\r\n\r\n  /**\r\n   * Geometry changes observable\r\n   */\r\n  public changes$: Subject<OlGeometry> = new Subject();\r\n\r\n  private olMap: OlMap;\r\n  private olOverlayLayer: OlVectorLayer;\r\n  public olModifyInteraction: OlModify;\r\n  private onModifyStartKey: string;\r\n  private onModifyEndKey: string;\r\n  private onModifyKey: string;\r\n  private olModifyInteractionIsActive: boolean = false;\r\n  private olTranslateInteraction: OlTranslate;\r\n  private onTranslateStartKey: string;\r\n  private onTranslateEndKey: string;\r\n  private onTranslateKey: string;\r\n  private olTranslateInteractionIsActive: boolean = false;\r\n  private olDrawInteraction: OlTranslate;\r\n  private onDrawStartKey: string;\r\n  private onDrawEndKey: string;\r\n  private onDrawKey: string;\r\n  private olDrawInteractionIsActive: boolean = false;\r\n\r\n  private mousePosition: [number, number];\r\n\r\n  private keyDown$$: Subscription;\r\n  private drawKeyUp$$: Subscription;\r\n  private drawKeyDown$$: Subscription;\r\n\r\n  private removedOlInteractions: OlInteraction[] = [];\r\n  private olLinearRingsLayer: OlVectorLayer;\r\n\r\n  // This is the geometry to test against when drawing holes\r\n  private olOuterGeometry: OlGeometry;\r\n\r\n  /**\r\n   * Wheter the control is active\r\n   */\r\n  get active(): boolean {\r\n    return this.olMap !== undefined;\r\n  }\r\n\r\n  /**\r\n   * OL overlay source\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  /**\r\n   * OL linear rings source\r\n   * @internal\r\n   */\r\n  get olLinearRingsSource(): OlVectorSource {\r\n    return this.olLinearRingsLayer.getSource();\r\n  }\r\n\r\n  constructor(private options: ModifyControlOptions) {\r\n    if (options.layer !== undefined) {\r\n      this.olOverlayLayer = options.layer;\r\n    } else {\r\n      this.olOverlayLayer = this.createOlInnerOverlayLayer();\r\n    }\r\n    this.olLinearRingsLayer = this.createOlLinearRingsLayer();\r\n  }\r\n\r\n  /**\r\n   * Add or remove this control to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap === undefined) {\r\n      this.clearOlInnerOverlaySource();\r\n      this.removeOlInnerOverlayLayer();\r\n      this.removeOlModifyInteraction();\r\n      this.removeOlTranslateInteraction();\r\n      this.removeOlDrawInteraction();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n    this.addOlInnerOverlayLayer();\r\n    this.addOlDrawInteraction();\r\n    this.addOlTranslateInteraction();\r\n    this.activateTranslateInteraction();\r\n    this.addOlModifyInteraction();\r\n    this.activateModifyInteraction();\r\n  }\r\n\r\n  /**\r\n   * Return the overlay source\r\n   */\r\n  getSource(): OlVectorSource {\r\n    return this.olOverlaySource;\r\n  }\r\n\r\n  /**\r\n   * Add an OL geometry to the overlay and start modifying it\r\n   * @param olGeometry Ol Geometry\r\n   */\r\n  setOlGeometry(olGeometry: OlGeometry) {\r\n    const olFeature = new OlFeature({geometry: olGeometry});\r\n    this.olOverlaySource.clear();\r\n    this.olOverlaySource.addFeature(olFeature);\r\n  }\r\n\r\n  /**\r\n   * Create an overlay source if none is defined in the options\r\n   */\r\n  private createOlInnerOverlayLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: this.options.source ? this.options.source : new OlVectorSource(),\r\n      style: this.options.layerStyle,\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer if it wasn't defined in the options\r\n   */\r\n  private addOlInnerOverlayLayer(): OlVectorLayer {\r\n    if (this.options.layer === undefined) {\r\n      this.olMap.addLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer if it wasn't defined in the options\r\n   */\r\n  private removeOlInnerOverlayLayer() {\r\n    if (this.options.layer === undefined && this.olMap !== undefined) {\r\n      this.olMap.removeLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay source if it wasn't defined in the options\r\n   */\r\n  private clearOlInnerOverlaySource() {\r\n    if (this.options.layer === undefined && this.options.source === undefined) {\r\n      this.olOverlaySource.clear();\r\n    }\r\n  }\r\n\r\n  private createOlLinearRingsLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: new OlVectorSource(),\r\n      style: createDrawHoleInteractionStyle(),\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add the linear rings layer\r\n   */\r\n  private addOlLinearRingsLayer() {\r\n    this.olMap.addLayer(this.olLinearRingsLayer);\r\n  }\r\n\r\n  /**\r\n   * Clear the linear rings layer\r\n   */\r\n  private removeOlLinearRingsLayer() {\r\n    this.olMap.removeLayer(this.olLinearRingsLayer);\r\n  }\r\n\r\n  /**\r\n   * Clear the linear rings source\r\n   */\r\n  private clearOlLinearRingsSource() {\r\n    this.olLinearRingsSource.clear(true);\r\n  }\r\n\r\n  /**\r\n   * Add a modify interaction to the map an set up some listeners\r\n   */\r\n  private addOlModifyInteraction() {\r\n    const olModifyInteraction = new OlModify({\r\n      source: this.olOverlaySource,\r\n      style: this.options.drawStyle\r\n    });\r\n    this.olModifyInteraction = olModifyInteraction;\r\n  }\r\n\r\n  /**\r\n   * Remove the modify interaction\r\n   */\r\n  private removeOlModifyInteraction() {\r\n    if (this.olModifyInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.deactivateModifyInteraction();\r\n    this.olModifyInteraction = undefined;\r\n  }\r\n\r\n  private activateModifyInteraction() {\r\n    if (this.olModifyInteractionIsActive === true) {\r\n      return;\r\n    }\r\n\r\n    this.olModifyInteractionIsActive = true;\r\n    this.onModifyStartKey = this.olModifyInteraction\r\n      .on('modifystart', (event: OlModifyEvent) => this.onModifyStart(event));\r\n    this.onModifyEndKey = this.olModifyInteraction\r\n      .on('modifyend', (event: OlModifyEvent) => this.onModifyEnd(event));\r\n    this.olMap.addInteraction(this.olModifyInteraction);\r\n  }\r\n\r\n  private deactivateModifyInteraction() {\r\n    if (this.olModifyInteractionIsActive === false) {\r\n      return;\r\n    }\r\n\r\n    this.olModifyInteractionIsActive = false;\r\n    unByKey(this.onModifyStartKey);\r\n    unByKey(this.onModifyEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olModifyInteraction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When modifying starts, clear the overlay and start watching for changes\r\n   * @param event Modify start event\r\n   */\r\n  private onModifyStart(event: OlModifyEvent) {\r\n    const olGeometry = event.features.item(0).getGeometry();\r\n    this.start$.next(olGeometry);\r\n    this.onModifyKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      this.mousePosition = getMousePositionFromOlGeometryEvent(olGeometryEvent);\r\n      this.changes$.next(olGeometryEvent.target);\r\n    });\r\n    this.subscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * When modifying ends, update the geometry observable and stop watching for changes\r\n   * @param event Modify end event\r\n   */\r\n  private onModifyEnd(event: OlModifyEvent) {\r\n    if (this.onModifyKey !== undefined) {\r\n      unByKey(this.onModifyKey);\r\n    }\r\n    this.end$.next(event.features.item(0).getGeometry());\r\n    this.unsubscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key down to activate the draw control\r\n   */\r\n  private subscribeToKeyDown() {\r\n    this.keyDown$$ = fromEvent(document, 'keydown').subscribe((event: KeyboardEvent) => {\r\n      if (event.keyCode === 32) {\r\n        // On space bar, pan to the current mouse position\r\n        this.olMap.getView().animate({\r\n          center: this.mousePosition,\r\n          duration: 0\r\n        });\r\n        return;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key down\r\n   */\r\n  private unsubscribeToKeyDown() {\r\n    if (this.keyDown$$ !== undefined) {\r\n      this.keyDown$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a translate interaction to the map an set up some listeners\r\n   */\r\n  private addOlTranslateInteraction() {\r\n    const olTranslateInteraction = new OlTranslate({\r\n      layers: [this.olOverlayLayer]\r\n    });\r\n    this.olTranslateInteraction = olTranslateInteraction;\r\n  }\r\n\r\n  /**\r\n   * Remove the translate interaction\r\n   */\r\n  private removeOlTranslateInteraction() {\r\n    if (this.olTranslateInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.deactivateTranslateInteraction();\r\n    this.olTranslateInteraction = undefined;\r\n  }\r\n\r\n  private activateTranslateInteraction() {\r\n    if (this.olTranslateInteractionIsActive === true) {\r\n      return;\r\n    }\r\n\r\n    this.olTranslateInteractionIsActive = true;\r\n    this.onTranslateStartKey = this.olTranslateInteraction\r\n      .on('translatestart', (event: OlTranslateEvent) => this.onTranslateStart(event));\r\n    this.onTranslateEndKey = this.olTranslateInteraction\r\n      .on('translateend', (event: OlTranslateEvent) => this.onTranslateEnd(event));\r\n    this.olMap.addInteraction(this.olTranslateInteraction);\r\n  }\r\n\r\n  private deactivateTranslateInteraction() {\r\n    if (this.olTranslateInteractionIsActive === false) {\r\n      return;\r\n    }\r\n\r\n    this.olTranslateInteractionIsActive = false;\r\n    unByKey(this.onTranslateStartKey);\r\n    unByKey(this.onTranslateEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olTranslateInteraction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When translation starts, clear the overlay and start watching for changes\r\n   * @param event Translate start event\r\n   */\r\n  private onTranslateStart(event: OlTranslateEvent) {\r\n    const olGeometry = event.features.item(0).getGeometry();\r\n    this.start$.next(olGeometry);\r\n    this.onTranslateKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      this.changes$.next(olGeometryEvent.target);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When translation ends, update the geometry observable and stop watchign for changes\r\n   * @param event Translate end event\r\n   */\r\n  private onTranslateEnd(event: OlTranslateEvent) {\r\n    if (this.onTranslateKey !== undefined) {\r\n      unByKey(this.onTranslateKey);\r\n    }\r\n    this.end$.next(event.features.item(0).getGeometry());\r\n  }\r\n\r\n  /**\r\n   * Add a draw interaction to the map an set up some listeners\r\n   */\r\n  private addOlDrawInteraction() {\r\n    const olDrawInteraction = new OlDraw({\r\n      type: 'Polygon',\r\n      source: this.olLinearRingsSource,\r\n      stopClick: true,\r\n      style: createDrawHoleInteractionStyle(),\r\n      condition: (event: OlMapBrowserEvent) => {\r\n        const olOuterGeometry = this.olOuterGeometry || this.getOlGeometry();\r\n        return olOuterGeometry.intersectsCoordinate(event.coordinate);\r\n      }\r\n    });\r\n\r\n    this.olDrawInteraction = olDrawInteraction;\r\n    this.subscribeToDrawKeyDown();\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key down to activate the draw control\r\n   */\r\n  private subscribeToDrawKeyDown() {\r\n    this.drawKeyDown$$ = fromEvent(document, 'keydown').subscribe((event: KeyboardEvent) => {\r\n      if (event.keyCode !== 17) { return; }\r\n\r\n      this.unsubscribeToDrawKeyDown();\r\n\r\n      const olGeometry = this.getOlGeometry();\r\n      if (!olGeometry || !(olGeometry instanceof OlPolygon)) { return; }\r\n\r\n      this.subscribeToDrawKeyUp();\r\n\r\n      this.deactivateModifyInteraction();\r\n      this.deactivateTranslateInteraction();\r\n      this.activateDrawInteraction();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Subscribe to CTRL key up to deactivate the draw control\r\n   */\r\n  private subscribeToDrawKeyUp() {\r\n    this.drawKeyUp$$ = fromEvent(document, 'keyup')\r\n      .subscribe((event: KeyboardEvent) => {\r\n        if (event.keyCode !== 17) {\r\n          return;\r\n        }\r\n\r\n        this.unsubscribeToDrawKeyUp();\r\n        this.unsubscribeToKeyDown();\r\n        this.deactivateDrawInteraction();\r\n\r\n        this.activateModifyInteraction();\r\n        this.activateTranslateInteraction();\r\n        this.subscribeToDrawKeyDown();\r\n\r\n        this.end$.next(this.getOlGeometry());\r\n      });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to draw key down\r\n   */\r\n  private unsubscribeToDrawKeyDown() {\r\n    if (this.drawKeyDown$$ !== undefined) {\r\n      this.drawKeyDown$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to key up\r\n   */\r\n  private unsubscribeToDrawKeyUp() {\r\n    if (this.drawKeyUp$$ !== undefined) {\r\n      this.drawKeyUp$$.unsubscribe();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the draw interaction\r\n   */\r\n  private removeOlDrawInteraction() {\r\n    if (this.olDrawInteraction === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.unsubscribeToKeyDown();\r\n    this.unsubscribeToDrawKeyUp();\r\n    this.unsubscribeToDrawKeyDown();\r\n    this.deactivateDrawInteraction();\r\n    this.olDrawInteraction = undefined;\r\n  }\r\n\r\n  /**\r\n   * Activate the draw interaction\r\n   */\r\n  private activateDrawInteraction() {\r\n    if (this.olDrawInteractionIsActive === true) {\r\n      return;\r\n    }\r\n\r\n    this.clearOlLinearRingsSource();\r\n    this.addOlLinearRingsLayer();\r\n\r\n    this.olMap.getInteractions().forEach((olInteraction: OlInteraction) => {\r\n      if (olInteraction instanceof OlDragBoxInteraction) {\r\n        this.olMap.removeInteraction(olInteraction);\r\n        this.removedOlInteractions.push(olInteraction);\r\n      }\r\n    });\r\n\r\n    this.olDrawInteractionIsActive = true;\r\n    this.onDrawStartKey = this.olDrawInteraction\r\n      .on('drawstart', (event: OlDrawEvent) => this.onDrawStart(event));\r\n    this.onDrawEndKey = this.olDrawInteraction\r\n      .on('drawend', (event: OlDrawEvent) => this.onDrawEnd(event));\r\n    this.olMap.addInteraction(this.olDrawInteraction);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the draw interaction\r\n   */\r\n  private deactivateDrawInteraction() {\r\n    if (this.olDrawInteractionIsActive === false) {\r\n      return;\r\n    }\r\n\r\n    this.removeOlLinearRingsLayer();\r\n\r\n    this.removedOlInteractions.forEach((olInteraction: OlInteraction) => {\r\n      this.olMap.addInteraction(olInteraction);\r\n    });\r\n\r\n    this.olDrawInteractionIsActive = false;\r\n    unByKey(this.onDrawStartKey);\r\n    unByKey(this.onDrawEndKey);\r\n    if (this.olMap !== undefined) {\r\n      this.olMap.removeInteraction(this.olDrawInteraction);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When draw start, add a new linerar ring to the geometry and start watching for changes\r\n   * @param event Draw start event\r\n   */\r\n  private onDrawStart(event: OlDrawEvent) {\r\n    const olGeometry = event.feature.getGeometry();\r\n    this.olOuterGeometry = this.getOlGeometry().clone();\r\n\r\n    const linearRingCoordinates = olGeometry.getLinearRing().getCoordinates();\r\n    this.addLinearRingToOlGeometry(linearRingCoordinates);\r\n    this.start$.next(this.getOlGeometry());\r\n\r\n    this.onDrawKey = olGeometry.on('change', (olGeometryEvent: OlGeometryEvent) => {\r\n      const _linearRingCoordinates = olGeometryEvent.target.getLinearRing().getCoordinates();\r\n      this.updateLinearRingOfOlGeometry(_linearRingCoordinates);\r\n      this.changes$.next(this.getOlGeometry());\r\n    });\r\n    this.subscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * When translation ends, update the geometry observable and stop watchign for changes\r\n   * @param event Draw end event\r\n   */\r\n  private onDrawEnd(event: OlDrawEvent) {\r\n    if (this.onDrawKey !== undefined) {\r\n      unByKey(this.onDrawKey);\r\n    }\r\n\r\n    this.olOuterGeometry = undefined;\r\n\r\n    const linearRingCoordinates = event.feature.getGeometry().getLinearRing().getCoordinates();\r\n    this.updateLinearRingOfOlGeometry(linearRingCoordinates);\r\n    this.clearOlLinearRingsSource();\r\n    this.end$.next(this.getOlGeometry());\r\n    this.unsubscribeToKeyDown();\r\n  }\r\n\r\n  /**\r\n   * Add a linear ring to the geometry being modified\r\n   * @param coordinates Linear ring coordinates\r\n   */\r\n  private addLinearRingToOlGeometry(coordinates: number[]) {\r\n    const olGeometry = this.getOlGeometry();\r\n    const olLinearRing = new OlLinearRing(coordinates);\r\n    addLinearRingToOlPolygon(olGeometry, olLinearRing);\r\n  }\r\n\r\n  /**\r\n   * Update the last linear ring of the geometry being modified\r\n   * @param coordinates Linear ring coordinates\r\n   */\r\n  private updateLinearRingOfOlGeometry(coordinates: number[]) {\r\n    const olGeometry = this.getOlGeometry();\r\n    // Remove the last linear ring (the one we are updating)\r\n    const olLinearRings = olGeometry.getLinearRings().slice(0, -1);\r\n    const newCoordinates = olLinearRings.map((olLinearRing: OlLinearRing) => {\r\n      return olLinearRing.getCoordinates();\r\n    });\r\n    newCoordinates.push(coordinates);\r\n    olGeometry.setCoordinates(newCoordinates);\r\n  }\r\n\r\n  /**\r\n   * Get the geometry being modified\r\n   * @returns OL Geometry\r\n   */\r\n  private getOlGeometry(): OlGeometry {\r\n    const olFeatures = this.olOverlaySource.getFeatures();\r\n    return olFeatures.length > 0 ? olFeatures[0].getGeometry() : undefined;\r\n  }\r\n\r\n}\r\n","import OlMap from 'ol/Map';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlStyle from 'ol/style';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlGeometry from 'ol/geom/Geometry';\r\nimport OlLineString from 'ol/geom/LineString';\r\n\r\nimport { Subject, Subscription } from 'rxjs';\r\n\r\nimport { GeometrySliceError } from '../geometry.errors';\r\nimport { sliceOlGeometry } from '../geometry.utils';\r\nimport { DrawControl } from './draw';\r\n\r\nexport interface SliceControlOptions {\r\n  source?: OlVectorSource;\r\n  layer?: OlVectorLayer;\r\n  layerStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n  drawStyle?: OlStyle | ((olfeature: OlFeature) => OlStyle);\r\n}\r\n\r\n/**\r\n * Control to modify geometries\r\n */\r\nexport class SliceControl {\r\n\r\n  /**\r\n   * Slice end observable\r\n   */\r\n  public end$: Subject<OlGeometry[]> = new Subject();\r\n\r\n  /**\r\n   * Slice error, if any\r\n   */\r\n  public error$: Subject<GeometrySliceError> = new Subject();\r\n\r\n  private olMap: OlMap;\r\n  private olOverlayLayer: OlVectorLayer;\r\n\r\n  /**\r\n   * Draw line control\r\n   */\r\n  private drawLineControl: DrawControl;\r\n\r\n  /**\r\n   * Subscription to draw start\r\n   */\r\n  private drawLineStart$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to draw end\r\n   */\r\n  private drawLineEnd$$: Subscription;\r\n\r\n  /**\r\n   * Wheter the control is active\r\n   */\r\n  get active(): boolean {\r\n    return this.olMap !== undefined;\r\n  }\r\n\r\n  /**\r\n   * OL overlay source\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  constructor(private options: SliceControlOptions) {\r\n    if (options.layer !== undefined) {\r\n      this.olOverlayLayer = options.layer;\r\n    } else {\r\n      this.olOverlayLayer = this.createOlInnerOverlayLayer();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add or remove this control to/from a map.\r\n   * @param map OL Map\r\n   */\r\n  setOlMap(olMap: OlMap | undefined) {\r\n    if (olMap === undefined) {\r\n      this.clearOlInnerOverlaySource();\r\n      this.removeOlInnerOverlayLayer();\r\n      this.removeDrawLineControl();\r\n      this.olMap = olMap;\r\n      return;\r\n    }\r\n\r\n    this.olMap = olMap;\r\n    this.addOlInnerOverlayLayer();\r\n    this.addDrawLineControl();\r\n  }\r\n\r\n  /**\r\n   * Return the overlay source\r\n   */\r\n  getSource(): OlVectorSource {\r\n    return this.olOverlaySource;\r\n  }\r\n\r\n  /**\r\n   * Add an OL geometry to the overlay for slicing\r\n   * @param olGeometry Ol Geometry\r\n   */\r\n  setOlGeometry(olGeometry: OlGeometry) {\r\n    const olFeature = new OlFeature({geometry: olGeometry});\r\n    this.olOverlaySource.clear();\r\n    this.olOverlaySource.addFeature(olFeature);\r\n  }\r\n\r\n  /**\r\n   * Create an overlay source if none is defined in the options\r\n   */\r\n  private createOlInnerOverlayLayer(): OlVectorLayer {\r\n    return new OlVectorLayer({\r\n      source: this.options.source ? this.options.source : new OlVectorSource(),\r\n      style: this.options.layerStyle,\r\n      zIndex: 500\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer if it wasn't defined in the options\r\n   */\r\n  private removeOlInnerOverlayLayer() {\r\n    if (this.options.layer === undefined && this.olMap !== undefined) {\r\n      this.olMap.removeLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the overlay layer if it wasn't defined in the options\r\n   */\r\n  private addOlInnerOverlayLayer(): OlVectorLayer {\r\n    if (this.options.layer === undefined) {\r\n      this.olMap.addLayer(this.olOverlayLayer);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay source if it wasn't defined in the options\r\n   */\r\n  private clearOlInnerOverlaySource() {\r\n    if (this.options.layer === undefined && this.options.source === undefined) {\r\n      this.olOverlaySource.clear();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create a draw line control and add it to the map\r\n   */\r\n  private addDrawLineControl() {\r\n    this.drawLineControl = new DrawControl({\r\n      geometryType: 'LineString',\r\n      drawStyle: this.options.drawStyle,\r\n      maxPoints: 2\r\n    });\r\n    this.drawLineStart$$ = this.drawLineControl.start$\r\n      .subscribe((olLine: OlLineString) => this.onDrawLineStart(olLine));\r\n    this.drawLineEnd$$ = this.drawLineControl.end$\r\n      .subscribe((olLine: OlLineString) => this.onDrawLineEnd(olLine));\r\n    this.drawLineControl.setOlMap(this.olMap);\r\n  }\r\n\r\n  /**\r\n   * Remove draw line control\r\n   */\r\n  private removeDrawLineControl() {\r\n    if (this.drawLineControl === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.drawLineStart$$.unsubscribe();\r\n    this.drawLineEnd$$.unsubscribe();\r\n    this.drawLineControl.getSource().clear();\r\n    this.drawLineControl.setOlMap(undefined);\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being draw\r\n   * @param olLine Ol linestring or polygon\r\n   */\r\n  private onDrawLineStart(olLine: OlLineString) {\r\n    this.drawLineControl.getSource().clear();\r\n  }\r\n\r\n  /**\r\n   * Slice the first geometry encountered with the drawn line\r\n   * @param olLine Ol linestring\r\n   */\r\n  private onDrawLineEnd(olLine: OlLineString) {\r\n    const olSlicedGeometries = [];\r\n    const lineExtent = olLine.getExtent();\r\n\r\n    const olFeaturesToRemove = [];\r\n    try {\r\n      this.olOverlaySource.forEachFeatureInExtent(lineExtent, (olFeature: OlFeature) => {\r\n        const olGeometry = olFeature.getGeometry();\r\n        const olParts = sliceOlGeometry(olGeometry, olLine);\r\n        if (olParts.length > 0) {\r\n          olSlicedGeometries.push(...olParts);\r\n          olFeaturesToRemove.push(olFeature);\r\n        }\r\n      });\r\n    } catch (e) {\r\n      if (e instanceof GeometrySliceError) {\r\n        this.error$.next(e);\r\n        return;\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n\r\n    this.drawLineControl.getSource().clear();\r\n\r\n    this.olOverlaySource.addFeatures(\r\n      olSlicedGeometries.map((olGeometry: OlGeometry) => new OlFeature(olGeometry))\r\n    );\r\n    olFeaturesToRemove.forEach((olFeature: OlFeature) => {\r\n      this.olOverlaySource.removeFeature(olFeature);\r\n    });\r\n\r\n    this.error$.next(undefined);\r\n    this.end$.next(olSlicedGeometries);\r\n  }\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\nimport { MeasurerDialogData } from '../shared/measure.interfaces';\r\n\r\nimport { MeasureAreaUnit, MeasureLengthUnit} from '../shared/measure.enum';\r\n\r\n@Component({\r\n  selector: 'igo-measurer-dialog',\r\n  templateUrl: 'measurer-dialog.component.html',\r\n  styleUrls: ['./measurer-dialog.component.scss']\r\n})\r\nexport class MeasurerDialogComponent {\r\n\r\n  measureAreaUnit = MeasureAreaUnit;\r\n\r\n  measureLengthUnit = MeasureLengthUnit;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<MeasurerDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MeasurerDialogData\r\n  ) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { skip } from 'rxjs/operators';\r\n\r\nimport OlProjection from 'ol/proj/Projection';\r\nimport OlStyle from 'ol/style/Style';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport { VectorSourceEvent as OlVectorSourceEvent } from 'ol/source/Vector';\r\nimport OlLineString from 'ol/geom/LineString';\r\nimport OlPolygon from 'ol/geom/Polygon';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlOverlay from 'ol/Overlay';\r\nimport { unByKey } from 'ol/Observable';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\nimport { EntityRecord, EntityTableTemplate, EntityTableComponent } from '@igo2/common';\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { FeatureDataSource } from '../../datasource';\r\nimport {\r\n  FEATURE,\r\n  FeatureStore,\r\n  FeatureStoreLoadingStrategy,\r\n  FeatureStoreSelectionStrategy,\r\n  tryBindStoreLayer,\r\n  tryAddLoadingStrategy,\r\n  tryAddSelectionStrategy\r\n} from '../../feature';\r\nimport { DrawControl, ModifyControl } from '../../geometry';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { Measure, MeasurerDialogData, FeatureWithMeasure } from '../shared/measure.interfaces';\r\nimport {\r\n  MeasureType,\r\n  MeasureAreaUnit,\r\n  MeasureLengthUnit,\r\n} from '../shared/measure.enum';\r\nimport {\r\n  measureOlGeometry,\r\n  createMeasureInteractionStyle,\r\n  createMeasureLayerStyle,\r\n  updateOlTooltipsAtMidpoints,\r\n  updateOlTooltipAtCenter,\r\n  getTooltipsOfOlGeometry,\r\n  squareMetersToUnit,\r\n  metersToUnit,\r\n  formatMeasure\r\n} from '../shared/measure.utils';\r\nimport { MeasurerDialogComponent } from './measurer-dialog.component';\r\n\r\n/**\r\n * Tool to measure lengths and areas\r\n */\r\n@Component({\r\n  selector: 'igo-measurer',\r\n  templateUrl: './measurer.component.html',\r\n  styleUrls: ['./measurer.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MeasurerComponent implements OnInit, OnDestroy {\r\n\r\n  /**\r\n   * Table template\r\n   * @internal\r\n   */\r\n  public tableTemplate: EntityTableTemplate = {\r\n    selection: true,\r\n    selectMany: true,\r\n    selectionCheckbox: true,\r\n    sort: true,\r\n    columns: [\r\n      {\r\n        name: 'length',\r\n        title: this.languageService.translate.instant('igo.geo.measure.lengthHeader'),\r\n        valueAccessor: (feature: FeatureWithMeasure) => {\r\n          const unit = this.activeLengthUnit;\r\n          const measure = metersToUnit(feature.properties.measure.length, unit);\r\n          return formatMeasure(measure, {\r\n            decimal: 1,\r\n            unit,\r\n            unitAbbr: false,\r\n            locale: 'fr'\r\n          });\r\n        }\r\n      },\r\n      {\r\n        name: 'area',\r\n        title: this.languageService.translate.instant('igo.geo.measure.areaHeader'),\r\n        valueAccessor: (feature: FeatureWithMeasure) => {\r\n          const unit = this.activeAreaUnit;\r\n          const measure = squareMetersToUnit(feature.properties.measure.area, unit);\r\n          return measure ? formatMeasure(measure, {\r\n            decimal: 1,\r\n            unit,\r\n            unitAbbr: false,\r\n            locale: 'fr'\r\n          }) : '';\r\n        }\r\n      }\r\n    ]\r\n  };\r\n\r\n  /**\r\n   * Reference to the MeasureType enum\r\n   * @internal\r\n   */\r\n  public measureType = MeasureType;\r\n\r\n  /**\r\n   * Reference to the AreaMeasureUnit enum\r\n   * @internal\r\n   */\r\n  public measureAreaUnit = MeasureAreaUnit;\r\n\r\n  /**\r\n   * Reference to the LengthMeasureUnit enum\r\n   * @internal\r\n   */\r\n  public measureLengthUnit = MeasureLengthUnit;\r\n\r\n  /**\r\n   * Whether measure units should be automatically determined\r\n   * @internal\r\n   */\r\n  public measureUnitsAuto: boolean = false;\r\n\r\n  /**\r\n   * Observable of area\r\n   * @internal\r\n   */\r\n  public measure$: BehaviorSubject<Measure> = new BehaviorSubject({});\r\n\r\n  /**\r\n   * Observable of selected features\r\n   * @internal\r\n   */\r\n  public selectedFeatures$: BehaviorSubject<FeatureWithMeasure[]> = new BehaviorSubject([]);\r\n\r\n  /**\r\n   * OL draw source\r\n   * @internal\r\n   */\r\n  public showTooltips: boolean = true;\r\n\r\n  /**\r\n   * Draw line control\r\n   */\r\n  private drawLineControl: DrawControl;\r\n\r\n  /**\r\n   * Draw polygon control\r\n   */\r\n  private drawPolygonControl: DrawControl;\r\n\r\n  /**\r\n   * Modify control\r\n   */\r\n  private modifyControl: ModifyControl;\r\n\r\n  /**\r\n   * Active OL geometry\r\n   */\r\n  private activeOlGeometry: OlLineString | OlPolygon;\r\n\r\n  /**\r\n   * Active mlength unit\r\n   */\r\n  private activeLengthUnit: MeasureLengthUnit = MeasureLengthUnit.Meters;\r\n\r\n  /**\r\n   * Active area unit\r\n   */\r\n  private activeAreaUnit: MeasureAreaUnit = MeasureAreaUnit.SquareMeters;\r\n\r\n  /**\r\n   * Feature added listener key\r\n   */\r\n  private onFeatureAddedKey: string;\r\n\r\n  /**\r\n   * Feature removed listener key\r\n   */\r\n  private onFeatureRemovedKey: string;\r\n\r\n  /**\r\n   * Active draw control\r\n   * @internal\r\n   */\r\n  private activeDrawControl: DrawControl;\r\n\r\n  /**\r\n   * Subscription to draw start\r\n   */\r\n  private drawStart$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to draw end\r\n   */\r\n  private drawEnd$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to controls changes\r\n   */\r\n  private drawChanges$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to modify start\r\n   */\r\n  private modifyStart$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to modify end\r\n   */\r\n  private modifyEnd$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to controls changes\r\n   */\r\n  private modifyChanges$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to measures selection\r\n   */\r\n  private selectedFeatures$$: Subscription;\r\n\r\n  /**\r\n   * OL draw source\r\n   */\r\n  private olDrawSource = new OlVectorSource();\r\n\r\n  /**\r\n   * The map to measure on\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * The measures store\r\n   */\r\n  @Input() store: FeatureStore<FeatureWithMeasure>;\r\n\r\n  /**\r\n   * Measure type\r\n   * @internal\r\n   */\r\n  @Input()\r\n  set activeMeasureType(value: MeasureType) { this.setActiveMeasureType(value); }\r\n  get activeMeasureType(): MeasureType { return this._activeMeasureType; }\r\n  private _activeMeasureType: MeasureType = MeasureType.Length;\r\n\r\n  /**\r\n   * The minimum length a segment must have to display a tooltip.\r\n   * It also applies to area tooltips.\r\n   */\r\n  @Input() minSegmentLength: number = 10;\r\n\r\n  @ViewChild('table') table: EntityTableComponent;\r\n\r\n  /**\r\n   * Wheter one of the draw control is active\r\n   * @internal\r\n   */\r\n  get drawControlIsActive(): boolean {\r\n    return this.activeDrawControl !== undefined;\r\n  }\r\n\r\n  get projection(): OlProjection {\r\n    return this.map.ol.getView().getProjection();\r\n  }\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private dialog: MatDialog\r\n  ) {}\r\n\r\n  /**\r\n   * Add draw controls and activate one\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.initStore();\r\n    this.createDrawLineControl();\r\n    this.createDrawPolygonControl();\r\n    this.createModifyControl();\r\n    this.toggleDrawControl();\r\n    this.onToggleTooltips(this.showTooltips);\r\n    this.updateTooltipsOfOlSource(this.store.source.ol);\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer and any interaction added by this component.\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.setActiveMeasureType(undefined);\r\n    this.deactivateModifyControl();\r\n    this.freezeStore();\r\n  }\r\n\r\n  /**\r\n   * Set the measure type\r\n   * @internal\r\n   */\r\n  onMeasureTypeChange(measureType: MeasureType) {\r\n    this.activeMeasureType = measureType;\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the current draw control\r\n   * @internal\r\n   */\r\n  onToggleDrawControl(toggle: boolean) {\r\n    if (toggle === true) {\r\n      this.toggleDrawControl();\r\n    } else {\r\n      this.deactivateDrawControl();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the current draw control\r\n   * @internal\r\n   */\r\n  onToggleTooltips(toggle: boolean) {\r\n    this.showTooltips = toggle;\r\n    if (toggle === true) {\r\n      this.showTooltipsOfOlSource(this.store.source.ol);\r\n    } else {\r\n      this.clearTooltipsOfOlSource(this.store.source.ol);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate or deactivate the current draw control\r\n   * @internal\r\n   */\r\n  onToggleMeasureUnitsAuto(toggle: boolean) {\r\n    this.measureUnitsAuto = toggle;\r\n  }\r\n\r\n  /**\r\n   * Set the measure type\r\n   * @internal\r\n   */\r\n  onLengthUnitChange(unit: MeasureLengthUnit) {\r\n    this.activeLengthUnit = unit;\r\n    this.table.refresh();\r\n    this.updateTooltipsOfOlSource(this.store.source.ol);\r\n    if (this.activeOlGeometry !== undefined) {\r\n      this.updateTooltipsOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the measure type\r\n   * @internal\r\n   */\r\n  onAreaUnitChange(unit: MeasureAreaUnit) {\r\n    this.activeAreaUnit = unit;\r\n    this.table.refresh();\r\n    this.updateTooltipsOfOlSource(this.store.source.ol);\r\n    if (this.activeOlGeometry !== undefined) {\r\n      this.updateTooltipsOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n  }\r\n\r\n  onCalculateClick() {\r\n    const features = this.selectedFeatures$.value;\r\n    const area = features.reduce((sum: number, feature: FeatureWithMeasure) => {\r\n      return sum + feature.properties.measure.area || 0;\r\n    }, 0);\r\n    const length = features.reduce((sum: number, feature: FeatureWithMeasure) => {\r\n      if (feature.geometry.type === 'Polygon') {\r\n        return sum;\r\n      }\r\n      return sum + feature.properties.measure.length || 0;\r\n    }, 0);\r\n    const perimeter = features.reduce((sum: number, feature: FeatureWithMeasure) => {\r\n      if (feature.geometry.type === 'LineString') {\r\n        return sum;\r\n      }\r\n      return sum + feature.properties.measure.length || 0;\r\n    }, 0);\r\n\r\n    this.openDialog({\r\n      area,\r\n      length,\r\n      perimeter\r\n    });\r\n  }\r\n\r\n  onDeleteClick() {\r\n    this.store.deleteMany(this.selectedFeatures$.value);\r\n  }\r\n\r\n  onModifyClick() {\r\n    if (this.selectedFeatures$.value.length !== 1) { return; }\r\n\r\n    if (this.modifyControl.active === true) {\r\n      this.deactivateModifyControl();\r\n      this.toggleDrawControl();\r\n    } else {\r\n      const feature = this.selectedFeatures$.value[0];\r\n      const olFeatures = this.store.layer.ol.getSource().getFeatures();\r\n      const olFeature = olFeatures.find((_olFeature: OlFeature) => {\r\n        return _olFeature.get('id') === feature.properties.id;\r\n      });\r\n\r\n      if (olFeature !== undefined) {\r\n        this.deactivateDrawControl();\r\n        this.activateModifyControl();\r\n\r\n        const olGeometry = olFeature.getGeometry();\r\n        this.clearTooltipsOfOlGeometry(olGeometry);\r\n        this.modifyControl.setOlGeometry(olGeometry);\r\n      }\r\n    }\r\n  }\r\n\r\n  private openDialog(data: MeasurerDialogData): void {\r\n    this.dialog.open(MeasurerDialogComponent, {data});\r\n  }\r\n\r\n  /**\r\n   * Initialize the measure store and set up some listeners\r\n   * @internal\r\n   */\r\n  private initStore() {\r\n    const store = this.store;\r\n\r\n    const layer = new VectorLayer({\r\n      title: 'Measures',\r\n      zIndex: 200,\r\n      source: new FeatureDataSource(),\r\n      style: createMeasureLayerStyle(),\r\n      showInLayerList: false,\r\n      exportable: false,\r\n      browsable: false\r\n    });\r\n    tryBindStoreLayer(store, layer);\r\n\r\n    tryAddLoadingStrategy(store);\r\n\r\n    tryAddSelectionStrategy(store, new FeatureStoreSelectionStrategy({\r\n      map: this.map,\r\n      many: true\r\n    }));\r\n\r\n    this.onFeatureAddedKey = store.source.ol.on('addfeature', (event: OlVectorSourceEvent) => {\r\n      const feature = event.feature;\r\n      const olGeometry = feature.getGeometry();\r\n      this.updateMeasureOfOlGeometry(olGeometry, feature.get('measure'));\r\n    });\r\n\r\n    this.onFeatureRemovedKey = store.source.ol.on('removefeature', (event: OlVectorSourceEvent) => {\r\n      const olGeometry = event.feature.getGeometry();\r\n      this.clearTooltipsOfOlGeometry(olGeometry);\r\n    });\r\n\r\n    this.selectedFeatures$$ = store.stateView.manyBy$((record: EntityRecord<FeatureWithMeasure>) => {\r\n      return record.state.selected === true;\r\n    }).pipe(\r\n      skip(1)  // Skip initial emission\r\n    )\r\n    .subscribe((records: EntityRecord<FeatureWithMeasure>[]) => {\r\n      if (this.modifyControl.active === true) {\r\n        this.deactivateModifyControl();\r\n      }\r\n      this.selectedFeatures$.next(records.map(record => record.entity));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Freeze any store, meaning the layer is removed, strategies are deactivated\r\n   * and some listener removed\r\n   * @internal\r\n   */\r\n  private freezeStore() {\r\n    const store = this.store;\r\n    this.selectedFeatures$$.unsubscribe();\r\n    unByKey(this.onFeatureAddedKey);\r\n    unByKey(this.onFeatureRemovedKey);\r\n    this.clearTooltipsOfOlSource(store.source.ol);\r\n    this.map.removeLayer(store.layer);\r\n    store.deactivateStrategyOfType(FeatureStoreLoadingStrategy);\r\n    store.deactivateStrategyOfType(FeatureStoreSelectionStrategy);\r\n  }\r\n\r\n  /**\r\n   * Create a draw line control\r\n   */\r\n  private createDrawLineControl() {\r\n    this.drawLineControl = new DrawControl({\r\n      geometryType: 'LineString',\r\n      source: this.olDrawSource,\r\n      drawStyle: createMeasureInteractionStyle(),\r\n      layerStyle: new OlStyle({})\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a draw polygon control\r\n   */\r\n  private createDrawPolygonControl() {\r\n    this.drawPolygonControl = new DrawControl({\r\n      geometryType: 'Polygon',\r\n      source: this.olDrawSource,\r\n      drawStyle: createMeasureInteractionStyle(),\r\n      layerStyle: new OlStyle({})\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a draw polygon control\r\n   */\r\n  private createModifyControl() {\r\n    this.modifyControl = new ModifyControl({\r\n      source: this.olDrawSource,\r\n      drawStyle: createMeasureInteractionStyle(),\r\n      layerStyle: new OlStyle({})\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Activate the right control\r\n   */\r\n  private toggleDrawControl() {\r\n    this.deactivateDrawControl();\r\n    // this.deactivateModifyControl();\r\n    if (this.activeMeasureType === MeasureType.Length) {\r\n      this.activateDrawControl(this.drawLineControl);\r\n    } else if (this.activeMeasureType === MeasureType.Area) {\r\n      this.activateDrawControl(this.drawPolygonControl);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate a given control\r\n   * @param drawControl Draw control\r\n   */\r\n  private activateDrawControl(drawControl: DrawControl) {\r\n    this.activeDrawControl = drawControl;\r\n    this.drawStart$$ = drawControl.start$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onDrawStart(olGeometry));\r\n    this.drawEnd$$ = drawControl.end$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onDrawEnd(olGeometry));\r\n    this.drawChanges$$ = drawControl.changes$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onDrawChanges(olGeometry));\r\n\r\n    drawControl.setOlMap(this.map.ol);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active draw control\r\n   */\r\n  private deactivateDrawControl() {\r\n    if (this.activeDrawControl === undefined) {\r\n      return;\r\n    }\r\n\r\n    this.olDrawSource.clear();\r\n    if (this.drawStart$$ !== undefined ) { this.drawStart$$.unsubscribe(); }\r\n    if (this.drawEnd$$ !== undefined ) { this.drawEnd$$.unsubscribe(); }\r\n    if (this.drawChanges$$ !== undefined ) { this.drawChanges$$.unsubscribe(); }\r\n\r\n    this.clearTooltipsOfOlSource(this.olDrawSource);\r\n    if (this.activeOlGeometry !== undefined) {\r\n      this.clearTooltipsOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n    this.activeDrawControl.setOlMap(undefined);\r\n    this.activeDrawControl = undefined;\r\n    this.activeOlGeometry = undefined;\r\n  }\r\n\r\n  private setActiveMeasureType(measureType: MeasureType) {\r\n    this._activeMeasureType = measureType;\r\n    this.clearMeasures();\r\n    this.toggleDrawControl();\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being drawn\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onDrawStart(olGeometry: OlLineString | OlPolygon) {\r\n    this.activeOlGeometry = olGeometry;\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being draw\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onDrawEnd(olGeometry: OlLineString | OlPolygon) {\r\n    this.activeOlGeometry = undefined;\r\n    this.finalizeMeasureOfOlGeometry(olGeometry);\r\n    this.addFeatureToStore(olGeometry);\r\n    this.clearTooltipsOfOlGeometry(olGeometry);\r\n    this.olDrawSource.clear(true);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onDrawChanges(olGeometry: OlLineString | OlPolygon) {\r\n    const measure = measureOlGeometry(olGeometry, this.projection);\r\n    this.updateMeasureOfOlGeometry(olGeometry, Object.assign({}, measure, {\r\n      area: undefined  // We don't want to display an area tooltip while drawing.\r\n    }));\r\n    this.measure$.next(measure);\r\n  }\r\n\r\n  /**\r\n   * Activate a given control\r\n   * @param modifyControl Modify control\r\n   */\r\n  private activateModifyControl() {\r\n    const selection = this.store.getStrategyOfType(FeatureStoreSelectionStrategy) as FeatureStoreSelectionStrategy;\r\n    selection.deactivate();\r\n    selection.clear();\r\n\r\n    this.modifyStart$$ = this.modifyControl.start$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onModifyStart(olGeometry));\r\n    this.modifyEnd$$ = this.modifyControl.end$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onModifyEnd(olGeometry));\r\n    this.modifyChanges$$ = this.modifyControl.changes$\r\n      .subscribe((olGeometry: OlLineString | OlPolygon) => this.onModifyChanges(olGeometry));\r\n    this.modifyControl.setOlMap(this.map.ol);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active modify control\r\n   */\r\n  private deactivateModifyControl() {\r\n    if (this.modifyStart$$ !== undefined ) { this.modifyStart$$.unsubscribe(); }\r\n    if (this.modifyEnd$$ !== undefined ) { this.modifyEnd$$.unsubscribe(); }\r\n    if (this.modifyChanges$$ !== undefined ) { this.modifyChanges$$.unsubscribe(); }\r\n\r\n    if (this.activeOlGeometry !== undefined) {\r\n      if (this.selectedFeatures$.value.length === 1) {\r\n        const feature = this.selectedFeatures$.value[0];\r\n        this.addFeatureToStore(this.activeOlGeometry, feature);\r\n      }\r\n      this.finalizeMeasureOfOlGeometry(this.activeOlGeometry);\r\n    }\r\n\r\n    this.olDrawSource.clear();\r\n\r\n    this.store.activateStrategyOfType(FeatureStoreSelectionStrategy);\r\n\r\n    this.activeOlGeometry = undefined;\r\n    this.modifyControl.setOlMap(undefined);\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being drawn\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onModifyStart(olGeometry: OlLineString | OlPolygon) {\r\n    this.onDrawStart(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onModifyChanges(olGeometry: OlLineString | OlPolygon) {\r\n    this.onDrawChanges(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Clear the draw source and track the geometry being draw\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onModifyEnd(olGeometry: OlLineString | OlPolygon) {\r\n    this.finalizeMeasureOfOlGeometry(olGeometry);\r\n  }\r\n\r\n  private finalizeMeasureOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    let measure = measureOlGeometry(olGeometry, this.projection);\r\n    if (olGeometry instanceof OlPolygon) {\r\n      measure = Object.assign({}, measure, {\r\n        lengths: []  // We don't want to display an area tooltip while drawing.\r\n      });\r\n    }\r\n    this.updateMeasureOfOlGeometry(olGeometry, measure);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables\r\n   * @param olGeometry Ol linestring or polygon\r\n   * @param measure Measure\r\n   */\r\n  private updateMeasureOfOlGeometry(olGeometry: OlLineString | OlPolygon, measure: Measure) {\r\n    olGeometry.setProperties({_measure: measure}, true);\r\n    this.updateTooltipsOfOlGeometry(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Clear the measures observables\r\n   */\r\n  private clearMeasures() {\r\n    this.measure$.next({});\r\n  }\r\n\r\n  /**\r\n   * Add a feature with measures to the store. The loading stragegy of the store\r\n   * will trigger and add the feature to the map.\r\n   * @internal\r\n   */\r\n  private addFeatureToStore(olGeometry: OlLineString | OlPolygon, feature?: FeatureWithMeasure) {\r\n    const featureId = feature ? feature.properties.id : uuid();\r\n    const projection = this.map.ol.getView().getProjection();\r\n    const geometry = new OlGeoJSON().writeGeometryObject(olGeometry, {\r\n      featureProjection: projection,\r\n      dataProjection: projection\r\n    });\r\n    this.store.update({\r\n      type: FEATURE,\r\n      geometry,\r\n      projection: projection.getCode(),\r\n      properties: {\r\n        id: featureId,\r\n        measure: olGeometry.get('_measure')\r\n      },\r\n      meta: {\r\n        id: featureId\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update all the tooltips of an OL geometry\r\n   * @param olGeometry OL Geometry\r\n   * @param lengths Lengths of the OL geometry's segments\r\n   * @param measureUnit Display tooltip measure in those units\r\n   */\r\n  private updateTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    const measure = olGeometry.get('_measure');\r\n    const lengths = measure.lengths;\r\n    const area = measure.area;\r\n\r\n    const olMidpointsTooltips = updateOlTooltipsAtMidpoints(olGeometry);\r\n    if (lengths.length === olMidpointsTooltips.length) {\r\n      for (let i = 0; i < olMidpointsTooltips.length; i++) {\r\n        const length = lengths[i];\r\n        if (length !== undefined) {\r\n          this.updateOlTooltip(\r\n            olMidpointsTooltips[i],\r\n            metersToUnit(length, this.activeLengthUnit),\r\n            this.activeLengthUnit,\r\n            MeasureType.Length\r\n          );\r\n        }\r\n      }\r\n    }\r\n\r\n    if (area !== undefined) {\r\n      this.updateOlTooltip(\r\n        updateOlTooltipAtCenter(olGeometry),\r\n        squareMetersToUnit(area,  this.activeAreaUnit),\r\n        this.activeAreaUnit,\r\n        MeasureType.Area\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show the map tooltips of a geoemtry\r\n   */\r\n  private showTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    getTooltipsOfOlGeometry(olGeometry).forEach((olTooltip: OlOverlay | undefined) => {\r\n      if (this.shouldShowTooltip(olTooltip)) {\r\n        this.map.ol.addOverlay(olTooltip);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the tooltips of an OL geometrys\r\n   * @param olGeometry OL geometry with tooltips\r\n   */\r\n  private clearTooltipsOfOlGeometry(olGeometry: OlLineString | OlPolygon) {\r\n    getTooltipsOfOlGeometry(olGeometry).forEach((olTooltip: OlOverlay | undefined) => {\r\n      if (olTooltip !== undefined && olTooltip.getMap() !== undefined) {\r\n        this.map.ol.removeOverlay(olTooltip);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show the map tooltips of all the geometries of a source\r\n   */\r\n  private updateTooltipsOfOlSource(olSource: OlVectorSource) {\r\n    olSource.forEachFeature((olFeature: OlFeature) => {\r\n      this.updateTooltipsOfOlGeometry(olFeature.getGeometry());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Show the map tooltips of all the geometries of a source\r\n   */\r\n  private showTooltipsOfOlSource(olSource: OlVectorSource) {\r\n    olSource.forEachFeature((olFeature: OlFeature) => {\r\n      this.showTooltipsOfOlGeometry(olFeature.getGeometry());\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Clear the map tooltips\r\n   * @param olDrawSource OL vector source\r\n   */\r\n  private clearTooltipsOfOlSource(olSource: OlVectorSource) {\r\n    olSource.forEachFeature((olFeature: OlFeature) => {\r\n      const olGeometry = olFeature.getGeometry();\r\n      if (olGeometry !== undefined) {\r\n        this.clearTooltipsOfOlGeometry(olFeature.getGeometry());\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update an OL tooltip properties and inner HTML and add it to the map if possible\r\n   * @param olTooltip OL tooltip\r\n   * @param measure The measure valeu ti display\r\n   * @param measureUnit Display tooltip measure in those units\r\n   */\r\n  private updateOlTooltip(\r\n    olTooltip: OlOverlay,\r\n    measure: number,\r\n    unit: MeasureAreaUnit | MeasureLengthUnit,\r\n    type: MeasureType\r\n  ) {\r\n    olTooltip.setProperties({_measure: measure, _unit: unit, _type: type}, true);\r\n    olTooltip.getElement().innerHTML = this.computeTooltipInnerHTML(olTooltip);\r\n    if (this.shouldShowTooltip(olTooltip)) {\r\n      this.map.ol.addOverlay(olTooltip);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Compute a tooltip's content\r\n   * @param olTooltip OL overlay\r\n   * @returns Inner HTML\r\n   */\r\n  private computeTooltipInnerHTML(olTooltip: OlOverlay): string {\r\n    const properties = olTooltip.getProperties() as any;\r\n    return formatMeasure(properties._measure, {\r\n      decimal: 1,\r\n      unit: properties._unit,\r\n      unitAbbr: true,\r\n      locale: 'fr'\r\n    }, this.languageService);\r\n  }\r\n\r\n  /**\r\n   * Whether a tooltip should be showned based on the length\r\n   * of the segment it is bound to.\r\n   * @param olTooltip OL overlay\r\n   * @returns True if the tooltip should be shown\r\n   */\r\n  private shouldShowTooltip(olTooltip: OlOverlay): boolean {\r\n    if (this.showTooltips === false) {\r\n      return false;\r\n    }\r\n\r\n    const properties = olTooltip.getProperties() as any;\r\n    const measure = properties._measure;\r\n    if (measure === undefined) {\r\n      return false;\r\n    }\r\n\r\n    if (properties._unit === MeasureType.Length) {\r\n      const minSegmentLength = metersToUnit(this.minSegmentLength, properties._unit) || 0;\r\n      return measure > Math.max(minSegmentLength, 0);\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\nimport { MeasureAreaUnit, MeasureLengthUnit } from '../shared/measure.enum';\r\nimport { metersToUnit, squareMetersToUnit, formatMeasure } from '../shared/measure.utils';\r\n\r\n/**\r\n * This pipe returns a measure converted from meters (or square meters)\r\n * to the specified unit. It also keeps a certain number of decimals.\r\n */\r\n@Pipe({\r\n  name: 'measureFormat'\r\n})\r\nexport class MeasureFormatPipe implements PipeTransform {\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  transform(\r\n    value: number, unit: MeasureAreaUnit | MeasureLengthUnit,\r\n    unitAbbr: boolean = false,\r\n    decimal: number = 1\r\n  ): number {\r\n    let out;\r\n    if (Object.values(MeasureAreaUnit).indexOf(unit) >= 0) {\r\n      out = squareMetersToUnit(value, unit as MeasureAreaUnit);\r\n    } else if (Object.values(MeasureLengthUnit).indexOf(unit) >= 0) {\r\n      out = metersToUnit(value, unit as MeasureLengthUnit);\r\n    }\r\n\r\n    return out ? formatMeasure(out, {\r\n      decimal: 1,\r\n      unit,\r\n      unitAbbr,\r\n      locale: 'fr'\r\n    }) : out;\r\n  }\r\n}\r\n","import { OlModify } from 'ol/interaction/Modify';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  Optional,\r\n  Self,\r\n  ChangeDetectorRef,\r\n  ChangeDetectionStrategy,\r\n  EventEmitter,\r\n  Output\r\n} from '@angular/core';\r\nimport { NgControl, ControlValueAccessor } from '@angular/forms';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport * as OlStyle from 'ol/style';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\nimport OlGeometry from 'ol/geom/Geometry';\r\nimport OlGeometryType from 'ol/geom/GeometryType';\r\nimport OlFeature from 'ol/Feature';\r\nimport OlVectorSource from 'ol/source/Vector';\r\nimport OlVectorLayer from 'ol/layer/Vector';\r\nimport OlOverlay from 'ol/Overlay';\r\nimport * as poly from 'ol/geom/Polygon';\r\nimport * as olproj from 'ol/proj';\r\nimport Point from 'ol/geom/Point';\r\n\r\nimport { IgoMap } from '../../map';\r\nimport {\r\n  MeasureLengthUnit,\r\n  updateOlGeometryMidpoints,\r\n  formatMeasure,\r\n  measureOlGeometry\r\n} from '../../measure';\r\nimport { DrawControl, ModifyControl } from '../shared/controls';\r\nimport { createDrawInteractionStyle } from '../shared/geometry.utils';\r\nimport { GeoJSONGeometry } from '../shared/geometry.interfaces';\r\n\r\n/**\r\n * This input allows a user to draw a new geometry or to edit\r\n * an existing one on a map. A text input is also displayed in the\r\n * form with some instructions.\r\n * This is still WIP.\r\n */\r\n@Component({\r\n  selector: 'igo-geometry-form-field-input',\r\n  templateUrl: './geometry-form-field-input.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GeometryFormFieldInputComponent implements OnInit, OnDestroy, ControlValueAccessor {\r\n\r\n  private olOverlayLayer: OlVectorLayer;\r\n  private olGeoJSON = new OlGeoJSON();\r\n  private ready = false;\r\n\r\n  private drawControl: DrawControl;\r\n  private modifyControl: ModifyControl;\r\n  private defaultDrawStyleRadius: number;\r\n  private olGeometryEnds$$: Subscription;\r\n  private olGeometryChanges$$: Subscription;\r\n  private olTooltip = OlOverlay;\r\n\r\n  /**\r\n   * Active control\r\n   * @internal\r\n   */\r\n  public activeControl: DrawControl | ModifyControl;\r\n\r\n  /**\r\n   * The map to draw the geometry on\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * The geometry type\r\n   */\r\n  @Input()\r\n  set geometryType(value: OlGeometryType) {\r\n    this._geometryType = value;\r\n    if (this.ready === false) {\r\n      return;\r\n    }\r\n\r\n    this.deactivateControl();\r\n    this.createDrawControl();\r\n    this.drawControl.freehand$.next(this.freehandDrawIsActive);\r\n    this.toggleControl();\r\n  }\r\n  get geometryType(): OlGeometryType { return this._geometryType; }\r\n  private _geometryType: OlGeometryType;\r\n\r\n  /**\r\n   * The drawGuide around the mouse pointer to help drawing\r\n   */\r\n  @Input() drawGuide: number = null;\r\n\r\n  /**\r\n   * Whether a measure tooltip should be displayed\r\n   */\r\n  @Input() measure: boolean = false;\r\n\r\n  /**\r\n   * Whether draw control should be active or not\r\n   */\r\n  @Input()\r\n  get drawControlIsActive(): boolean { return this._drawControlIsActive; }\r\n  set drawControlIsActive(value: boolean) {\r\n    this._drawControlIsActive = value;\r\n    if (this.ready === false) {\r\n      return;\r\n    }\r\n    this.deactivateControl();\r\n    if (!this._drawControlIsActive) {\r\n      return;\r\n    } else {\r\n      this.toggleControl();\r\n    }\r\n  }\r\n  private _drawControlIsActive: boolean;\r\n\r\n  /**\r\n   * Whether freehand draw control should be active or not\r\n   */\r\n  @Input()\r\n  get freehandDrawIsActive(): boolean { return this._freehandDrawIsActive; }\r\n  set freehandDrawIsActive(value: boolean) {\r\n    this._freehandDrawIsActive = value;\r\n    this.deactivateControl();\r\n\r\n    this.createDrawControl();\r\n    this.createModifyControl();\r\n\r\n    this.drawControl.freehand$.next(this.freehandDrawIsActive);\r\n\r\n    if (this.ready === false) {\r\n      return;\r\n    }\r\n\r\n    if (!this.drawControlIsActive) {\r\n      return;\r\n    }\r\n    this.toggleControl();\r\n  }\r\n  private _freehandDrawIsActive: boolean;\r\n\r\n  /**\r\n   * Style for the draw control (applies while the geometry is being drawn)\r\n   */\r\n  @Input()\r\n  set drawStyle(value: OlStyle) {\r\n    if (value === undefined) {\r\n      value = createDrawInteractionStyle();\r\n    }\r\n    this._drawStyle = value;\r\n    if (value && this.isStyleWithRadius(value)) {\r\n      this.defaultDrawStyleRadius = value.getImage().getRadius();\r\n    } else {\r\n      this.defaultDrawStyleRadius = null;\r\n    }\r\n    this.deactivateControl();\r\n    this.createDrawControl();\r\n    this.createModifyControl();\r\n\r\n    this.drawControl.freehand$.next(this.freehandDrawIsActive);\r\n    this.toggleControl();\r\n  }\r\n  get drawStyle(): OlStyle { return this._drawStyle; }\r\n  private _drawStyle: OlStyle;\r\n\r\n  /**\r\n   * Style for the overlay layer (applies once the geometry is added to the map)\r\n   * If not specified, drawStyle applies\r\n   */\r\n  @Input()\r\n  set overlayStyle(value: OlStyle) { this._overlayStyle = value; }\r\n  get overlayStyle(): OlStyle { return this._overlayStyle; }\r\n  private _overlayStyle: OlStyle;\r\n\r\n  /**\r\n   * The geometry value (GeoJSON)\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  @Input()\r\n  set value(value: GeoJSONGeometry) {\r\n    this._value = value;\r\n    if (this.ready === false) {\r\n      return;\r\n    }\r\n\r\n    if (value) {\r\n      this.addGeoJSONToOverlay(value);\r\n    } else {\r\n      this.olOverlaySource.clear();\r\n    }\r\n    this.onChange(value);\r\n    this.toggleControl();\r\n    this.cdRef.detectChanges();\r\n  }\r\n  get value(): GeoJSONGeometry { return this._value; }\r\n  private _value: GeoJSONGeometry;\r\n\r\n  /**\r\n   * The vector source to add the geometry to\r\n   * @internal\r\n   */\r\n  get olOverlaySource(): OlVectorSource {\r\n    return this.olOverlayLayer.getSource();\r\n  }\r\n\r\n  @Input()\r\n  set radius(value: any) {\r\n    if (this.ready === false) {\r\n      return;\r\n    }\r\n    if (this.modifyControl.getSource()) {\r\n      this.modifyControl.getSource().refresh();\r\n    }\r\n    if (this.freehandDrawIsActive) {\r\n      let olModify;\r\n      setTimeout(() => {\r\n        olModify = this.modifyControl.olModifyInteraction;\r\n        if (olModify) {\r\n          if (olModify.features_) {\r\n            olModify.features_.clear();\r\n          }\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    @Optional() @Self() public ngControl: NgControl\r\n  ) {\r\n    if (this.ngControl !== undefined) {\r\n      // Setting the value accessor directly (instead of using\r\n      // the providers) to avoid running into a circular import.\r\n      this.ngControl.valueAccessor = this;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an overlay layer, add the initial geometry to it (if any)\r\n   * and toggle the right interaction.\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    if (this.drawStyle === undefined) {\r\n      this.drawStyle = createDrawInteractionStyle();\r\n    }\r\n\r\n    if (this.overlayStyle === undefined) {\r\n      this.overlayStyle = this.drawStyle;\r\n    }\r\n\r\n    this.addOlOverlayLayer();\r\n    this.createMeasureTooltip();\r\n    this.createDrawControl();\r\n    this.createModifyControl();\r\n\r\n    if (this.value) {\r\n      this.addGeoJSONToOverlay(this.value);\r\n    }\r\n    this.toggleControl();\r\n\r\n    this.ready = true;\r\n  }\r\n\r\n  /**\r\n   * Clear the overlay layer and any interaction added by this component.\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    // This is mandatory when the form control is reused after\r\n    // this component has been destroyed. It seems like the control\r\n    // keeps a reference to this component even after it's destroyed\r\n    // and it attempts to set it's value\r\n    this.ready = false;\r\n\r\n    this.deactivateControl();\r\n    this.olOverlaySource.clear();\r\n    this.map.ol.removeLayer(this.olOverlayLayer);\r\n  }\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  // tslint:disable-next-line:ban-types\r\n  registerOnChange(fn: Function) {\r\n    this.onChange = fn;\r\n  }\r\n  private onChange: any = () => {};\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  // tslint:disable-next-line:ban-types\r\n  registerOnTouched(fn: Function) {\r\n    this.onTouched = fn;\r\n  }\r\n  private onTouched: any = () => {};\r\n\r\n  /**\r\n   * Implemented as part of ControlValueAccessor.\r\n   */\r\n  writeValue(value: GeoJSONGeometry) {\r\n    this.value = value;\r\n  }\r\n\r\n  /**\r\n   * Add an overlay layer to the map\r\n   */\r\n  private addOlOverlayLayer(): OlVectorLayer {\r\n    this.olOverlayLayer = new OlVectorLayer({\r\n      source: new OlVectorSource(),\r\n      zIndex: 500,\r\n      style: null\r\n    });\r\n    this.map.ol.addLayer(this.olOverlayLayer);\r\n  }\r\n\r\n  /**\r\n   * Create a draw control and subscribe to it's geometry\r\n   */\r\n  private createDrawControl() {\r\n    this.drawControl = new DrawControl({\r\n      geometryType: this.geometryType || 'Point',\r\n      layer: this.olOverlayLayer,\r\n      drawStyle: typeof this.drawStyle === 'function' ? this.drawStyle : (olFeature: OlFeature, resolution: number) => {\r\n        const style = this.drawStyle;\r\n        this.updateDrawStyleWithDrawGuide(style, resolution);\r\n        return style;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a modify control and subscribe to it's geometry\r\n   */\r\n  private createModifyControl() {\r\n    this.modifyControl = new ModifyControl({\r\n      layer: this.olOverlayLayer,\r\n      drawStyle: typeof this.drawStyle === 'function' ? this.drawStyle : (olFeature: OlFeature, resolution: number) => {\r\n        const style = this.drawStyle;\r\n        this.updateDrawStyleWithDrawGuide(style, resolution);\r\n        return style;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle the proper control (draw or modify)\r\n   */\r\n  private toggleControl() {\r\n    this.deactivateControl();\r\n\r\n    if (!this.drawControlIsActive) {\r\n      return;\r\n    }\r\n    if (!this.value && this.geometryType) {\r\n      this.activateControl(this.drawControl);\r\n    } else {\r\n      this.activateControl(this.modifyControl);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate a given control\r\n   * @param control Control\r\n   */\r\n  private activateControl(control: DrawControl | ModifyControl) {\r\n    this.activeControl = control;\r\n    this.olGeometryEnds$$ = control.end$\r\n      .subscribe((olGeometry: OlGeometry) => this.onOlGeometryEnds(olGeometry));\r\n    if (this.measure === true && control === this.drawControl) {\r\n      this.olGeometryChanges$$ = control.changes$\r\n        .subscribe((olGeometry: OlGeometry) => this.onOlGeometryChanges(olGeometry));\r\n    }\r\n    control.setOlMap(this.map.ol);\r\n  }\r\n\r\n  /**\r\n   * Deactivate the active control\r\n   */\r\n  private deactivateControl() {\r\n    this.removeMeasureTooltip();\r\n    if (this.activeControl !== undefined) {\r\n      this.activeControl.setOlMap(undefined);\r\n    }\r\n    if (this.olGeometryEnds$$ !== undefined) {\r\n      this.olGeometryEnds$$.unsubscribe();\r\n    }\r\n    if (this.olGeometryChanges$$ !== undefined) {\r\n      this.olGeometryChanges$$.unsubscribe();\r\n    }\r\n    this.activeControl = undefined;\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onOlGeometryEnds(olGeometry: OlGeometry | undefined) {\r\n    this.removeMeasureTooltip();\r\n    this.setOlGeometry(olGeometry);\r\n  }\r\n\r\n  /**\r\n   * Update measures observables and map tooltips\r\n   * @param olGeometry Ol linestring or polygon\r\n   */\r\n  private onOlGeometryChanges(olGeometry: OlGeometry) {\r\n    if (olGeometry.getType() !== 'Point') {\r\n      this.updateMeasureTooltip(olGeometry);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * When drawing ends, convert the output value to GeoJSON and keep it.\r\n   * Restore the double click interaction.\r\n   * @param olGeometry OL geometry\r\n   */\r\n  private setOlGeometry(olGeometry: OlGeometry | undefined) {\r\n    let value;\r\n    if (olGeometry === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (olGeometry.getType() === 'Circle') { // Because Circle doesn't exist as a GeoJSON object\r\n      olGeometry = this.circleToPoint(olGeometry);\r\n    }\r\n\r\n    value = this.olGeoJSON.writeGeometryObject(olGeometry, {\r\n      featureProjection: this.map.projection,\r\n      dataProjection: 'EPSG:4326'\r\n    });\r\n    if (olGeometry.get('radius')) {\r\n      value.radius = olGeometry.get('radius');\r\n      olGeometry._radius = value.radius;\r\n    }\r\n    this.writeValue(value);\r\n  }\r\n\r\n  private circleToPoint(olGeometry) {\r\n    const center = olGeometry.getCenter();\r\n    const coordinates = olproj.transform(center, this.map.projection, 'EPSG:4326');\r\n    const radius = Math.round(olGeometry.getRadius() * (Math.cos((Math.PI / 180) * coordinates[1])));\r\n\r\n    // Convert it to a point object\r\n    olGeometry = new Point(center);\r\n    olGeometry.set('radius', radius, true);\r\n    return olGeometry;\r\n  }\r\n\r\n  /**\r\n   * Add a GeoJSON geometry to the overlay\r\n   * @param geometry GeoJSON geometry\r\n   */\r\n  private addGeoJSONToOverlay(geometry: GeoJSONGeometry) {\r\n    const olGeometry = this.olGeoJSON.readGeometry(geometry, {\r\n      dataProjection: 'EPSG:4326',\r\n      featureProjection: this.map.projection\r\n    });\r\n    const olFeature = new OlFeature({\r\n      geometry: olGeometry\r\n    });\r\n    olFeature.setStyle(this.overlayStyle);\r\n    this.olOverlaySource.clear();\r\n    this.olOverlaySource.addFeature(olFeature);\r\n  }\r\n\r\n  /**\r\n   * Create the measure tooltip\r\n   */\r\n  private createMeasureTooltip(): OlOverlay {\r\n    this.olTooltip = new OlOverlay({\r\n      element: document.createElement('div'),\r\n      offset: [-30, -10],\r\n      className: [\r\n        'igo-map-tooltip',\r\n        'igo-map-tooltip-measure'\r\n      ].join(' '),\r\n      stopEvent: false\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Update the measure tooltip of an OL geometry\r\n   * @param olGeometry OL Geometry\r\n   */\r\n  private updateMeasureTooltip(olGeometry: OlGeometry) {\r\n    const measure = measureOlGeometry(olGeometry, this.map.projection);\r\n    const lengths = measure.lengths;\r\n    const lastIndex = olGeometry.getType() === 'Polygon' ? lengths.length - 2 : lengths.length - 1;\r\n    const lastLength = lengths[lastIndex];\r\n\r\n    const olMidpoints = updateOlGeometryMidpoints(olGeometry);\r\n    const olLastMidpoint = olMidpoints[lastIndex];\r\n    if (olMidpoints.length === 0 || olLastMidpoint === undefined) {\r\n      this.removeMeasureTooltip();\r\n      return;\r\n    }\r\n\r\n    this.olTooltip.setPosition(olLastMidpoint.flatCoordinates);\r\n\r\n    const innerHtml = formatMeasure(lastLength, {\r\n      decimal: 1,\r\n      unit: MeasureLengthUnit.Meters,\r\n      unitAbbr: true,\r\n      locale: 'fr'\r\n    });\r\n    this.olTooltip.getElement().innerHTML = innerHtml;\r\n    if (this.olTooltip.getMap() === undefined) {\r\n      this.map.ol.addOverlay(this.olTooltip);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the measure tooltip from the map\r\n   */\r\n  private removeMeasureTooltip() {\r\n    if (this.olTooltip.getMap && this.olTooltip.getMap() !== undefined) {\r\n      this.map.ol.removeOverlay(this.olTooltip);\r\n      this.olTooltip.setMap(undefined);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjust the draw style with the specified draw guide distance, if possible\r\n   * @param olStyle Draw style to update\r\n   * @param resolution Resolution (to make the screen size of symbol fit the drawGuide value)\r\n   */\r\n  private updateDrawStyleWithDrawGuide(olStyle: OlStyle, resolution: number) {\r\n    if (this.isStyleWithRadius(olStyle)) {\r\n      const drawGuide = this.drawGuide;\r\n      let radius;\r\n      if (!drawGuide || drawGuide < 0) {\r\n        radius = this.defaultDrawStyleRadius;\r\n      } else {\r\n        radius = drawGuide > 0 ? drawGuide / resolution : drawGuide;\r\n      }\r\n      olStyle.getImage().setRadius(radius);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns wether a given Open Layers style has a radius property that can be set (used to set draw guide)\r\n   * @param olStyle The style on which to perform the check\r\n   */\r\n  private isStyleWithRadius(olStyle: OlStyle): boolean {\r\n    return typeof olStyle !== 'function' && olStyle.getImage && olStyle.getImage().setRadius;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { GeometryFormFieldComponent } from './geometry-form-field.component';\r\nimport { GeometryFormFieldInputComponent } from './geometry-form-field-input.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [\r\n    GeometryFormFieldComponent,\r\n    GeometryFormFieldInputComponent\r\n  ],\r\n  declarations: [\r\n    GeometryFormFieldComponent,\r\n    GeometryFormFieldInputComponent\r\n  ]\r\n})\r\nexport class IgoGeometryFormFieldModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { IgoGeometryFormFieldModule } from './geometry-form-field/geometry-form-field.module';\r\nimport { GeometryFormFieldComponent } from './geometry-form-field/geometry-form-field.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoGeometryFormFieldModule\r\n  ],\r\n  exports: [\r\n    IgoGeometryFormFieldModule\r\n  ],\r\n  declarations: [],\r\n  providers: [],\r\n  entryComponents: [\r\n    GeometryFormFieldComponent\r\n  ]\r\n})\r\nexport class IgoGeometryModule {}\r\n","import { Component, Input, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { IgoMap } from '../../map';\r\nimport { TimeFilterableDataSourceOptions } from '../shared/time-filter.interface';\r\nimport { WMSDataSourceOptions } from '../../datasource/shared/datasources/wms-datasource.interface';\r\n\r\n@Component({\r\n  selector: 'igo-time-filter-button',\r\n  templateUrl: './time-filter-button.component.html',\r\n  styleUrls: ['./time-filter-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimeFilterButtonComponent implements OnInit {\r\n\r\n  public options: TimeFilterableDataSourceOptions;\r\n\r\n  @Input() layer: Layer;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() color: string = 'primary';\r\n\r\n  @Input() header: boolean = true;\r\n\r\n  public timeFilterCollapse = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.options = this.layer.dataSource.options as WMSDataSourceOptions;\r\n  }\r\n\r\n  toggleTimeFilter() {\r\n      this.timeFilterCollapse = !this.timeFilterCollapse;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild\r\n} from '@angular/core';\r\nimport { MatSlider } from '@angular/material';\r\nimport * as moment from 'moment';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { TimeFilterOptions } from '../shared/time-filter.interface';\r\nimport { TimeFilterType, TimeFilterStyle } from '../shared/time-filter.enum';\r\n\r\n@Component({\r\n  selector: 'igo-time-filter-form',\r\n  templateUrl: './time-filter-form.component.html',\r\n  styleUrls: ['./time-filter-form.component.scss']\r\n})\r\nexport class TimeFilterFormComponent implements OnInit {\r\n  @Input() layer: Layer;\r\n\r\n  @Input() options: TimeFilterOptions;\r\n\r\n  public color = 'primary';\r\n  public date: Date;\r\n  public startDate: Date;\r\n  public endDate: Date;\r\n  public year: any;\r\n  public startYear: any;\r\n  public endYear: any;\r\n  public initStartYear: any;\r\n  public initEndYear: any;\r\n  public listYears: Array<string> = [];\r\n  public startListYears: Array<string> = [];\r\n  public endListYears: Array<string> = [];\r\n\r\n  @Input()\r\n  set currentValue(value: string) {\r\n    if (value) {\r\n      if (this.type !== TimeFilterType.YEAR) {\r\n        const valueArray = value.split('/');\r\n        if (valueArray.length > 0) {\r\n          const startDate = new Date(valueArray[0]);\r\n          const endDate = new Date(valueArray[1]);\r\n          if (!isNaN(startDate.valueOf())) {\r\n            this.startDate = startDate;\r\n          }\r\n          if (!isNaN(endDate.valueOf())) {\r\n            this.endDate = endDate;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  public interval: any;\r\n  public playIcon = 'play-circle';\r\n  public resetIcon = 'replay';\r\n\r\n  @Output() change: EventEmitter<Date | [Date, Date]> = new EventEmitter();\r\n  @Output()\r\n  yearChange: EventEmitter<string | [string, string]> = new EventEmitter();\r\n  @ViewChild(MatSlider) mySlider;\r\n\r\n  get type(): TimeFilterType {\r\n    return this.options.type === undefined ? TimeFilterType.DATE : this.options.type;\r\n  }\r\n\r\n  get isRange(): boolean {\r\n    return this.options.range === undefined || this.options.style === TimeFilterStyle.SLIDER\r\n      ? false\r\n      : this.options.range;\r\n  }\r\n\r\n  get style(): TimeFilterStyle {\r\n    return this.options.style === undefined ? TimeFilterStyle.SLIDER : this.options.style;\r\n  }\r\n\r\n  get step(): number {\r\n    let step = 10800000;\r\n    if (this.options.step === undefined) {\r\n      switch (this.type) {\r\n        case TimeFilterType.DATE:\r\n        case TimeFilterType.DATETIME:\r\n          step = 10800000;\r\n          break;\r\n        case TimeFilterType.TIME:\r\n          step = 3600000;\r\n          break;\r\n        case TimeFilterType.YEAR:\r\n          step = 31536000000;\r\n          break;\r\n        default:\r\n          step = 10800000;\r\n      }\r\n    } else {\r\n      step = this.getStepDefinition(this.options.step);\r\n    }\r\n\r\n    return step;\r\n  }\r\n\r\n  get timeInterval(): number {\r\n    return this.options.timeInterval === undefined\r\n      ? 2000\r\n      : this.options.timeInterval;\r\n  }\r\n\r\n  get min(): Date {\r\n    return this.options.min === undefined\r\n      ? undefined\r\n      : new Date(this.options.min);\r\n  }\r\n\r\n  get max(): Date {\r\n    return this.options.max === undefined\r\n      ? undefined\r\n      : new Date(this.options.max);\r\n  }\r\n\r\n  get is(): boolean {\r\n    return this.options.range === undefined ? false : this.options.range;\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.startDate === undefined) {\r\n      const utcmin = new Date(this.min);\r\n      this.startDate = new Date(\r\n        utcmin.getTime() + utcmin.getTimezoneOffset() * 60000\r\n      );\r\n    }\r\n    if (this.endDate === undefined) {\r\n      const utcmax = new Date(this.max);\r\n      this.endDate = new Date(\r\n        utcmax.getTime() + utcmax.getTimezoneOffset() * 60000\r\n      );\r\n    }\r\n    if (this.startYear === undefined) {\r\n      this.startYear = new Date(this.startDate).getFullYear();\r\n      this.initStartYear = this.startYear;\r\n    }\r\n    if (this.endYear === undefined) {\r\n      this.endYear = new Date(this.endDate).getFullYear();\r\n      this.initEndYear = this.endYear;\r\n    }\r\n\r\n    if (!this.isRange) {\r\n      for (let i = this.startYear; i <= this.endYear + 1; i++) {\r\n        this.listYears.push(i);\r\n      }\r\n    } else {\r\n      for (let i = this.startYear; i < this.endYear; i++) {\r\n        this.startListYears.push(i);\r\n      }\r\n      for (let i = this.startYear + 1; i <= this.endYear; i++) {\r\n        this.endListYears.push(i);\r\n      }\r\n    }\r\n    this.options.enabled = this.options.enabled === undefined ? true : this.options.enabled;\r\n    this.checkFilterValue();\r\n    if (this.options.enabled) {\r\n      if (!this.isRange && this.style === 'slider' && this.type === 'year') {\r\n        this.yearChange.emit(this.year);\r\n      }\r\n    } else {\r\n      this.storeCurrentFilterValue();\r\n      this.yearChange.emit(undefined); // TODO: FIX THIS for ALL OTHER TYPES STYLES OR RANGE.\r\n    }\r\n  }\r\n\r\n  storeCurrentFilterValue() {\r\n    // TODO: FIX THIS for ALL OTHER TYPES STYLES OR RANGE.\r\n    if (!this.isRange && this.style === TimeFilterStyle.SLIDER && this.type === TimeFilterType.YEAR) {\r\n        this.options.value = this.year.toString();\r\n    }\r\n  }\r\n\r\n  checkFilterValue() {\r\n    const timeFromWms = this.layer.dataSource.ol.getParams().TIME;\r\n    if (!this.isRange && this.style === TimeFilterStyle.SLIDER && this.type === TimeFilterType.YEAR) {\r\n      if (timeFromWms) {\r\n        this.year = new Date(timeFromWms.toString()).getFullYear() + 1;\r\n      } else if (this.options.value) {\r\n        this.year = new Date(this.options.value.toString()).getFullYear() + 1;\r\n      } else {\r\n        this.year = new Date(this.min).getFullYear() + 1;\r\n      }\r\n    } else {\r\n      // TODO: FIX THIS for ALL OTHER TYPES STYLES OR RANGE.\r\n    }\r\n  }\r\n\r\n  handleDateChange(event: any) {\r\n    this.setupDateOutput();\r\n    this.applyTypeChange();\r\n\r\n    // Only if is range, use 2 dates to make the range\r\n    if (this.isRange) {\r\n      this.change.emit([this.startDate, this.endDate]);\r\n    } else {\r\n      this.change.emit(this.startDate);\r\n    }\r\n  }\r\n\r\n  handleYearChange(event: any) {\r\n    if (this.isRange) {\r\n      this.endListYears = [];\r\n      for (let i = this.startYear + 1; i <= this.initEndYear; i++) {\r\n        this.endListYears.push(i);\r\n      }\r\n      this.startListYears = [];\r\n      for (let i = this.initStartYear + 1; i < this.endYear; i++) {\r\n        this.startListYears.push(i);\r\n      }\r\n      this.yearChange.emit([this.startYear, this.endYear]);\r\n    } else {\r\n      this.yearChange.emit(this.year);\r\n    }\r\n  }\r\n\r\n  handleListYearChange(event: any) {\r\n    this.handleYearChange([this.startYear, this.endYear]);\r\n  }\r\n\r\n  handleListYearStartChange(event: any) {\r\n    this.change.emit([this.startDate, this.endDate]);\r\n  }\r\n\r\n  dateToNumber(date: Date): number {\r\n    let newDate;\r\n    if (date) {\r\n      newDate = new Date(date);\r\n    } else {\r\n      newDate = new Date(this.min);\r\n    }\r\n\r\n    return newDate.getTime();\r\n  }\r\n\r\n  setSliderThumbLabel(label: string) {\r\n    const thumbLabel = this.findThumbLabel(\r\n      this.mySlider._elementRef.nativeElement.childNodes\r\n    );\r\n    if (thumbLabel) {\r\n      thumbLabel.textContent = label;\r\n    }\r\n  }\r\n\r\n  findThumbLabel(test: any[]): any {\r\n    let thumbLabel;\r\n\r\n    test.forEach(value => {\r\n      if (value.className === 'mat-slider-thumb-label-text') {\r\n        thumbLabel = value;\r\n      }\r\n\r\n      if (value.children.length > 0 && !thumbLabel) {\r\n        thumbLabel = this.findThumbLabel(value.childNodes);\r\n      }\r\n    }, this);\r\n    return thumbLabel;\r\n  }\r\n\r\n  toggleFilterState() {\r\n    this.options.enabled = !this.options.enabled;\r\n\r\n    if (this.options.enabled) {\r\n      if (!this.isRange && TimeFilterStyle.SLIDER && this.type === TimeFilterType.YEAR) {\r\n        this.yearChange.emit(this.year);\r\n      }\r\n    } else {\r\n      this.stopFilter();\r\n      this.storeCurrentFilterValue();\r\n      this.change.emit(undefined); // TODO: FIX THIS for ALL OTHER TYPES STYLES OR RANGE.\r\n    }\r\n  }\r\n\r\n  resetFilter(event: any) {\r\n    this.date = new Date(this.min);\r\n    this.year = this.date.getFullYear() + 1;\r\n    if (!this.isRange && TimeFilterStyle.SLIDER && this.type === TimeFilterType.YEAR) {\r\n      this.yearChange.emit(this.year);\r\n    } else {\r\n      this.setupDateOutput();\r\n      this.change.emit(undefined); // TODO: FIX THIS for ALL OTHER TYPES STYLES OR RANGE.\r\n    }\r\n  }\r\n\r\n  playFilter(event: any) {\r\n    if (this.interval) {\r\n      this.stopFilter();\r\n    } else {\r\n      this.playIcon = 'pause-circle';\r\n      this.interval = setInterval(\r\n        (that) => {\r\n          let newMinDateNumber;\r\n          const maxDateNumber = new Date(that.max);\r\n\r\n          newMinDateNumber =\r\n            that.date === undefined ? that.min.getTime() : that.date.getTime();\r\n          newMinDateNumber += that.mySlider.step;\r\n          that.date = new Date(newMinDateNumber);\r\n\r\n          if (newMinDateNumber > maxDateNumber.getTime()) {\r\n            that.stopFilter();\r\n          }\r\n\r\n          that.handleDateChange({ value: that.date, date: that.date });\r\n        },\r\n        this.timeInterval,\r\n        this\r\n      );\r\n    }\r\n  }\r\n\r\n  playYear(event: any) {\r\n    if (this.year + this.mySlider.step > (this.max.getFullYear() + this.mySlider.step)) {\r\n      this.stopFilter();\r\n      this.resetFilter(event);\r\n    }\r\n    if (this.interval) {\r\n      this.stopFilter();\r\n    } else {\r\n      this.playIcon = 'pause-circle';\r\n      this.interval = setInterval(\r\n        // tslint:disable-next-line:only-arrow-functions\r\n        function(that) {\r\n          that.year = that.year + that.mySlider.step;\r\n          if (that.year > that.max.getFullYear()) {\r\n            that.stopFilter();\r\n          }\r\n          that.yearChange.emit(that.year);\r\n        },\r\n        this.timeInterval,\r\n        this\r\n      );\r\n    }\r\n  }\r\n\r\n  stopFilter() {\r\n    if (this.interval) {\r\n      clearInterval(this.interval);\r\n    }\r\n    this.interval = undefined;\r\n    this.playIcon = 'play-circle';\r\n  }\r\n\r\n  handleSliderDateChange(event: any) {\r\n    this.date = new Date(event.value);\r\n    this.setSliderThumbLabel(this.handleSliderTooltip());\r\n    this.handleDateChange(event);\r\n  }\r\n\r\n  handleSliderYearChange(event: any) {\r\n    this.year = event.value;\r\n    this.yearChange.emit(this.year);\r\n  }\r\n\r\n  handleSliderValue(): number {\r\n    if (this.options.current === true || !this.min) {\r\n      const currentDate = new Date();\r\n      this.date = this.getRoundedDate(currentDate);\r\n    }\r\n    if (this.type === TimeFilterType.YEAR) {\r\n      return this.year;\r\n    } else {\r\n      return this.date === undefined ? this.min.getTime() : this.date.getTime();\r\n    }\r\n  }\r\n\r\n  handleSliderTooltip() {\r\n    let label: string;\r\n\r\n    switch (this.type) {\r\n      case TimeFilterType.DATE:\r\n        label =\r\n          this.date === undefined\r\n            ? this.min.toDateString()\r\n            : this.date.toDateString();\r\n        break;\r\n      case TimeFilterType.TIME:\r\n        label =\r\n          this.date === undefined\r\n            ? this.min.toTimeString()\r\n            : this.date.toTimeString();\r\n        break;\r\n      // datetime\r\n      default:\r\n        label =\r\n          this.date === undefined\r\n            ? this.min.toUTCString()\r\n            : this.date.toUTCString();\r\n        break;\r\n    }\r\n\r\n    return label;\r\n  }\r\n\r\n  setupDateOutput() {\r\n    if (this.style === TimeFilterStyle.SLIDER) {\r\n      this.startDate = new Date(this.date);\r\n      this.startDate.setSeconds(-(this.step / 1000));\r\n      this.endDate = new Date(this.startDate);\r\n      this.endDate.setSeconds(this.step / 1000);\r\n    } else if (!this.isRange && !!this.date) {\r\n      this.endDate = new Date(this.date);\r\n      this.startDate = new Date(this.date);\r\n    } else if (this.isRange && (!!this.date || !this.date)) {\r\n      this.startDate =\r\n        this.startDate === undefined ? new Date(this.min) : this.startDate;\r\n      this.endDate =\r\n        this.endDate === undefined ? new Date(this.max) : this.endDate;\r\n    } else if (!this.date) {\r\n      this.startDate =\r\n        this.startDate === undefined ? new Date(this.min) : this.startDate;\r\n      this.endDate =\r\n        this.endDate === undefined ? new Date(this.max) : this.endDate;\r\n    }\r\n  }\r\n\r\n  applyTypeChange() {\r\n    switch (this.type) {\r\n      case TimeFilterType.DATE:\r\n        if (this.startDate !== undefined || this.endDate !== undefined) {\r\n          this.startDate.setHours(0);\r\n          this.startDate.setMinutes(0);\r\n          this.startDate.setSeconds(0);\r\n          this.endDate.setHours(23);\r\n          this.endDate.setMinutes(59);\r\n          this.endDate.setSeconds(59);\r\n        }\r\n        break;\r\n      case TimeFilterType.TIME:\r\n        if (this.style === TimeFilterStyle.CALENDAR) {\r\n          if (this.startDate.getDay() !== this.min.getDay()) {\r\n            const selectedHour = this.startDate.getHours();\r\n            const selectedMinute = this.startDate.getMinutes();\r\n            this.startDate = this.min;\r\n            this.startDate.setHours(selectedHour);\r\n            this.startDate.setMinutes(selectedMinute);\r\n          }\r\n\r\n          if (this.endDate.getDay() !== this.min.getDay()) {\r\n            const selectedHour = this.endDate.getHours();\r\n            const selectedMinute = this.endDate.getMinutes();\r\n            this.endDate = this.min;\r\n            this.endDate.setHours(selectedHour);\r\n            this.endDate.setMinutes(selectedMinute);\r\n          }\r\n        }\r\n\r\n        if (!this.isRange && this.step > 60 * 60 * 1000) {\r\n          this.startDate.setMinutes(0);\r\n          this.startDate.setSeconds(0);\r\n          this.endDate.setMinutes(59);\r\n          this.endDate.setSeconds(59);\r\n        }\r\n        break;\r\n      // datetime\r\n      default:\r\n      // do nothing\r\n    }\r\n  }\r\n\r\n  getRangeMinDate(): Date {\r\n    return this.startDate === undefined ? this.min : this.startDate;\r\n  }\r\n\r\n  getRangeMaxDate(): Date {\r\n    return this.endDate === undefined ? this.max : this.endDate;\r\n  }\r\n\r\n  /**\r\n   * Round date at a certain time, 10 minutes by Default\r\n   * @param date - Date to Round\r\n   * @param atMinute - round to closest 'atMinute' minute, rounded 10 by default\r\n   * @return the rounded date\r\n   */\r\n  getRoundedDate(date, atMinute = 10) {\r\n    const coeff = 1000 * 60 * atMinute;\r\n    return new Date(Math.round(date.getTime() / coeff) * coeff);\r\n  }\r\n\r\n  /**\r\n   * Get the step (period) definition from the layer dimension tag\r\n   * @param step The step as ISO 8601 example: PT10M for 10 Minutes\r\n   * @return the duration in milliseconds\r\n   */\r\n  getStepDefinition(step) {\r\n    return moment.duration(step).asMilliseconds();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { TimeFilterableDataSource } from '../shared/time-filter.interface';\r\nimport { TimeFilterService } from '../shared/time-filter.service';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'igo-time-filter-item',\r\n  templateUrl: './time-filter-item.component.html',\r\n  styleUrls: ['./time-filter-item.component.scss']\r\n})\r\nexport class TimeFilterItemComponent {\r\n\r\n  showLegend$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  filtersCollapsed: boolean = false;\r\n\r\n  @Input() header: boolean = true;\r\n\r\n  @Input() layer: Layer;\r\n\r\n  get datasource(): TimeFilterableDataSource {\r\n    return this.layer.dataSource as TimeFilterableDataSource;\r\n  }\r\n  constructor(private timeFilterService: TimeFilterService) {}\r\n\r\n  handleYearChange(year: string | [string, string]) {\r\n    this.timeFilterService.filterByYear(this.datasource, year);\r\n  }\r\n\r\n  handleDateChange(date: Date | [Date, Date]) {\r\n    this.timeFilterService.filterByDate(this.datasource, date);\r\n  }\r\n\r\n  private toggleLegend(collapsed: boolean) {\r\n    this.layer.legendCollapsed = collapsed;\r\n    this.showLegend$.next(!collapsed);\r\n  }\r\n\r\n  toggleLegendOnClick() {\r\n    if (!this.filtersCollapsed) {\r\n      this.toggleLegend(this.showLegend$.value);\r\n    }\r\n  }\r\n\r\n  public setVisible() {\r\n    this.layer.visible = true;\r\n  }\r\n\r\n  toggleFiltersCollapsed() {\r\n    this.filtersCollapsed = !this.filtersCollapsed;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\n\r\n@Component({\r\n  selector: 'igo-time-filter-list',\r\n  templateUrl: './time-filter-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class TimeFilterListComponent {\r\n  @Input()\r\n  get layers(): Layer[] {\r\n    return this._layers;\r\n  }\r\n  set layers(value: Layer[]) {\r\n    this._layers = value;\r\n    this.cdRef.detectChanges();\r\n  }\r\n  private _layers: Layer[] = [];\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MapService } from '../../map/shared/map.service';\r\nimport { TimeFilterListComponent } from './time-filter-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoTimeFilterListBinding]'\r\n})\r\nexport class TimeFilterListBindingDirective implements OnInit, OnDestroy {\r\n  private component: TimeFilterListComponent;\r\n  private layers$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() component: TimeFilterListComponent,\r\n    private mapService: MapService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input layers\r\n    this.component.layers = [];\r\n\r\n    this.layers$$ = this.mapService.getMap().layers$.subscribe(layers => {\r\n      this.component.layers = layers;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport * as olproj from 'ol/proj';\r\nimport olWKT from 'ol/format/WKT';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WktService {\r\n  constructor() {}\r\n\r\n  public wktToFeature(wkt, wktProj, featureProj) {\r\n    return new olWKT().readFeature(wkt, {\r\n      dataProjection: wktProj,\r\n      featureProjection: featureProj\r\n    });\r\n  }\r\n  public extentToWkt(epsgTO, extent, extentProj) {\r\n    let currentExtent = olproj.transformExtent(extent, extentProj, epsgTO);\r\n    currentExtent = this.roundCoordinateArray(currentExtent, epsgTO, 0);\r\n    const wktPoly = `POLYGON((\r\n      ${extent[0]} ${extent[1]},\r\n      ${extent[0]} ${extent[3]},\r\n      ${extent[2]} ${extent[3]},\r\n      ${extent[2]} ${extent[1]},\r\n      ${extent[0]} ${extent[1]}))`;\r\n    const wktLine = `LINESTRING(\r\n      ${extent[0]} ${extent[1]},\r\n      ${extent[0]} ${extent[3]},\r\n      ${extent[2]} ${extent[3]},\r\n      ${extent[2]} ${extent[1]},\r\n      ${extent[0]} ${extent[1]})`;\r\n    const wktMultiPoints = `MULTIPOINT(\r\n        ${extent[0]} ${extent[1]},\r\n        ${extent[0]} ${extent[3]},\r\n        ${extent[2]} ${extent[3]},\r\n        ${extent[2]} ${extent[1]})`;\r\n    return {\r\n      wktPoly,\r\n      wktLine,\r\n      wktMultiPoints\r\n    };\r\n  }\r\n\r\n  private roundCoordinateArray(coordinateArray, projection, decimal = 0) {\r\n    const lproj = olproj.get(projection);\r\n    const units = lproj.getUnits();\r\n    const olUnits = ['ft', 'm', 'us-ft'];\r\n    if (olUnits.indexOf(units) !== -1) {\r\n      coordinateArray = this.roundArray(coordinateArray, decimal);\r\n    }\r\n    return coordinateArray;\r\n  }\r\n\r\n  private roundArray(array, decimal = 0) {\r\n    let x = 0;\r\n    while (x < array.length) {\r\n      array[x] = array[x].toFixed(decimal);\r\n      x++;\r\n    }\r\n    return array;\r\n  }\r\n\r\n  public snrcToWkt(snrc, epsgTO) {\r\n    snrc = snrc.toLowerCase();\r\n    let wktPoly;\r\n    const ew = {\r\n      1: { from: -56, to: -64 },\r\n      2: { from: -64, to: -72 },\r\n      3: { from: -72, to: -80 },\r\n      4: { from: -80, to: -88 },\r\n      5: { from: -88, to: -96 },\r\n      6: { from: -96, to: -104 },\r\n      7: { from: -104, to: -112 },\r\n      8: { from: -112, to: -120 },\r\n      9: { from: -120, to: -128 },\r\n      10: { from: -128, to: -136 }\r\n    };\r\n    const sn = {\r\n      1: { from: 44, to: 48 },\r\n      2: { from: 48, to: 52 },\r\n      3: { from: 52, to: 56 },\r\n      4: { from: 56, to: 60 },\r\n      5: { from: 60, to: 64 },\r\n      6: { from: 64, to: 68 },\r\n      7: { from: 68, to: 72 },\r\n      8: { from: 72, to: 76 },\r\n      9: { from: 76, to: -128 }\r\n    };\r\n    const snrc250kIndex = [\r\n      ['m', 'n', 'o', 'p'],\r\n      ['l', 'k', 'j', 'i'],\r\n      ['e', 'f', 'g', 'h'],\r\n      ['d', 'c', 'b', 'a']\r\n    ];\r\n\r\n    const snrc50kIndex = [\r\n      ['13', '14', '15', '16'],\r\n      ['12', '11', '10', '09'],\r\n      ['05', '06', '07', '08'],\r\n      ['04', '03', '02', '01']\r\n    ];\r\n    const checkSNRC50k = /\\d{2,3}[a-p][0,1][0-9]/gi;\r\n    const checkSNRC250k = /\\d{2,3}[a-p]/gi;\r\n    const checkSNRC1m = /\\d{2,3}/gi;\r\n\r\n    let snrc1m = false;\r\n    let snrc250k = false;\r\n    let snrc50k = false;\r\n\r\n    if (checkSNRC50k.test(snrc)) {\r\n      snrc50k = true;\r\n    } else {\r\n      if (checkSNRC250k.test(snrc)) {\r\n        snrc250k = true;\r\n      } else {\r\n        if (checkSNRC1m.test(snrc)) {\r\n          snrc1m = true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (snrc1m) {\r\n      snrc += 'a01';\r\n    } else if (snrc250k) {\r\n      snrc += '01';\r\n    }\r\n    if (/\\d{2,3}[a-p][0,1][0-9]/gi.test(snrc)) {\r\n      const regex1m = /(?=[a-p])/gi;\r\n      const ar1m = snrc.split(regex1m);\r\n      const part1m = ar1m[0];\r\n      const part250k = ar1m[1][0];\r\n      const part50k = ar1m[1].split(part250k)[1];\r\n      let separator = 1;\r\n      if (part1m.length === 3) {\r\n        separator = 2;\r\n      }\r\n      const partEW = part1m.substring(0, separator);\r\n      const partSN = part1m.substring(separator);\r\n      const unit1mEW = 8;\r\n      const unit1mSN = 4;\r\n      const unit250kEW = 2;\r\n      const unit250kSN = 1;\r\n      const unit50kEW = 0.5;\r\n      const unit50kSN = 0.25;\r\n      let index250kEW = 0;\r\n      let index250kSN = 0;\r\n      let index50kEW = 0;\r\n      let index50kSN = 0;\r\n      snrc250kIndex.forEach(element => {\r\n        if (element.indexOf(part250k) !== -1) {\r\n          index250kSN = snrc250kIndex.indexOf(element);\r\n          index250kEW = element.indexOf(part250k);\r\n        }\r\n      });\r\n      snrc50kIndex.forEach(element => {\r\n        if (element.indexOf(part50k) !== -1) {\r\n          index50kSN = snrc50kIndex.indexOf(element);\r\n          index50kEW = element.indexOf(part50k);\r\n        }\r\n      });\r\n\r\n      let increment250kEW = 0;\r\n      let increment250kSN = 0;\r\n      let increment50kEW = 0;\r\n      let increment50kSN = 0;\r\n      let unitPerTypeEW = unit1mEW;\r\n      let unitPerTypeSN = unit1mSN;\r\n      if (snrc250k) {\r\n        increment250kEW = index250kEW * unit250kEW;\r\n        increment250kSN = index250kSN * unit250kSN;\r\n        increment50kEW = 0;\r\n        increment50kSN = 0;\r\n        unitPerTypeEW = unit250kEW;\r\n        unitPerTypeSN = unit250kSN;\r\n      } else if (snrc50k) {\r\n        increment250kEW = index250kEW * unit250kEW;\r\n        increment250kSN = index250kSN * unit250kSN;\r\n        increment50kEW = index50kEW * unit50kEW;\r\n        increment50kSN = index50kSN * unit50kSN;\r\n        unitPerTypeEW = unit50kEW;\r\n        unitPerTypeSN = unit50kSN;\r\n      }\r\n\r\n      const coord: {ul?: any, lr?: any, ur?: any, ll?: any} = {\r\n        ul: [\r\n          ew[partEW].to + increment250kEW + increment50kEW,\r\n          sn[partSN].to - increment250kSN - increment50kSN\r\n        ]\r\n      };\r\n\r\n      coord.lr = [\r\n        coord.ul[0] + unitPerTypeEW,\r\n        coord.ul[1] - unitPerTypeSN\r\n      ];\r\n      coord.ur = [coord.ul[0], coord.ul[1] - unitPerTypeSN];\r\n      coord.ll = [coord.ul[0] + unitPerTypeEW, coord.ul[1]];\r\n\r\n      coord.ul = olproj.transform(\r\n        [coord.ul[0], coord.ul[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n      coord.lr = olproj.transform(\r\n        [coord.lr[0], coord.lr[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n      coord.ur = olproj.transform(\r\n        [coord.ur[0], coord.ur[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n      coord.ll = olproj.transform(\r\n        [coord.ll[0], coord.ll[1]],\r\n        'EPSG:4326',\r\n        epsgTO\r\n      );\r\n\r\n      // Rounded coordinate to shorten url in get\r\n      coord.ul = this.roundCoordinateArray(coord.ul, epsgTO, 0);\r\n      coord.lr = this.roundCoordinateArray(coord.lr, epsgTO, 0);\r\n      coord.ur = this.roundCoordinateArray(coord.ur, epsgTO, 0);\r\n      coord.ll = this.roundCoordinateArray(coord.ll, epsgTO, 0);\r\n\r\n      wktPoly =\r\n        'POLYGON((' +\r\n        [\r\n          coord.ul.join(' '),\r\n          coord.ur.join(' '),\r\n          coord.lr.join(' '),\r\n          coord.ll.join(' '),\r\n          coord.ul.join(' ')\r\n        ].join(',') +\r\n        '))';\r\n      const wktLine =\r\n        'LINESTRING(' +\r\n        [\r\n          coord.ul.join(' '),\r\n          coord.ur.join(' '),\r\n          coord.lr.join(' '),\r\n          coord.ll.join(' '),\r\n          coord.ul.join(' ')\r\n        ].join(',') +\r\n        ')';\r\n\r\n      const wktMultiPoints =\r\n        'MULTIPOINT(' +\r\n        [\r\n          coord.ul.join(' '),\r\n          coord.ur.join(' '),\r\n          coord.lr.join(' '),\r\n          coord.ll.join(' ')\r\n        ].join(',') +\r\n        ')';\r\n      return {\r\n        wktPoly,\r\n        wktLine,\r\n        wktMultiPoints\r\n      };\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n  OgcInterfaceFilterOptions,\r\n  OgcFilterableDataSource,\r\n  OgcFiltersOptions\r\n} from '../../filter/shared/ogc-filter.interface';\r\nimport { OgcFilterWriter } from '../../filter/shared/ogc-filter';\r\nimport { WktService } from '../../wkt/shared/wkt.service';\r\nimport { IgoMap } from '../../map';\r\nimport { OgcFilterOperatorType } from '../../filter/shared/ogc-filter.enum';\r\nimport { FloatLabelType } from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filter-form',\r\n  templateUrl: './ogc-filter-form.component.html',\r\n  styleUrls: ['./ogc-filter-form.component.scss']\r\n})\r\nexport class OgcFilterFormComponent implements OnInit {\r\n  public ogcFilterOperators;\r\n  public igoSpatialSelectors;\r\n  public value = '';\r\n  public inputOperator;\r\n  public fields: any[];\r\n  public values: any[];\r\n  public color = 'primary';\r\n  public snrc = '';\r\n  public disabled;\r\n  public baseOverlayName = 'ogcFilterOverlay_';\r\n\r\n  @Input() refreshFilters: () => void;\r\n\r\n  @Input() datasource: OgcFilterableDataSource;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() currentFilter: any;\r\n\r\n  @Input() floatLabel: FloatLabelType = 'never';\r\n\r\n  get activeFilters() {\r\n    this.updateField();\r\n    return this.datasource.options.ogcFilters.interfaceOgcFilters.filter(\r\n      f => f.active === true\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private wktService: WktService\r\n  ) {\r\n    // TODO: Filter permitted operator based on wfscapabilities\r\n    // Need to work on regex on XML capabilities because\r\n    // comaparison operator's name varies between WFS servers...\r\n    // Ex: IsNull vs PropertyIsNull vs IsNil ...\r\n    this.ogcFilterOperators = new OgcFilterWriter().operators;\r\n    this.igoSpatialSelectors = [\r\n      {\r\n        type: 'fixedExtent'\r\n      },\r\n      {\r\n        type: 'snrc'\r\n      }\r\n    ];\r\n    // TODO: selectFeature & drawFeature\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.computeAllowedOperators();\r\n  }\r\n\r\n  computeAllowedOperators() {\r\n    let allowedOperators = this.datasource.options.ogcFilters.allowedOperatorsType;\r\n    let effectiveOperators: {} = {};\r\n\r\n    if (!allowedOperators)  {\r\n      allowedOperators = OgcFilterOperatorType.BasicAndSpatial;\r\n    }\r\n\r\n    switch (allowedOperators.toLowerCase()) {\r\n      case 'all':\r\n        effectiveOperators = this.ogcFilterOperators;\r\n        break;\r\n      case 'spatial':\r\n        effectiveOperators = {\r\n          Intersects: { spatial: true, fieldRestrict: [] },\r\n          Within: { spatial: true, fieldRestrict: [] },\r\n        };\r\n        break;\r\n      case 'basicandspatial':\r\n        effectiveOperators = {\r\n          PropertyIsEqualTo: { spatial: false, fieldRestrict: [] },\r\n          PropertyIsNotEqualTo: { spatial: false, fieldRestrict: [] },\r\n          Intersects: { spatial: true, fieldRestrict: [] },\r\n          Within: { spatial: true, fieldRestrict: [] },\r\n        };\r\n        break;\r\n      case 'basic':\r\n        effectiveOperators = {\r\n          PropertyIsEqualTo: { spatial: false, fieldRestrict: [] },\r\n          PropertyIsNotEqualTo: { spatial: false, fieldRestrict: [] }\r\n        };\r\n        break;\r\n      case 'basicnumeric':\r\n        effectiveOperators = {\r\n          PropertyIsEqualTo: { spatial: false, fieldRestrict: [] },\r\n          PropertyIsNotEqualTo: { spatial: false, fieldRestrict: [] },\r\n          PropertyIsGreaterThan: { spatial: false, fieldRestrict: ['number'] },\r\n          PropertyIsGreaterThanOrEqualTo: { spatial: false, fieldRestrict: ['number'] },\r\n          PropertyIsLessThan: { spatial: false, fieldRestrict: ['number'] },\r\n          PropertyIsLessThanOrEqualTo: { spatial: false, fieldRestrict: ['number'] },\r\n        };\r\n        break;\r\n      default:\r\n        effectiveOperators = {\r\n          PropertyIsEqualTo: { spatial: false, fieldRestrict: [] },\r\n          PropertyIsNotEqualTo: { spatial: false, fieldRestrict: [] },\r\n          Intersects: { spatial: true, fieldRestrict: [] },\r\n          Within: { spatial: true, fieldRestrict: [] },\r\n        };\r\n    }\r\n\r\n    this.ogcFilterOperators = effectiveOperators;\r\n  }\r\n\r\n  updateField() {\r\n    if (!this.datasource.options.sourceFields) {\r\n      return;\r\n    }\r\n    this.fields = this.datasource.options.sourceFields\r\n    .filter(sf => (sf.excludeFromOgcFilters === undefined || !sf.excludeFromOgcFilters));\r\n    this.fields.filter(f => f.name === this.currentFilter.propertyName)\r\n      .forEach(element => {\r\n        this.values = element.values !== undefined ? element.values.sort() : [];\r\n      });\r\n  }\r\n\r\n  toggleFilterState(event, filter: OgcInterfaceFilterOptions, property) {\r\n    this.updateField();\r\n    if (event.checked) {\r\n      this.datasource.options.ogcFilters.interfaceOgcFilters\r\n        .filter(f => f.filterid === filter.filterid)\r\n        .forEach(element => {\r\n          element[property] = true;\r\n        });\r\n    } else {\r\n      this.removeOverlayByID(filter.filterid);\r\n      this.datasource.options.ogcFilters.interfaceOgcFilters\r\n        .filter(f => f.filterid === filter.filterid)\r\n        .forEach(element => {\r\n          element[property] = false;\r\n        });\r\n    }\r\n    this.refreshFilters();\r\n  }\r\n\r\n  deleteFilter(filter: OgcInterfaceFilterOptions) {\r\n    const ogcFilters: OgcFiltersOptions = this.datasource.options.ogcFilters;\r\n    ogcFilters.interfaceOgcFilters = ogcFilters.interfaceOgcFilters.filter(\r\n      f => f.filterid !== filter.filterid\r\n    );\r\n    this.removeOverlayByID(filter.filterid);\r\n\r\n    this.refreshFilters();\r\n  }\r\n\r\n  changeNumericProperty(filter: OgcInterfaceFilterOptions, property, value) {\r\n    this.changeProperty(filter, property, parseFloat(value));\r\n    this.refreshFilters();\r\n  }\r\n\r\n  private removeOverlayByID(id) {\r\n    const overlayId = this.baseOverlayName + id;\r\n    if (this.map.overlay.dataSource.ol.getFeatureById(overlayId)) {\r\n      this.map.overlay.dataSource.ol.removeFeature(\r\n        this.map.overlay.dataSource.ol.getFeatureById(overlayId)\r\n      );\r\n    }\r\n  }\r\n\r\n  changeOperator(filter) {\r\n    if (this.ogcFilterOperators[filter.operator].spatial === false) {\r\n      this.removeOverlayByID(filter.filterid);\r\n    }\r\n    this.refreshFilters();\r\n  }\r\n\r\n  changeProperty(filter: OgcInterfaceFilterOptions, property, value) {\r\n    this.datasource.options.ogcFilters.interfaceOgcFilters\r\n      .filter(f => f.filterid === filter.filterid)\r\n      .forEach(element => {\r\n        element[property] = value;\r\n      });\r\n    this.refreshFilters();\r\n  }\r\n\r\n  changeGeometry(filter, value?) {\r\n    const checkSNRC50k = /\\d{2,3}[a-l][0,1][0-9]/gi;\r\n    const checkSNRC250k = /\\d{2,3}[a-p]/gi;\r\n    const checkSNRC1m = /\\d{2,3}/gi;\r\n    const mapProjection = this.map.projection;\r\n    this.removeOverlayByID(filter.filterid);\r\n    this.datasource.options.ogcFilters.interfaceOgcFilters\r\n      .filter(f => f.filterid === filter.filterid)\r\n      .forEach(element => {\r\n        let wktPoly;\r\n        if (filter.igoSpatialSelector === 'snrc') {\r\n          if (value === '' && this.snrc !== '') {\r\n            wktPoly = this.wktService.snrcToWkt(this.snrc, this.map.projection).wktPoly;\r\n            element.wkt_geometry = wktPoly;\r\n          } else if (\r\n            value !== '' &&\r\n            (checkSNRC1m.test(value) ||\r\n              checkSNRC250k.test(value) ||\r\n              checkSNRC50k.test(value))\r\n          ) {\r\n            wktPoly = this.wktService.snrcToWkt(value, this.map.projection).wktPoly;\r\n            element.wkt_geometry = wktPoly;\r\n          }\r\n        } else if (filter.igoSpatialSelector === 'fixedExtent') {\r\n          wktPoly = this.wktService.extentToWkt(\r\n            mapProjection,\r\n            this.map.viewController.getExtent(),\r\n            mapProjection\r\n          ).wktPoly;\r\n          element.wkt_geometry = wktPoly;\r\n        }\r\n      });\r\n    this.refreshFilters();\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\nimport { OgcFilterableDataSource } from '../shared/ogc-filter.interface';\r\nimport { IgoMap } from '../../map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filterable-form',\r\n  templateUrl: './ogc-filterable-form.component.html'\r\n})\r\nexport class OgcFilterableFormComponent {\r\n\r\n  @Input() datasource: OgcFilterableDataSource;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() refreshFilters: () => void;\r\n\r\n  get refreshFunc() {\r\n    return this.refreshFilters;\r\n  }\r\n\r\n  get advancedOgcFilters(): boolean {\r\n    if (this.datasource.options.ogcFilters) {\r\n      return this.datasource.options.ogcFilters.advancedOgcFilters;\r\n    }\r\n    return;\r\n  }\r\n\r\n  public color = 'primary';\r\n\r\n  constructor() {}\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { DownloadService } from '../../download/shared/download.service';\r\nimport { WMSDataSource } from '../../datasource/shared/datasources/wms-datasource';\r\nimport { WFSDataSourceOptionsParams } from '../../datasource/shared/datasources/wfs-datasource.interface';\r\n\r\nimport {\r\n  OgcFilterableDataSource,\r\n  OgcFiltersOptions,\r\n  OgcInterfaceFilterOptions\r\n} from '../shared/ogc-filter.interface';\r\nimport { OGCFilterService } from '../shared/ogc-filter.service';\r\nimport { IgoMap } from '../../map';\r\nimport { OgcFilterWriter } from '../shared/ogc-filter';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filterable-item',\r\n  templateUrl: './ogc-filterable-item.component.html',\r\n  styleUrls: ['./ogc-filterable-item.component.scss']\r\n})\r\nexport class OgcFilterableItemComponent implements OnInit {\r\n  public color = 'primary';\r\n  private lastRunOgcFilter;\r\n  private defaultLogicalParent = 'And';\r\n  public hasActiveSpatialFilter = false;\r\n  public filtersAreEditable = true;\r\n  public filtersCollapsed = true;\r\n  public hasPushButton: boolean = false;\r\n  showLegend$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  @Input() layer: Layer;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() header: boolean = true;\r\n\r\n  get refreshFunc() {\r\n    return this.refreshFilters.bind(this);\r\n  }\r\n\r\n  get datasource(): OgcFilterableDataSource {\r\n    return this.layer.dataSource as OgcFilterableDataSource;\r\n  }\r\n\r\n  get downloadable() {\r\n    return (this.datasource.options as any).download;\r\n  }\r\n\r\n  constructor(\r\n    private ogcFilterService: OGCFilterService,\r\n    private downloadService: DownloadService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    const ogcFilters = this.datasource.options.ogcFilters;\r\n    if (ogcFilters.pushButtons && ogcFilters.pushButtons.bundles.length > 0) {\r\n      if (ogcFilters.advancedOgcFilters === undefined) {\r\n        ogcFilters.advancedOgcFilters = false;\r\n      }\r\n      this.hasPushButton = true;\r\n    }\r\n\r\n    switch (this.datasource.options.type) {\r\n      case 'wms':\r\n        this.ogcFilterService.setOgcWMSFiltersOptions(this.datasource);\r\n        break;\r\n      case 'wfs':\r\n        this.ogcFilterService.setOgcWFSFiltersOptions(this.datasource);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    if (ogcFilters) {\r\n      if (ogcFilters.interfaceOgcFilters) {\r\n        this.lastRunOgcFilter = JSON.parse(\r\n          JSON.stringify(ogcFilters.interfaceOgcFilters)\r\n        );\r\n        if (\r\n          ogcFilters.interfaceOgcFilters.filter(f => f.wkt_geometry).length >= 1\r\n        ) {\r\n          this.hasActiveSpatialFilter = true;\r\n        }\r\n      }\r\n\r\n      this.filtersAreEditable = ogcFilters.editable\r\n        ? ogcFilters.editable\r\n        : false;\r\n    }\r\n  }\r\n\r\n  addFilterToSequence() {\r\n    this.filtersCollapsed = false;\r\n    const interfaceOgcFilters: OgcInterfaceFilterOptions[] = this.datasource\r\n      .options.ogcFilters.interfaceOgcFilters;\r\n    const arr = interfaceOgcFilters || [];\r\n    const lastLevel = arr.length === 0 ? 0 : arr[arr.length - 1].level;\r\n    let firstFieldName = '';\r\n    const includedFields = this.datasource.options.sourceFields.filter(f => !f.excludeFromOgcFilters);\r\n    if (includedFields.length > 0) {\r\n      firstFieldName =\r\n        includedFields[0].name === undefined ? '' : includedFields[0].name;\r\n    }\r\n    let fieldNameGeometry;\r\n    const datasourceOptions = this.datasource\r\n      .options as WFSDataSourceOptionsParams;\r\n    if (datasourceOptions.fieldNameGeometry) {\r\n      fieldNameGeometry = datasourceOptions.fieldNameGeometry;\r\n    } else if (\r\n      (this.datasource.options as any).paramsWFS &&\r\n      (this.datasource.options as any).paramsWFS.fieldNameGeometry\r\n    ) {\r\n      fieldNameGeometry = (this.datasource.options as any).paramsWFS\r\n        .fieldNameGeometry;\r\n    }\r\n    const status = arr.length === 0 ? true : false;\r\n    arr.push(\r\n      new OgcFilterWriter().addInterfaceFilter(\r\n        {\r\n          propertyName: firstFieldName,\r\n          operator: 'PropertyIsEqualTo',\r\n          active: status,\r\n          igoSpatialSelector: 'fixedExtent',\r\n          srsName: this.map.projection,\r\n        } as OgcInterfaceFilterOptions,\r\n        fieldNameGeometry,\r\n        lastLevel,\r\n        this.defaultLogicalParent\r\n      )\r\n    );\r\n    this.datasource.options.ogcFilters.interfaceOgcFilters = arr;\r\n  }\r\n\r\n  openDownload() {\r\n    this.downloadService.open(this.layer);\r\n  }\r\n\r\n  refreshFilters(force?: boolean) {\r\n    if (force === true) {\r\n      this.lastRunOgcFilter = undefined;\r\n    }\r\n    const ogcFilters: OgcFiltersOptions = this.datasource.options.ogcFilters;\r\n    const ogcFilterWriter = new OgcFilterWriter();\r\n    const activeFilters = ogcFilters.interfaceOgcFilters.filter(\r\n      f => f.active === true\r\n    );\r\n    if (activeFilters.length === 0) {\r\n      ogcFilters.filters = undefined;\r\n      ogcFilters.filtered = false;\r\n    }\r\n    if (activeFilters.length > 1) {\r\n      activeFilters[0].parentLogical = activeFilters[1].parentLogical;\r\n    }\r\n    if (\r\n      activeFilters.filter(\r\n        af => ['Contains', 'Intersects', 'Within'].indexOf(af.operator) !== -1\r\n      ).length === 0\r\n    ) {\r\n      this.hasActiveSpatialFilter = false;\r\n    } else {\r\n      this.hasActiveSpatialFilter = true;\r\n    }\r\n\r\n    if (\r\n      !(JSON.stringify(this.lastRunOgcFilter) === JSON.stringify(activeFilters))\r\n    ) {\r\n      if (this.layer.dataSource.options.type === 'wfs') {\r\n        const ogcDataSource: any = this.layer.dataSource;\r\n        const ogcLayer: OgcFiltersOptions = ogcDataSource.options.ogcFilters;\r\n        ogcLayer.filters = ogcFilterWriter.rebuiltIgoOgcFilterObjectFromSequence(\r\n          activeFilters\r\n        );\r\n        this.layer.dataSource.ol.clear();\r\n      } else if (\r\n        this.layer.dataSource.options.type === 'wms' &&\r\n        ogcFilters.enabled\r\n      ) {\r\n        let rebuildFilter = '';\r\n        if (activeFilters.length >= 1) {\r\n          const ogcDataSource: any = this.layer.dataSource;\r\n          const ogcLayer: OgcFiltersOptions = ogcDataSource.options.ogcFilters;\r\n          ogcLayer.filters = ogcFilterWriter.rebuiltIgoOgcFilterObjectFromSequence(\r\n            activeFilters\r\n          );\r\n          rebuildFilter = ogcFilterWriter.buildFilter(\r\n            ogcLayer.filters,\r\n            undefined,\r\n            undefined,\r\n            (this.layer.dataSource.options as any).fieldNameGeometry\r\n          );\r\n        }\r\n        this.ogcFilterService.filterByOgc(\r\n          this.datasource as WMSDataSource,\r\n          rebuildFilter\r\n        );\r\n        this.datasource.options.ogcFilters.filtered =\r\n          activeFilters.length === 0 ? false : true;\r\n      }\r\n\r\n      this.lastRunOgcFilter = JSON.parse(JSON.stringify(activeFilters));\r\n    } else {\r\n      // identical filter. Nothing triggered\r\n    }\r\n  }\r\n\r\n  public setVisible() {\r\n    this.layer.visible = true;\r\n  }\r\n\r\n  public isAdvancedOgcFilters(): boolean {\r\n    return this.datasource.options.ogcFilters.advancedOgcFilters;\r\n  }\r\n\r\n  public addFilterDisabled(): boolean {\r\n    return (\r\n      !this.datasource.options.sourceFields ||\r\n      this.datasource.options.sourceFields.length === 0\r\n    );\r\n  }\r\n\r\n  private changeOgcFiltersAdvancedOgcFilters(value: boolean) {\r\n    this.datasource.options.ogcFilters.advancedOgcFilters = value;\r\n  }\r\n\r\n  changeOgcFilterType(isAdvancedOgcFilters) {\r\n    this.changeOgcFiltersAdvancedOgcFilters(isAdvancedOgcFilters.checked);\r\n    if (isAdvancedOgcFilters.checked) {\r\n      this.refreshFilters(true);\r\n    }\r\n  }\r\n\r\n  private toggleLegend(collapsed: boolean) {\r\n    this.layer.legendCollapsed = collapsed;\r\n    this.showLegend$.next(!collapsed);\r\n  }\r\n\r\n  toggleLegendOnClick() {\r\n    if (!this.filtersCollapsed) {\r\n      this.toggleLegend(this.showLegend$.value);\r\n    }\r\n  }\r\n\r\n  toggleFiltersCollapsed() {\r\n    this.filtersCollapsed = !this.filtersCollapsed;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { IgoMap } from '../../map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filterable-list',\r\n  templateUrl: './ogc-filterable-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OgcFilterableListComponent {\r\n\r\n  @Input() layers: Layer[];\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  constructor() {}\r\n}\r\n","import { Directive, Self, OnInit, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MapService } from '../../map/shared/map.service';\r\nimport { OgcFilterableListComponent } from './ogc-filterable-list.component';\r\n\r\n@Directive({\r\n  selector: '[igoOgcFilterableListBinding]'\r\n})\r\nexport class OgcFilterableListBindingDirective implements OnInit, OnDestroy {\r\n  private component: OgcFilterableListComponent;\r\n  private layers$$: Subscription;\r\n\r\n  constructor(\r\n    @Self() component: OgcFilterableListComponent,\r\n    private mapService: MapService\r\n  ) {\r\n    this.component = component;\r\n  }\r\n\r\n  ngOnInit() {\r\n    // Override input layers\r\n    this.component.layers = [];\r\n\r\n    this.layers$$ = this.mapService.getMap().layers$.subscribe(layers => {\r\n      this.component.layers = layers;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, OnInit } from '@angular/core';\r\n\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { IgoMap } from '../../map';\r\nimport { OgcFilterableDataSourceOptions } from '../shared/ogc-filter.interface';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filter-button',\r\n  templateUrl: './ogc-filter-button.component.html',\r\n  styleUrls: ['./ogc-filter-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OgcFilterButtonComponent implements OnInit {\r\n\r\n  public options: OgcFilterableDataSourceOptions;\r\n\r\n  @Input() layer: Layer;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input() color: string = 'primary';\r\n\r\n  @Input() header: boolean;\r\n\r\n  public ogcFilterCollapse = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    this.options = this.layer.dataSource.options as OgcFilterableDataSourceOptions;\r\n  }\r\n\r\n  toggleOgcFilter() {\r\n      this.ogcFilterCollapse = !this.ogcFilterCollapse;\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n  OgcFilterableDataSource,\r\n  IgoOgcFilterObject,\r\n  OgcPushButton,\r\n  OgcPushButtonBundle,\r\n  PushButtonGroup\r\n\r\n} from '../../filter/shared/ogc-filter.interface';\r\nimport { OgcFilterWriter } from '../../filter/shared/ogc-filter';\r\nimport { IgoMap } from '../../map';\r\nimport { OGCFilterService } from '../shared/ogc-filter.service';\r\nimport { WMSDataSource } from '../../datasource/shared/datasources/wms-datasource';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filter-toggle-button',\r\n  templateUrl: './ogc-filter-toggle-button.component.html',\r\n  styleUrls: ['./ogc-filter-toggle-button.component.scss']\r\n})\r\nexport class OgcFilterToggleButtonComponent implements OnInit {\r\n\r\n  @Input() refreshFilters: () => void;\r\n\r\n  @Input() datasource: OgcFilterableDataSource;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  private ogcFilterWriter: OgcFilterWriter;\r\n  public color = 'primary';\r\n  public currentPushButtonGroup;\r\n\r\n  constructor(\r\n    private ogcFilterService: OGCFilterService\r\n  ) {\r\n    this.ogcFilterWriter = new OgcFilterWriter();\r\n  }\r\n\r\n  getPushButtonsGroups(): PushButtonGroup[] {\r\n    return this.datasource.options.ogcFilters.pushButtons.groups;\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.datasource.options.ogcFilters &&\r\n      this.datasource.options.ogcFilters.pushButtons) {\r\n      this.currentPushButtonGroup =\r\n        this.datasource.options.ogcFilters.pushButtons.groups.find(g => g.enabled) ||\r\n        this.datasource.options.ogcFilters.pushButtons.groups[0];\r\n    }\r\n    this.applyFilters();\r\n  }\r\n\r\n  getToolTip(pb: OgcPushButton): string  {\r\n    let tt;\r\n    if (pb.tooltip) {\r\n      if (Array.isArray(pb.tooltip)) {\r\n        tt = pb.tooltip.join('\\n');\r\n      } else {\r\n        tt = pb.tooltip;\r\n      }\r\n    }\r\n    return tt || '';\r\n  }\r\n\r\n  getButtonColor(pb: OgcPushButton): {} {\r\n\r\n    let styles;\r\n    if (pb.color) {\r\n      styles = {\r\n        'background-color': pb.enabled ? `rgba(${pb.color})` : `rgba(255,255,255,0)`,\r\n\r\n      };\r\n    }\r\n    return styles;\r\n  }\r\n\r\n  bundleIsVertical(bundle: OgcPushButtonBundle): boolean {\r\n    return bundle.vertical ? bundle.vertical : false;\r\n  }\r\n\r\n  onChangeGroup() {\r\n\r\n    this.getPushButtonsGroups().map(g => g.enabled = false);\r\n    this.getPushButtonsGroups().find(g => g === this.currentPushButtonGroup).enabled = true;\r\n    this.applyFilters();\r\n  }\r\n\r\n  applyFilters(currentOgcPushButton?: OgcPushButton) {\r\n    if (currentOgcPushButton) {\r\n      currentOgcPushButton.enabled = !currentOgcPushButton.enabled;\r\n    }\r\n    let filterQueryString = '';\r\n    const conditions = [];\r\n    this.currentPushButtonGroup.computedButtons.map(buttonBundle => {\r\n      const bundleCondition = [];\r\n      buttonBundle.buttons\r\n      .filter(ogcpb => ogcpb.enabled === true)\r\n      .forEach(enabledPb => bundleCondition.push(enabledPb.filters));\r\n      if (bundleCondition.length >= 1 ) {\r\n        if (bundleCondition.length === 1) {\r\n          conditions.push(bundleCondition[0]);\r\n        } else {\r\n          conditions.push({logical: buttonBundle.logical, filters: bundleCondition});\r\n        }\r\n      }\r\n    });\r\n    if (conditions.length >= 1) {\r\n      filterQueryString = this.ogcFilterWriter\r\n        .buildFilter(conditions.length === 1 ?\r\n          conditions[0] : {logical: 'And', filters: conditions } as IgoOgcFilterObject);\r\n    }\r\n    if (this.datasource.options.type === 'wms') {\r\n      this.ogcFilterService.filterByOgc(this.datasource as WMSDataSource, filterQueryString );\r\n    }\r\n    if (this.datasource.options.type === 'wfs') {\r\n      // TODO: Check how to prevent wfs to refresh when filter icon is pushed...\r\n      this.datasource.ol.clear();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { SpatialFilterQueryType, SpatialFilterType } from '../../shared/spatial-filter.enum';\r\nimport { FormControl } from '@angular/forms';\r\nimport { EntityStore } from '@igo2/common';\r\nimport { Feature } from '../../../feature';\r\n\r\n/**\r\n * Spatial Filter Type\r\n */\r\n@Component({\r\n  selector: 'igo-spatial-filter-type',\r\n  templateUrl: './spatial-filter-type.component.html',\r\n  styleUrls: ['./spatial-filter-type.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpatialFilterTypeComponent implements OnInit {\r\n\r\n  @Input()\r\n  get store(): EntityStore<Feature> {\r\n    return this._store;\r\n  }\r\n  set store(store: EntityStore<Feature>) {\r\n    this._store = store;\r\n  }\r\n  private _store: EntityStore<Feature>;\r\n\r\n  public queryType: string[] = ['Arrond', 'CircFed', 'CircProv', 'DirReg', 'Mun', 'MRC', 'AdmRegion', 'RegTour'];\r\n  public selectedTypeIndex = new FormControl(0);\r\n\r\n  /**\r\n   * Reference to the SpatialFIlterType enum\r\n   * @internal\r\n   */\r\n  public spatialType = SpatialFilterType;\r\n\r\n  public activeDrawType: SpatialFilterType = this.spatialType.Polygon;\r\n\r\n  @Input() selectedQueryType: SpatialFilterQueryType;\r\n\r\n  @Input() zone: Feature;\r\n\r\n  public type: SpatialFilterType;\r\n\r\n  @Output() eventType = new EventEmitter<SpatialFilterType>();\r\n\r\n  @Output() eventQueryType = new EventEmitter<SpatialFilterQueryType>();\r\n\r\n  @Output() zoneChange = new EventEmitter<Feature>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.selectedTypeIndex.value === 0) {\r\n      this.type = this.spatialType.Predefined;\r\n    }\r\n    if (this.selectedTypeIndex.value === 1) {\r\n      this.type = this.activeDrawType;\r\n    }\r\n    this.eventType.emit(this.type);\r\n  }\r\n\r\n  onTypeChange(event) {\r\n    if (this.selectedTypeIndex.value === 0) {\r\n      this.type = SpatialFilterType.Predefined;\r\n    }\r\n    if (this.selectedTypeIndex.value === 1) {\r\n      this.type = this.activeDrawType;\r\n    }\r\n    this.eventType.emit(this.type);\r\n  }\r\n\r\n  onQueryTypeChange(event) {\r\n    this.eventQueryType.emit(this.selectedQueryType);\r\n  }\r\n\r\n  onZoneChange(feature) {\r\n    this.zoneChange.emit(feature);\r\n  }\r\n\r\n  onDrawTypeChange(spatialType: SpatialFilterType) {\r\n    this.activeDrawType = spatialType;\r\n    this.eventType.emit(this.activeDrawType);\r\n  }\r\n}\r\n","import { EntityStore } from '@igo2/common';\r\nimport { SpatialFilterService } from './../../shared/spatial-filter.service';\r\nimport { SpatialFilterQueryType } from './../../shared/spatial-filter.enum';\r\nimport {\r\n  Component,\r\n  Input,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  Output,\r\n  EventEmitter\r\n} from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Feature } from '../../../feature';\r\n\r\n@Component({\r\n  selector: 'igo-spatial-filter-list',\r\n  templateUrl: './spatial-filter-list.component.html',\r\n  styleUrls: ['./spatial-filter-list.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpatialFilterListComponent implements OnInit, OnDestroy {\r\n\r\n  @Input()\r\n  get store(): EntityStore<Feature> {\r\n    return this._store;\r\n  }\r\n  set store(store: EntityStore<Feature>) {\r\n    this._store = store;\r\n  }\r\n  private _store: EntityStore<Feature>;\r\n\r\n  @Input()\r\n  get queryType(): SpatialFilterQueryType {\r\n    return this._queryType;\r\n  }\r\n  set queryType(queryType: SpatialFilterQueryType) {\r\n    this.formControl.setValue('');\r\n    this._queryType = queryType;\r\n  }\r\n  private _queryType: SpatialFilterQueryType;\r\n\r\n  @Input() selectedZone: Feature;\r\n\r\n  public formControl = new FormControl();\r\n\r\n  @Output() zoneChange = new EventEmitter<Feature>();\r\n\r\n  formValueChanges$$: Subscription;\r\n\r\n  ngOnInit() {\r\n    this.formValueChanges$$ = this.formControl.valueChanges.subscribe((value) => {\r\n      if (value.length) {\r\n        this.store.view.filter((feature) => {\r\n          const filterNormalized = value.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n          const featureNameNormalized = feature.properties.nom.toLowerCase().normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\r\n          return featureNameNormalized.includes(filterNormalized);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.formValueChanges$$.unsubscribe();\r\n  }\r\n\r\n  displayFn(feature?: Feature): string | undefined {\r\n    return feature ? feature.properties.nom : undefined;\r\n  }\r\n\r\n  constructor(private spatialFilterService: SpatialFilterService) {}\r\n\r\n  onZoneChange(feature) {\r\n    if (feature && this.queryType) {\r\n      this.spatialFilterService.loadItemById(feature, this.queryType)\r\n      .subscribe((featureGeom: Feature) => {\r\n        this.selectedZone = featureGeom;\r\n        this.zoneChange.emit(featureGeom);\r\n      });\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  OnInit\r\n} from '@angular/core';\r\nimport { SpatialFilterQueryType, SpatialFilterType } from '../../shared/spatial-filter.enum';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { IgoMap } from '../../../map';\r\nimport { SpatialFilterItemType } from './../../shared/spatial-filter.enum';\r\nimport { Feature } from './../../../feature/shared/feature.interfaces';\r\nimport { FormControl } from '@angular/forms';\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport OlGeometryType from 'ol/geom/GeometryType';\r\nimport { GeoJSONGeometry } from '../../../geometry/shared/geometry.interfaces';\r\nimport { Style as OlStyle } from 'ol/style';\r\nimport * as olstyle from 'ol/style';\r\nimport * as olproj from 'ol/proj';\r\nimport { olFeature } from 'ol/Feature';\r\nimport { MatTreeNestedDataSource } from '@angular/material';\r\nimport { SpatialFilterService } from '../../shared/spatial-filter.service';\r\nimport { MeasureLengthUnit } from '../../../measure';\r\nimport { EntityStore } from '@igo2/common';\r\nimport { Layer } from '../../../layer/shared';\r\nimport { NestedTreeControl } from '@angular/cdk/tree';\r\nimport { SpatialFilterThematic } from './../../shared/spatial-filter.interface';\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\n\r\n/**\r\n * Spatial-Filter-Item (search parameters)\r\n */\r\n@Component({\r\n  selector: 'igo-spatial-filter-item',\r\n  templateUrl: './spatial-filter-item.component.html',\r\n  styleUrls: ['./spatial-filter-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SpatialFilterItemComponent implements OnDestroy, OnInit {\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  @Input()\r\n  get type(): SpatialFilterType {\r\n    return this._type;\r\n  }\r\n  set type(type: SpatialFilterType) {\r\n    this._type = type;\r\n    const index = this.geometryTypes.findIndex(geom => geom === this.type);\r\n    this.geometryType = this.geometryTypes[index];\r\n    this.formControl.reset();\r\n    this.radius = undefined;\r\n    this.drawGuide$.next(null);\r\n    this.drawStyle$.next(undefined);\r\n\r\n    // Necessary to keep reference to the geometry form field input\r\n    if (this.type === SpatialFilterType.Predefined) {\r\n      const geojson: GeoJSONGeometry = {\r\n        type: 'Point',\r\n        coordinates: ''\r\n      };\r\n      this.formControl.setValue(geojson);\r\n    }\r\n\r\n    // Necessary to apply the right style when geometry type is Point\r\n    if (this.type === SpatialFilterType.Point) {\r\n      this.radius = 1000; // Base radius\r\n      this.radiusFormControl.setValue(this.radius);\r\n      this.PointStyle = (feature: olFeature, resolution: number) => {\r\n        const coordinates = olproj.transform(feature.getGeometry().getCoordinates(), this.map.projection, 'EPSG:4326');\r\n        return new olstyle.Style ({\r\n          image: new olstyle.Circle ({\r\n            radius: this.radius / (Math.cos((Math.PI / 180) * coordinates[1])) / resolution, // Latitude correction\r\n            stroke: new olstyle.Stroke({\r\n              width: 2,\r\n              color: 'rgba(0, 153, 255)'\r\n            }),\r\n            fill: new olstyle.Fill({\r\n              color: 'rgba(0, 153, 255, 0.2)'\r\n            })\r\n          })\r\n        });\r\n      };\r\n      this.overlayStyle = this.PointStyle;\r\n      this.drawStyle$.next(this.overlayStyle);\r\n    } else {\r\n      // If geometry types is Polygon\r\n      this.radius = undefined;\r\n      this.PolyStyle = (feature, resolution) => {\r\n        return new olstyle.Style ({\r\n          stroke: new olstyle.Stroke({\r\n            width: 2,\r\n            color: 'rgba(0, 153, 255)'\r\n          }),\r\n          fill: new olstyle.Fill({\r\n            color: 'rgba(0, 153, 255, 0.2)'\r\n          })\r\n        });\r\n      };\r\n      this.overlayStyle = this.PolyStyle;\r\n    }\r\n    this.overlayStyle$.next(this.overlayStyle);\r\n  }\r\n  private _type: SpatialFilterType;\r\n\r\n  @Input() queryType: SpatialFilterQueryType;\r\n\r\n  @Input() zone: Feature;\r\n\r\n  @Input() loading;\r\n\r\n  @Input()\r\n  get store(): EntityStore<Feature> {\r\n    return this._store;\r\n  }\r\n  set store(store: EntityStore<Feature>) {\r\n    this._store = store;\r\n    this._store.entities$.subscribe(() => { this.cdRef.detectChanges(); });\r\n  }\r\n  private _store: EntityStore<Feature>;\r\n\r\n  /**\r\n   * Available measure units for the measure type given\r\n   * @internal\r\n   */\r\n  get measureUnits(): string[] {\r\n    return [MeasureLengthUnit.Meters];\r\n  }\r\n\r\n  @Input() layers: Layer[] = [];\r\n\r\n  @Output() toggleSearch = new EventEmitter();\r\n\r\n  @Output() itemTypeChange = new EventEmitter<SpatialFilterItemType>();\r\n\r\n  @Output() thematicChange = new EventEmitter<SpatialFilterThematic[]>();\r\n\r\n  @Output() drawZoneEvent = new EventEmitter<Feature>();\r\n\r\n  @Output() radiusEvent = new EventEmitter<number>();\r\n  @Output() freehandControl = new EventEmitter<boolean>();\r\n\r\n  @Output() clearButtonEvent = new EventEmitter<Layer[]>();\r\n\r\n  @Output() clearSearchEvent = new EventEmitter();\r\n\r\n  public itemType: SpatialFilterItemType[] = [SpatialFilterItemType.Address, SpatialFilterItemType.Thematics];\r\n  public selectedItemType: SpatialFilterItemType = SpatialFilterItemType.Address;\r\n  public selectedSourceAddress;\r\n\r\n  treeControl = new NestedTreeControl<SpatialFilterThematic>(node => node.children);\r\n\r\n  // For thematics and results tables\r\n  public displayedColumns: string[] = ['name', 'select'];\r\n  public childrens: SpatialFilterThematic[] = [];\r\n  public groups: string[] = [];\r\n  public thematics: SpatialFilterThematic[] = [];\r\n  public dataSource = new MatTreeNestedDataSource<SpatialFilterThematic>();\r\n  public selectedThematics = new SelectionModel<SpatialFilterThematic>(true, []);\r\n  public displayedColumnsResults: string[] = ['typeResults', 'nameResults'];\r\n\r\n  // For geometry form field input\r\n  value$: BehaviorSubject<GeoJSONGeometry> = new BehaviorSubject(undefined);\r\n  drawGuide$: BehaviorSubject<number> = new BehaviorSubject(null);\r\n  overlayStyle$: BehaviorSubject<OlStyle> = new BehaviorSubject(undefined);\r\n  drawStyle$: BehaviorSubject<OlStyle> = new BehaviorSubject(undefined);\r\n\r\n  private value$$: Subscription;\r\n  private radiusChanges$$: Subscription;\r\n\r\n  public formControl = new FormControl();\r\n  public geometryType: OlGeometryType;\r\n  public geometryTypeField = false;\r\n  public geometryTypes: string[] = ['Point', 'Polygon'];\r\n  public drawGuideField = false;\r\n  public drawGuide: number = null;\r\n  public drawGuidePlaceholder = '';\r\n  public measure = false;\r\n  public drawControlIsActive = true;\r\n  public freehandDrawIsActive = false;\r\n  public drawStyle: OlStyle;\r\n  public drawZone: Feature;\r\n  public overlayStyle: OlStyle;\r\n  public PointStyle: OlStyle;\r\n  public PolyStyle: OlStyle;\r\n\r\n  public radius: number;\r\n  public radiusFormControl = new FormControl();\r\n\r\n  public measureUnit: MeasureLengthUnit = MeasureLengthUnit.Meters;\r\n\r\n  constructor(\r\n    private cdRef: ChangeDetectorRef,\r\n    private spatialFilterService: SpatialFilterService,\r\n    private messageService: MessageService,\r\n    private languageService: LanguageService) {}\r\n\r\n  ngOnInit() {\r\n    this.spatialFilterService.loadThematicsList()\r\n    .subscribe((items: SpatialFilterThematic[]) => {\r\n      for (const item of items) {\r\n        this.childrens.push(item);\r\n        this.childrens.sort((a, b) => {\r\n          return a.name.localeCompare(b.name);\r\n        });\r\n      }\r\n      this.childrens.forEach(child => {\r\n        if (child.group && (this.groups.indexOf(child.group) === -1)) {\r\n          this.groups.push(child.group);\r\n          const thematic: SpatialFilterThematic = {\r\n            name: child.group,\r\n            children: []\r\n          };\r\n          this.thematics.push(thematic);\r\n        }\r\n        if (!child.group) {\r\n          const thematic: SpatialFilterThematic = {\r\n            name: child.name,\r\n            children: [],\r\n            source: child.source\r\n          };\r\n          this.thematics.push(thematic);\r\n        }\r\n        this.thematics.sort((a, b) => {\r\n          return a.name.localeCompare(b.name);\r\n        });\r\n      });\r\n      this.thematics.forEach(thematic => {\r\n        for (const child of this.childrens) {\r\n          if (child.group === thematic.name) {\r\n            thematic.children.push(child);\r\n          }\r\n        }\r\n      });\r\n    });\r\n\r\n    this.dataSource.data = this.thematics;\r\n\r\n    this.drawGuide$.next(null);\r\n    this.value$.next(this.formControl.value ? this.formControl.value : undefined);\r\n    this.value$$ = this.formControl.valueChanges.subscribe((value: GeoJSONGeometry) => {\r\n      this.value$.next(value ? value : undefined);\r\n    });\r\n\r\n    this.value$.subscribe(() => {\r\n      this.getRadius();\r\n      this.cdRef.detectChanges();\r\n    });\r\n\r\n    this.radiusChanges$$ = this.radiusFormControl.valueChanges.subscribe(() => {\r\n      this.getRadius();\r\n      this.cdRef.detectChanges();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the value stream\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.value$$.unsubscribe();\r\n    this.cdRef.detach();\r\n  }\r\n\r\n  onItemTypeChange(event) {\r\n    this.selectedItemType = event.value;\r\n    this.itemTypeChange.emit(this.selectedItemType);\r\n  }\r\n\r\n  /**\r\n   * Set the measure unit\r\n   * @internal\r\n   */\r\n  onMeasureUnitChange(unit: MeasureLengthUnit) {\r\n    this.measureUnit = unit;\r\n  }\r\n\r\n  isPredefined() {\r\n    return this.type === SpatialFilterType.Predefined;\r\n  }\r\n\r\n  isPolygon() {\r\n    return this.type === SpatialFilterType.Polygon;\r\n  }\r\n\r\n  isPoint() {\r\n    return this.type === SpatialFilterType.Point;\r\n  }\r\n\r\n  hasChild(_: number, node: SpatialFilterThematic) {\r\n    if (node.children) {\r\n      return node.children.length;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  onToggleClick(node: SpatialFilterThematic) {\r\n    this.treeControl.isExpanded(node) ? this.treeControl.collapse(node) : this.treeControl.expand(node);\r\n  }\r\n\r\n  isAllSelected(node?: SpatialFilterThematic) {\r\n    let numSelected;\r\n    let numNodes = 0;\r\n    if (!node) {\r\n      numSelected = this.selectedThematics.selected.length;\r\n      this.thematics.forEach(thematic => {\r\n        if (this.groups.indexOf(thematic.name) === -1) {\r\n          numNodes++;\r\n        }\r\n      });\r\n      this.childrens.forEach(children => {\r\n        if (!this.thematics.find(thematic => thematic.source === children.source)) {\r\n          numNodes++;\r\n        }\r\n      });\r\n    } else {\r\n      numSelected = node.children.length;\r\n      node.children.forEach(children => {\r\n        if (this.selectedThematics.selected.find(thematic => thematic === children)) {\r\n          numNodes++;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (numNodes >= 1) {\r\n      return numSelected === numNodes;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  hasChildrenSelected(node: SpatialFilterThematic) {\r\n    let bool = false;\r\n    node.children.forEach(child => {\r\n      if (this.selectedThematics.selected.find(thematic => thematic.source === child.source)) {\r\n        bool = true;\r\n      }\r\n    });\r\n    return bool;\r\n  }\r\n\r\n  /**\r\n   * Apply header checkbox\r\n   */\r\n  masterToggle() {\r\n    this.isAllSelected() ?\r\n      this.selectedThematics.clear() :\r\n      this.selectAll();\r\n\r\n    const selectedThematicsName: SpatialFilterThematic[] = [];\r\n    for (const thematic of this.selectedThematics.selected) {\r\n      selectedThematicsName.push(thematic);\r\n    }\r\n\r\n    if (this.isAllSelected()) {\r\n      this.thematics.forEach(thematic => {\r\n        if (this.hasChild(0, thematic)) {\r\n          this.treeControl.expand(thematic);\r\n        }\r\n      });\r\n    } else {\r\n      this.thematics.forEach(thematic => {\r\n        if (this.hasChild(0, thematic)) {\r\n          this.treeControl.collapse(thematic);\r\n        }\r\n      });\r\n    }\r\n    this.thematicChange.emit(selectedThematicsName);\r\n  }\r\n\r\n  selectAll(node?: SpatialFilterThematic) {\r\n    if (!node) {\r\n      this.thematics.forEach(thematic => {\r\n        if (this.groups.indexOf(thematic.name) === -1) {\r\n          this.selectedThematics.select(thematic);\r\n        }\r\n      });\r\n      this.childrens.forEach(children => {\r\n        if (!this.selectedThematics.selected.find(thematic => thematic.source === children.source)) {\r\n          this.selectedThematics.select(children);\r\n        }\r\n      });\r\n    } else {\r\n      if (this.hasChild(0, node)) {\r\n        node.children.forEach(children => this.selectedThematics.select(children));\r\n      }\r\n    }\r\n  }\r\n\r\n  childrensToggle(node: SpatialFilterThematic) {\r\n    this.isAllSelected(node) ?\r\n    node.children.forEach(child => this.selectedThematics.deselect(child)) :\r\n    this.selectAll(node);\r\n\r\n    const selectedThematicsName: SpatialFilterThematic[] = [];\r\n    for (const thematic of this.selectedThematics.selected) {\r\n      selectedThematicsName.push(thematic);\r\n    }\r\n    this.treeControl.expand(node);\r\n    this.thematicChange.emit(selectedThematicsName);\r\n  }\r\n\r\n  /**\r\n   * Apply changes to the thematics selected tree and emit event\r\n   */\r\n  onToggleChange(nodeSelected: SpatialFilterThematic) {\r\n    let selected = false;\r\n    if (this.selectedThematics.selected.find(thematic => thematic.source === nodeSelected.source) !== undefined) {\r\n      selected = true;\r\n    }\r\n\r\n    this.childrens.forEach(children => {\r\n      if (children === nodeSelected && selected === false) {\r\n        this.selectedThematics.select(children);\r\n      }\r\n      if (children === nodeSelected && selected === true) {\r\n        this.selectedThematics.deselect(children);\r\n      }\r\n    });\r\n    this.thematics.forEach(thematic => {\r\n      if (thematic === nodeSelected && selected === false) {\r\n        this.selectedThematics.select(thematic);\r\n      }\r\n      if (thematic === nodeSelected && selected === true) {\r\n        this.selectedThematics.deselect(thematic);\r\n      }\r\n    });\r\n\r\n    const selectedThematicsName: SpatialFilterThematic[] = [];\r\n    for (const thematic of this.selectedThematics.selected) {\r\n      selectedThematicsName.push(thematic);\r\n    }\r\n    this.thematicChange.emit(selectedThematicsName);\r\n  }\r\n\r\n  onDrawControlChange() {\r\n    this.drawControlIsActive = !this.drawControlIsActive;\r\n  }\r\n\r\n  onfreehandControlChange() {\r\n    this.freehandDrawIsActive = !this.freehandDrawIsActive;\r\n    this.freehandControl.emit(this.freehandDrawIsActive);\r\n  }\r\n\r\n  /**\r\n   * Launch search button\r\n   */\r\n  toggleSearchButton() {\r\n    if (this.isPolygon() || this.isPoint()) {\r\n      this.drawZone = this.formControl.value as Feature;\r\n      this.drawZone.meta = {\r\n        id: undefined,\r\n        title: 'Zone'\r\n      };\r\n      this.drawZone.properties = {\r\n        nom: 'Zone'\r\n      };\r\n      this.drawZoneEvent.emit(this.drawZone);\r\n    }\r\n    this.radiusEvent.emit(this.radius);\r\n    this.toggleSearch.emit();\r\n  }\r\n\r\n  /**\r\n   * Launch clear button (clear store and map layers)\r\n   */\r\n  clearButton() {\r\n    this.loading = true;\r\n    this.map.removeLayers(this.layers);\r\n    this.loading = false;\r\n    if (this.store) {\r\n      this.store.clear();\r\n    }\r\n    this.clearButtonEvent.emit([]);\r\n  }\r\n\r\n  /**\r\n   * Launch clear search (clear field if type is predefined)\r\n   */\r\n  clearSearch() {\r\n    this.selectedThematics.clear();\r\n    this.thematicChange.emit([]);\r\n    this.clearSearchEvent.emit();\r\n  }\r\n\r\n  /**\r\n   * Verify conditions of incomplete fields or busy service\r\n   */\r\n  disableSearchButton(): boolean {\r\n    if (this.type === SpatialFilterType.Predefined) {\r\n      if (this.selectedItemType === SpatialFilterItemType.Address) {\r\n        if (this.queryType !== undefined && this.zone !== undefined) {\r\n          return this.loading;\r\n        }\r\n      }\r\n      if (this.selectedItemType === SpatialFilterItemType.Thematics) {\r\n        if (this.queryType !== undefined && this.zone !== undefined && this.selectedThematics.selected.length > 0) {\r\n          return this.loading;\r\n        }\r\n      }\r\n    }\r\n    if (this.type === SpatialFilterType.Polygon || this.type === SpatialFilterType.Point) {\r\n      if (this.selectedItemType === SpatialFilterItemType.Address && this.formControl.value !== null) {\r\n        return this.loading;\r\n      }\r\n      if (this.selectedItemType === SpatialFilterItemType.Thematics) {\r\n        if (this.selectedThematics.selected.length > 0 && this.formControl.value !== null) {\r\n          return this.loading;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Manage radius value at user change\r\n   */\r\n  getRadius() {\r\n    let formValue;\r\n    this.formControl.value !== null ? formValue = this.formControl.value.radius : formValue = undefined;\r\n    if (this.type === SpatialFilterType.Point) {\r\n      if (!this.freehandDrawIsActive) {\r\n        if (this.radiusFormControl.value >= 10000 || this.radiusFormControl.value < 0) {\r\n          this.messageService.alert(this.languageService.translate.instant('igo.geo.spatialFilter.radiusAlert'),\r\n            this.languageService.translate.instant('igo.geo.spatialFilter.warning'));\r\n          this.radius = 1000;\r\n          this.radiusFormControl.setValue(this.radius);\r\n          this.drawGuide$.next(this.radius);\r\n          return;\r\n        }\r\n      } else {\r\n        if (this.radiusFormControl.value >= 10000 || this.radiusFormControl.value < 0) {\r\n          this.messageService.alert(this.languageService.translate.instant('igo.geo.spatialFilter.radiusAlert'),\r\n            this.languageService.translate.instant('igo.geo.spatialFilter.warning'));\r\n          this.radius = 1000;\r\n          this.radiusFormControl.setValue(this.radius);\r\n          this.drawGuide$.next(this.radius);\r\n          return;\r\n        }\r\n        if (formValue >= 10000) {\r\n          this.messageService.alert(this.languageService.translate.instant('igo.geo.spatialFilter.radiusAlert'),\r\n            this.languageService.translate.instant('igo.geo.spatialFilter.warning'));\r\n          this.formControl.reset();\r\n          return;\r\n        }\r\n        if (formValue) {\r\n          if (formValue !== this.radiusFormControl.value) {\r\n            this.radiusFormControl.setValue(formValue);\r\n          }\r\n          this.formControl.value.radius = undefined;\r\n        }\r\n      }\r\n      this.radius = this.radiusFormControl.value;\r\n      this.drawGuide$.next(this.radius);\r\n      this.overlayStyle$.next(this.PointStyle);\r\n      this.drawStyle$.next(this.PointStyle);\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatAutocompleteModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatSliderModule,\r\n  MatSlideToggleModule,\r\n  MatFormFieldModule,\r\n  MatTableModule,\r\n  MatTreeModule,\r\n  MatInputModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatListModule,\r\n  MatTooltipModule,\r\n  MatDatepickerModule,\r\n  MatNativeDateModule,\r\n  MAT_DATE_LOCALE,\r\n  MatCheckboxModule,\r\n  MatTabsModule,\r\n  MatRadioModule,\r\n  MatMenuModule\r\n} from '@angular/material';\r\n\r\nimport {\r\n  MatDatetimepickerModule,\r\n  MatNativeDatetimeModule\r\n} from '@mat-datetimepicker/core';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport {\r\n  IgoCollapsibleModule,\r\n  IgoListModule,\r\n  IgoKeyValueModule\r\n} from '@igo2/common';\r\nimport { IgoGeometryModule } from './../geometry/geometry.module';\r\n\r\nimport { FilterableDataSourcePipe } from './shared/filterable-datasource.pipe';\r\nimport { IgoLayerModule } from '../layer/layer.module';\r\nimport { TimeFilterButtonComponent } from './time-filter-button/time-filter-button.component';\r\nimport { TimeFilterFormComponent } from './time-filter-form/time-filter-form.component';\r\nimport { TimeFilterItemComponent } from './time-filter-item/time-filter-item.component';\r\nimport { TimeFilterListBindingDirective } from './time-filter-list/time-filter-list-binding.directive';\r\nimport { TimeFilterListComponent } from './time-filter-list/time-filter-list.component';\r\nimport { TimeFilterService } from './shared/time-filter.service';\r\n\r\nimport { OgcFilterFormComponent } from './ogc-filter-form/ogc-filter-form.component';\r\nimport { OgcFilterableFormComponent } from './ogc-filterable-form/ogc-filterable-form.component';\r\nimport { OgcFilterableItemComponent } from './ogc-filterable-item/ogc-filterable-item.component';\r\nimport { OgcFilterableListBindingDirective } from './ogc-filterable-list/ogc-filterable-list-binding.directive';\r\nimport { OgcFilterableListComponent } from './ogc-filterable-list/ogc-filterable-list.component';\r\nimport { OgcFilterButtonComponent } from './ogc-filter-button/ogc-filter-button.component';\r\nimport { OGCFilterService } from './shared/ogc-filter.service';\r\nimport { OgcFilterToggleButtonComponent } from './ogc-filter-toggle-button/ogc-filter-toggle-button.component';\r\n\r\nimport { SpatialFilterTypeComponent } from './spatial-filter/spatial-filter-type/spatial-filter-type.component';\r\nimport { SpatialFilterListComponent } from './spatial-filter/spatial-filter-list/spatial-filter-list.component';\r\nimport { SpatialFilterItemComponent } from './spatial-filter/spatial-filter-item/spatial-filter-item.component';\r\nimport { SpatialFilterService } from './shared/spatial-filter.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatAutocompleteModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatRadioModule,\r\n    MatMenuModule,\r\n    MatTableModule,\r\n    MatTreeModule,\r\n    MatButtonToggleModule,\r\n    MatCheckboxModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatListModule,\r\n    MatTooltipModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatDatetimepickerModule,\r\n    MatNativeDatetimeModule,\r\n    IgoLanguageModule,\r\n    IgoLayerModule,\r\n    IgoCollapsibleModule,\r\n    IgoListModule,\r\n    IgoKeyValueModule,\r\n    IgoGeometryModule\r\n  ],\r\n  exports: [\r\n    FilterableDataSourcePipe,\r\n    TimeFilterButtonComponent,\r\n    TimeFilterFormComponent,\r\n    TimeFilterItemComponent,\r\n    TimeFilterListComponent,\r\n    TimeFilterListBindingDirective,\r\n    OgcFilterFormComponent,\r\n    OgcFilterButtonComponent,\r\n    OgcFilterToggleButtonComponent,\r\n    OgcFilterableFormComponent,\r\n    OgcFilterableItemComponent,\r\n    OgcFilterableListComponent,\r\n    OgcFilterableListBindingDirective,\r\n    SpatialFilterTypeComponent,\r\n    SpatialFilterListComponent,\r\n    SpatialFilterItemComponent\r\n  ],\r\n  declarations: [\r\n    FilterableDataSourcePipe,\r\n    TimeFilterButtonComponent,\r\n    TimeFilterFormComponent,\r\n    TimeFilterItemComponent,\r\n    TimeFilterListComponent,\r\n    TimeFilterListBindingDirective,\r\n    OgcFilterFormComponent,\r\n    OgcFilterButtonComponent,\r\n    OgcFilterToggleButtonComponent,\r\n    OgcFilterableFormComponent,\r\n    OgcFilterableItemComponent,\r\n    OgcFilterableListComponent,\r\n    OgcFilterableListBindingDirective,\r\n    SpatialFilterTypeComponent,\r\n    SpatialFilterListComponent,\r\n    SpatialFilterItemComponent\r\n  ],\r\n  providers: [TimeFilterService, OGCFilterService, SpatialFilterService]\r\n})\r\nexport class IgoFilterModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoFilterModule,\r\n      providers: [\r\n        {\r\n          provide: MAT_DATE_LOCALE,\r\n          useValue: 'fr'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}\r\n","export class ExportError extends Error {}\r\n\r\nexport class ExportInvalidFileError extends ExportError {\r\n  constructor() {\r\n    super('Invalid file');\r\n    Object.setPrototypeOf(this, ExportInvalidFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ExportNothingToExportError extends ExportError {\r\n  constructor() {\r\n    super('Nothing to export');\r\n    Object.setPrototypeOf(this, ExportNothingToExportError.prototype);\r\n  }\r\n}\r\n","import {\r\n  getEntityProperty,\r\n  EntityTableColumn,\r\n  EntityTableColumnRenderer\r\n} from '@igo2/common';\r\nimport { MessageService, LanguageService } from '@igo2/core';\r\nimport { downloadContent } from '@igo2/utils';\r\n\r\nimport { ExportNothingToExportError } from './export.errors';\r\n\r\nexport function handleFileExportError(\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  if (error instanceof ExportNothingToExportError) {\r\n    handleNothingToExportError(messageService, languageService);\r\n    return;\r\n  }\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.export.failed.title');\r\n  const message = translate.instant('igo.geo.export.failed.text');\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleNothingToExportError(\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.export.nothing.title');\r\n  const message = translate.instant('igo.geo.export.nothing.text');\r\n  messageService.error(message, title);\r\n}\r\n\r\n/**\r\n * Export array to CSV\r\n *\r\n * @param rows Array of arrays to export as CSV\r\n * @param separator Cell separator\r\n */\r\nexport function exportToCSV(rows: any[][], fileName: string, separator: string = ';') {\r\n  const lines = rows.map((row: any[][], index: number) => row.join(separator));\r\n  const csvContent = lines.join('\\n');\r\n  downloadContent(csvContent, 'text/csv;charset=utf-8', fileName);\r\n}\r\n\r\n/**\r\n * Return an array of values from an array of entities.\r\n *\r\n * @param entities Array of entities\r\n * @param scolumns Columns definition of the output data\r\n */\r\nexport function entitiesToRowData(entities: object[], columns: EntityTableColumn[]) {\r\n  return entities.map((entity: object) => {\r\n    return columns.map((column: EntityTableColumn) => {\r\n      let valueAccessor;\r\n      if (column.renderer === undefined || column.renderer === EntityTableColumnRenderer.Default) {\r\n        valueAccessor = column.valueAccessor;\r\n      }\r\n      valueAccessor = valueAccessor ? valueAccessor : getEntityProperty;\r\n      return valueAccessor(entity, column.name);\r\n    });\r\n  });\r\n}\r\n","import { strEnum } from '@igo2/utils';\r\n\r\nexport const ExportFormat = strEnum(['GeoJSON', 'GML', 'GPX', 'KML', 'Shapefile', 'CSV']);\r\nexport type ExportFormat = keyof typeof ExportFormat;\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { downloadContent } from '@igo2/utils';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport * as olformat from 'ol/format';\r\nimport OlFeature from 'ol/Feature';\r\n\r\nimport { ExportFormat } from './export.type';\r\nimport {\r\n  ExportInvalidFileError,\r\n  ExportNothingToExportError\r\n} from './export.errors';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExportService {\r\n  static ogreFormats = {\r\n    GML: 'gml',\r\n    GPX: 'gpx',\r\n    KML: 'kml',\r\n    Shapefile: 'ESRI Shapefile',\r\n    CSV: 'CSV'\r\n  };\r\n\r\n  static noOgreFallbacks = ['GML', 'GPX', 'KML'];\r\n\r\n  private ogreUrl: string;\r\n\r\n  constructor(private config: ConfigService) {\r\n    this.ogreUrl = this.config.getConfig('importExport.url');\r\n  }\r\n\r\n  export(\r\n    olFeatures: OlFeature[],\r\n    format: ExportFormat,\r\n    title: string,\r\n    projectionIn = 'EPSG:4326',\r\n    projectionOut = 'EPSG:4326'\r\n  ): Observable<void> {\r\n    const exportOlFeatures = olFeatures.map((olFeature: OlFeature) => {\r\n      const keys = olFeature\r\n        .getKeys()\r\n        .filter((key: string) => !key.startsWith('_'));\r\n      const properties = keys.reduce(\r\n        (acc: object, key: string) => {\r\n          acc[key] = olFeature.get(key);\r\n          return acc;\r\n        },\r\n        { geometry: olFeature.getGeometry() }\r\n      );\r\n      return new OlFeature(properties);\r\n    });\r\n\r\n    return this.exportAsync(\r\n      exportOlFeatures,\r\n      format,\r\n      title,\r\n      projectionIn,\r\n      projectionOut\r\n    );\r\n  }\r\n\r\n  private exportAsync(\r\n    olFeatures: OlFeature[],\r\n    format: ExportFormat,\r\n    title: string,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ): Observable<void> {\r\n    const doExport = (observer: Observer<void>) => {\r\n      const nothingToExport = this.nothingToExport(olFeatures, format);\r\n      if (nothingToExport === true) {\r\n        observer.error(new ExportNothingToExportError());\r\n        return;\r\n      }\r\n\r\n      const ogreFormats = Object.keys(ExportService.ogreFormats);\r\n      if (ogreFormats.indexOf(format) >= 0) {\r\n        if (this.ogreUrl === undefined) {\r\n          if (ExportService.noOgreFallbacks.indexOf(format) >= 0) {\r\n            this.exportToFile(\r\n              olFeatures,\r\n              observer,\r\n              format,\r\n              title,\r\n              projectionIn,\r\n              projectionOut\r\n            );\r\n          } else {\r\n            observer.error(new ExportInvalidFileError());\r\n          }\r\n          return;\r\n        }\r\n        this.exportWithOgre(\r\n          olFeatures,\r\n          observer,\r\n          format,\r\n          title,\r\n          projectionIn,\r\n          projectionOut\r\n        );\r\n      } else {\r\n        this.exportToFile(\r\n          olFeatures,\r\n          observer,\r\n          format,\r\n          title,\r\n          projectionIn,\r\n          projectionOut\r\n        );\r\n      }\r\n    };\r\n\r\n    return new Observable(doExport);\r\n  }\r\n\r\n  private exportToFile(\r\n    olFeatures: OlFeature[],\r\n    observer: Observer<void>,\r\n    format: ExportFormat,\r\n    title: string,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) {\r\n    const olFormat = new olformat[format]();\r\n    const featuresText = olFormat.writeFeatures(olFeatures, {\r\n      dataProjection: projectionOut,\r\n      featureProjection: projectionIn,\r\n      featureType: 'feature',\r\n      featureNS: 'http://example.com/feature'\r\n    });\r\n\r\n    const fileName = `${title}.${format.toLowerCase()}`;\r\n\r\n    downloadContent(featuresText, 'text/plain;charset=utf-8', fileName);\r\n    observer.complete();\r\n  }\r\n\r\n  private exportWithOgre(\r\n    olFeatures: OlFeature[],\r\n    observer: Observer<void>,\r\n    format: string,\r\n    title: string,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) {\r\n    const featuresText = new olformat.GeoJSON().writeFeatures(olFeatures, {\r\n      dataProjection: projectionOut,\r\n      featureProjection: projectionIn,\r\n      featureType: 'feature',\r\n      featureNS: 'http://example.com/feature'\r\n    });\r\n\r\n    const url = `${this.ogreUrl}/convertJson`;\r\n    const form = document.createElement('form');\r\n    form.setAttribute('method', 'post');\r\n    form.setAttribute('target', '_blank');\r\n    form.setAttribute('action', url);\r\n    form.acceptCharset = 'UTF-8';\r\n    form.enctype = 'application/x-www-form-urlencoded; charset=utf-8;';\r\n\r\n    const geojsonField = document.createElement('input');\r\n    geojsonField.setAttribute('type', 'hidden');\r\n    geojsonField.setAttribute('name', 'json');\r\n    geojsonField.setAttribute('value', featuresText);\r\n    form.appendChild(geojsonField);\r\n\r\n    const outputNameField = document.createElement('input');\r\n    const outputName =\r\n      format === 'Shapefile'\r\n        ? `${title}.zip`\r\n        : `${title}.${format.toLowerCase()}`;\r\n    outputNameField.setAttribute('type', 'hidden');\r\n    outputNameField.setAttribute('name', 'outputName');\r\n    outputNameField.setAttribute('value', outputName);\r\n    form.appendChild(outputNameField);\r\n\r\n    const ogreFormat = ExportService.ogreFormats[format];\r\n    const outputFormatField = document.createElement('input');\r\n    outputFormatField.setAttribute('type', 'hidden');\r\n    outputFormatField.setAttribute('name', 'format');\r\n    outputFormatField.setAttribute('value', ogreFormat);\r\n    form.appendChild(outputFormatField);\r\n\r\n    document.body.appendChild(form);\r\n    form.submit();\r\n    document.body.removeChild(form);\r\n\r\n    observer.complete();\r\n  }\r\n\r\n  private nothingToExport(olFeatures: OlFeature[], format: string): boolean {\r\n    if (olFeatures.length === 0) {\r\n      return true;\r\n    }\r\n    if (format === 'GPX') {\r\n      const pointOrLine = olFeatures.find(olFeature => {\r\n        return (\r\n          ['Point', 'LineString'].indexOf(olFeature.getGeometry().getType()) >=\r\n          0\r\n        );\r\n      });\r\n      return pointOrLine === undefined;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","export class ImportError extends Error {}\r\n\r\nexport class ImportInvalidFileError extends ImportError {\r\n  constructor() {\r\n    super('Invalid file');\r\n    Object.setPrototypeOf(this, ImportInvalidFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportUnreadableFileError extends ImportError {\r\n  constructor() {\r\n      super('Failed to read file');\r\n      Object.setPrototypeOf(this, ImportUnreadableFileError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportNothingToImportError extends ImportError {\r\n  constructor() {\r\n      super('Nothing to import');\r\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportSizeError extends ImportError {\r\n  constructor() {\r\n      super('File is too large');\r\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\r\n  }\r\n}\r\n\r\nexport class ImportSRSError extends ImportError {\r\n  constructor() {\r\n      super('Invalid SRS definition');\r\n      Object.setPrototypeOf(this, ImportNothingToImportError.prototype);\r\n  }\r\n}\r\n","import * as olStyle from 'ol/style';\r\n\r\nimport { MessageService, LanguageService, ConfigService } from '@igo2/core';\r\n\r\nimport { FeatureDataSource } from '../../datasource/shared/datasources/feature-datasource';\r\nimport { FeatureDataSourceOptions } from '../../datasource/shared/datasources/feature-datasource.interface';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { featureToOl, moveToOlFeatures } from '../../feature/shared/feature.utils';\r\nimport { VectorLayer } from '../../layer/shared/layers/vector-layer';\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { QueryableDataSourceOptions } from '../../query/shared/query.interfaces';\r\nimport { StyleService } from '../../layer/shared/style.service';\r\nimport { StyleByAttribute } from '../../layer/shared/vector-style.interface';\r\nimport { StyleListService } from '../style-list/style-list.service';\r\n\r\nexport function addLayerAndFeaturesToMap(features: Feature[], map: IgoMap, layerTitle: string): VectorLayer {\r\n  const olFeatures = features.map((feature: Feature) => featureToOl(feature, map.projection));\r\n\r\n  const r = Math.floor(Math.random() * 255);\r\n  const g = Math.floor(Math.random() * 255);\r\n  const b = Math.floor(Math.random() * 255);\r\n  const stroke = new olStyle.Stroke({\r\n    color: [r, g, b, 1],\r\n    width: 2\r\n  });\r\n\r\n  const fill = new olStyle.Fill({\r\n    color: [r, g, b, 0.4]\r\n  });\r\n  const sourceOptions: FeatureDataSourceOptions & QueryableDataSourceOptions = {\r\n    queryable: true\r\n  };\r\n  const source = new FeatureDataSource(sourceOptions);\r\n  source.ol.addFeatures(olFeatures);\r\n  const layer = new VectorLayer({\r\n    title: layerTitle,\r\n    source,\r\n    style: new olStyle.Style({\r\n      stroke,\r\n      fill,\r\n      image: new olStyle.Circle({\r\n        radius: 5,\r\n        stroke,\r\n        fill\r\n      })\r\n    })\r\n  });\r\n  map.addLayer(layer);\r\n  moveToOlFeatures(map, olFeatures);\r\n\r\n  return layer;\r\n}\r\n\r\nexport function addLayerAndFeaturesStyledToMap(features: Feature[], map: IgoMap, layerTitle: string,\r\n                                               styleListService: StyleListService, styleService: StyleService): VectorLayer {\r\n  const olFeatures = features.map((feature: Feature) => featureToOl(feature, map.projection));\r\n  let style;\r\n\r\n  if (styleListService.getStyleList(layerTitle.toString() + '.styleByAttribute')) {\r\n    const styleByAttribute: StyleByAttribute = styleListService.getStyleList(layerTitle.toString() + '.styleByAttribute');\r\n\r\n    const styleBy = feature => {\r\n      return styleService.createStyleByAttribute(\r\n        feature,\r\n        styleByAttribute\r\n      );\r\n    };\r\n    style = styleBy;\r\n\r\n  } else if (styleListService.getStyleList(layerTitle.toString() + '.style')) {\r\n    const radius = styleListService.getStyleList(layerTitle.toString() + '.style.radius');\r\n\r\n    const stroke = new olStyle.Stroke({\r\n      color: styleListService.getStyleList(layerTitle.toString() + '.style.stroke.color'),\r\n      width: styleListService.getStyleList(layerTitle.toString() + '.style.stroke.width')\r\n    });\r\n\r\n    const fill = new olStyle.Fill({\r\n      color: styleListService.getStyleList(layerTitle.toString() + '.style.fill.color')\r\n    });\r\n\r\n    style = new olStyle.Style({\r\n      stroke,\r\n      fill,\r\n      image: new olStyle.Circle({\r\n        radius: radius ? radius : 5,\r\n        stroke,\r\n        fill\r\n      })\r\n    });\r\n  } else {\r\n    const radius = styleListService.getStyleList('default.style.radius');\r\n\r\n    const stroke = new olStyle.Stroke({\r\n      color: styleListService.getStyleList('default.style.stroke.color'),\r\n      width: styleListService.getStyleList('default.style.stroke.width')\r\n    });\r\n\r\n    const fill = new olStyle.Fill({\r\n      color: styleListService.getStyleList('default.style.fill.color')\r\n    });\r\n\r\n    style = new olStyle.Style({\r\n      stroke,\r\n      fill,\r\n      image: new olStyle.Circle({\r\n        radius: radius ? radius : 5,\r\n        stroke,\r\n        fill\r\n      })\r\n    });\r\n  }\r\n  const sourceOptions: FeatureDataSourceOptions & QueryableDataSourceOptions = {\r\n    queryable: true\r\n  };\r\n  const source = new FeatureDataSource(sourceOptions);\r\n  source.ol.addFeatures(olFeatures);\r\n\r\n  const layer = new VectorLayer({\r\n    title: layerTitle,\r\n    source,\r\n    style\r\n  });\r\n  map.addLayer(layer);\r\n  moveToOlFeatures(map, olFeatures);\r\n\r\n  return layer;\r\n}\r\n\r\nexport function handleFileImportSuccess(\r\n  file: File,\r\n  features: Feature[],\r\n  map: IgoMap,\r\n  messageService: MessageService,\r\n  languageService: LanguageService,\r\n  styleListService?: StyleListService,\r\n  styleService?: StyleService\r\n) {\r\n  if (features.length === 0) {\r\n    handleNothingToImportError(file, messageService, languageService);\r\n    return;\r\n  }\r\n\r\n  const layerTitle = computeLayerTitleFromFile(file);\r\n\r\n  if (!styleListService) {\r\n    addLayerAndFeaturesToMap(features, map, layerTitle);\r\n  } else {\r\n    addLayerAndFeaturesStyledToMap(features, map, layerTitle, styleListService, styleService);\r\n  }\r\n\r\n  const translate = languageService.translate;\r\n  const messageTitle = translate.instant('igo.geo.dropGeoFile.success.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.success.text', {\r\n      value: layerTitle\r\n  });\r\n  messageService.success(message, messageTitle);\r\n}\r\n\r\nexport function handleFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const errMapping = {\r\n    'Invalid file': handleInvalidFileImportError,\r\n    'File is too large': handleSizeFileImportError,\r\n    'Failed to read file': handleUnreadbleFileImportError,\r\n    'Invalid SRS definition': handleSRSImportError\r\n  };\r\n  errMapping[error.message](file, error, messageService, languageService);\r\n}\r\n\r\nexport function handleInvalidFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.dropGeoFile.invalid.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.invalid.text', {\r\n      value: file.name,\r\n      mimeType: file.type\r\n  });\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleUnreadbleFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.dropGeoFile.unreadable.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.unreadable.text', {\r\n      value: file.name\r\n  });\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleSizeFileImportError(\r\n  file: File,\r\n  error: Error,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.dropGeoFile.tooLarge.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.tooLarge.text', {\r\n      value: file.name\r\n  });\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleNothingToImportError(\r\n  file: File,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.dropGeoFile.empty.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.empty.text', {\r\n      value: file.name,\r\n      mimeType: file.type\r\n  });\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function handleSRSImportError(\r\n  file: File,\r\n  messageService: MessageService,\r\n  languageService: LanguageService\r\n) {\r\n  const translate = languageService.translate;\r\n  const title = translate.instant('igo.geo.dropGeoFile.invalidSRS.title');\r\n  const message = translate.instant('igo.geo.dropGeoFile.invalidSRS.text', {\r\n      value: file.name,\r\n      mimeType: file.type\r\n  });\r\n  messageService.error(message, title);\r\n}\r\n\r\nexport function getFileExtension(file: File): string {\r\n  return file.name.split('.').pop().toLowerCase();\r\n}\r\n\r\nexport function computeLayerTitleFromFile(file: File): string {\r\n  return file.name.substr(0, file.name.lastIndexOf('.'));\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\nimport { uuid } from '@igo2/utils';\r\n\r\nimport { Observable, Observer } from 'rxjs';\r\n\r\nimport * as olformat from 'ol/format';\r\nimport OlFeature from 'ol/Feature';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport {\r\n  ImportInvalidFileError,\r\n  ImportUnreadableFileError,\r\n  ImportSizeError,\r\n  ImportSRSError\r\n} from './import.errors';\r\nimport { computeLayerTitleFromFile, getFileExtension } from './import.utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImportService {\r\n  static allowedMimeTypes = [\r\n    'application/gml+xml',\r\n    'application/vnd.google-earth.kml+xml',\r\n    'application/gpx+xml',\r\n    'application/json'\r\n  ];\r\n\r\n  static allowedZipMimeTypes = [\r\n    'application/zip',\r\n    'application/x-zip-compressed',\r\n    'application/x-zip'\r\n  ];\r\n\r\n  static allowedExtensions = ['geojson', 'kml', 'gpx', 'json', 'gml'];\r\n\r\n  private ogreUrl: string;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    this.ogreUrl = this.config.getConfig('importExport.url');\r\n  }\r\n\r\n  import(\r\n    file: File,\r\n    projectionIn = 'EPSG:4326',\r\n    projectionOut = 'EPSG:4326'\r\n  ): Observable<Feature[]> {\r\n    return this.importAsync(file, projectionIn, projectionOut);\r\n  }\r\n\r\n  private getFileImporter(\r\n    file: File\r\n  ): (\r\n    file: File,\r\n    observer: Observer<Feature[]>,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) => void {\r\n    const extension = getFileExtension(file);\r\n    const mimeType = file.type;\r\n    const allowedMimeTypes = [\r\n      ...ImportService.allowedMimeTypes,\r\n      ...ImportService.allowedZipMimeTypes\r\n    ];\r\n    const allowedExtensions = ImportService.allowedExtensions;\r\n\r\n    if (\r\n      allowedMimeTypes.indexOf(mimeType) < 0 &&\r\n      allowedExtensions.indexOf(extension) < 0\r\n    ) {\r\n      return undefined;\r\n    } else if (\r\n      mimeType === 'application/json' ||\r\n      ['json', 'geojson', 'kml', 'gpx'].indexOf(extension) >= 0\r\n    ) {\r\n      return this.importFile;\r\n    } else if (this.ogreUrl !== undefined) {\r\n      return this.importFileWithOgre;\r\n    }\r\n\r\n    return undefined;\r\n  }\r\n\r\n  private importAsync(\r\n    file: File,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ): Observable<Feature[]> {\r\n    const doImport = (observer: Observer<Feature[]>) => {\r\n      if (file.size >= 30000000) {\r\n        observer.error(new ImportSizeError());\r\n        return;\r\n      }\r\n      const importer = this.getFileImporter(file);\r\n      if (importer === undefined) {\r\n        observer.error(new ImportInvalidFileError());\r\n        return;\r\n      }\r\n\r\n      importer.call(this, file, observer, projectionIn, projectionOut);\r\n    };\r\n\r\n    return new Observable(doImport);\r\n  }\r\n\r\n  private importFile(\r\n    file: File,\r\n    observer: Observer<Feature[]>,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) {\r\n    const reader = new FileReader();\r\n\r\n    reader.onload = (event: any) => {\r\n      try {\r\n        const features = this.parseFeaturesFromFile(\r\n          file,\r\n          event.target.result,\r\n          projectionIn,\r\n          projectionOut\r\n        );\r\n        observer.next(features);\r\n      } catch (e) {\r\n        observer.error(new ImportUnreadableFileError());\r\n      }\r\n\r\n      observer.complete();\r\n    };\r\n\r\n    reader.onerror = evt => {\r\n      observer.error(new ImportUnreadableFileError());\r\n    };\r\n\r\n    reader.readAsText(file, 'UTF-8');\r\n  }\r\n\r\n  private importFileWithOgre(\r\n    file: File,\r\n    observer: Observer<Feature[]>,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ) {\r\n    const url = `${this.ogreUrl}/convert`;\r\n    const formData = new FormData();\r\n    formData.append('upload', file);\r\n    formData.append('sourceSrs', projectionIn);\r\n    formData.append('targetSrs', projectionOut);\r\n    formData.append('formatOutput', 'GEOJSON');\r\n    formData.append('skipFailures', '');\r\n\r\n    this.http.post(url, formData, { headers: new HttpHeaders() }).subscribe(\r\n      (response: { errors?: string[] } | object | null) => {\r\n        if (response === null) {\r\n          observer.error(new ImportUnreadableFileError());\r\n          return;\r\n        }\r\n\r\n        const errors = (response as any).errors || [];\r\n        if (errors.length > 0) {\r\n          observer.error(new ImportUnreadableFileError());\r\n        } else {\r\n          const features = this.parseFeaturesFromGeoJSON(\r\n            file,\r\n            response,\r\n            projectionOut\r\n          );\r\n          observer.next(features);\r\n          observer.complete();\r\n        }\r\n      },\r\n      (error: any) => {\r\n        error.error.caught = true;\r\n        const errMsg = error.error.msg || '';\r\n        if (errMsg === 'No valid files found') {\r\n          observer.error(new ImportInvalidFileError());\r\n        } else if (\r\n          errMsg.startWith('ERROR 1: Failed to process SRS definition')\r\n        ) {\r\n          observer.error(new ImportSRSError());\r\n        } else {\r\n          observer.error(new ImportUnreadableFileError());\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private parseFeaturesFromFile(\r\n    file: File,\r\n    data: string,\r\n    projectionIn: string,\r\n    projectionOut: string\r\n  ): Feature[] {\r\n    const extension = getFileExtension(file);\r\n    const mimeType = file.type;\r\n\r\n    const GeoJSON = new olformat.GeoJSON();\r\n\r\n    let format;\r\n    if (mimeType === 'application/vnd.google-earth.kml+xml') {\r\n      format = new olformat.KML();\r\n    } else if (mimeType === 'application/gml+xml') {\r\n      format = new olformat.GML();\r\n    } else if (mimeType === 'application/gpx+xml') {\r\n      format = new olformat.GPX();\r\n    } else {\r\n      switch (extension) {\r\n        case 'kml':\r\n          format = new olformat.KML();\r\n          break;\r\n        case 'gpx':\r\n          format = new olformat.GPX();\r\n          break;\r\n        case 'gml':\r\n          format = new olformat.GML();\r\n          break;\r\n        default:\r\n          format = GeoJSON;\r\n          break;\r\n      }\r\n    }\r\n\r\n    const olFeatures = format.readFeatures(data, {\r\n      dataProjection: projectionIn,\r\n      featureProjection: projectionOut\r\n    });\r\n    const features = olFeatures.map((olFeature: OlFeature) => {\r\n      return Object.assign(GeoJSON.writeFeatureObject(olFeature), {\r\n        projection: projectionOut,\r\n        meta: {\r\n          id: uuid(),\r\n          title: computeLayerTitleFromFile(file)\r\n        }\r\n      });\r\n    });\r\n\r\n    return features;\r\n  }\r\n\r\n  private parseFeaturesFromGeoJSON(\r\n    file: File,\r\n    data: object,\r\n    projectionOut: string\r\n  ): Feature[] {\r\n    const olFormat = new olformat.GeoJSON();\r\n    const olFeatures = olFormat.readFeatures(data);\r\n    const features = olFeatures.map((olFeature: OlFeature) => {\r\n      return Object.assign(olFormat.writeFeatureObject(olFeature), {\r\n        projection: projectionOut,\r\n        meta: {\r\n          id: uuid(),\r\n          title: computeLayerTitleFromFile(file)\r\n        }\r\n      });\r\n    });\r\n\r\n    return features;\r\n  }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { StyleListOptions } from './style-list.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class StyleListService {\r\n  private styleList: object = {};\r\n\r\n  constructor(private injector: Injector) {}\r\n\r\n  /**\r\n   * Use to get the data found in styleList file\r\n   */\r\n  public getStyleList(key: string): any {\r\n    return ObjectUtils.resolve(this.styleList, key);\r\n  }\r\n\r\n  /**\r\n   * This method loads \"[path]\" to get all styleList's variables\r\n   */\r\n  public load(options: StyleListOptions) {\r\n    const baseStyleList = options.default || {};\r\n    if (!options.path) {\r\n      this.styleList = baseStyleList;\r\n      return true;\r\n    }\r\n\r\n    const http = this.injector.get(HttpClient);\r\n\r\n    return new Promise((resolve, _reject) => {\r\n      http\r\n        .get(options.path)\r\n        .pipe(\r\n          catchError((error: any): any => {\r\n            console.log(`StyleList file ${options.path} could not be read`);\r\n            resolve(true);\r\n            return throwError(error.error || 'Server error');\r\n          })\r\n        )\r\n        .subscribe(styleListResponse => {\r\n          this.styleList = ObjectUtils.mergeDeep(baseStyleList, styleListResponse);\r\n          resolve(true);\r\n        });\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService, ConfigService } from '@igo2/core';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { ClusterDataSource } from '../../datasource/shared/datasources/cluster-datasource';\r\nimport { Layer } from '../../layer/shared/layers/layer';\r\nimport { VectorLayer } from '../../layer/shared/layers/vector-layer';\r\n\r\nimport { handleFileExportError } from '../shared/export.utils';\r\nimport { ExportOptions } from '../shared/export.interface';\r\nimport { ExportFormat } from '../shared/export.type';\r\nimport { ExportService } from '../shared/export.service';\r\nimport { ImportService } from '../shared/import.service';\r\nimport {\r\n  handleFileImportSuccess,\r\n  handleFileImportError\r\n} from '../shared/import.utils';\r\nimport { StyleService } from '../../layer/shared/style.service';\r\nimport { StyleListService } from '../style-list/style-list.service';\r\n\r\n@Component({\r\n  selector: 'igo-import-export',\r\n  templateUrl: './import-export.component.html',\r\n  styleUrls: ['./import-export.component.scss']\r\n})\r\nexport class ImportExportComponent implements OnDestroy, OnInit {\r\n  public form: FormGroup;\r\n  public formats = ExportFormat;\r\n  public layers: VectorLayer[];\r\n  public inputProj: string = 'EPSG:4326';\r\n  public loading$ = new BehaviorSubject(false);\r\n\r\n  private layers$$: Subscription;\r\n\r\n  private espgCodeRegex = new RegExp('^\\\\d{4,6}');\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  constructor(\r\n    private importService: ImportService,\r\n    private exportService: ExportService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private styleListService: StyleListService,\r\n    private styleService: StyleService,\r\n    private formBuilder: FormBuilder,\r\n    private config: ConfigService\r\n  ) {\r\n    this.buildForm();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.layers$$ = this.map.layers$.subscribe(layers => {\r\n      this.layers = layers.filter((layer: Layer) => {\r\n        return layer instanceof VectorLayer && layer.exportable === true;\r\n      }) as VectorLayer[];\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n\r\n  importFiles(files: File[]) {\r\n    let inputProj = this.inputProj;\r\n    if (this.espgCodeRegex.test(inputProj)) {\r\n      inputProj = `EPSG:${inputProj}`;\r\n    }\r\n\r\n    this.loading$.next(true);\r\n    for (const file of files) {\r\n      this.importService.import(file, inputProj).subscribe(\r\n        (features: Feature[]) => this.onFileImportSuccess(file, features),\r\n        (error: Error) => this.onFileImportError(file, error),\r\n        () => {\r\n          this.loading$.next(false);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  handleExportFormSubmit(data: ExportOptions) {\r\n    this.loading$.next(true);\r\n    const layer = this.map.getLayerById(data.layer);\r\n    let olFeatures = layer.dataSource.ol.getFeatures();\r\n    if (layer.dataSource instanceof ClusterDataSource) {\r\n      olFeatures = olFeatures.flatMap((cluster: any) => cluster.get('features'));\r\n    }\r\n    this.exportService\r\n      .export(olFeatures, data.format, layer.title, this.map.projection)\r\n      .subscribe(\r\n        () => {},\r\n        (error: Error) => this.onFileExportError(error),\r\n        () => {\r\n          this.loading$.next(false);\r\n        }\r\n      );\r\n  }\r\n\r\n  private buildForm() {\r\n    this.form = this.formBuilder.group({\r\n      format: ['', [Validators.required]],\r\n      layer: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  private onFileImportSuccess(file: File, features: Feature[]) {\r\n    if (!this.config.getConfig('importWithStyle')) {\r\n    handleFileImportSuccess(\r\n      file,\r\n      features,\r\n      this.map,\r\n      this.messageService,\r\n      this.languageService\r\n    );\r\n    } else {\r\n      handleFileImportSuccess(\r\n        file,\r\n        features,\r\n        this.map,\r\n        this.messageService,\r\n        this.languageService,\r\n        this.styleListService,\r\n        this.styleService\r\n      );\r\n    }\r\n  }\r\n\r\n  private onFileImportError(file: File, error: Error) {\r\n    this.loading$.next(false);\r\n    handleFileImportError(\r\n      file,\r\n      error,\r\n      this.messageService,\r\n      this.languageService\r\n    );\r\n  }\r\n\r\n  private onFileExportError(error: Error) {\r\n    this.loading$.next(false);\r\n    handleFileExportError(error, this.messageService, this.languageService);\r\n  }\r\n}\r\n","import { Directive, HostListener, EventEmitter, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MessageService, LanguageService, ConfigService } from '@igo2/core';\r\nimport { DragAndDropDirective } from '@igo2/common';\r\n\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\nimport { ImportService } from './import.service';\r\nimport { handleFileImportSuccess, handleFileImportError } from '../shared/import.utils';\r\nimport { StyleService } from '../../layer/shared/style.service';\r\nimport { StyleListService } from '../style-list/style-list.service';\r\n\r\n@Directive({\r\n  selector: '[igoDropGeoFile]'\r\n})\r\nexport class DropGeoFileDirective extends DragAndDropDirective implements OnInit, OnDestroy {\r\n\r\n  protected filesDropped: EventEmitter<File[]> = new EventEmitter();\r\n  protected filesInvalid: EventEmitter<File[]> = new EventEmitter();\r\n\r\n  private filesDropped$$: Subscription;\r\n\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  constructor(\r\n    private component: MapBrowserComponent,\r\n    private importService: ImportService,\r\n    private languageService: LanguageService,\r\n    private styleListService: StyleListService,\r\n    private styleService: StyleService,\r\n    private config: ConfigService,\r\n    private messageService: MessageService\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.filesDropped$$ = this.filesDropped.subscribe((files: File[]) => {\r\n      this.onFilesDropped(files);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.filesDropped$$.unsubscribe();\r\n  }\r\n\r\n  @HostListener('dragover', ['$event'])\r\n  public onDragOver(evt) {\r\n    super.onDragOver(evt);\r\n  }\r\n\r\n  @HostListener('dragleave', ['$event'])\r\n  public onDragLeave(evt) {\r\n    super.onDragLeave(evt);\r\n  }\r\n\r\n  @HostListener('drop', ['$event'])\r\n  public onDrop(evt) {\r\n    super.onDrop(evt);\r\n  }\r\n\r\n  private onFilesDropped(files: File[]) {\r\n    for (const file of files) {\r\n      this.importService\r\n        .import(file)\r\n        .subscribe(\r\n          (features: Feature[]) => this.onFileImportSuccess(file, features),\r\n          (error: Error) => this.onFileImportError(file, error)\r\n        );\r\n    }\r\n  }\r\n\r\n  private onFileImportSuccess(file: File, features: Feature[]) {\r\n    if (!this.config.getConfig('importWithStyle')) {\r\n      handleFileImportSuccess(file, features, this.map, this.messageService, this.languageService);\r\n    } else {\r\n      handleFileImportSuccess(file, features, this.map, this.messageService, this.languageService,\r\n                               this.styleListService, this.styleService);\r\n    }\r\n  }\r\n\r\n  private onFileImportError(file: File, error: Error) {\r\n    handleFileImportError(file, error, this.messageService, this.languageService);\r\n  }\r\n}\r\n","import { APP_INITIALIZER, InjectionToken } from '@angular/core';\r\n\r\nimport { StyleListService } from './style-list.service';\r\nimport { StyleListOptions } from './style-list.interface';\r\n\r\nexport let STYLELIST_OPTIONS = new InjectionToken<StyleListOptions>('styleListOptions');\r\n\r\nexport function provideStyleListOptions(options: StyleListOptions) {\r\n  return {\r\n    provide: STYLELIST_OPTIONS,\r\n    useValue: options\r\n  };\r\n}\r\n\r\nexport function styleListFactory(\r\n  styleListService: StyleListService,\r\n  options: StyleListOptions\r\n) {\r\n  return () => styleListService.load(options);\r\n}\r\n\r\nexport function provideStyleListLoader() {\r\n  return {\r\n    provide: APP_INITIALIZER,\r\n    useFactory: styleListFactory,\r\n    multi: true,\r\n    deps: [StyleListService, STYLELIST_OPTIONS]\r\n  };\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { provideStyleListOptions, provideStyleListLoader } from './style-list.provider';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: []\r\n})\r\nexport class IgoStyleListModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoStyleListModule,\r\n      providers: [provideStyleListOptions({}), provideStyleListLoader()]\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport {\r\n  MatButtonModule,\r\n  MatTabsModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatFormFieldModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoKeyValueModule, IgoDrapDropModule, IgoSpinnerModule } from '@igo2/common';\r\n\r\nimport { ImportExportComponent } from './import-export/import-export.component';\r\nimport { DropGeoFileDirective } from './shared/drop-geo-file.directive';\r\nimport { IgoStyleListModule } from './style-list/style-list.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    IgoLanguageModule,\r\n    IgoSpinnerModule,\r\n    IgoKeyValueModule,\r\n    IgoDrapDropModule,\r\n    IgoStyleListModule.forRoot()\r\n  ],\r\n  exports: [ImportExportComponent, DropGeoFileDirective, IgoStyleListModule],\r\n  declarations: [ImportExportComponent, DropGeoFileDirective]\r\n})\r\nexport class IgoImportExportModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoImportExportModule\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatTooltipModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoConfirmDialogModule } from '@igo2/common';\r\n\r\nimport { MapBrowserComponent } from './map-browser/map-browser.component';\r\nimport { ZoomButtonComponent } from './zoom-button/zoom-button.component';\r\nimport { GeolocateButtonComponent } from './geolocate-button/geolocate-button.component';\r\nimport { RotationButtonComponent } from './rotation-button/rotation-button.component';\r\nimport { BaseLayersSwitcherComponent } from './baselayers-switcher/baselayers-switcher.component';\r\nimport { MiniBaseMapComponent } from './baselayers-switcher/mini-basemap.component';\r\nimport { MapOfflineDirective } from './shared/mapOffline.directive';\r\nimport { OfflineButtonComponent } from './offline-button/offline-button.component';\r\nimport { PointerPositionDirective } from './shared/map-pointer-position.directive';\r\nimport { PointerPositionByKeyDirective } from './shared/map-pointer-position-by-key.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoLanguageModule,\r\n    IgoConfirmDialogModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatTooltipModule\r\n  ],\r\n  exports: [\r\n    MapBrowserComponent,\r\n    ZoomButtonComponent,\r\n    GeolocateButtonComponent,\r\n    RotationButtonComponent,\r\n    BaseLayersSwitcherComponent,\r\n    MiniBaseMapComponent,\r\n    MapOfflineDirective,\r\n    OfflineButtonComponent,\r\n    PointerPositionDirective,\r\n    PointerPositionByKeyDirective\r\n  ],\r\n  declarations: [\r\n    MapBrowserComponent,\r\n    ZoomButtonComponent,\r\n    GeolocateButtonComponent,\r\n    RotationButtonComponent,\r\n    BaseLayersSwitcherComponent,\r\n    MiniBaseMapComponent,\r\n    MapOfflineDirective,\r\n    OfflineButtonComponent,\r\n    PointerPositionDirective,\r\n    PointerPositionByKeyDirective\r\n  ]\r\n})\r\nexport class IgoMapModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\n\r\nimport {\r\n  MeasureType,\r\n  MeasureAreaUnit,\r\n  MeasureLengthUnit\r\n} from '../shared/measure.enum';\r\nimport { computeBestAreaUnit, computeBestLengthUnit } from '../shared/measure.utils';\r\n\r\n/**\r\n * Measurer item\r\n */\r\n@Component({\r\n  selector: 'igo-measurer-item',\r\n  templateUrl: './measurer-item.component.html',\r\n  styleUrls: ['./measurer-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class MeasurerItemComponent implements OnDestroy {\r\n\r\n  /**\r\n   * Measure observable\r\n   * @internal\r\n   */\r\n  public measure$: BehaviorSubject<number> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Subscription to the measure observable when the auto mode is on\r\n   * @internal\r\n   */\r\n  public measure$$: Subscription;\r\n\r\n  /**\r\n   * Measure type\r\n   */\r\n  @Input() measureType: MeasureType;\r\n\r\n  /**\r\n   * Measure unit\r\n   */\r\n  @Input() measureUnit: MeasureAreaUnit | MeasureLengthUnit;\r\n\r\n  /**\r\n   * Measure\r\n   */\r\n  @Input()\r\n  set measure(value: number) {\r\n    this.measure$.next(value);\r\n  }\r\n  get measure(): number { return this.measure$.value; }\r\n\r\n  /**\r\n   * Whther measure units should be automatically determined\r\n   */\r\n  @Input()\r\n  set auto(value: boolean) { this.toggleAutoUnit(value); }\r\n  get auto(): boolean { return this._auto; }\r\n  private _auto: boolean = false;\r\n\r\n  /**\r\n   * Placeholder\r\n   */\r\n  @Input() placeholder: string;\r\n\r\n  /**\r\n   * Event emitted when the measure unit changes\r\n   */\r\n  @Output() measureUnitChange = new EventEmitter<MeasureAreaUnit | MeasureLengthUnit>();\r\n\r\n  /**\r\n   * Available measure units for the measure type given\r\n   * @internal\r\n   */\r\n  get measureUnits(): string[] {\r\n    if (this.measureType === MeasureType.Area) {\r\n      return Object.values(MeasureAreaUnit);\r\n    }\r\n    return Object.values(MeasureLengthUnit);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  /**\r\n   * Toggle the auto unit off\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.toggleAutoUnit(false);\r\n  }\r\n\r\n  /**\r\n   * Set the measure unit\r\n   * @internal\r\n   */\r\n  onMeasureUnitChange(unit: MeasureAreaUnit | MeasureLengthUnit) {\r\n    this.measureUnit = unit;\r\n    this.measureUnitChange.emit(unit);\r\n  }\r\n\r\n  private toggleAutoUnit(toggle: boolean) {\r\n    if (this.measure$$ !== undefined) {\r\n      this.measure$$.unsubscribe();\r\n    }\r\n    if (toggle === true) {\r\n      this.measure$$ = this.measure$.subscribe((measure: number) => {\r\n        this.computeBestMeasureUnit(measure);\r\n      });\r\n    }\r\n    this._auto = toggle;\r\n  }\r\n\r\n  private computeBestMeasureUnit(measure: number) {\r\n    let measureUnit = this.measureUnit;\r\n    if (this.measureType === MeasureType.Area) {\r\n      measureUnit = computeBestAreaUnit(measure);\r\n    } else if (this.measureType === MeasureType.Length) {\r\n      measureUnit = computeBestLengthUnit(measure);\r\n    }\r\n    if (measureUnit !== this.measureUnit) {\r\n      this.onMeasureUnitChange(measureUnit);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatButtonToggleModule,\r\n  MatIconModule,\r\n  MatTooltipModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatSelectModule,\r\n  MatSlideToggleModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoEntityTableModule } from '@igo2/common';\r\n\r\nimport { MeasureFormatPipe } from './measure-format.pipe';\r\nimport { MeasurerItemComponent } from './measurer-item.component';\r\nimport { MeasurerComponent } from './measurer.component';\r\nimport { MeasurerDialogComponent } from './measurer-dialog.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatIconModule,\r\n    MatTooltipModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    IgoLanguageModule,\r\n    IgoEntityTableModule\r\n  ],\r\n  declarations: [\r\n    MeasureFormatPipe,\r\n    MeasurerItemComponent,\r\n    MeasurerComponent,\r\n    MeasurerDialogComponent\r\n  ],\r\n  exports: [\r\n    MeasureFormatPipe,\r\n    MeasurerComponent\r\n  ],\r\n  entryComponents: [\r\n    MeasurerDialogComponent\r\n  ]\r\n})\r\nexport class IgoMeasurerModule {}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { IgoMeasurerModule } from './measurer/measurer.module';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [\r\n    IgoMeasurerModule\r\n  ]\r\n})\r\nexport class IgoMeasureModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { OverlayDirective } from './shared/overlay.directive';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [OverlayDirective],\r\n  declarations: [OverlayDirective]\r\n})\r\nexport class IgoOverlayModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoOverlayModule\r\n    };\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { saveAs } from 'file-saver';\r\nimport * as jsPDF from 'jspdf';\r\nimport * as _html2canvas from 'html2canvas';\r\nimport * as JSZip from 'jszip';\r\n\r\nimport { SubjectStatus } from '@igo2/utils';\r\nimport { MessageService, ActivityService, LanguageService } from '@igo2/core';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { formatScale } from '../../map/shared/map.utils';\r\nimport { OutputLayerLegend } from '../../layer/shared/layers/layer.interface';\r\nimport { getLayersLegends } from '../../layer/utils/outputLegend';\r\n\r\nimport { PrintOptions } from './print.interface';\r\n\r\nconst html2canvas = _html2canvas;\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PrintService {\r\n  zipFile: JSZip;\r\n  nbFileToProcess: number;\r\n  activityId: string;\r\n  constructor(\r\n    private messageService: MessageService,\r\n    private activityService: ActivityService,\r\n    private languageService: LanguageService\r\n  ) {}\r\n\r\n  print(map: IgoMap, options: PrintOptions): Subject<any> {\r\n    const status$ = new Subject();\r\n\r\n    const paperFormat: string = options.paperFormat;\r\n    const resolution = +options.resolution; // Default is 96\r\n    const orientation = options.orientation;\r\n\r\n    this.activityId = this.activityService.register();\r\n    const doc = new jsPDF({\r\n      orientation,\r\n      format: paperFormat.toLowerCase()\r\n    });\r\n\r\n    const dimensions = [\r\n      doc.internal.pageSize.width,\r\n      doc.internal.pageSize.height\r\n    ];\r\n\r\n    const margins = [20, 10, 20, 10];\r\n    const width = dimensions[0] - margins[3] - margins[1];\r\n    const height = dimensions[1] - margins[0] - margins[2];\r\n    const size = [width, height];\r\n\r\n    if (options.title !== undefined) {\r\n      this.addTitle(doc, options.title, dimensions[0]);\r\n    }\r\n\r\n    if (options.showProjection === true || options.showScale === true) {\r\n      this.addProjScale(\r\n        doc,\r\n        map,\r\n        resolution,\r\n        options.showProjection,\r\n        options.showScale\r\n      );\r\n    }\r\n    if (options.comment !== '') {\r\n      this.addComment(doc, options.comment);\r\n    }\r\n\r\n    this.addMap(doc, map, resolution, size, margins).subscribe(\r\n      (status: SubjectStatus) => {\r\n        if (status === SubjectStatus.Done) {\r\n          if (options.showLegend === true) {\r\n            this.addLegend(doc, map, margins, resolution);\r\n          } else {\r\n            this.saveDoc(doc);\r\n          }\r\n        }\r\n\r\n        if (status === SubjectStatus.Done || status === SubjectStatus.Error) {\r\n          this.activityService.unregister(this.activityId);\r\n          status$.next(SubjectStatus.Done);\r\n        }\r\n      }\r\n    );\r\n\r\n    return status$;\r\n  }\r\n\r\n  /**\r\n   * Get html code for all layers legend\r\n   * @param  map IgoMap\r\n   * @param  width The width that the legend need to be\r\n   * @return Html code for the legend\r\n   */\r\n  getLayersLegendHtml(map: IgoMap, width: number, resolution: number): string {\r\n    let html = '';\r\n    const legends = getLayersLegends(\r\n      map.layers,\r\n      map.viewController.getScale(resolution)\r\n    );\r\n    if (legends.length === 0) {\r\n      return html;\r\n    }\r\n\r\n    // Define important style to be sure that all container is convert\r\n    // to image not just visible part\r\n    html += '<style media=\"screen\" type=\"text/css\">';\r\n    html += '.html2canvas-container { width: ' + width;\r\n    html += 'mm !important; height: 2000px !important; }';\r\n    html += '</style>';\r\n    html += '<font size=\"2\" face=\"Courier New\" >';\r\n    html += '<div style=\"display:inline-block;max-width:' + width + 'mm\">';\r\n    // For each legend, define an html table cell\r\n    legends.forEach((legend: OutputLayerLegend) => {\r\n      html +=\r\n        '<table border=1 style=\"display:inline-block;vertical-align:top\">';\r\n      html += '<tr><th width=\"170px\">' + legend.title + '</th>';\r\n      html += '<td><img class=\"printImageLegend\" src=\"' + legend.url + '\">';\r\n      html += '</td></tr></table>';\r\n    });\r\n    html += '</div>';\r\n\r\n    return html;\r\n  }\r\n\r\n  /**\r\n   * Get all the legend in a single image\r\n   * * @param  format - Image format. default value to \"png\"\r\n   * @return The image of the legend\r\n   */\r\n  getLayersLegendImage(\r\n    map,\r\n    format: string = 'png',\r\n    doZipFile: boolean,\r\n    resolution: number\r\n  ) {\r\n    const status$ = new Subject();\r\n    // Get html code for the legend\r\n    const width = 200; // milimeters unit, originally define for document pdf\r\n    let html = this.getLayersLegendHtml(map, width, resolution);\r\n    const that = this;\r\n    format = format.toLowerCase();\r\n\r\n    // If no legend show No LEGEND in an image\r\n    if (html.length === 0) {\r\n      html = '<font size=\"12\" face=\"Courier New\" >';\r\n      html += '<div align=\"center\"><b>NO LEGEND</b></div>';\r\n    }\r\n    // Create div to contain html code for legend\r\n    const div = window.document.createElement('div');\r\n\r\n    // Add html code to convert in the new window\r\n    window.document.body.appendChild(div);\r\n    div.innerHTML = html;\r\n    // Define event to execute after all images are loaded to create the canvas\r\n    setTimeout(() => {\r\n      html2canvas(div, { useCORS: true })\r\n        .then(canvas => {\r\n          let status = SubjectStatus.Done;\r\n          try {\r\n            if (!doZipFile) {\r\n              // Save the canvas as file\r\n              that.saveCanvasImageAsFile(canvas, 'legendImage', format);\r\n            } else {\r\n              // Add the canvas to zip\r\n              that.generateCanvaFileToZip(canvas, 'legendImage' + '.' + format);\r\n            }\r\n            div.parentNode.removeChild(div); // remove temp div (IE)\r\n          } catch (err) {\r\n            status = SubjectStatus.Error;\r\n          }\r\n          status$.next(status);\r\n        })\r\n        .catch(e => {\r\n          console.log(e);\r\n        });\r\n    }, 500);\r\n  }\r\n\r\n  private addTitle(doc: jsPDF, title: string, pageWidth: number) {\r\n    const pdfResolution = 96;\r\n    const titleSize = 32;\r\n    const titleWidth = ((titleSize * 25.4) / pdfResolution) * title.length;\r\n\r\n    let titleMarginLeft;\r\n    if (titleWidth > pageWidth) {\r\n      titleMarginLeft = 0;\r\n    } else {\r\n      titleMarginLeft = (pageWidth - titleWidth) / 2;\r\n    }\r\n\r\n    doc.setFont('courier');\r\n    doc.setFontSize(32);\r\n    doc.text(title, titleMarginLeft, 15);\r\n  }\r\n\r\n  /**\r\n   * Add comment to the document\r\n   * * @param  doc - pdf document\r\n   * * @param  comment - Comment to add in the document\r\n   * * @param  size - Size of the document\r\n   */\r\n  private addComment(doc: jsPDF, comment: string) {\r\n    const commentSize = 16;\r\n    const commentMarginLeft = 20;\r\n    const marginBottom = 5;\r\n    const heightPixels = doc.internal.pageSize.height - marginBottom;\r\n\r\n    doc.setFont('courier');\r\n    doc.setFontSize(commentSize);\r\n    doc.text(comment, commentMarginLeft, heightPixels);\r\n  }\r\n  /**\r\n   * Add projection and/or scale to the document\r\n   * @param  doc - pdf document\r\n   * @param  map - Map of the app\r\n   * @param  dpi - DPI resolution of the document\r\n   * @param  projection - Bool to indicate if projection need to be added\r\n   * @param  scale - Bool to indicate if scale need to be added\r\n   */\r\n  private addProjScale(\r\n    doc: jsPDF,\r\n    map: IgoMap,\r\n    dpi: number,\r\n    projection: boolean,\r\n    scale: boolean\r\n  ) {\r\n    const translate = this.languageService.translate;\r\n    const projScaleSize = 16;\r\n    const projScaleMarginLeft = 20;\r\n    const marginBottom = 15;\r\n    const heightPixels = doc.internal.pageSize.height - marginBottom;\r\n\r\n    let textProjScale: string = '';\r\n    if (projection === true) {\r\n      const projText = translate.instant('igo.geo.printForm.projection');\r\n      textProjScale += projText + ': ' + map.projection;\r\n    }\r\n    if (scale === true) {\r\n      if (projection === true) {\r\n        textProjScale += '   ';\r\n      }\r\n      const scaleText = translate.instant('igo.geo.printForm.scale');\r\n      const mapScale = map.viewController.getScale(dpi);\r\n      textProjScale += scaleText + ': ~ 1 / ' + formatScale(mapScale);\r\n    }\r\n    doc.setFont('courier');\r\n    doc.setFontSize(projScaleSize);\r\n    doc.text(textProjScale, projScaleMarginLeft, heightPixels);\r\n  }\r\n\r\n  /**\r\n   * Add the legend to the document\r\n   * @param  doc - Pdf document where legend will be added\r\n   * @param  map - Map of the app\r\n   * @param  margins - Page margins\r\n   */\r\n  private addLegend(\r\n    doc: jsPDF,\r\n    map: IgoMap,\r\n    margins: Array<number>,\r\n    resolution: number\r\n  ) {\r\n    const that = this;\r\n    // Get html code for the legend\r\n    const width = doc.internal.pageSize.width;\r\n    const html = this.getLayersLegendHtml(map, width, resolution);\r\n    // If no legend, save the map directly\r\n    if (html === '') {\r\n      this.saveDoc(doc);\r\n      return true;\r\n    }\r\n\r\n    // Create div to contain html code for legend\r\n    const div = window.document.createElement('div');\r\n    html2canvas(div, { useCORS: true })\r\n      .then(canvas => {\r\n        let imgData;\r\n        const position = 10;\r\n\r\n        imgData = canvas.toDataURL('image/png');\r\n        doc.addPage();\r\n        const imageSize = this.getImageSizeToFitPdf(doc, canvas, margins);\r\n        doc.addImage(imgData, 'PNG', 10, position, imageSize[0], imageSize[1]);\r\n        that.saveDoc(doc);\r\n        div.parentNode.removeChild(div); // remove temp div (IE style)\r\n      })\r\n      .catch(e => {\r\n        console.log(e);\r\n      });\r\n\r\n    // Add html code to convert in the new window\r\n    window.document.body.appendChild(div);\r\n    div.innerHTML = html;\r\n  }\r\n\r\n  private addCanvas(\r\n    doc: jsPDF,\r\n    canvas: HTMLCanvasElement,\r\n    margins: Array<number>\r\n  ) {\r\n    let image;\r\n\r\n    image = canvas.toDataURL('image/jpeg');\r\n\r\n    if (image !== undefined) {\r\n      const imageSize = this.getImageSizeToFitPdf(doc, canvas, margins);\r\n      doc.addImage(\r\n        image,\r\n        'JPEG',\r\n        margins[3],\r\n        margins[0],\r\n        imageSize[0],\r\n        imageSize[1]\r\n      );\r\n      doc.rect(margins[3], margins[0], imageSize[0], imageSize[1]);\r\n    }\r\n  }\r\n\r\n  // TODO fix printing with image resolution\r\n  private addMap(\r\n    doc: jsPDF,\r\n    map: IgoMap,\r\n    resolution: number,\r\n    size: Array<number>,\r\n    margins: Array<number>\r\n  ) {\r\n    const status$ = new Subject();\r\n\r\n    const mapSize = map.ol.getSize();\r\n    const extent = map.ol.getView().calculateExtent(mapSize);\r\n\r\n    const widthPixels = Math.round((size[0] * resolution) / 25.4);\r\n    const heightPixels = Math.round((size[1] * resolution) / 25.4);\r\n\r\n    let timeout;\r\n\r\n    map.ol.once('postcompose', (event: any) => {\r\n      const canvas = event.context.canvas;\r\n      const mapStatus$$ = map.status$.subscribe((mapStatus: SubjectStatus) => {\r\n        clearTimeout(timeout);\r\n\r\n        if (mapStatus !== SubjectStatus.Done) {\r\n          return;\r\n        }\r\n\r\n        mapStatus$$.unsubscribe();\r\n\r\n        let status = SubjectStatus.Done;\r\n        try {\r\n          this.addCanvas(doc, canvas, margins);\r\n        } catch (err) {\r\n          status = SubjectStatus.Error;\r\n          this.messageService.error(\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageBody'\r\n            ),\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageHeader'\r\n            ),\r\n            'print'\r\n          );\r\n        }\r\n\r\n        this.renderMap(map, mapSize, extent);\r\n        status$.next(status);\r\n      });\r\n\r\n      // If no loading as started after 200ms, then probably no loading\r\n      // is required.\r\n      timeout = window.setTimeout(() => {\r\n        mapStatus$$.unsubscribe();\r\n\r\n        let status = SubjectStatus.Done;\r\n        try {\r\n          this.addCanvas(doc, canvas, margins);\r\n        } catch (err) {\r\n          status = SubjectStatus.Error;\r\n          this.messageService.error(\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageBody'\r\n            ),\r\n            this.languageService.translate.instant(\r\n              'igo.geo.printForm.corsErrorMessageHeader'\r\n            ),\r\n            'print'\r\n          );\r\n        }\r\n\r\n        this.renderMap(map, mapSize, extent);\r\n        status$.next(status);\r\n      }, 200);\r\n    });\r\n\r\n    this.renderMap(map, [widthPixels, heightPixels], extent);\r\n\r\n    return status$;\r\n  }\r\n\r\n  defineNbFileToProcess(nbFileToProcess) {\r\n    this.nbFileToProcess = nbFileToProcess;\r\n  }\r\n\r\n  /**\r\n   * Download an image of the map with addition of informations\r\n   * @param  map - Map of the app\r\n   * @param  format - Image format. default value to \"png\"\r\n   * @param  projection - Indicate if projection need to be add. Default to false\r\n   * @param  scale - Indicate if scale need to be add. Default to false\r\n   * @param  legend - Indicate if the legend of layers need to be download. Default to false\r\n   * @param  title - Title to add for the map - Default to blank\r\n   * @param  comment - Comment to add for the map - Default to blank\r\n   * @param  doZipFile - Indicate if we do a zip with the file\r\n   * @return Image file of the map with extension format given as parameter\r\n   */\r\n  downloadMapImage(\r\n    map: IgoMap,\r\n    resolution: number,\r\n    format = 'png',\r\n    projection = false,\r\n    scale = false,\r\n    legend = false,\r\n    title = '',\r\n    comment = '',\r\n    doZipFile = true\r\n  ) {\r\n    const status$ = new Subject();\r\n    // const resolution = map.ol.getView().getResolution();\r\n    this.activityId = this.activityService.register();\r\n    const translate = this.languageService.translate;\r\n    map.ol.once('postcompose', (event: any) => {\r\n      format = format.toLowerCase();\r\n      const context = event.context;\r\n      const newCanvas = document.createElement('canvas');\r\n      const newContext = newCanvas.getContext('2d');\r\n      // Postion in height to set the canvas in new canvas\r\n      let positionHCanvas = 0;\r\n      // Position in width to set the Proj/Scale in new canvas\r\n      let positionWProjScale = 10;\r\n      // Get height/width of map canvas\r\n      const width = context.canvas.width;\r\n      let height = context.canvas.height;\r\n      // Set Font to calculate comment width\r\n      newContext.font = '20px Calibri';\r\n      const commentWidth = newContext.measureText(comment).width;\r\n      // Add height for title if defined\r\n      height = title !== '' ? height + 30 : height;\r\n      // Add height for projection or scale (same line) if defined\r\n      height = projection !== false || scale !== false ? height + 30 : height;\r\n      const positionHProjScale = height - 10;\r\n      // Define number of line depending of the comment length\r\n      const commentNbLine = Math.ceil(commentWidth / width);\r\n      // Add height for multiline comment if defined\r\n      height = comment !== '' ? height + commentNbLine * 30 : height;\r\n      let positionHComment = height - commentNbLine * 20 + 5;\r\n      // Set the new canvas with the new calculated size\r\n      newCanvas.width = width;\r\n      newCanvas.height = height;\r\n      // Patch Jpeg default black background to white\r\n      if (format === 'jpeg') {\r\n        newContext.fillStyle = '#ffffff';\r\n        newContext.fillRect(0, 0, width, height);\r\n        newContext.fillStyle = '#000000';\r\n      }\r\n      // If a title need to be added to canvas\r\n      if (title !== '') {\r\n        // Set font for title\r\n        newContext.font = '26px Calibri';\r\n        positionHCanvas = 30;\r\n        newContext.textAlign = 'center';\r\n        newContext.fillText(title, width / 2, 20);\r\n      }\r\n      // Set font for next section\r\n      newContext.font = '20px Calibri';\r\n      // If projection need to be added to canvas\r\n      if (projection !== false) {\r\n        const projText = translate.instant('igo.geo.printForm.projection');\r\n        newContext.textAlign = 'start';\r\n        newContext.fillText(\r\n          projText + ': ' + map.projection,\r\n          positionWProjScale,\r\n          positionHProjScale\r\n        );\r\n        positionWProjScale += 200; // Width position change for scale position\r\n      }\r\n      // If scale need to be added to canvas\r\n      if (scale !== false) {\r\n        const scaleText = translate.instant('igo.geo.printForm.scale');\r\n        const mapScale = map.viewController.getScale(resolution);\r\n        newContext.textAlign = 'start';\r\n        newContext.fillText(\r\n          scaleText + ': ~ 1 / ' + formatScale(mapScale),\r\n          positionWProjScale,\r\n          positionHProjScale\r\n        );\r\n      }\r\n      // If a comment need to be added to canvas\r\n      if (comment !== '') {\r\n        newContext.textAlign = 'center';\r\n        // If only one line, no need to multiline the comment\r\n        if (commentNbLine === 1) {\r\n          newContext.fillText(comment, width / 2, positionHComment);\r\n        } else {\r\n          // Separate the setenses to be approx. the same length\r\n          const nbCommentChar = comment.length;\r\n          const CommentLengthToCut = Math.floor(nbCommentChar / commentNbLine);\r\n          let commentCurrentLine = '';\r\n          let positionFirstCutChar = 0;\r\n          let positionLastBlank;\r\n          // Loop for the number of line calculated\r\n          for (let i = 0; i < commentNbLine; i++) {\r\n            // For all line except last\r\n            if (commentNbLine - 1 > i) {\r\n              // Get comment current line to find the right place tu cut comment\r\n              commentCurrentLine = comment.substr(\r\n                positionFirstCutChar,\r\n                CommentLengthToCut\r\n              );\r\n              // Cut the setence at blank\r\n              positionLastBlank = commentCurrentLine.lastIndexOf(' ');\r\n              newContext.fillText(\r\n                commentCurrentLine.substr(0, positionLastBlank),\r\n                width / 2,\r\n                positionHComment\r\n              );\r\n              positionFirstCutChar += positionLastBlank;\r\n              // Go to next line for insertion\r\n              positionHComment += 20;\r\n            } else {\r\n              // Don't cut last part\r\n              newContext.fillText(\r\n                comment.substr(positionFirstCutChar),\r\n                width / 2,\r\n                positionHComment\r\n              );\r\n            }\r\n          }\r\n        }\r\n      }\r\n      // Add map to new canvas\r\n      newContext.drawImage(context.canvas, 0, positionHCanvas);\r\n\r\n      let status = SubjectStatus.Done;\r\n      try {\r\n        // Save the canvas as file\r\n        if (!doZipFile) {\r\n          this.saveCanvasImageAsFile(newCanvas, 'map', format);\r\n        } else if (format.toLowerCase() === 'tiff') {\r\n          // Add the canvas to zip\r\n          this.generateCanvaFileToZip(\r\n            newCanvas,\r\n            'map' + map.projection.replace(':', '_') + '.' + format\r\n          );\r\n        } else {\r\n          // Add the canvas to zip\r\n          this.generateCanvaFileToZip(newCanvas, 'map' + '.' + format);\r\n        }\r\n      } catch (err) {\r\n        status = SubjectStatus.Error;\r\n      }\r\n\r\n      status$.next(status);\r\n\r\n      if (format.toLowerCase() === 'tiff') {\r\n        const tiwContent = this.getWorldFileInformation(map);\r\n        const blob = new Blob([tiwContent], {\r\n          type: 'text/plain;charset=utf-8'\r\n        });\r\n        if (!doZipFile) {\r\n          // saveAs automaticly replace ':' for '_'\r\n          saveAs(blob, 'map' + map.projection + '.tfw');\r\n          this.saveFileProcessing();\r\n        } else {\r\n          // Add the canvas to zip\r\n          this.addFileToZip(\r\n            'map' + map.projection.replace(':', '_') + '.tfw',\r\n            blob\r\n          );\r\n        }\r\n      }\r\n    });\r\n    map.ol.renderSync();\r\n  }\r\n\r\n  private renderMap(map, size, extent) {\r\n    map.ol.renderSync();\r\n  }\r\n\r\n  /**\r\n   * Save document\r\n   * @param  doc - Document to save\r\n   */\r\n  private saveDoc(doc: jsPDF) {\r\n    doc.save('map.pdf');\r\n  }\r\n\r\n  /**\r\n   * Calculate the best Image size to fit in pdf\r\n   * @param doc - Pdf Document\r\n   * @param canvas - Canvas of image\r\n   * @param margins - Page margins\r\n   */\r\n  private getImageSizeToFitPdf(doc, canvas, margins) {\r\n    // Define variable to calculate best size to fit in one page\r\n    const pageHeight =\r\n      doc.internal.pageSize.getHeight() - (margins[0] + margins[2]);\r\n    const pageWidth =\r\n      doc.internal.pageSize.getWidth() - (margins[1] + margins[3]);\r\n    const canHeight = canvas.height;\r\n    const canWidth = canvas.width;\r\n    const heightRatio = canHeight / pageHeight;\r\n    const widthRatio = canWidth / pageWidth;\r\n    const maxRatio = heightRatio > widthRatio ? heightRatio : widthRatio;\r\n    const imgHeigh = maxRatio > 1 ? canHeight / maxRatio : canHeight;\r\n    const imgWidth = maxRatio > 1 ? canWidth / maxRatio : canWidth;\r\n\r\n    return [imgWidth, imgHeigh];\r\n  }\r\n\r\n  /**\r\n   * Get a world file information for tiff\r\n   * @param  map - Map of the app\r\n   */\r\n  private getWorldFileInformation(map) {\r\n    const currentResolution = map.viewController.getResolution();\r\n    const currentExtent = map.viewController.getExtent(); // Return [minx, miny, maxx, maxy]\r\n    return [\r\n      currentResolution,\r\n      0,\r\n      0,\r\n      -currentResolution,\r\n      currentExtent[0] + currentResolution / 0.5,\r\n      currentExtent[3] - currentResolution / 0.5\r\n    ].join('\\n');\r\n  }\r\n\r\n  /**\r\n   * Save canvas image as file\r\n   * @param canvas - Canvas to save\r\n   * @param name - Name of the file\r\n   * @param format - file format\r\n   */\r\n  private saveCanvasImageAsFile(canvas, name, format) {\r\n    const blobFormat = 'image/' + format;\r\n    const that = this;\r\n\r\n    try {\r\n      canvas.toDataURL(); // Just to make the catch trigger wihtout toBlob Error throw not catched\r\n      // If navigator is Internet Explorer\r\n      if (navigator.msSaveBlob) {\r\n        navigator.msSaveBlob(canvas.msToBlob(), name + '.' + format);\r\n        this.saveFileProcessing();\r\n      } else {\r\n        canvas.toBlob(blob => {\r\n          // download image\r\n          saveAs(blob, name + '.' + format);\r\n          that.saveFileProcessing();\r\n        }, blobFormat);\r\n      }\r\n    } catch (err) {\r\n      this.messageService.error(\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageBody'\r\n        ),\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageHeader'\r\n        ),\r\n        'print'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add file to a zip\r\n   * @param canvas - File to add to the zip\r\n   * @param  name -Name of the fileoverview\r\n   */\r\n  private generateCanvaFileToZip(canvas, name) {\r\n    const blobFormat = 'image/' + 'jpeg';\r\n    const that = this;\r\n    if (\r\n      !this.hasOwnProperty('zipFile') ||\r\n      typeof this.zipFile === 'undefined'\r\n    ) {\r\n      this.zipFile = new JSZip();\r\n    }\r\n\r\n    try {\r\n      canvas.toDataURL(); // Just to make the catch trigger wihtout toBlob Error throw not catched\r\n      if (navigator.msSaveBlob) {\r\n        this.addFileToZip(name, canvas.msToBlob());\r\n      } else {\r\n        canvas.toBlob(blob => {\r\n          that.addFileToZip(name, blob);\r\n        }, blobFormat);\r\n      }\r\n    } catch (err) {\r\n      this.messageService.error(\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageBody'\r\n        ),\r\n        this.languageService.translate.instant(\r\n          'igo.geo.printForm.corsErrorMessageHeader'\r\n        ),\r\n        'print'\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add file to zip, if all file are zipped, download\r\n   * @param name - Name of the files\r\n   * @param blob - Contain of file\r\n   */\r\n  private addFileToZip(name, blob) {\r\n    // add file to zip\r\n    this.zipFile.file(name, blob);\r\n    this.nbFileToProcess--;\r\n\r\n    // If all files are proccessed\r\n    if (this.nbFileToProcess === 0) {\r\n      // Download zip file\r\n      this.getZipFile();\r\n      // Stop loading\r\n      this.activityService.unregister(this.activityId);\r\n    }\r\n  }\r\n\r\n  private saveFileProcessing() {\r\n    this.nbFileToProcess--;\r\n\r\n    // If all files are proccessed\r\n    if (this.nbFileToProcess === 0) {\r\n      // Stop loading\r\n      this.activityService.unregister(this.activityId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the zipped file\r\n   * @return Retun a zip file\r\n   */\r\n  private getZipFile() {\r\n    const that = this;\r\n    this.zipFile.generateAsync({ type: 'blob' }).then(blob => {\r\n      // 1) generate the zip file\r\n      saveAs(blob, 'map.zip');\r\n      delete that.zipFile;\r\n    });\r\n  }\r\n}\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { PrintOptions } from '../shared/print.interface';\r\n\r\nimport {\r\n  PrintOutputFormat,\r\n  PrintPaperFormat,\r\n  PrintOrientation,\r\n  PrintResolution,\r\n  PrintSaveImageFormat\r\n} from '../shared/print.type';\r\n\r\nimport { PrintService } from '../shared/print.service';\r\n\r\n@Component({\r\n  selector: 'igo-print',\r\n  templateUrl: './print.component.html'\r\n})\r\nexport class PrintComponent {\r\n  public disabled = false;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get outputFormat(): PrintOutputFormat {\r\n    return this._outputFormat;\r\n  }\r\n  set outputFormat(value: PrintOutputFormat) {\r\n    this._outputFormat = value;\r\n  }\r\n  private _outputFormat: PrintOutputFormat;\r\n\r\n  @Input()\r\n  get paperFormat(): PrintPaperFormat {\r\n    return this._paperFormat;\r\n  }\r\n  set paperFormat(value: PrintPaperFormat) {\r\n    this._paperFormat = value;\r\n  }\r\n  private _paperFormat: PrintPaperFormat;\r\n\r\n  @Input()\r\n  get orientation(): PrintOrientation {\r\n    return this._orientation;\r\n  }\r\n  set orientation(value: PrintOrientation) {\r\n    this._orientation = value;\r\n  }\r\n  private _orientation: PrintOrientation;\r\n\r\n  @Input()\r\n  get imageFormat(): PrintSaveImageFormat {\r\n    return this._imageFormat;\r\n  }\r\n  set imageFormat(value: PrintSaveImageFormat) {\r\n    this._imageFormat = value;\r\n  }\r\n  private _imageFormat: PrintSaveImageFormat;\r\n\r\n  @Input()\r\n  get resolution(): PrintResolution {\r\n    return this._resolution;\r\n  }\r\n  set resolution(value: PrintResolution) {\r\n    this._resolution = value;\r\n  }\r\n  private _resolution: PrintResolution;\r\n\r\n  constructor(private printService: PrintService) {}\r\n\r\n  handleFormSubmit(data: PrintOptions) {\r\n    this.disabled = true;\r\n\r\n    if (data.isPrintService === true) {\r\n      this.printService\r\n        .print(this.map, data)\r\n        .subscribe();\r\n    } else {\r\n      let nbFileToProcess = 1;\r\n\r\n      if (data.showLegend) {\r\n        nbFileToProcess++;\r\n      }\r\n      if (data.imageFormat.toLowerCase() === 'tiff') {\r\n        nbFileToProcess++;\r\n      }\r\n\r\n      this.printService.defineNbFileToProcess(nbFileToProcess);\r\n\r\n      const resolution = +data.resolution;\r\n      this.printService.downloadMapImage(\r\n        this.map,\r\n        resolution,\r\n        data.imageFormat,\r\n        data.showProjection,\r\n        data.showScale,\r\n        data.showLegend,\r\n        data.title,\r\n        data.comment,\r\n        data.doZipFile\r\n      );\r\n      if (data.showLegend) {\r\n        this.printService.getLayersLegendImage(\r\n          this.map,\r\n          data.imageFormat,\r\n          data.doZipFile,\r\n          +resolution\r\n        );\r\n      }\r\n    }\r\n    this.disabled = false;\r\n  }\r\n}\r\n","import { strEnum } from '@igo2/utils';\r\n\r\nexport const PrintOutputFormat = strEnum(['Pdf', 'Image']);\r\n\r\nexport type PrintOutputFormat = keyof typeof PrintOutputFormat;\r\n\r\nexport const PrintPaperFormat = strEnum([\r\n  'A0',\r\n  'A1',\r\n  'A2',\r\n  'A3',\r\n  'A4',\r\n  'A5',\r\n  'Letter',\r\n  'Legal'\r\n]);\r\nexport type PrintPaperFormat = keyof typeof PrintPaperFormat;\r\n\r\nexport const PrintOrientation = strEnum(['landscape', 'portrait']);\r\nexport type PrintOrientation = keyof typeof PrintOrientation;\r\n\r\nexport const PrintResolution = strEnum(['72', '96', '150', '300']);\r\nexport type PrintResolution = keyof typeof PrintResolution;\r\n\r\nexport const PrintSaveImageFormat = strEnum([\r\n  'Bmp',\r\n  'Gif',\r\n  'Jpeg',\r\n  'Png',\r\n  'Tiff'\r\n]);\r\nexport type PrintSaveImageFormat = keyof typeof PrintSaveImageFormat;\r\n","import { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormBuilder,\r\n  FormControl,\r\n  Validators\r\n} from '@angular/forms';\r\n\r\nimport { PrintOptions } from '../shared/print.interface';\r\n\r\nimport {\r\n  PrintOutputFormat,\r\n  PrintPaperFormat,\r\n  PrintOrientation,\r\n  PrintResolution,\r\n  PrintSaveImageFormat\r\n} from '../shared/print.type';\r\n\r\n@Component({\r\n  selector: 'igo-print-form',\r\n  templateUrl: './print-form.component.html',\r\n  styleUrls: ['./print-form.component.scss']\r\n})\r\nexport class PrintFormComponent implements OnInit {\r\n  public form: FormGroup;\r\n  public submitted: boolean;\r\n\r\n  public outputFormats = PrintOutputFormat;\r\n  public paperFormats = PrintPaperFormat;\r\n  public orientations = PrintOrientation;\r\n  public resolutions = PrintResolution;\r\n  public imageFormats = PrintSaveImageFormat;\r\n  public isPrintService = true;\r\n\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get imageFormat(): PrintSaveImageFormat {\r\n    return this.imageFormatField.value;\r\n  }\r\n  set imageFormat(value: PrintSaveImageFormat) {\r\n    this.imageFormatField.setValue(value || PrintSaveImageFormat.Jpeg, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get outputFormat(): PrintOutputFormat {\r\n    return this.outputFormatField.value;\r\n  }\r\n  set outputFormat(value: PrintOutputFormat) {\r\n    this.outputFormatField.setValue(value || PrintOutputFormat.Pdf, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get paperFormat(): PrintPaperFormat {\r\n    return this.paperFormatField.value;\r\n  }\r\n  set paperFormat(value: PrintPaperFormat) {\r\n    this.paperFormatField.setValue(value || PrintPaperFormat.Letter, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get orientation(): PrintOrientation {\r\n    return this.orientationField.value;\r\n  }\r\n  set orientation(value: PrintOrientation) {\r\n    this.orientationField.setValue(value || PrintOrientation.landscape, {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get resolution(): PrintResolution {\r\n    return this.resolutionField.value;\r\n  }\r\n  set resolution(value: PrintResolution) {\r\n    this.resolutionField.setValue(value || PrintResolution['96'], {\r\n      onlySelf: true\r\n    });\r\n  }\r\n\r\n  @Input()\r\n  get title(): string {\r\n    return this.titleField.value;\r\n  }\r\n  set title(value: string) {\r\n    this.titleField.setValue(value, { onlySelf: true });\r\n  }\r\n\r\n  @Input()\r\n  get comment(): string {\r\n    return this.commentField.value;\r\n  }\r\n  set comment(value: string) {\r\n    this.commentField.setValue(value, { onlySelf: true });\r\n  }\r\n  @Input()\r\n  get showProjection(): boolean {\r\n    return this.showProjectionField.value;\r\n  }\r\n  set showProjection(value: boolean) {\r\n    this.showProjectionField.setValue(value, { onlySelf: true });\r\n  }\r\n  @Input()\r\n  get showScale(): boolean {\r\n    return this.showScaleField.value;\r\n  }\r\n  set showScale(value: boolean) {\r\n    this.showScaleField.setValue(value, { onlySelf: true });\r\n  }\r\n  @Input()\r\n  get showLegend(): boolean {\r\n    return this.showLegendField.value;\r\n  }\r\n  set showLegend(value: boolean) {\r\n    this.showLegendField.setValue(value, { onlySelf: true });\r\n  }\r\n\r\n  @Input()\r\n  get doZipFile(): boolean {\r\n    return this.doZipFileField.value;\r\n  }\r\n  set doZipFile(value: boolean) {\r\n    this.doZipFileField.setValue(value, { onlySelf: true });\r\n  }\r\n\r\n  get outputFormatField() {\r\n    return (this.form.controls as any).outputFormat as FormControl;\r\n  }\r\n\r\n  get paperFormatField() {\r\n    return (this.form.controls as any).paperFormat as FormControl;\r\n  }\r\n\r\n  get imageFormatField() {\r\n    return (this.form.controls as any).imageFormat as FormControl;\r\n  }\r\n\r\n  get orientationField() {\r\n    return (this.form.controls as any).orientation as FormControl;\r\n  }\r\n\r\n  get resolutionField() {\r\n    return (this.form.controls as any).resolution as FormControl;\r\n  }\r\n\r\n  get commentField() {\r\n    return (this.form.controls as any).comment as FormControl;\r\n  }\r\n\r\n  get showProjectionField() {\r\n    return (this.form.controls as any).showProjection as FormControl;\r\n  }\r\n\r\n  get showScaleField() {\r\n    return (this.form.controls as any).showScale as FormControl;\r\n  }\r\n\r\n  get showLegendField() {\r\n    return (this.form.controls as any).showLegend as FormControl;\r\n  }\r\n\r\n  get doZipFileField() {\r\n    return (this.form.controls as any).doZipFile as FormControl;\r\n  }\r\n\r\n  get titleField() {\r\n    return (this.form.controls as any).title as FormControl;\r\n  }\r\n\r\n  @Output() submit: EventEmitter<PrintOptions> = new EventEmitter();\r\n\r\n  constructor(private formBuilder: FormBuilder) {\r\n    this.form = this.formBuilder.group({\r\n      title: ['', []],\r\n      comment: ['', []],\r\n      outputFormat: ['', [Validators.required]],\r\n      paperFormat: ['', [Validators.required]],\r\n      imageFormat: [ '', [Validators.required]],\r\n      resolution: ['', [Validators.required]],\r\n      orientation: ['', [Validators.required]],\r\n      showProjection: false,\r\n      showScale: false,\r\n      showLegend: false,\r\n      doZipFile: [{hidden: this.isPrintService }]\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.doZipFileField.setValue(false);\r\n  }\r\n\r\n  handleFormSubmit(data: PrintOptions, isValid: boolean) {\r\n    this.submitted = true;\r\n    data.isPrintService = this.isPrintService;\r\n    if (isValid) {\r\n      this.submit.emit(data);\r\n    }\r\n  }\r\n\r\n  toggleImageSaveProp() {\r\n    if (this.outputFormatField.value === 'Image') {\r\n      this.isPrintService = false;\r\n    } else {\r\n      this.isPrintService = true;\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatSelectModule,\r\n  MatOptionModule,\r\n  MatInputModule,\r\n  MatFormFieldModule,\r\n  MatSlideToggleModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\nimport { IgoKeyValueModule } from '@igo2/common';\r\n\r\nimport { PrintComponent } from './print/print.component';\r\nimport { PrintFormComponent } from './print-form/print-form.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatOptionModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSlideToggleModule,\r\n    IgoLanguageModule,\r\n    IgoKeyValueModule\r\n  ],\r\n  exports: [PrintComponent, PrintFormComponent],\r\n  declarations: [PrintComponent, PrintFormComponent]\r\n})\r\nexport class IgoPrintModule {}\r\n","import { ConfigService } from '@igo2/core';\r\n\r\nimport { SearchSource } from '../../search/shared/sources/source';\r\n\r\nimport { QuerySearchSource } from './query-search-source';\r\n\r\n/**\r\n * Map search source factory\r\n * @ignore\r\n */\r\nexport function querySearchSourceFactory(config: ConfigService) {\r\n  return new QuerySearchSource(\r\n    config.getConfig(`searchSources.${QuerySearchSource.id}`) || {}\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the map search source\r\n */\r\nexport function provideQuerySearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: querySearchSourceFactory,\r\n    multi: true,\r\n    deps: [ConfigService]\r\n  };\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { QueryDirective } from './shared/query.directive';\r\nimport { QueryService } from './shared/query.service';\r\nimport { provideQuerySearchSource } from './shared/query-search-source.providers';\r\n\r\n@NgModule({\r\n  imports: [CommonModule],\r\n  exports: [QueryDirective],\r\n  declarations: [QueryDirective],\r\n  providers: [QueryService]\r\n})\r\nexport class IgoQueryModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoQueryModule,\r\n      providers: [provideQuerySearchSource()]\r\n    };\r\n  }\r\n}\r\n","import { SearchSource } from './sources/source';\r\nimport { SearchSourceSettings } from './sources/source.interfaces';\r\n\r\n/**\r\n * Service where all available search sources are registered.\r\n */\r\nexport class SearchSourceService {\r\n\r\n  constructor(private sources: SearchSource[]) {}\r\n\r\n  /**\r\n   * Return available search sources\r\n   * @returns Search sources\r\n   */\r\n  getSources(): SearchSource[] {\r\n    return this.sources;\r\n  }\r\n\r\n  /**\r\n   * Return enabled search sources\r\n   * @returns Search sources\r\n   */\r\n  getEnabledSources(): SearchSource[] {\r\n    return this.getSources().filter(\r\n      (source: SearchSource) => source.enabled === true\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Enable search sources of given type\r\n   * @param type Search type\r\n   * @todo It would be better to track the enabled search sources\r\n   *  without updating their 'enabled' property.\r\n   */\r\n  enableSourcesByType(type: string) {\r\n    this.getSources().forEach((source: SearchSource) => {\r\n      if ((source.constructor as typeof SearchSource).type === type) {\r\n        source.enabled = true;\r\n      } else {\r\n        source.enabled = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Set Param from the selected settings\r\n   * @param source search-source\r\n   * @param setting settings\r\n   */\r\n  setParamFromSetting(source: SearchSource, setting: SearchSourceSettings) {\r\n    source.setParamFromSetting(setting);\r\n  }\r\n}\r\n","import { FEATURE } from '../../feature/shared/feature.enums';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { SearchSource } from './sources/source';\r\nimport { SearchResult } from './search.interfaces';\r\n\r\n/**\r\n * Function that checks whether a search source implements TextSearch\r\n * @param source Search source\r\n * @returns True if the search source implements TextSearch\r\n */\r\nexport function sourceCanSearch(source: SearchSource): boolean {\r\n  return (source as any).search !== undefined;\r\n}\r\n\r\n/**\r\n * Function that checks whether a search source implements ReverseSearch\r\n * @param source Search source\r\n * @returns True if the search source implements ReverseSearch\r\n */\r\nexport function sourceCanReverseSearch(source: SearchSource): boolean {\r\n  return (source as any).reverseSearch !== undefined;\r\n}\r\n\r\n/**\r\n * Function that checks whether a search source implements ReverseSearch AND is shown in the pointer summary\r\n * @param source Search source\r\n * @returns True if the search source implements ReverseSearch AND is shown in the pointer summary\r\n */\r\nexport function sourceCanReverseSearchAsSummary(source: SearchSource): boolean {\r\n  return (source as any).reverseSearch !== undefined && source.showInPointerSummary === true;\r\n}\r\n\r\n/**\r\n * Return a search result out of an Feature. This is used to adapt\r\n * the IGO query module to the new Feature/SearchResult interfaces\r\n * @param feature feature\r\n * @param source Search source\r\n * @returns SearchResult\r\n */\r\nexport function featureToSearchResult(\r\n  feature: Feature,\r\n  source: SearchSource\r\n): SearchResult<Feature> {\r\n  return {\r\n    source,\r\n    data: feature,\r\n    meta: {\r\n      dataType: FEATURE,\r\n      id: feature.meta.id as string,\r\n      title: feature.meta.title,\r\n      icon: feature.meta.icon || 'map-marker'\r\n    }\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { stringToLonLat } from '../../map';\r\nimport { MapService } from '../../map/shared/map.service';\r\n\r\nimport { SearchSource, TextSearch, ReverseSearch } from './sources/source';\r\nimport {\r\n  TextSearchOptions,\r\n  ReverseSearchOptions\r\n} from './sources/source.interfaces';\r\nimport { SearchSourceService } from './search-source.service';\r\nimport { Research } from './search.interfaces';\r\nimport {\r\n  sourceCanSearch,\r\n  sourceCanReverseSearch,\r\n  sourceCanReverseSearchAsSummary\r\n} from './search.utils';\r\n\r\n/**\r\n * This service perform researches in all the search sources enabled.\r\n * It returns Research objects who's 'request' property needs to be\r\n * subscribed to in order to trigger the research. This services has\r\n * keeps internal state of the researches it performed\r\n * and the results they yielded.\r\n */\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SearchService {\r\n  constructor(\r\n    private searchSourceService: SearchSourceService,\r\n    private mapService: MapService\r\n  ) {}\r\n\r\n  /**\r\n   * Perform a research by text\r\n   * @param term Any text\r\n   * @returns Researches\r\n   */\r\n  search(term: string, options: TextSearchOptions = {}): Research[] {\r\n    if (!this.termIsValid(term)) {\r\n      return [];\r\n    }\r\n\r\n    const response = stringToLonLat(term, this.mapService.getMap().projection, {\r\n      forceNA: options.forceNA\r\n    });\r\n    if (response.lonLat) {\r\n      return this.reverseSearch(response.lonLat, { distance: response.radius });\r\n    } else if (response.message) {\r\n      console.log(response.message);\r\n    }\r\n\r\n    options.extent = this.mapService\r\n      .getMap()\r\n      .viewController.getExtent('EPSG:4326');\r\n\r\n    let sources;\r\n\r\n    if (options.getEnabledOnly || options.getEnabledOnly === undefined) {\r\n      sources = this.searchSourceService.getEnabledSources();\r\n    } else {\r\n      sources = this.searchSourceService.getSources();\r\n    }\r\n\r\n    if (options.sourceId) {\r\n      sources = sources.filter(source => source.getId() === options.sourceId);\r\n    } else if (options.searchType) {\r\n      sources = sources.filter(\r\n        source => source.getType() === options.searchType\r\n      );\r\n    }\r\n\r\n    sources = sources.filter(sourceCanSearch);\r\n    return this.searchSources(sources, term, options);\r\n  }\r\n\r\n  /**\r\n   * Perform a research by lon/lat\r\n   * @param lonLat Any lon/lat coordinates\r\n   * @returns Researches\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions,\r\n    asPointerSummary: boolean = false\r\n  ) {\r\n    const reverseSourceFonction = asPointerSummary\r\n      ? sourceCanReverseSearchAsSummary\r\n      : sourceCanReverseSearch;\r\n    const sources = this.searchSourceService\r\n      .getEnabledSources()\r\n      .filter(reverseSourceFonction);\r\n    return this.reverseSearchSources(sources, lonLat, options || {});\r\n  }\r\n\r\n  /**\r\n   * Create a text research out of all given search sources\r\n   * @param sources Search sources that implement TextSearch\r\n   * @param term Search term\r\n   * @returns Observable of Researches\r\n   */\r\n  private searchSources(\r\n    sources: SearchSource[],\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): Research[] {\r\n    return sources.map((source: SearchSource) => {\r\n      return {\r\n        request: ((source as any) as TextSearch).search(term, options),\r\n        reverse: false,\r\n        source\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Create a reverse research out of all given search sources\r\n   * @param sources Search sources that implement ReverseSearch\r\n   * @param lonLat Any lon/lat coordinates\r\n   * @returns Observable of Researches\r\n   */\r\n  private reverseSearchSources(\r\n    sources: SearchSource[],\r\n    lonLat: [number, number],\r\n    options: ReverseSearchOptions\r\n  ): Research[] {\r\n    return sources.map((source: SearchSource) => {\r\n      return {\r\n        request: ((source as any) as ReverseSearch).reverseSearch(\r\n          lonLat,\r\n          options\r\n        ),\r\n        reverse: true,\r\n        source\r\n      };\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Validate that a search term is valid\r\n   * @param term Search term\r\n   * @returns True if the search term is valid\r\n   */\r\n  private termIsValid(term: string): boolean {\r\n    return typeof term === 'string' && term !== '';\r\n  }\r\n}\r\n","import { Observable } from 'rxjs';\r\n\r\nimport { Message } from '@igo2/core';\r\n\r\nimport { Directions, DirectionsOptions } from '../shared/directions.interface';\r\n\r\nexport abstract class DirectionsSource {\r\n  abstract enabled: boolean;\r\n  abstract getName(): string;\r\n  abstract route(coordinates: [number, number][], directionsOptions: DirectionsOptions): Observable<Directions[]>;\r\n}\r\n","import { DirectionsSource } from '../directions-sources/directions-source';\r\n\r\nexport class DirectionsSourceService {\r\n  constructor(public sources: DirectionsSource[]) {}\r\n}\r\n\r\nexport function directionsSourceServiceFactory(sources: DirectionsSource[]) {\r\n  return new DirectionsSourceService(sources);\r\n}\r\n\r\nexport function provideDirectionsSourceService() {\r\n  return {\r\n    provide: DirectionsSourceService,\r\n    useFactory: directionsSourceServiceFactory,\r\n    deps: [DirectionsSource]\r\n  };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { Message } from '@igo2/core';\r\n\r\nimport { Directions, DirectionsOptions } from '../shared/directions.interface';\r\nimport { DirectionsSource } from '../directions-sources/directions-source';\r\nimport { DirectionsSourceService } from './directions-source.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DirectionsService {\r\n  constructor(private directionsSourceService: DirectionsSourceService) {}\r\n\r\n  route(coordinates: [number, number][], directionsOptions: DirectionsOptions = {}): Observable<Directions[]>[] {\r\n    if (coordinates.length === 0) {\r\n      return;\r\n    }\r\n    return this.directionsSourceService.sources\r\n      .filter((source: DirectionsSource) => source.enabled)\r\n      .map((source: DirectionsSource) => this.routeSource(source, coordinates, directionsOptions));\r\n  }\r\n\r\n  routeSource(\r\n    source: DirectionsSource,\r\n    coordinates: [number, number][],\r\n    directionsOptions: DirectionsOptions = {}\r\n  ): Observable<Directions[]> {\r\n    const request = source.route(coordinates, directionsOptions );\r\n    return request;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Stop } from '../shared/directions.interface';\r\n\r\n@Injectable()\r\nexport class DirectionsFormService {\r\n  private stops: Stop[];\r\n\r\n  constructor() {}\r\n\r\n  getStopsCoordinates(): [number, number][] {\r\n    const stopsCoordinates = [];\r\n    if (this.stops) {\r\n      this.stops.forEach(stop => {\r\n        stopsCoordinates.push(stop.stopCoordinates);\r\n      });\r\n    }\r\n    return stopsCoordinates;\r\n  }\r\n\r\n  setStops(stops: Stop[]) {\r\n    this.stops = stops;\r\n  }\r\n\r\n  getStops() {\r\n    return this.stops;\r\n  }\r\n\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  OnInit,\r\n  OnDestroy,\r\n  Optional,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormArray } from '@angular/forms';\r\nimport { Subscription, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, take, skipWhile } from 'rxjs/operators';\r\n\r\nimport olFeature from 'ol/Feature';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\nimport * as olgeom from 'ol/geom';\r\nimport * as olproj from 'ol/proj';\r\nimport * as olstyle from 'ol/style';\r\nimport * as olcondition from 'ol/events/condition';\r\nimport * as olinteraction from 'ol/interaction';\r\nimport * as olobservable from 'ol/Observable';\r\n\r\nimport { Clipboard } from '@igo2/utils';\r\nimport {\r\n  Message,\r\n  LanguageService,\r\n  MessageService,\r\n  RouteService\r\n} from '@igo2/core';\r\nimport { getEntityTitle } from '@igo2/common';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { SearchService } from '../../search/shared/search.service';\r\nimport { VectorLayer } from '../../layer/shared/layers/vector-layer';\r\nimport { FeatureDataSource } from '../../datasource/shared/datasources/feature-datasource';\r\nimport { FeatureMotion, FEATURE } from '../../feature/shared/feature.enums';\r\nimport { moveToOlFeatures, tryBindStoreLayer, tryAddLoadingStrategy } from '../../feature/shared/feature.utils';\r\n\r\nimport { Directions, DirectionsOptions } from '../shared/directions.interface';\r\nimport { DirectionsService } from '../shared/directions.service';\r\nimport { DirectionsFormService } from './directions-form.service';\r\n\r\nimport { QueryService } from '../../query/shared/query.service';\r\nimport { FeatureStore } from '../../feature/shared/store';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { FeatureStoreLoadingStrategy } from '../../feature/shared/strategies/loading';\r\nimport { roundCoordTo } from '../../map/shared/map.utils';\r\n\r\n@Component({\r\n  selector: 'igo-directions-form',\r\n  templateUrl: './directions-form.component.html',\r\n  styleUrls: ['./directions-form.component.scss']\r\n})\r\nexport class DirectionsFormComponent implements OnInit, OnDestroy {\r\n  private readonly invalidKeys = ['Control', 'Shift', 'Alt'];\r\n\r\n  public stopsForm: FormGroup;\r\n  public projection = 'EPSG:4326';\r\n  public currentStopIndex: number;\r\n  private routesQueries$$: Subscription[] = [];\r\n  private search$$: Subscription;\r\n\r\n  private stream$ = new Subject<string>();\r\n\r\n  public routesResults: Directions[] | Message[];\r\n  public activeRoute: Directions;\r\n  private lastTimeoutRequest;\r\n\r\n  private focusOnStop = false;\r\n  private focusKey = [];\r\n  public initialStopsCoords;\r\n  private browserLanguage;\r\n\r\n  @Input() term: string;\r\n\r\n  @Input() debounce: number = 200;\r\n\r\n  @Input() length: number = 2;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * The stops store\r\n   */\r\n  @Input() stopsStore: FeatureStore;\r\n\r\n  /**\r\n   * The route and vertex store\r\n   */\r\n  @Input() routeStore: FeatureStore;\r\n\r\n  @Output() submit: EventEmitter<any> = new EventEmitter();\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private directionsService: DirectionsService,\r\n    private languageService: LanguageService,\r\n    private messageService: MessageService,\r\n    private searchService: SearchService,\r\n    private queryService: QueryService,\r\n    private directionsFormService: DirectionsFormService,\r\n    private changeDetectorRefs: ChangeDetectorRef,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  changeRoute() {\r\n    this.showRouteGeometry();\r\n  }\r\n\r\n  prevent(event) {\r\n    event.preventDefault();\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    this.queryService.queryEnabled = false;\r\n    this.focusOnStop = false;\r\n    this.browserLanguage = this.languageService.getLanguage();\r\n    this.stopsForm = this.formBuilder.group({\r\n      directionsType: 'car',\r\n      directionsMode: 'driving', // loop\r\n      stopOrderPriority: true,\r\n      directionsFixedStartEnd: false,\r\n      stops: this.formBuilder.array([\r\n        this.createStop('start'),\r\n        this.createStop('end')\r\n      ])\r\n    });\r\n\r\n    if (!this.directionsFormService.getStops()) {\r\n      this.map.status$.pipe(take(1)).subscribe(() => {\r\n        this.conditionalInit();\r\n      });\r\n    } else {\r\n      this.conditionalInit();\r\n    }\r\n\r\n  }\r\n\r\n  private conditionalInit() {\r\n    this.initStores();\r\n    this.initOlInteraction();\r\n    this.subscribeToFormChange();\r\n\r\n    this.routesQueries$$.push(\r\n      this.stream$\r\n        .pipe(\r\n          debounceTime(this.debounce),\r\n          distinctUntilChanged()\r\n        )\r\n        .subscribe((term: string) => this.handleTermChanged(term))\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.unsubscribeRoutesQueries();\r\n    this.unlistenSingleClick();\r\n    this.queryService.queryEnabled = true;\r\n    this.freezeStores();\r\n    this.writeStopsToFormService();\r\n\r\n  }\r\n\r\n  private initStores() {\r\n\r\n    const loadingStrategy = new FeatureStoreLoadingStrategy({motion: FeatureMotion.None});\r\n\r\n    // STOP STORE\r\n    const stopsStore = this.stopsStore;\r\n    const stopsLayer = new VectorLayer({\r\n      title: 'Directions - stops',\r\n      zIndex: 911,\r\n      source: new FeatureDataSource(),\r\n      showInLayerList: false,\r\n      exportable: false,\r\n      browsable: false,\r\n      style: stopMarker\r\n    });\r\n    tryBindStoreLayer(stopsStore, stopsLayer);\r\n    tryAddLoadingStrategy(stopsStore, loadingStrategy);\r\n\r\n    // ROUTE AND VERTEX STORE\r\n    const routeStore = this.routeStore;\r\n    const routeLayer = new VectorLayer({\r\n      title: 'Directions - route and vertex',\r\n      zIndex: 910,\r\n      source: new FeatureDataSource(),\r\n      showInLayerList: false,\r\n      exportable: false,\r\n      browsable: false,\r\n      style: stopMarker\r\n    });\r\n    tryBindStoreLayer(routeStore, routeLayer);\r\n    tryAddLoadingStrategy(routeStore, loadingStrategy);\r\n\r\n  }\r\n\r\n  private initOlInteraction() {\r\n    let selectedStopFeature;\r\n    const selectStop = new olinteraction.Select({\r\n      layers: [this.stopsStore.layer.ol],\r\n      condition: olcondition.pointerMove,\r\n      hitTolerance: 7,\r\n      filter: (feature) => {\r\n        return feature.get('type') === 'stop';\r\n      }\r\n    });\r\n\r\n    selectStop.on('select', evt => {\r\n      selectedStopFeature = evt.target.getFeatures()[0];\r\n    });\r\n\r\n    const translateStop = new olinteraction.Translate({\r\n      layers: [this.stopsStore.layer.ol],\r\n      features: selectedStopFeature\r\n      // TODO In Openlayers >= 6.x, filter is now allowed.\r\n    });\r\n\r\n    translateStop.on('translating', evt => {\r\n      const features = evt.features;\r\n      if (features.getLength() === 0) { return; }\r\n      this.executeTranslation(features, false, 50, true);\r\n    });\r\n\r\n    translateStop.on('translateend', evt => {\r\n      const features = evt.features;\r\n      if (features.getLength() === 0) { return; }\r\n      this.executeTranslation(features, true, 0, false);\r\n    });\r\n\r\n    const selectedRoute = new olinteraction.Select({\r\n      layers: [this.routeStore.layer.ol],\r\n      condition: olcondition.click,\r\n      hitTolerance: 7,\r\n      filter: (feature) => {\r\n        return feature.getId() === 'route';\r\n      }\r\n    });\r\n    selectedRoute.on('select', evt => {\r\n      if (this.focusOnStop === false) {\r\n        const selectCoordinates = olproj.transform(\r\n          (evt as any).mapBrowserEvent.coordinate,\r\n          this.map.projection,\r\n          this.projection\r\n        );\r\n        this.addStop();\r\n        const pos = this.stops.length - 2;\r\n        this.stops.at(pos).patchValue({ stopCoordinates: selectCoordinates });\r\n        this.handleLocationProposals(selectCoordinates, pos);\r\n        this.addStopOverlay(selectCoordinates, pos);\r\n        selectedRoute.getFeatures().clear();\r\n      }\r\n      selectedRoute.getFeatures().clear();\r\n    });\r\n\r\n    this.map.ol.addInteraction(selectStop);\r\n    this.map.ol.addInteraction(translateStop);\r\n    this.map.ol.addInteraction(selectedRoute);\r\n\r\n  }\r\n\r\n  private subscribeToFormChange() {\r\n    this.routesQueries$$.push(\r\n      this.stopsForm.valueChanges\r\n        .pipe(debounceTime(this.debounce))\r\n        .subscribe(val => {\r\n          this.writeStopsToFormService();\r\n        })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Freeze any store, meaning the layer is removed, strategies are deactivated\r\n   * and some listener removed\r\n   * @internal\r\n   */\r\n  private freezeStores() {\r\n    const stopsStore = this.stopsStore;\r\n    const routeStore = this.routeStore;\r\n\r\n    this.map.removeLayer(stopsStore.layer);\r\n    this.map.removeLayer(routeStore.layer);\r\n    stopsStore.deactivateStrategyOfType(FeatureStoreLoadingStrategy);\r\n    routeStore.deactivateStrategyOfType(FeatureStoreLoadingStrategy);\r\n\r\n  }\r\n\r\n  private executeTranslation(\r\n    features,\r\n    reverseSearchProposal = false,\r\n    delay: number = 0,\r\n    overview: boolean = false) {\r\n    this.routeStore.clear();\r\n    const firstFeature = features.getArray()[0];\r\n    const translatedID = firstFeature.getId();\r\n    const translatedPos = translatedID.split('_');\r\n    let p;\r\n    switch (translatedPos[1]) {\r\n      case 'start':\r\n        p = 0;\r\n        break;\r\n      case 'end':\r\n        p = this.stops.length - 1;\r\n        break;\r\n      default:\r\n        p = Number(translatedPos[1]);\r\n        break;\r\n    }\r\n    const translationCoordinates = olproj.transform(\r\n      firstFeature.getGeometry().getCoordinates(),\r\n      this.map.projection,\r\n      this.projection\r\n    );\r\n    this.stops\r\n      .at(p)\r\n      .patchValue({ stopCoordinates: translationCoordinates, stopProposals: [] });\r\n    if (reverseSearchProposal) {\r\n      this.handleLocationProposals(translationCoordinates, p);\r\n    }\r\n\r\n    const directionsOptions = {\r\n      steps: true,\r\n      overview: false,\r\n      alternatives: true\r\n    } as DirectionsOptions;\r\n\r\n    if (overview) {\r\n      directionsOptions.overview = true;\r\n      directionsOptions.steps = false;\r\n      directionsOptions.alternatives = false;\r\n    }\r\n\r\n    if (delay > 0) {\r\n      if (typeof this.lastTimeoutRequest !== 'undefined') { // cancel timeout when the mouse moves\r\n        clearTimeout(this.lastTimeoutRequest);\r\n      }\r\n      this.lastTimeoutRequest = setTimeout(() => {\r\n        this.getRoutes(undefined, directionsOptions);\r\n      }, delay);\r\n\r\n    } else {\r\n      clearTimeout(this.lastTimeoutRequest);\r\n      this.getRoutes(undefined, directionsOptions);\r\n    }\r\n\r\n  }\r\n\r\n  handleLocationProposals(coordinates: [number, number], stopIndex: number) {\r\n    const groupedLocations = [];\r\n    const roundedCoordinates = [coordinates[0].toFixed(5), coordinates[1].toFixed(5)];\r\n    this.stops.at(stopIndex).patchValue({ stopPoint: roundedCoordinates.join(',') });\r\n    this.searchService\r\n      .reverseSearch(coordinates, { zoom: this.map.viewController.getZoom() })\r\n      .map(res =>\r\n        this.routesQueries$$.push(\r\n          res.request.pipe(map(f => f)).subscribe(results => {\r\n            results.forEach(result => {\r\n              if (\r\n                groupedLocations.filter(f => f.source === result.source)\r\n                  .length === 0\r\n              ) {\r\n                groupedLocations.push({\r\n                  source: result.source,\r\n                  results: results.map(r => r.data)\r\n                });\r\n              }\r\n            });\r\n            this.stops\r\n              .at(stopIndex)\r\n              .patchValue({ stopProposals: groupedLocations });\r\n            // TODO: Prefer another source?\r\n            if (results[0]) {\r\n              if (results[0].source.getId() === 'icherchereverse') {\r\n                // prefer address type.\r\n                let resultPos = 0;\r\n                for (let i = 0; i < results.length; i++) {\r\n                  const feature: any = results[i].data;\r\n                  if (feature.properties.type === 'adresses') {\r\n                    resultPos = i;\r\n                    break;\r\n                  }\r\n                }\r\n                this.stops.at(stopIndex).patchValue({\r\n                  stopPoint: getEntityTitle(results[resultPos])\r\n                });\r\n                if (results[resultPos].data.geometry.type === 'Point') {\r\n                  this.stops.at(stopIndex).patchValue({\r\n                    stopCoordinates:\r\n                      results[resultPos].data.geometry.coordinates\r\n                  });\r\n                } else {\r\n                  // Not moving the translated point Only to suggest value into the UI.\r\n                }\r\n              } else if (results[0].source.getId() === 'coordinatesreverse') {\r\n                this.stops.at(stopIndex).patchValue({\r\n                  stopPoint: [\r\n                    results[0].data.geometry.coordinates[0].toFixed(5),\r\n                    results[0].data.geometry.coordinates[1].toFixed(5)\r\n                  ].join(',')\r\n                });\r\n                if (results[0].data.geometry.type === 'Point') {\r\n                  this.stops.at(stopIndex).patchValue({\r\n                    stopCoordinates:\r\n                      results[0].data.geometry.coordinates\r\n                  });\r\n                } else {\r\n                  // Not moving the translated point Only to suggest value into the UI.\r\n                }\r\n              }\r\n            } else {\r\n              this.stops.at(stopIndex).patchValue({ stopPoint: roundedCoordinates.join(','), stopProposals: [] });\r\n            }\r\n            this.changeDetectorRefs.detectChanges();\r\n          })\r\n        )\r\n      );\r\n  }\r\n\r\n  directionsText(index: number, stopsCounts = this.stops.length): string {\r\n    if (index === 0) {\r\n      return 'start';\r\n    } else if (index === stopsCounts - 1 || stopsCounts === 1) {\r\n      return 'end';\r\n    } else {\r\n      return 'intermediate';\r\n    }\r\n  }\r\n\r\n  raiseStop(index: number) {\r\n    if (index > 0) {\r\n      this.moveStop(index, -1);\r\n    }\r\n  }\r\n\r\n  lowerStop(index: number) {\r\n    if (index < this.stops.length - 1) {\r\n      this.moveStop(index, 1);\r\n    }\r\n  }\r\n\r\n  private moveStop(index, diff) {\r\n    const fromValue = this.stops.at(index);\r\n    this.removeStop(index);\r\n    this.stops.insert(index + diff, fromValue);\r\n    this.stops.at(index).patchValue({ directionsText: this.directionsText(index) });\r\n    this.stops\r\n      .at(index + diff)\r\n      .patchValue({ directionsText: this.directionsText(index + diff) });\r\n    if (this.stops.at(index).value.stopCoordinates) {\r\n      this.addStopOverlay(this.stops.at(index).value.stopCoordinates, index);\r\n    }\r\n    if (this.stops.at(index + diff).value.stopCoordinates) {\r\n      this.addStopOverlay(\r\n        this.stops.at(index + diff).value.stopCoordinates,\r\n        index + diff\r\n      );\r\n    }\r\n  }\r\n\r\n  get stops(): FormArray {\r\n    return this.stopsForm.get('stops') as FormArray;\r\n  }\r\n\r\n  public writeStopsToFormService() {\r\n    const stops = [];\r\n    this.stops.value.forEach(stop => {\r\n      if (stop.stopCoordinates instanceof Array) {\r\n        stops.push(stop);\r\n      }\r\n    });\r\n    this.directionsFormService.setStops(stops);\r\n  }\r\n\r\n  addStop(): void {\r\n    const insertIndex = this.stops.length - 1;\r\n    this.stops.insert(insertIndex, this.createStop());\r\n  }\r\n\r\n  createStop(directionsPos = 'intermediate'): FormGroup {\r\n    return this.formBuilder.group({\r\n      stopPoint: [''],\r\n      stopProposals: [[]],\r\n      directionsText: directionsPos,\r\n      stopCoordinates: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  removeStop(index: number): void {\r\n    const id = this.getStopOverlayID(index);\r\n    this.deleteStoreFeatureByID(this.stopsStore, id);\r\n    this.stops.removeAt(index);\r\n    let cnt = 0;\r\n    this.stops.value.forEach(stop => {\r\n      this.stops.at(cnt).patchValue({ directionsText: this.directionsText(cnt) });\r\n      this.addStopOverlay(this.stops.at(cnt).value.stopCoordinates, cnt);\r\n      cnt++;\r\n    });\r\n  }\r\n\r\n  resetForm() {\r\n    this.routesResults = undefined;\r\n    const nbStops = this.stops.length;\r\n    for (let i = 0; i < nbStops; i++) {\r\n      this.stops.removeAt(0);\r\n    }\r\n    this.stops.insert(0, this.createStop('start'));\r\n    this.stops.insert(1, this.createStop('end'));\r\n\r\n    this.stopsStore.clear();\r\n    this.routeStore.clear();\r\n  }\r\n\r\n  formatStep(step, cnt) {\r\n    return this.formatInstruction(\r\n      step.maneuver.type,\r\n      step.maneuver.modifier,\r\n      step.name,\r\n      step.maneuver.bearing_after,\r\n      cnt,\r\n      step.maneuver.exit,\r\n      cnt === this.activeRoute.steps.length - 1\r\n    );\r\n  }\r\n\r\n  formatInstruction(\r\n    type,\r\n    modifier,\r\n    route,\r\n    direction,\r\n    stepPosition,\r\n    exit,\r\n    lastStep = false\r\n  ) {\r\n    let directiveFr;\r\n    let directiveEn;\r\n    let image = 'forward';\r\n    let cssClass = 'rotate-270';\r\n    const translatedDirection = this.translateBearing(direction);\r\n    const translatedModifier = this.translateModifier(modifier);\r\n    const enPrefix = modifier === 'straight' ? '' : 'on the ';\r\n    const frPrefix = modifier === 'straight' ? '' : 'Ã  ';\r\n\r\n    let frAggregatedDirection = frPrefix + translatedModifier;\r\n    let enAggregatedDirection = enPrefix + translatedModifier;\r\n\r\n    if (modifier && modifier.search('slight') >= 0) {\r\n      enAggregatedDirection = translatedModifier;\r\n    }\r\n\r\n    if (modifier === 'uturn') {\r\n      image = 'forward';\r\n      cssClass = 'rotate-90';\r\n    } else if (modifier === 'sharp right') {\r\n      image = 'subdirectory-arrow-right';\r\n      cssClass = 'icon-flipped';\r\n    } else if (modifier === 'right') {\r\n      image = 'subdirectory-arrow-right';\r\n      cssClass = 'icon-flipped';\r\n    } else if (modifier === 'slight right') {\r\n      image = 'forward';\r\n      cssClass = 'rotate-290';\r\n    } else if (modifier === 'straight') {\r\n      image = 'forward';\r\n    } else if (modifier === 'slight left') {\r\n      image = 'forward';\r\n      cssClass = 'rotate-250';\r\n    } else if (modifier === 'left') {\r\n      image = 'subdirectory-arrow-left';\r\n      cssClass = 'icon-flipped';\r\n    } else if (modifier === 'sharp left') {\r\n      image = 'subdirectory-arrow-left';\r\n      cssClass = 'icon-flipped';\r\n    }\r\n\r\n    if (type === 'turn') {\r\n      if (modifier === 'straight') {\r\n        directiveFr = 'Continuer sur ' + route;\r\n        directiveEn = 'Continue on ' + route;\r\n      } else if (modifier === 'uturn') {\r\n        directiveFr = 'Faire demi-tour sur ' + route;\r\n        directiveEn = 'Make u-turn on ' + route;\r\n      } else {\r\n        directiveFr = 'Tourner ' + frAggregatedDirection + ' sur ' + route;\r\n        directiveEn = 'Turn ' + translatedModifier + ' onto ' + route;\r\n      }\r\n    } else if (type === 'new name') {\r\n      directiveFr =\r\n        'Continuer en direction ' + translatedDirection + ' sur ' + route;\r\n      directiveEn = 'Head ' + translatedDirection + ' on ' + route;\r\n      image = 'compass';\r\n      cssClass = '';\r\n    } else if (type === 'depart') {\r\n      directiveFr =\r\n        'Aller en direction ' + translatedDirection + ' sur ' + route;\r\n      directiveEn = 'Head ' + translatedDirection + ' on ' + route;\r\n      image = 'compass';\r\n      cssClass = '';\r\n    } else if (type === 'arrive') {\r\n      if (lastStep) {\r\n        let coma = ', ';\r\n        if (!translatedModifier) {\r\n          frAggregatedDirection = '';\r\n          enAggregatedDirection = '';\r\n          coma = '';\r\n        }\r\n        directiveFr = 'Vous Ãªtes arrivÃ©' + coma + frAggregatedDirection;\r\n        directiveEn =\r\n          'You have reached your destination' + coma + enAggregatedDirection;\r\n      } else {\r\n        directiveFr = 'Vous atteignez le point intermÃ©diare sur ' + route;\r\n        directiveEn = 'You have reached the intermediate stop onto ' + route;\r\n        image = 'map-marker';\r\n        cssClass = '';\r\n      }\r\n    } else if (type === 'merge') {\r\n      directiveFr = 'Continuer sur ' + route;\r\n      directiveEn = 'Continue on ' + route;\r\n      image = 'forward';\r\n      cssClass = 'rotate-270';\r\n    } else if (type === 'on ramp') {\r\n      directiveFr = \"Prendre l'entrÃ©e d'autoroute \" + frAggregatedDirection;\r\n      directiveEn = 'Take the ramp ' + enAggregatedDirection;\r\n    } else if (type === 'off ramp') {\r\n      directiveFr = \"Prendre la sortie d'autoroute \" + frAggregatedDirection;\r\n      directiveEn = 'Take exit ' + enAggregatedDirection;\r\n    } else if (type === 'fork') {\r\n      if (modifier.search('left') >= 0) {\r\n        directiveFr = 'Garder la gauche sur ' + route;\r\n        directiveEn = 'Merge left onto ' + route;\r\n      } else if (modifier.search('right') >= 0) {\r\n        directiveFr = 'Garder la droite sur ' + route;\r\n        directiveEn = 'Merge right onto ' + route;\r\n      } else {\r\n        directiveFr = 'Continuer sur ' + route;\r\n        directiveEn = 'Continue on ' + route;\r\n      }\r\n    } else if (type === 'end of road') {\r\n      directiveFr =\r\n        'Ã la fin de la route, tourner ' + translatedModifier + ' sur ' + route;\r\n      directiveEn =\r\n        'At the end of the road, turn ' + translatedModifier + ' onto ' + route;\r\n    } else if (type === 'use lane') {\r\n      directiveFr = 'Prendre la voie de ... ';\r\n      directiveEn = 'Take the lane ...';\r\n    } else if (type === 'continue' && modifier !== 'uturn') {\r\n      directiveFr = 'Continuer sur ' + route;\r\n      directiveEn = 'Continue on ' + route;\r\n      image = 'forward';\r\n      cssClass = 'rotate-270';\r\n    } else if (type === 'roundabout') {\r\n      directiveFr = 'Au rond-point, prendre la ' + exit;\r\n      directiveFr += exit === 1 ? 're' : 'e';\r\n      directiveFr += ' sortie vers ' + route;\r\n      directiveEn = 'At the roundabout, take the ' + exit;\r\n      directiveEn += exit === 1 ? 'st' : 'rd';\r\n      directiveEn += ' exit towards ' + route;\r\n      image = 'chart-donut';\r\n      cssClass = '';\r\n    } else if (type === 'rotary') {\r\n      directiveFr = 'Rond-point rotary....';\r\n      directiveEn = 'Roundabout rotary....';\r\n      image = 'chart-donut';\r\n      cssClass = '';\r\n    } else if (type === 'roundabout turn') {\r\n      directiveFr = 'Rond-point, prendre la ...';\r\n      directiveEn = 'Roundabout, take the ...';\r\n      image = 'chart-donut';\r\n      cssClass = '';\r\n    } else if (type === 'exit roundabout') {\r\n      directiveFr = 'Poursuivre vers ' + route;\r\n      directiveEn = 'Continue to ' + route;\r\n      image = 'forward';\r\n      cssClass = 'rotate-270';\r\n    } else if (type === 'notification') {\r\n      directiveFr = 'notification ....';\r\n      directiveEn = 'notification ....';\r\n    } else if (modifier === 'uturn') {\r\n      directiveFr =\r\n        'Faire demi-tour et continuer en direction ' +\r\n        translatedDirection +\r\n        ' sur ' +\r\n        route;\r\n      directiveEn =\r\n        'Make u-turn and head ' + translatedDirection + ' on ' + route;\r\n    } else {\r\n      directiveFr = '???';\r\n      directiveEn = '???';\r\n    }\r\n\r\n    if (lastStep) {\r\n      image = 'flag-variant';\r\n      cssClass = '';\r\n    }\r\n    if (stepPosition === 0) {\r\n      image = 'compass';\r\n      cssClass = '';\r\n    }\r\n\r\n    let directive;\r\n    if (this.browserLanguage === 'fr') {\r\n      directive = directiveFr;\r\n    } else if (this.browserLanguage === 'en') {\r\n      directive = directiveEn;\r\n    }\r\n\r\n    return { instruction: directive, image, cssClass };\r\n  }\r\n\r\n  translateModifier(modifier) {\r\n    if (modifier === 'uturn') {\r\n      return this.languageService.translate.instant('igo.geo.directions.uturn');\r\n    } else if (modifier === 'sharp right') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.directions.sharp right'\r\n      );\r\n    } else if (modifier === 'right') {\r\n      return this.languageService.translate.instant('igo.geo.directions.right');\r\n    } else if (modifier === 'slight right') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.directions.slight right'\r\n      );\r\n    } else if (modifier === 'sharp left') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.directions.sharp left'\r\n      );\r\n    } else if (modifier === 'left') {\r\n      return this.languageService.translate.instant('igo.geo.directions.left');\r\n    } else if (modifier === 'slight left') {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.directions.slight left'\r\n      );\r\n    } else if (modifier === 'straight') {\r\n      return this.languageService.translate.instant('igo.geo.directions.straight');\r\n    } else {\r\n      return modifier;\r\n    }\r\n  }\r\n\r\n  translateBearing(bearing) {\r\n    if (bearing >= 337 || bearing < 23) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.n');\r\n    } else if (bearing < 67) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.ne'\r\n      );\r\n    } else if (bearing < 113) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.e');\r\n    } else if (bearing < 157) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.se'\r\n      );\r\n    } else if (bearing < 203) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.s');\r\n    } else if (bearing < 247) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.sw'\r\n      );\r\n    } else if (bearing < 293) {\r\n      return this.languageService.translate.instant('igo.geo.cardinalPoints.w');\r\n    } else if (bearing < 337) {\r\n      return this.languageService.translate.instant(\r\n        'igo.geo.cardinalPoints.nw'\r\n      );\r\n    } else {\r\n      return;\r\n    }\r\n  }\r\n\r\n  formatDistance(distance) {\r\n    if (distance === 0) {\r\n      return;\r\n    }\r\n    if (distance >= 100000) {\r\n      return Math.round(distance / 1000) + ' km';\r\n    }\r\n    if (distance >= 10000) {\r\n      return Math.round(distance / 100) / 10 + ' km';\r\n    }\r\n    if (distance >= 100) {\r\n      return Math.round(distance / 100) / 10 + ' km';\r\n    }\r\n    return distance + ' m';\r\n  }\r\n\r\n  formatDuration(duration: number, summary = false) {\r\n    if (duration >= 3600) {\r\n      const hour = Math.floor(duration / 3600);\r\n      const minute = Math.round((duration / 3600 - hour) * 60);\r\n      if (minute === 60) {\r\n        return hour + 1 + ' h';\r\n      }\r\n      return hour + ' h ' + minute + ' min';\r\n    }\r\n\r\n    if (duration >= 60) {\r\n      return Math.round(duration / 60) + ' min';\r\n    }\r\n    return duration + ' s';\r\n  }\r\n\r\n  showSegment(step, zoomToExtent = false) {\r\n    this.showRouteSegmentGeometry(step.geometry.coordinates, zoomToExtent);\r\n  }\r\n\r\n  showRouteSegmentGeometry(coordinates, zoomToExtent = false) {\r\n    const vertexId = 'vertex';\r\n    const geometry4326 = new olgeom.LineString(coordinates);\r\n    const geometryMapProjection = geometry4326.transform('EPSG:4326', this.map.projection);\r\n    const routeSegmentCoordinates = (geometryMapProjection as any).getCoordinates();\r\n    const lastPoint = routeSegmentCoordinates[0];\r\n\r\n    const geometry = new olgeom.Point(lastPoint);\r\n    const feature = new olFeature({ geometry });\r\n\r\n    const geojsonGeom = new OlGeoJSON().writeGeometryObject(geometry, {\r\n      featureProjection: this.map.projection,\r\n      dataProjection: this.map.projection\r\n    });\r\n\r\n    const previousVertex = this.routeStore.get(vertexId);\r\n    const previousVertexRevision = previousVertex ? previousVertex.meta.revision : 0;\r\n\r\n    const vertexFeature: Feature = {\r\n      type: FEATURE,\r\n      geometry: geojsonGeom,\r\n      projection: this.map.projection,\r\n      properties: {\r\n        id: vertexId,\r\n        type: 'vertex'\r\n      },\r\n      meta: {\r\n        id: vertexId,\r\n        revision: previousVertexRevision + 1\r\n      },\r\n      ol: feature\r\n    };\r\n    this.routeStore.update(vertexFeature);\r\n    if (zoomToExtent) {\r\n      this.map.viewController.zoomToExtent(feature.getGeometry().getExtent());\r\n    }\r\n  }\r\n\r\n  zoomRoute(extent?) {\r\n\r\n    if (extent) {\r\n      this.map.viewController.zoomToExtent(extent);\r\n    } else {\r\n      const routeFeature = this.routeStore.layer.ol.getSource().getFeatures().find(f => f.getId() === 'route');\r\n      if (routeFeature) {\r\n        const routeExtent = routeFeature.getGeometry().getExtent();\r\n        this.map.viewController.zoomToExtent(routeExtent);\r\n      }\r\n    }\r\n  }\r\n\r\n  private showRouteGeometry(moveToExtent = false) {\r\n    const geom = this.activeRoute.geometry.coordinates;\r\n    const geometry4326 = new olgeom.LineString(geom);\r\n    const geometryMapProjection = geometry4326.transform('EPSG:4326', this.map.projection);\r\n    if (moveToExtent) {\r\n      this.zoomRoute(geometryMapProjection.getExtent());\r\n    }\r\n\r\n    const geojsonGeom = new OlGeoJSON().writeGeometryObject(geometryMapProjection, {\r\n      featureProjection: this.map.projection,\r\n      dataProjection: this.map.projection\r\n    });\r\n\r\n    const previousRoute = this.routeStore.get('route');\r\n    const previousRouteRevision = previousRoute ? previousRoute.meta.revision : 0;\r\n\r\n    const routeFeature: Feature = {\r\n      type: FEATURE,\r\n      geometry: geojsonGeom,\r\n      projection: this.map.projection,\r\n      properties: {\r\n        id: 'route',\r\n        type: 'route'\r\n      },\r\n      meta: {\r\n        id: 'route',\r\n        revision: previousRouteRevision + 1\r\n      },\r\n      ol: new olFeature({ geometry: geometryMapProjection })\r\n    };\r\n    this.routeStore.update(routeFeature);\r\n\r\n  }\r\n\r\n  getRoutes(moveToExtent: boolean = false, directionsOptions: DirectionsOptions = {}) {\r\n    this.deleteStoreFeatureByID(this.routeStore, 'vertex');\r\n    this.writeStopsToFormService();\r\n    const coords = this.directionsFormService.getStopsCoordinates();\r\n    if (coords.length < 2) {\r\n      return;\r\n    }\r\n    const routeResponse = this.directionsService.route(coords, directionsOptions);\r\n    if (routeResponse) {\r\n      routeResponse.map(res =>\r\n        this.routesQueries$$.push(\r\n          res.subscribe(route => {\r\n            this.routesResults = route;\r\n            this.activeRoute = this.routesResults[0] as Directions;\r\n            this.showRouteGeometry(moveToExtent);\r\n            this.changeDetectorRefs.detectChanges();\r\n          })\r\n        )\r\n      );\r\n    }\r\n  }\r\n\r\n  private unlistenSingleClick() {\r\n    if (this.focusKey.length !== 0) {\r\n      this.focusKey.forEach(key => {\r\n        olobservable.unByKey(key);\r\n      });\r\n    }\r\n  }\r\n\r\n  private unsubscribeRoutesQueries() {\r\n    this.routesQueries$$.forEach((sub: Subscription) => sub.unsubscribe());\r\n    this.routesQueries$$ = [];\r\n  }\r\n\r\n  copyLinkToClipboard() {\r\n    const successful = Clipboard.copy(this.getUrl());\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant('igo.geo.directionsForm.dialog.copyTitle');\r\n      const msg = translate.instant('igo.geo.directionsForm.dialog.copyMsgLink');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  copyDirectionsToClipboard() {\r\n    const indent = '\\t';\r\n    let activeRouteDirective =\r\n      this.languageService.translate.instant(\r\n        'igo.geo.directionsForm.instructions'\r\n      ) + ':\\n';\r\n    let wayPointList = '';\r\n    const summary =\r\n      this.languageService.translate.instant('igo.geo.directionsForm.summary') +\r\n      ': \\n' +\r\n      indent +\r\n      this.activeRoute.title +\r\n      '\\n' +\r\n      indent +\r\n      this.formatDistance(this.activeRoute.distance) +\r\n      '\\n' +\r\n      indent +\r\n      this.formatDuration(this.activeRoute.duration) +\r\n      '\\n\\n' +\r\n      this.languageService.translate.instant('igo.geo.directionsForm.stopsList') +\r\n      ':\\n';\r\n\r\n    const url =\r\n      this.languageService.translate.instant('igo.geo.directionsForm.link') +\r\n      ':\\n' +\r\n      indent +\r\n      this.getUrl();\r\n\r\n    let wayPointsCnt = 1;\r\n    this.stops.value.forEach(stop => {\r\n      let coord = '';\r\n      let stopPoint = '';\r\n      if (stop.stopPoint !== stop.stopCoordinates) {\r\n        stopPoint = stop.stopPoint;\r\n        coord =\r\n          ' (' +\r\n          [stop.stopCoordinates[1], stop.stopCoordinates[0]].join(',') +\r\n          ')';\r\n      } else {\r\n        stopPoint = [stop.stopCoordinates[1], stop.stopCoordinates[0]].join(\r\n          ','\r\n        );\r\n      }\r\n\r\n      wayPointList =\r\n        wayPointList +\r\n        indent +\r\n        wayPointsCnt.toLocaleString() +\r\n        '. ' +\r\n        stopPoint +\r\n        coord +\r\n        '\\n';\r\n      wayPointsCnt++;\r\n    });\r\n\r\n    // Directions\r\n    let localCnt = 0;\r\n    this.activeRoute.steps.forEach(step => {\r\n      const instruction = this.formatStep(step, localCnt).instruction;\r\n      const distance =\r\n        this.formatDistance(step.distance) === undefined\r\n          ? ''\r\n          : ' (' + this.formatDistance(step.distance) + ')';\r\n      activeRouteDirective =\r\n        activeRouteDirective +\r\n        indent +\r\n        (localCnt + 1).toLocaleString() +\r\n        '. ' +\r\n        instruction +\r\n        distance +\r\n        '\\n';\r\n      localCnt++;\r\n    });\r\n\r\n    const directionsBody =\r\n      summary + wayPointList + '\\n' + url + '\\n\\n' + activeRouteDirective;\r\n\r\n    const successful = Clipboard.copy(directionsBody);\r\n    if (successful) {\r\n      const translate = this.languageService.translate;\r\n      const title = translate.instant('igo.geo.directionsForm.dialog.copyTitle');\r\n      const msg = translate.instant('igo.geo.directionsForm.dialog.copyMsg');\r\n      this.messageService.success(msg, title);\r\n    }\r\n  }\r\n\r\n  private handleTermChanged(term: string) {\r\n    if (term !== undefined || term.length !== 0) {\r\n      const searchProposals = [];\r\n      if (this.search$$) {\r\n        this.search$$.unsubscribe();\r\n      }\r\n      const researches = this.searchService.search(term, {searchType: 'Feature'});\r\n      researches.map(res =>\r\n        this.search$$ =\r\n        res.request.subscribe(results => {\r\n          results\r\n            .filter(r => r.data.geometry)\r\n            .forEach(element => {\r\n              if (\r\n                searchProposals.filter(r => r.source === element.source)\r\n                  .length === 0\r\n              ) {\r\n                searchProposals.push({\r\n                  source: element.source,\r\n                  meta: element.meta,\r\n                  results: results.map(r => r.data)\r\n                });\r\n              }\r\n            });\r\n          this.stops\r\n            .at(this.currentStopIndex)\r\n            .patchValue({ stopProposals: searchProposals });\r\n          this.changeDetectorRefs.detectChanges();\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  setTerm(term: string) {\r\n    this.term = term;\r\n    if (\r\n      this.keyIsValid(term) &&\r\n      (term.length >= this.length || term.length === 0)\r\n    ) {\r\n      this.stream$.next(term);\r\n    }\r\n  }\r\n\r\n  private keyIsValid(key: string) {\r\n    return this.invalidKeys.find(value => value === key) === undefined;\r\n  }\r\n\r\n  keyup(i, event: KeyboardEvent) {\r\n    const term = (event.target as HTMLInputElement).value;\r\n    this.setTerm(term);\r\n    this.map.ol.un('singleclick', evt => {\r\n      this.handleMapClick(evt, i);\r\n    });\r\n  }\r\n\r\n  clearStop(stopIndex) {\r\n    // this.deleteDirectionsOverlaybyID(this.getStopOverlayID(stopIndex));\r\n    const id = this.getStopOverlayID(stopIndex);\r\n    this.deleteStoreFeatureByID(this.stopsStore, id);\r\n    this.routeStore.clear();\r\n    const stopsCounts = this.stops.length;\r\n    this.stops.removeAt(stopIndex);\r\n    this.stops.insert(stopIndex, this.createStop(this.directionsText(stopIndex, stopsCounts)));\r\n    this.routesResults = undefined;\r\n    this.getRoutes();\r\n  }\r\n\r\n  chooseProposal(proposal, i) {\r\n    if (proposal !== undefined) {\r\n      let geomCoord;\r\n      const geom = (proposal as any).geometry;\r\n      if (geom.type === 'Point') {\r\n        geomCoord = geom.coordinates;\r\n      } else if (geom.type.search('Line') >= 0) {\r\n        const line = (new OlGeoJSON()).readFeatures(geom);\r\n        geomCoord = line[0].getGeometry().getFirstCoordinate();\r\n        geomCoord = [geomCoord[0], geomCoord[1]];\r\n      } else if (geom.type.search('Polygon') >= 0) {\r\n        const poly = (new OlGeoJSON()).readFeatures(geom);\r\n        geomCoord = poly[0].getGeometry().getInteriorPoints().getFirstCoordinate();\r\n        geomCoord = [geomCoord[0], geomCoord[1]];\r\n      }\r\n\r\n      if (geomCoord !== undefined) {\r\n        this.stops.at(i).patchValue({ stopCoordinates: geomCoord });\r\n        this.addStopOverlay(geomCoord, i);\r\n      /*  const proposalExtent = this.directionsStopsOverlayDataSource.ol\r\n          .getFeatureById(this.getStopOverlayID(i))\r\n          .getGeometry()\r\n          .getExtent();*/\r\n\r\n       /* if (!olextent.intersects(proposalExtent, this.map.viewController.getExtent())) {\r\n          this.map.viewController.moveToExtent(proposalExtent);\r\n        }*/\r\n      }\r\n    }\r\n  }\r\n\r\n  focus(i) {\r\n    this.unlistenSingleClick();\r\n    this.currentStopIndex = i;\r\n    this.focusOnStop = true;\r\n    this.focusKey.push(\r\n      this.map.ol.once('singleclick', evt => {\r\n        this.handleMapClick(evt, i);\r\n      })\r\n    );\r\n  }\r\n\r\n  private handleMapClick(event: olcondition, indexPos?) {\r\n    if (this.currentStopIndex === undefined) {\r\n      this.addStop();\r\n      indexPos = this.stops.length - 2;\r\n      this.stops.at(indexPos).value.stopProposals = [];\r\n    } else {\r\n      indexPos = this.currentStopIndex;\r\n    }\r\n    const clickCoordinates = olproj.transform(\r\n      event.coordinate,\r\n      this.map.projection,\r\n      this.projection\r\n    );\r\n    this.stops.at(indexPos).patchValue({ stopProposals: [], stopCoordinates: clickCoordinates });\r\n\r\n    this.handleLocationProposals(clickCoordinates, indexPos);\r\n    this.addStopOverlay(clickCoordinates, indexPos);\r\n    setTimeout(() => {\r\n      this.focusOnStop = false; // prevent to trigger map click and Select on routes at same time.\r\n    }, 500);\r\n  }\r\n\r\n  geolocateStop(index: number) {\r\n    moveToOlFeatures(this.map, [this.map.geolocationFeature], FeatureMotion.Move);\r\n    const geolocateCoordinates = this.map.viewController.getCenter(this.projection);\r\n    this.stops.at(index).patchValue({ stopCoordinates: geolocateCoordinates });\r\n    this.addStopOverlay(geolocateCoordinates, index);\r\n    this.handleLocationProposals(geolocateCoordinates, index);\r\n  }\r\n\r\n  public addStopOverlay(coordinates: [number, number], index: number) {\r\n    const directionsText = this.directionsText(index);\r\n    let stopColor;\r\n    let stopText;\r\n    if (directionsText === 'start') {\r\n      stopColor = 'green';\r\n      stopText = this.languageService.translate.instant(\r\n        'igo.geo.directionsForm.start'\r\n      );\r\n    } else if (directionsText === 'end') {\r\n      stopColor = 'red';\r\n      stopText = this.languageService.translate.instant(\r\n        'igo.geo.directionsForm.end'\r\n      );\r\n    } else {\r\n      stopColor = 'yellow';\r\n      stopText =\r\n        this.languageService.translate.instant(\r\n          'igo.geo.directionsForm.intermediate'\r\n        ) +\r\n        ' #' +\r\n        index;\r\n    }\r\n\r\n    const geometry = new olgeom.Point(\r\n      olproj.transform(coordinates, this.projection, this.map.projection)\r\n    );\r\n\r\n    const stopID = this.getStopOverlayID(index);\r\n    const geojsonGeom = new OlGeoJSON().writeGeometryObject(geometry, {\r\n      featureProjection: this.map.projection,\r\n      dataProjection: this.map.projection\r\n    });\r\n\r\n    const previousStop = this.stopsStore.get(stopID);\r\n    const previousStopRevision = previousStop ? previousStop.meta.revision : 0;\r\n\r\n    const stopFeature: Feature = {\r\n      type: FEATURE,\r\n      geometry: geojsonGeom,\r\n      projection: this.map.projection,\r\n      properties: {\r\n        id: stopID,\r\n        type: 'stop',\r\n        stopText,\r\n        stopColor,\r\n        stopOpacity: 1\r\n      },\r\n      meta: {\r\n        id: stopID,\r\n        revision: previousStopRevision + 1\r\n      },\r\n      ol: new olFeature({ geometry })\r\n    };\r\n\r\n    this.stopsStore.update(stopFeature);\r\n    this.getRoutes();\r\n\r\n  }\r\n\r\n  public getStopOverlayID(index: number): string {\r\n    let txt;\r\n    if (index === 0) {\r\n      txt = 'start';\r\n    } else if (index === this.stops.length - 1) {\r\n      txt = 'end';\r\n    } else {\r\n      txt = index;\r\n    }\r\n    return 'directionsStop_' + txt;\r\n  }\r\n\r\n  private deleteStoreFeatureByID(store, id) {\r\n    const entity = store.get(id);\r\n    if (entity) {\r\n      store.delete(entity);\r\n    }\r\n  }\r\n\r\n  private getUrl() {\r\n    if (!this.route) {\r\n      return;\r\n    }\r\n\r\n    const directionsKey = this.route.options.directionsCoordKey;\r\n    const stopsCoordinates = [];\r\n    if (\r\n      this.directionsFormService &&\r\n      this.directionsFormService.getStopsCoordinates() &&\r\n      this.directionsFormService.getStopsCoordinates().length !== 0\r\n    ) {\r\n      this.directionsFormService.getStopsCoordinates().forEach(coord => {\r\n        stopsCoordinates.push(roundCoordTo(coord, 6));\r\n      });\r\n    }\r\n    let directionsUrl = '';\r\n    if (stopsCoordinates.length >= 2) {\r\n      directionsUrl = `${directionsKey}=${stopsCoordinates.join(';')}`;\r\n    }\r\n\r\n    return `${location.origin}${\r\n      location.pathname\r\n    }?tool=directions&${directionsUrl}`;\r\n  }\r\n}\r\n\r\n/**\r\n * Create a style for the directions stops and routes\r\n * @param feature OlFeature\r\n * @returns OL style function\r\n */\r\nexport function stopMarker(feature: olFeature, resolution: number): olstyle.Style {\r\n\r\n  const vertexStyle = [\r\n    new olstyle.Style({\r\n      geometry: feature.getGeometry(),\r\n      image: new olstyle.Circle({\r\n        radius: 7,\r\n        stroke: new olstyle.Stroke({ color: '#FF0000', width: 3 })\r\n      })\r\n    })\r\n  ];\r\n\r\n  const stopStyle = new olstyle.Style({\r\n    image: new olstyle.Icon({\r\n      src: './assets/igo2/geo/icons/place_' + feature.get('stopColor') + '_36px.svg',\r\n      opacity : feature.get('stopOpacity'),\r\n      imgSize: [36, 36], // for ie\r\n      anchor: [0.5, 0.92]\r\n    }),\r\n\r\n    text: new olstyle.Text({\r\n      text: feature.get('stopText'),\r\n      font: '12px Calibri,sans-serif',\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 }),\r\n      overflow: true\r\n    })\r\n  });\r\n\r\n  const routeStyle = [\r\n    new olstyle.Style({\r\n      stroke: new olstyle.Stroke({ color: '#6a7982', width: 10, opacity: 0.75 })\r\n    }),\r\n    new olstyle.Style({\r\n      stroke: new olstyle.Stroke({ color: '#4fa9dd', width: 6, opacity: 0.75 })\r\n    })\r\n  ];\r\n\r\n  if (feature.get('type') === 'stop') {\r\n    return stopStyle;\r\n  }\r\n  if (feature.get('type') === 'vertex') {\r\n    return vertexStyle;\r\n  }\r\n  if (feature.get('type') === 'route') {\r\n    return routeStyle;\r\n  }\r\n\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  AfterViewInit,\r\n  Optional\r\n} from '@angular/core';\r\n\r\nimport { RouteService } from '@igo2/core';\r\n\r\nimport { DirectionsFormComponent } from './directions-form.component';\r\nimport { DirectionsFormService } from './directions-form.service';\r\n\r\n@Directive({\r\n  selector: '[igoDirectionsFormBinding]'\r\n})\r\nexport class DirectionsFormBindingDirective implements AfterViewInit {\r\n\r\n  constructor(\r\n    @Self() private component: DirectionsFormComponent,\r\n    private directionsFormService: DirectionsFormService,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    const storedStops = this.directionsFormService.getStops();\r\n    if (\r\n      !storedStops && this.route &&\r\n      this.route.options.directionsCoordKey\r\n    ) {\r\n      this.route.queryParams.subscribe(params => {\r\n        const directionsParams =\r\n          params[this.route.options.directionsCoordKey as string];\r\n        const stopsCoordinatesFromURL = [];\r\n        if (directionsParams) {\r\n          const directionsCoordUrl = directionsParams.split(';');\r\n          if (directionsCoordUrl.length >= 2) {\r\n            let cnt = 0;\r\n            directionsCoordUrl.forEach(coord => {\r\n              if (cnt !== 0 && cnt !== directionsCoordUrl.length - 1) {\r\n                this.component.stops.insert(cnt, this.component.createStop());\r\n              }\r\n\r\n              const stopCoordinatesFromURL = JSON.parse('[' + coord + ']');\r\n              this.component.stops\r\n                .at(cnt)\r\n                .patchValue({ stopCoordinates: stopCoordinatesFromURL });\r\n              this.component.stops\r\n                .at(cnt)\r\n                .patchValue({ stopPoint: stopCoordinatesFromURL });\r\n              this.component.handleLocationProposals(\r\n                stopCoordinatesFromURL,\r\n                cnt\r\n              );\r\n\r\n              stopsCoordinatesFromURL.push(stopCoordinatesFromURL);\r\n              this.component.addStopOverlay(stopCoordinatesFromURL, cnt);\r\n              cnt++;\r\n            });\r\n            this.component.getRoutes(true);\r\n          }\r\n        }\r\n      });\r\n    } else if (storedStops) {\r\n      for (let i = 0; i < storedStops.length; i++) {\r\n        if (i !== 0 && i !== storedStops.length - 1) {\r\n          this.component.stops.insert(i, this.component.createStop());\r\n        }\r\n        if (storedStops[i].stopCoordinates instanceof Array) {\r\n          this.component.addStopOverlay(storedStops[i].stopCoordinates, i);\r\n          this.component.stops.at(i).patchValue(storedStops[i] );\r\n        }\r\n      }\r\n      this.component.getRoutes();\r\n    }\r\n    this.component.writeStopsToFormService();\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatListModule,\r\n  MatDividerModule,\r\n  MatFormFieldModule,\r\n  MatInputModule,\r\n  MatOptionModule,\r\n  MatSelectModule,\r\n  MatTooltipModule,\r\n  MatAutocompleteModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { DirectionsFormComponent } from './directions-form/directions-form.component';\r\nimport { DirectionsFormBindingDirective } from './directions-form/directions-form-binding.directive';\r\nimport { DirectionsFormService } from './directions-form/directions-form.service';\r\nimport { provideDirectionsSourceService } from './shared/directions-source.service';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatDividerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatOptionModule,\r\n    MatSelectModule,\r\n    MatTooltipModule,\r\n    MatAutocompleteModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [DirectionsFormComponent, DirectionsFormBindingDirective],\r\n  declarations: [DirectionsFormComponent, DirectionsFormBindingDirective],\r\n  providers: [DirectionsFormService, provideDirectionsSourceService()]\r\n})\r\nexport class IgoDirectionsModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoDirectionsModule\r\n    };\r\n  }\r\n}\r\n","import { SearchSource } from './sources/source';\r\nimport { SearchSourceService } from './search-source.service';\r\n\r\n/**\r\n * Search source factory\r\n * @ignore\r\n */\r\nexport function searchSourceServiceFactory(sources: SearchSource[]) {\r\n  return new SearchSourceService(sources);\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the SearchSource service\r\n */\r\nexport function provideSearchSourceService() {\r\n  return {\r\n    provide: SearchSourceService,\r\n    useFactory: searchSourceServiceFactory,\r\n    deps: [SearchSource]\r\n  };\r\n}\r\n","import { Injectable, Inject, Injector } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, of, BehaviorSubject } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { AuthService } from '@igo2/auth';\r\nimport { LanguageService } from '@igo2/core';\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { FEATURE, Feature } from '../../../feature';\r\nimport { GoogleLinks } from './../../../utils/googleLinks';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch, ReverseSearch } from './source';\r\nimport {\r\n  SearchSourceOptions,\r\n  TextSearchOptions,\r\n  ReverseSearchOptions\r\n} from './source.interfaces';\r\nimport {\r\n  IChercheData,\r\n  IChercheResponse,\r\n  IChercheReverseData,\r\n  IChercheReverseResponse\r\n} from './icherche.interfaces';\r\n\r\n@Injectable()\r\nexport class IChercheSearchResultFormatter {\r\n  constructor(private languageService: LanguageService) {}\r\n\r\n  formatResult(result: SearchResult<Feature>): SearchResult<Feature> {\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * ICherche search source\r\n */\r\n@Injectable()\r\nexport class IChercheSearchSource extends SearchSource implements TextSearch {\r\n  static id = 'icherche';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = [];\r\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  private hashtagsLieuxToKeep = [];\r\n\r\n  get title(): string {\r\n    return this.title$.getValue();\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private languageService: LanguageService,\r\n    @Inject('options') options: SearchSourceOptions,\r\n    @Inject(IChercheSearchResultFormatter)\r\n    private formatter: IChercheSearchResultFormatter,\r\n    injector: Injector\r\n  ) {\r\n    super(options);\r\n\r\n    this.languageService.translate\r\n      .get(this.options.title)\r\n      .subscribe(title => this.title$.next(title));\r\n\r\n    const authService = injector.get(AuthService);\r\n    if (this.settings.length) {\r\n      if (!authService) {\r\n        this.getAllowedTypes();\r\n      } else {\r\n        authService.authenticate$.subscribe(() => {\r\n          this.getAllowedTypes();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getId(): string {\r\n    return IChercheSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return IChercheSearchSource.type;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    const limit =\r\n      this.options.params && this.options.params.limit\r\n        ? Number(this.options.params.limit)\r\n        : undefined;\r\n    const ecmax =\r\n      this.options.params && this.options.params.ecmax\r\n        ? Number(this.options.params.ecmax)\r\n        : undefined;\r\n    const types =\r\n      this.options.params && this.options.params.type\r\n        ? this.options.params.type\r\n            .replace(/\\s/g, '')\r\n            .toLowerCase()\r\n            .split(',')\r\n        : [\r\n            'adresses',\r\n            'codes-postaux',\r\n            'routes',\r\n            'municipalites',\r\n            'mrc',\r\n            'regadmin',\r\n            'lieux'\r\n          ];\r\n    return {\r\n      title: 'igo.geo.search.icherche.name',\r\n      searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/icherche',\r\n      settings: [\r\n        {\r\n          type: 'checkbox',\r\n          title: 'results type',\r\n          name: 'type',\r\n          values: [\r\n            {\r\n              title: 'igo.geo.search.icherche.type.address',\r\n              value: 'adresses',\r\n              enabled: types.indexOf('adresses') !== -1,\r\n              hashtags: ['adresse']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.oldAddress',\r\n              value: 'anciennes-adresses',\r\n              enabled: types.indexOf('anciennes-adresses') !== -1,\r\n              hashtags: ['anciennes-adresses']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.postalCode',\r\n              value: 'codes-postaux',\r\n              enabled: types.indexOf('codes-postaux') !== -1,\r\n              hashtags: ['code-postal']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.road',\r\n              value: 'routes',\r\n              enabled: types.indexOf('routes') !== -1,\r\n              hashtags: ['route']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.city',\r\n              value: 'municipalites',\r\n              enabled: types.indexOf('municipalites') !== -1,\r\n              hashtags: ['municipalitÃ©', 'mun']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.oldCity',\r\n              value: 'anciennes-municipalites',\r\n              enabled: types.indexOf('anciennes-municipalites') !== -1,\r\n              hashtags: ['anciennes-municipalites']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.mrc',\r\n              value: 'mrc',\r\n              enabled: types.indexOf('mrc') !== -1,\r\n              hashtags: ['mrc']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.regadmin',\r\n              value: 'regadmin',\r\n              enabled: types.indexOf('regadmin') !== -1,\r\n              hashtags: ['rÃ©gion-administrative', 'regadmin']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.entreprise',\r\n              value: 'entreprises',\r\n              enabled: types.indexOf('entreprises') !== -1,\r\n              available: false,\r\n              hashtags: ['entreprise']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.place',\r\n              value: 'lieux',\r\n              enabled: types.indexOf('lieux') !== -1,\r\n              hashtags: ['lieu']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.sumi',\r\n              value: 'bornes-sumi',\r\n              enabled: types.indexOf('bornes-sumi') !== -1,\r\n              hashtags: ['borne', 'bornes', 'sumi']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.km',\r\n              value: 'bornes-km',\r\n              enabled: false,\r\n              hashtags: ['borne', 'bornes', 'repÃ¨re', 'km']\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'results limit',\r\n          name: 'limit',\r\n          values: [\r\n            {\r\n              title: '1',\r\n              value: 1,\r\n              enabled: limit === 1\r\n            },\r\n            {\r\n              title: '5',\r\n              value: 5,\r\n              enabled: limit === 5 || !limit\r\n            },\r\n            {\r\n              title: '10',\r\n              value: 10,\r\n              enabled: limit === 10\r\n            },\r\n            {\r\n              title: '25',\r\n              value: 25,\r\n              enabled: limit === 25\r\n            },\r\n            {\r\n              title: '50',\r\n              value: 50,\r\n              enabled: limit === 50\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'ecmax',\r\n          name: 'ecmax',\r\n          values: [\r\n            {\r\n              title: '10 %',\r\n              value: 10,\r\n              enabled: ecmax === 10\r\n            },\r\n            {\r\n              title: '30 %',\r\n              value: 30,\r\n              enabled: ecmax === 30 || !ecmax\r\n            },\r\n            {\r\n              title: '50 %',\r\n              value: 50,\r\n              enabled: ecmax === 50\r\n            },\r\n            {\r\n              title: '75 %',\r\n              value: 75,\r\n              enabled: ecmax === 75\r\n            },\r\n            {\r\n              title: '100 %',\r\n              value: 100,\r\n              enabled: ecmax === 100\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'restrictExtent',\r\n          name: 'loc',\r\n          values: [\r\n            {\r\n              title: 'igo.geo.search.icherche.restrictExtent.map',\r\n              value: 'true',\r\n              enabled: false\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.restrictExtent.quebec',\r\n              value: 'false',\r\n              enabled: true\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by name or keyword\r\n   * @param term Location name or keyword\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  search(\r\n    term: string,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeRequestParams(term, options || {});\r\n    if (!params.get('type').length) {\r\n      return of([]);\r\n    }\r\n    this.options.params.page = params.get('page') || '1';\r\n\r\n    return this.http.get(`${this.searchUrl}/geocode`, { params }).pipe(\r\n      map((response: IChercheResponse) => this.extractResults(response)),\r\n      catchError(err => {\r\n        err.error.toDisplay = true;\r\n        err.error.title = this.languageService.translate.instant(\r\n          this.getDefaultOptions().title\r\n        );\r\n        throw err;\r\n      })\r\n    );\r\n  }\r\n\r\n  private getAllowedTypes() {\r\n    return this.http\r\n      .get(`${this.searchUrl}/types`)\r\n      .subscribe((types: string[]) => {\r\n        const typeSetting = this.settings.find(s => s.name === 'type');\r\n        typeSetting.values.forEach(v => {\r\n          const regex = new RegExp(`^${v.value}(\\\\.|$)`);\r\n          const typesMatched = types.filter(value => regex.test(value));\r\n          v.available = typesMatched.length > 0;\r\n          if (v.value === 'lieux') {\r\n            this.hashtagsLieuxToKeep = [\r\n              ...(new Set(\r\n                typesMatched\r\n                  .map(t => t.split('.'))\r\n                  .reduce((a, b) => a.concat(b))\r\n                  .filter(t => t !== 'lieux')\r\n              ) as any)\r\n            ];\r\n          }\r\n        });\r\n      });\r\n  }\r\n\r\n  private computeRequestParams(\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): HttpParams {\r\n    const queryParams: any = Object.assign(\r\n      {\r\n        geometry: true,\r\n        bbox: true,\r\n        icon: true,\r\n        type:\r\n          'adresses,codes-postaux,municipalites,mrc,regadmin,lieux,entreprises,bornes-sumi'\r\n      },\r\n      this.params,\r\n      this.computeOptionsParam(term, options || {}).params,\r\n      {\r\n        q: this.computeTerm(term),\r\n        page: options.page\r\n      }\r\n    );\r\n\r\n    if (queryParams.loc === 'true') {\r\n      const [xMin, yMin, xMax, yMax] = options.extent;\r\n      queryParams.loc = `${xMin},${yMin};${xMax},${yMin};${xMax},${yMax};${xMin},${yMax};${xMin},${yMin}`;\r\n    } else if (queryParams.loc === 'false') {\r\n      delete queryParams.loc;\r\n    }\r\n\r\n    if (queryParams.q.indexOf('#') !== -1) {\r\n      queryParams.type = 'lieux';\r\n    }\r\n\r\n    return new HttpParams({ fromObject: ObjectUtils.removeUndefined(queryParams) });\r\n  }\r\n\r\n  private extractResults(response: IChercheResponse): SearchResult<Feature>[] {\r\n    return response.features.map((data: IChercheData) => {\r\n      return this.formatter.formatResult(this.dataToResult(data, response));\r\n    });\r\n  }\r\n\r\n  private dataToResult(data: IChercheData, response?: IChercheResponse): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const id = [this.getId(), properties.type, properties.code].join('.');\r\n\r\n    const titleHtml = data.highlight.title || data.properties.nom;\r\n    const subtitleHtml = data.highlight.title2\r\n      ? ' <small> ' + data.highlight.title2 + '</small>'\r\n      : '';\r\n    const subtitleHtml2 = data.highlight.title3\r\n      ? '<br><small> ' + data.highlight.title3 + '</small>'\r\n      : '';\r\n\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        extent: data.bbox,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties.nom\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties.nom,\r\n        titleHtml: titleHtml + subtitleHtml + subtitleHtml2,\r\n        icon: data.icon || 'map-marker',\r\n        nextPage: response.features.length % +this.options.params.limit === 0 && +this.options.params.page < 10\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: IChercheData): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      IChercheSearchSource.propertiesBlacklist\r\n    );\r\n\r\n    if (data.geometry === undefined) {\r\n      return Object.assign({ type: data.index }, properties);\r\n    }\r\n\r\n    const googleLinksProperties: {\r\n      GoogleMaps: string;\r\n      GoogleStreetView?: string;\r\n    } = {\r\n      GoogleMaps: GoogleLinks.getGoogleMapsLink(\r\n        data.geometry.coordinates[0],\r\n        data.geometry.coordinates[1]\r\n      )\r\n    };\r\n    if (data.geometry.type === 'Point') {\r\n      googleLinksProperties.GoogleStreetView = GoogleLinks.getGoogleStreetViewLink(\r\n        data.geometry.coordinates[0],\r\n        data.geometry.coordinates[1]\r\n      );\r\n    }\r\n\r\n    return Object.assign(\r\n      { type: data.index },\r\n      properties,\r\n      googleLinksProperties\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Remove hashtag from query\r\n   * @param term Query with hashtag\r\n   */\r\n  private computeTerm(term: string): string {\r\n    // Keep hashtags for \"lieux\"\r\n    const hashtags = term.match(/(#[^\\s]+)/g) || [];\r\n    let keep = false;\r\n    keep = hashtags.some(hashtag => {\r\n      const hashtagKey = hashtag.substring(1);\r\n      return this.hashtagsLieuxToKeep.some(\r\n        h =>\r\n          h\r\n            .toLowerCase()\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '') ===\r\n          hashtagKey\r\n            .toLowerCase()\r\n            .normalize('NFD')\r\n            .replace(/[\\u0300-\\u036f]/g, '')\r\n      );\r\n    });\r\n\r\n    if (!keep) {\r\n      term = term.replace(/(#[^\\s]*)/g, '');\r\n    }\r\n\r\n    return term.replace(/[^\\wÃ-Ã¿ !\\-\\(\\),'#]+/g, '');\r\n  }\r\n\r\n  /**\r\n   * Add hashtag to param if valid\r\n   * @param term Query with hashtag\r\n   * @param options TextSearchOptions\r\n   */\r\n  private computeOptionsParam(\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): TextSearchOptions {\r\n    const hashtags = super.getHashtagsValid(term, 'type');\r\n    if (hashtags) {\r\n      options.params = Object.assign(options.params || {}, {\r\n        type: hashtags.join(',')\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n}\r\n\r\n/**\r\n * IChercheReverse search source\r\n */\r\n@Injectable()\r\nexport class IChercheReverseSearchSource extends SearchSource\r\n  implements ReverseSearch {\r\n  static id = 'icherchereverse';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = [];\r\n\r\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  get title(): string {\r\n    return this.title$.getValue();\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private languageService: LanguageService,\r\n    @Inject('options') options: SearchSourceOptions,\r\n    injector: Injector\r\n  ) {\r\n    super(options);\r\n\r\n    this.languageService.translate\r\n      .get(this.options.title)\r\n      .subscribe(title => this.title$.next(title));\r\n\r\n    const authService = injector.get(AuthService);\r\n    if (this.settings.length) {\r\n      if (!authService) {\r\n        this.getAllowedTypes();\r\n      } else {\r\n        authService.authenticate$.subscribe(() => {\r\n          this.getAllowedTypes();\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  getId(): string {\r\n    return IChercheReverseSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return IChercheReverseSearchSource.type;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    const types =\r\n      this.options.params && this.options.params.type\r\n        ? this.options.params.type\r\n            .replace(/\\s/g, '')\r\n            .toLowerCase()\r\n            .split(',')\r\n        : ['adresses', 'municipalites', 'mrc', 'regadmin'];\r\n\r\n    return {\r\n      title: 'igo.geo.search.ichercheReverse.name',\r\n      searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/terrapi',\r\n      settings: [\r\n        {\r\n          type: 'checkbox',\r\n          title: 'results type',\r\n          name: 'type',\r\n          values: [\r\n            {\r\n              title: 'igo.geo.search.icherche.type.address',\r\n              value: 'adresses',\r\n              enabled: types.indexOf('adresses') !== -1\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.road',\r\n              value: 'routes',\r\n              enabled: types.indexOf('routes') !== -1,\r\n              available: false\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.district',\r\n              value: 'arrondissements',\r\n              enabled: types.indexOf('arrondissements') !== -1\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.city',\r\n              value: 'municipalites',\r\n              enabled: types.indexOf('municipalites') !== -1\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.mrc',\r\n              value: 'mrc',\r\n              enabled: types.indexOf('mrc') !== -1\r\n            },\r\n            {\r\n              title: 'igo.geo.search.icherche.type.regadmin',\r\n              value: 'regadmin',\r\n              enabled: types.indexOf('regadmin') !== -1\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'radius',\r\n          name: 'buffer',\r\n          values: [\r\n            {\r\n              title: '100 m',\r\n              value: 100,\r\n              enabled: !this.options.distance || this.options.distance === 100\r\n            },\r\n            {\r\n              title: '500 m',\r\n              value: 500,\r\n              enabled: this.options.distance === 500\r\n            },\r\n            {\r\n              title: '1 km',\r\n              value: 1000,\r\n              enabled: this.options.distance === 1000\r\n            },\r\n            {\r\n              title: '2 km',\r\n              value: 2000,\r\n              enabled: this.options.distance === 2000\r\n            },\r\n            {\r\n              title: '5 km',\r\n              value: 5000,\r\n              enabled: this.options.distance === 5000\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by coordinates\r\n   * @param lonLat Location coordinates\r\n   * @param distance Search raidus around lonLat\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeRequestParams(lonLat, options || {});\r\n    if (!params.get('type').length) {\r\n      return of([]);\r\n    }\r\n    return this.http.get(`${this.searchUrl}/locate`, { params }).pipe(\r\n      map((response: IChercheReverseResponse) => {\r\n        return this.extractResults(response);\r\n      })\r\n    );\r\n  }\r\n\r\n  private getAllowedTypes() {\r\n    return this.http\r\n      .get(`${this.searchUrl}/types`)\r\n      .subscribe((types: string[]) => {\r\n        const typeSetting = this.settings.find(s => s.name === 'type');\r\n        typeSetting.values.forEach(v => {\r\n          v.available = types.indexOf(v.value as string) > -1;\r\n        });\r\n      });\r\n  }\r\n\r\n  private computeRequestParams(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): HttpParams {\r\n    if (options.distance || this.options.distance) {\r\n      options.params = Object.assign(options.params || {}, {\r\n        buffer: options.distance || this.options.distance\r\n      });\r\n    }\r\n\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          loc: lonLat.join(','),\r\n          sort: 'distance',\r\n          geometry: true,\r\n          icon: true\r\n        },\r\n        options.params || {},\r\n        this.params\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(\r\n    response: IChercheReverseResponse\r\n  ): SearchResult<Feature>[] {\r\n    return response.features.map((data: IChercheReverseData) => {\r\n      return this.dataToResult(data);\r\n    });\r\n  }\r\n\r\n  private getSubtitle(data: IChercheReverseData) {\r\n    if (!this.settings.length) {\r\n      return '';\r\n    }\r\n    let subtitle = '';\r\n    switch (data.properties.type) {\r\n      case 'arrondissements':\r\n        subtitle = data.properties.municipalite + ' (Arrondissement)';\r\n        break;\r\n      default:\r\n        const typeSetting = this.settings.find(s => s.name === 'type');\r\n        const type = typeSetting.values.find(\r\n          t => t.value === data.properties.type\r\n        );\r\n        if (type) {\r\n          subtitle = this.languageService.translate.instant(type.title);\r\n        }\r\n    }\r\n    return subtitle;\r\n  }\r\n\r\n  private dataToResult(data: IChercheReverseData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const extent = this.computeExtent(data);\r\n    const id = [this.getId(), properties.type, properties.code].join('.');\r\n\r\n    const titleHtml = data.properties.nom;\r\n    const subtitleHtml = ' <small> ' + this.getSubtitle(data) + '</small>';\r\n\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        extent,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties.nom\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties.nom,\r\n        titleHtml: titleHtml + subtitleHtml,\r\n        icon: data.icon || 'map-marker'\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: IChercheReverseData): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      IChercheReverseSearchSource.propertiesBlacklist\r\n    );\r\n    return properties;\r\n  }\r\n\r\n  private computeExtent(\r\n    data: IChercheReverseData\r\n  ): [number, number, number, number] | undefined {\r\n    return data.bbox\r\n      ? [data.bbox[0], data.bbox[2], data.bbox[1], data.bbox[3]]\r\n      : undefined;\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport {\r\n  IChercheSearchSource,\r\n  IChercheSearchResultFormatter,\r\n  IChercheReverseSearchSource\r\n} from './icherche';\r\n\r\n/**\r\n * ICherche search result formatter factory\r\n * @ignore\r\n */\r\nexport function defaultIChercheSearchResultFormatterFactory(\r\n  languageService: LanguageService\r\n) {\r\n  return new IChercheSearchResultFormatter(languageService);\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ICherche search result formatter\r\n */\r\nexport function provideDefaultIChercheSearchResultFormatter() {\r\n  return {\r\n    provide: IChercheSearchResultFormatter,\r\n    useFactory: defaultIChercheSearchResultFormatterFactory,\r\n    deps: [LanguageService]\r\n  };\r\n}\r\n\r\n/**\r\n * ICherche search source factory\r\n * @ignore\r\n */\r\nexport function ichercheSearchSourceFactory(\r\n  http: HttpClient,\r\n  languageService: LanguageService,\r\n  config: ConfigService,\r\n  formatter: IChercheSearchResultFormatter,\r\n  injector: Injector\r\n) {\r\n  return new IChercheSearchSource(\r\n    http,\r\n    languageService,\r\n    config.getConfig(`searchSources.${IChercheSearchSource.id}`),\r\n    formatter,\r\n    injector\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ICherche search source\r\n */\r\nexport function provideIChercheSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: ichercheSearchSourceFactory,\r\n    multi: true,\r\n    deps: [\r\n      HttpClient,\r\n      LanguageService,\r\n      ConfigService,\r\n      IChercheSearchResultFormatter,\r\n      Injector\r\n    ]\r\n  };\r\n}\r\n\r\n/**\r\n * IChercheReverse search source factory\r\n * @ignore\r\n */\r\nexport function ichercheReverseSearchSourceFactory(\r\n  http: HttpClient,\r\n  languageService: LanguageService,\r\n  config: ConfigService,\r\n  injector: Injector\r\n) {\r\n  return new IChercheReverseSearchSource(\r\n    http,\r\n    languageService,\r\n    config.getConfig(`searchSources.${IChercheReverseSearchSource.id}`),\r\n    injector\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the IChercheReverse search source\r\n */\r\nexport function provideIChercheReverseSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: ichercheReverseSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, LanguageService, ConfigService, Injector]\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { Observable, BehaviorSubject, of } from 'rxjs';\r\n\r\nimport { FEATURE, Feature } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, ReverseSearch } from './source';\r\nimport { SearchSourceOptions, TextSearchOptions } from './source.interfaces';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\nimport { GoogleLinks } from '../../../utils/googleLinks';\r\nimport { Projection } from '../../../map/shared/projection.interfaces';\r\nimport { lonLatConversion, roundCoordTo } from '../../../map/shared/map.utils';\r\nimport { OsmLinks } from '../../../utils';\r\n\r\n@Injectable()\r\nexport class CoordinatesSearchResultFormatter {\r\n  constructor(private languageService: LanguageService) {}\r\n\r\n  formatResult(result: SearchResult<Feature>): SearchResult<Feature> {\r\n    return result;\r\n  }\r\n}\r\n/**\r\n * CoordinatesReverse search source\r\n */\r\n@Injectable()\r\nexport class CoordinatesReverseSearchSource extends SearchSource\r\n  implements ReverseSearch {\r\n  static id = 'coordinatesreverse';\r\n  static type = FEATURE;\r\n\r\n  private projections;\r\n\r\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  get title(): string {\r\n    return this.title$.getValue();\r\n  }\r\n\r\n  constructor(\r\n    @Inject('options') options: SearchSourceOptions,\r\n    private languageService: LanguageService,\r\n    @Inject('projections') projections: Projection[],\r\n  ) {\r\n    super(options);\r\n    this.projections = projections;\r\n    this.languageService.translate\r\n      .get(this.options.title)\r\n      .subscribe(title => this.title$.next(title));\r\n  }\r\n\r\n  getId(): string {\r\n    return CoordinatesReverseSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return CoordinatesReverseSearchSource.type;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'igo.geo.search.coordinates.name',\r\n      order: 1,\r\n      showInSettings: false\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by coordinates\r\n   * @param lonLat Location coordinates\r\n   * @param distance Search raidus around lonLat\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    return of([this.dataToResult(lonLat)]);\r\n  }\r\n\r\n  private dataToResult(data: [number, number]): SearchResult<Feature> {\r\n    const convertedCoord = lonLatConversion(data, this.projections);\r\n    const coords = convertedCoord.reduce((obj, item) => (\r\n      obj[item.alias] = item.igo2CoordFormat, obj), {});\r\n\r\n    const roundedCoordString = roundCoordTo(data, 6).join(', ');\r\n\r\n    const coordKey =  this.languageService.translate.instant('igo.geo.search.coordinates.coord');\r\n    const coordLonLat = {};\r\n    coordLonLat[coordKey] = roundedCoordString;\r\n\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: {\r\n          type: 'Point',\r\n          coordinates: [data[0], data[1]]\r\n        },\r\n        extent: undefined,\r\n        properties: Object.assign({},\r\n          coordLonLat,\r\n          coords,\r\n          {\r\n            GoogleMaps: GoogleLinks.getGoogleMapsLink(data[0], data[1]),\r\n            GoogleStreetView: GoogleLinks.getGoogleStreetViewLink(\r\n              data[0],\r\n              data[1]\r\n            ),\r\n            OpenStreetMap: OsmLinks.getOpenStreetMapLink(data[0], data[1], 14)\r\n          }),\r\n        meta: {\r\n          id: data[0].toString() + ',' + data[1].toString(),\r\n          title: roundedCoordString\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id: data[0].toString() + ',' + data[1].toString(),\r\n        title: roundedCoordString,\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport {\r\n  CoordinatesReverseSearchSource,\r\n  CoordinatesSearchResultFormatter\r\n} from './coordinates';\r\nimport { Projection } from '../../../map/shared/projection.interfaces';\r\n\r\n/**\r\n * ICherche search result formatter factory\r\n * @ignore\r\n */\r\nexport function defaultCoordinatesSearchResultFormatterFactory(\r\n  languageService: LanguageService\r\n) {\r\n  return new CoordinatesSearchResultFormatter(languageService);\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ICherche search result formatter\r\n */\r\nexport function provideDefaultCoordinatesSearchResultFormatter() {\r\n  return {\r\n    provide: CoordinatesSearchResultFormatter,\r\n    useFactory: defaultCoordinatesSearchResultFormatterFactory,\r\n    deps: [LanguageService]\r\n  };\r\n}\r\n\r\n/**\r\n * CoordinatesReverse search source factory\r\n * @ignore\r\n */\r\nexport function CoordinatesReverseSearchSourceFactory(\r\n  config: ConfigService,\r\n  languageService: LanguageService\r\n) {\r\n  return new CoordinatesReverseSearchSource(\r\n    config.getConfig(`searchSources.${CoordinatesReverseSearchSource.id}`),\r\n    languageService,\r\n    config.getConfig('projections') as Projection[] || []\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the IChercheReverse search source\r\n */\r\nexport function provideCoordinatesReverseSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: CoordinatesReverseSearchSourceFactory,\r\n    multi: true,\r\n    deps: [ConfigService, LanguageService]\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, BehaviorSubject, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\nimport { ObjectUtils } from '@igo2/utils';\r\n\r\nimport { getResolutionFromScale } from '../../../map/shared/map.utils';\r\nimport { LAYER } from '../../../layer';\r\nimport { QueryableDataSourceOptions, QueryFormat } from '../../../query';\r\nimport { QueryHtmlTarget } from './../../../query/shared/query.enums';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch } from './source';\r\nimport { TextSearchOptions } from './source.interfaces';\r\nimport {\r\n  ILayerSearchSourceOptions,\r\n  ILayerData,\r\n  ILayerItemResponse,\r\n  ILayerServiceResponse,\r\n  ILayerDataSource\r\n} from './ilayer.interfaces';\r\n\r\n@Injectable()\r\nexport class ILayerSearchResultFormatter {\r\n  constructor(private languageService: LanguageService) {}\r\n\r\n  formatResult(data: ILayerData): ILayerData {\r\n    const allowedKey = ['title', 'abstract', 'groupTitle', 'metadataUrl'];\r\n\r\n    const property = Object.entries(data.properties)\r\n      .filter(([key]) => allowedKey.indexOf(key) !== -1)\r\n      .reduce((out: { [key: string]: any }, entries: [string, any]) => {\r\n        const [key, value] = entries;\r\n        let newKey;\r\n        try {\r\n          newKey = this.languageService.translate.instant(\r\n            'igo.geo.search.ilayer.properties.' + key\r\n          );\r\n        } catch (e) {\r\n          newKey = key;\r\n        }\r\n        out[newKey] = value ? value : '';\r\n        return out;\r\n      }, {});\r\n\r\n    const dataR = Object.assign({}, data);\r\n    dataR.properties = property as ILayerDataSource;\r\n\r\n    return dataR;\r\n  }\r\n}\r\n\r\n/**\r\n * ILayer search source\r\n */\r\n@Injectable()\r\nexport class ILayerSearchSource extends SearchSource implements TextSearch {\r\n  static id = 'ilayer';\r\n  static type = LAYER;\r\n\r\n  title$: BehaviorSubject<string> = new BehaviorSubject<string>('');\r\n\r\n  get title(): string {\r\n    return this.title$.getValue();\r\n  }\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private languageService: LanguageService,\r\n    @Inject('options') options: ILayerSearchSourceOptions,\r\n    @Inject(ILayerSearchResultFormatter)\r\n    private formatter: ILayerSearchResultFormatter\r\n  ) {\r\n    super(options);\r\n    this.languageService.translate\r\n      .get(this.options.title)\r\n      .subscribe(title => this.title$.next(title));\r\n  }\r\n\r\n  getId(): string {\r\n    return ILayerSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return ILayerSearchSource.type;\r\n  }\r\n\r\n  protected getDefaultOptions(): ILayerSearchSourceOptions {\r\n    const limit =\r\n      this.options.params && this.options.params.limit\r\n        ? Number(this.options.params.limit)\r\n        : undefined;\r\n    return {\r\n      title: 'igo.geo.search.ilayer.name',\r\n      searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/layers/search',\r\n      settings: [\r\n        {\r\n          type: 'checkbox',\r\n          title: 'results type',\r\n          name: 'type',\r\n          values: [\r\n            {\r\n              title: 'igo.geo.search.ilayer.type.layer',\r\n              value: 'layer',\r\n              enabled: true,\r\n              hashtags: ['layer', 'layers', 'couche', 'couches']\r\n            },\r\n            {\r\n              title: 'igo.geo.search.ilayer.type.groupLayer',\r\n              value: 'group',\r\n              enabled: false,\r\n              hashtags: ['gr-layer', 'gr-layers', 'gr-couche', 'gr-couches']\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'results limit',\r\n          name: 'limit',\r\n          values: [\r\n            {\r\n              title: '1',\r\n              value: 1,\r\n              enabled: limit === 1\r\n            },\r\n            {\r\n              title: '5',\r\n              value: 5,\r\n              enabled: limit === 5 || !limit\r\n            },\r\n            {\r\n              title: '10',\r\n              value: 10,\r\n              enabled: limit === 10\r\n            },\r\n            {\r\n              title: '25',\r\n              value: 25,\r\n              enabled: limit === 25\r\n            },\r\n            {\r\n              title: '50',\r\n              value: 50,\r\n              enabled: limit === 50\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a layer by name or keyword\r\n   * @param term Layer name or keyword\r\n   * @returns Observable of <SearchResult<LayerOptions>[]\r\n   */\r\n  search(\r\n    term: string | undefined,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<ILayerItemResponse>[]> {\r\n    const params = this.computeSearchRequestParams(term, options || {});\r\n    if (!params.get('q') ||Â !params.get('type')) {\r\n      return of([]);\r\n    }\r\n    this.options.params.page = params.get('page') || '1';\r\n\r\n    return this.http\r\n      .get(this.searchUrl, { params })\r\n      .pipe(\r\n        map((response: ILayerServiceResponse) => this.extractResults(response))\r\n      );\r\n  }\r\n\r\n  private computeSearchRequestParams(\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: ObjectUtils.removeUndefined(Object.assign(\r\n        {\r\n          q: this.computeTerm(term)\r\n        },\r\n        this.params,\r\n        this.computeOptionsParam(term, options || {}).params,\r\n        {\r\n          page: options.page\r\n        }\r\n      )\r\n    )});\r\n  }\r\n\r\n  /**\r\n   * Remove hashtag from query\r\n   * @param term Query with hashtag\r\n   */\r\n  private computeTerm(term: string): string {\r\n    return term.replace(/(#[^\\s]*)/g, '').replace(/[^\\wÃ-Ã¿ !\\-\\(\\),'#]+/g, '');\r\n  }\r\n\r\n  /**\r\n   * Add hashtag to param if valid\r\n   * @param term Query with hashtag\r\n   * @param options TextSearchOptions\r\n   */\r\n  private computeOptionsParam(\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): TextSearchOptions {\r\n    const hashtags = super.getHashtagsValid(term, 'type');\r\n    if (hashtags) {\r\n      options.params = Object.assign(options.params || {}, {\r\n        type: hashtags.join(',')\r\n      });\r\n    }\r\n\r\n    return options;\r\n  }\r\n\r\n  private extractResults(\r\n    response: ILayerServiceResponse\r\n  ): SearchResult<ILayerItemResponse>[] {\r\n    return response.items.map((data: ILayerData) => this.dataToResult(data, response));\r\n  }\r\n\r\n  private dataToResult(data: ILayerData, response?: ILayerServiceResponse): SearchResult<ILayerItemResponse> {\r\n    const layerOptions = this.computeLayerOptions(data);\r\n\r\n    const titleHtml = data.highlight.title || data.properties.title;\r\n    const groupTitle = data.highlight.groupTitle || data.properties.groupTitle;\r\n    const subtitleHtml = groupTitle\r\n      ? ' <small style=\"color: #6f6969\"> ' + groupTitle + '</small>'\r\n      : '';\r\n\r\n    return {\r\n      source: this,\r\n      meta: {\r\n        dataType: LAYER,\r\n        id: [this.getId(), data.properties.id].join('.'),\r\n        title: data.properties.title,\r\n        titleHtml: titleHtml + subtitleHtml,\r\n        icon: data.properties.type === 'Layer' ? 'layers' : 'map',\r\n        nextPage: response.items.length % +this.options.params.limit === 0 && +this.options.params.page < 10\r\n      },\r\n      data: layerOptions\r\n    };\r\n  }\r\n\r\n  private computeLayerOptions(data: ILayerData): ILayerItemResponse {\r\n    const url = data.properties.url;\r\n    const queryParams: QueryableDataSourceOptions = this.extractQueryParamsFromSourceUrl(\r\n      url\r\n    );\r\n    return {\r\n      sourceOptions: {\r\n        id: data.properties.id,\r\n        crossOrigin: 'anonymous',\r\n        type: data.properties.format,\r\n        url,\r\n        queryFormat: queryParams.queryFormat,\r\n        queryHtmlTarget: queryParams.queryHtmlTarget,\r\n        queryable: data.properties.queryable,\r\n        params: {\r\n          LAYERS: data.properties.name\r\n        }\r\n      },\r\n      title: data.properties.title,\r\n      maxResolution:\r\n        getResolutionFromScale(Number(data.properties.maxScaleDenom)) ||\r\n        Infinity,\r\n      minResolution:\r\n        getResolutionFromScale(Number(data.properties.minScaleDenom)) || 0,\r\n      metadata: {\r\n        url: data.properties.metadataUrl,\r\n        extern: true\r\n      },\r\n      properties: this.formatter.formatResult(data).properties\r\n    };\r\n  }\r\n\r\n  private extractQueryParamsFromSourceUrl(\r\n    url: string\r\n  ): { queryFormat: QueryFormat; queryHtmlTarget: QueryHtmlTarget } {\r\n    let queryFormat = QueryFormat.GML2;\r\n    let queryHtmlTarget;\r\n    const formatOpt = (this.options as ILayerSearchSourceOptions).queryFormat;\r\n    if (formatOpt) {\r\n      for (const key of Object.keys(formatOpt)) {\r\n        const value = formatOpt[key];\r\n        if (value === '*') {\r\n          queryFormat = QueryFormat[key.toUpperCase()];\r\n          break;\r\n        }\r\n\r\n        const urls = ((value as any) as { urls: string[] }).urls;\r\n        if (Array.isArray(urls)) {\r\n          urls.forEach(urlOpt => {\r\n            if (url.indexOf(urlOpt) !== -1) {\r\n              queryFormat = QueryFormat[key.toUpperCase()];\r\n            }\r\n          });\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (queryFormat === QueryFormat.HTML) {\r\n      queryHtmlTarget = 'iframe';\r\n    }\r\n\r\n    return {\r\n      queryFormat,\r\n      queryHtmlTarget\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService, LanguageService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport { ILayerSearchSource, ILayerSearchResultFormatter } from './ilayer';\r\n\r\n/**\r\n * ILayer search result formatter factory\r\n * @ignore\r\n */\r\nexport function ilayerSearchResultFormatterFactory(\r\n  languageService: LanguageService\r\n) {\r\n  return new ILayerSearchResultFormatter(languageService);\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ILayer search result formatter\r\n */\r\nexport function provideILayerSearchResultFormatter() {\r\n  return {\r\n    provide: ILayerSearchResultFormatter,\r\n    useFactory: ilayerSearchResultFormatterFactory,\r\n    deps: [LanguageService]\r\n  };\r\n}\r\n\r\n/**\r\n * ILayer search source factory\r\n * @ignore\r\n */\r\nexport function ilayerSearchSourceFactory(\r\n  http: HttpClient,\r\n  languageService: LanguageService,\r\n  config: ConfigService,\r\n  formatter: ILayerSearchResultFormatter\r\n) {\r\n  return new ILayerSearchSource(\r\n    http,\r\n    languageService,\r\n    config.getConfig(`searchSources.${ILayerSearchSource.id}`),\r\n    formatter\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the ILayer search source\r\n */\r\nexport function provideILayerSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: ilayerSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, LanguageService, ConfigService, ILayerSearchResultFormatter]\r\n  };\r\n}\r\n","import { FEATURE } from '../../feature';\r\nimport { LAYER } from '../../layer';\r\n\r\nexport const SEARCH_TYPES = [FEATURE, LAYER];\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { BehaviorSubject, Subscription } from 'rxjs';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { SEARCH_TYPES } from '../shared/search.enums';\r\nimport { SearchSourceService } from '../shared/search-source.service';\r\n\r\n/**\r\n * This component allows a user to select a search type yo enable. In it's\r\n * current version, only one search type can be selected at once (radio). If\r\n * this component were to support more than one search source enabled (checkbox),\r\n * the searchbar component would require a small change to it's\r\n * placeholder getter. The search source service already supports having\r\n * more than one search source enabled.\r\n */\r\n@Component({\r\n  selector: 'igo-search-selector',\r\n  templateUrl: './search-selector.component.html',\r\n  styleUrls: ['./search-selector.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchSelectorComponent implements OnInit, OnDestroy {\r\n\r\n  readonly searchType$: BehaviorSubject<string> = new BehaviorSubject(undefined);\r\n\r\n  /**\r\n   * Subscription to the search type\r\n   */\r\n  private searchType$$: Subscription;\r\n\r\n  /**\r\n   * List of available search types\r\n   */\r\n  @Input() searchTypes: string[] = SEARCH_TYPES;\r\n\r\n  /**\r\n   * The search type enabled\r\n   */\r\n  @Input()\r\n  set searchType(value: string) { this.setSearchType(value); }\r\n  get searchType(): string { return this.searchType$.value; }\r\n\r\n  /**\r\n   * Event emitted when the enabled search type changes\r\n   */\r\n  @Output() searchTypeChange = new EventEmitter<string>();\r\n\r\n  constructor(private searchSourceService: SearchSourceService) {}\r\n\r\n  ngOnInit() {\r\n    this.searchType$$ = this.searchType$\r\n      .pipe(distinctUntilChanged())\r\n      .subscribe((searchType: string) => this.onSetSearchType(searchType));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.searchType$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * Enable the selected search type\r\n   * @param searchType Search type\r\n   * @internal\r\n   */\r\n  onSearchTypeChange(searchType: string) {\r\n    this.setSearchType(searchType);\r\n  }\r\n\r\n  /**\r\n   * Get a search type's title. The title\r\n   * for all availables search typers needs to be defined in the locale\r\n   * files or an error will be thrown.\r\n   * @param searchType Search type\r\n   * @internal\r\n   */\r\n  getSearchTypeTitle(searchType: string) {\r\n    return `igo.geo.search.${searchType.toLowerCase()}.title`;\r\n  }\r\n\r\n  /**\r\n   * Emit an event and enable the search sources of the given type.\r\n   * @param searchType Search type\r\n   */\r\n  private setSearchType(searchType: string | undefined) {\r\n    this.searchType$.next(searchType);\r\n  }\r\n\r\n  private onSetSearchType(searchType: string) {\r\n    if (searchType === undefined || searchType === null) {\r\n      return;\r\n    }\r\n\r\n    this.searchSourceService.enableSourcesByType(searchType);\r\n    this.searchTypeChange.emit(searchType);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatRadioModule,\r\n  MatTabsModule,\r\n  MatCheckboxModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { SearchSelectorComponent } from './search-selector.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [SearchSelectorComponent],\r\n  declarations: [SearchSelectorComponent]\r\n})\r\nexport class IgoSearchSelectorModule {}\r\n","import { MatCheckboxChange, MatRadioChange } from '@angular/material';\r\n\r\nimport {\r\n  Component,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  HostListener,\r\n  Input\r\n} from '@angular/core';\r\n\r\nimport { SearchSourceService } from '../shared/search-source.service';\r\nimport { SearchSource } from '../shared/sources/source';\r\nimport {\r\n  SearchSourceSettings,\r\n  SettingOptions\r\n} from '../shared/sources/source.interfaces';\r\nimport { sourceCanReverseSearchAsSummary, sourceCanSearch, sourceCanReverseSearch } from '../shared/search.utils';\r\nimport { MediaService } from '@igo2/core';\r\n\r\n/**\r\n * This component allows a user to select a search type yo enable. In it's\r\n * current version, only one search type can be selected at once (radio). If\r\n * this component were to support more than one search source enabled (checkbox),\r\n * the searchbar component would require a small change to it's\r\n * placeholder getter. The search source service already supports having\r\n * more than one search source enabled.\r\n */\r\n@Component({\r\n  selector: 'igo-search-settings',\r\n  templateUrl: './search-settings.component.html',\r\n  styleUrls: ['./search-settings.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchSettingsComponent implements OnInit {\r\n\r\n  public hasPointerReverseSearchSource: boolean = false;\r\n\r\n  public buffer = [];\r\n  public lastKeyTime = Date.now();\r\n\r\n  get isTouchScreen(): boolean {\r\n    return this.mediaService.isTouchScreen();\r\n  }\r\n\r\n  @Input() pointerSummaryEnabled: boolean = false;\r\n\r\n  /**\r\n   * Event emitted when the enabled search source changes\r\n   */\r\n  @Output() searchSourceChange = new EventEmitter<SearchSource>();\r\n\r\n  /**\r\n   * Event emitted when the pointer summary is activated\r\n   */\r\n  @Output() pointerSummaryStatus = new EventEmitter<boolean>();\r\n\r\n  @HostListener('document:keydown', ['$event'])\r\n  handleKeyboardEvent(event: KeyboardEvent) {\r\n\r\n    if (event.keyCode === 113) {\r\n      this.pointerSummaryEnabled = !this.pointerSummaryEnabled;\r\n      this.pointerSummaryStatus.emit(this.pointerSummaryEnabled);\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private searchSourceService: SearchSourceService,\r\n    private mediaService: MediaService\r\n    ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.hasPointerReverseSearchSource = this.hasReverseSearchSourcesForPointerSummary();\r\n  }\r\n\r\n  /**\r\n   * Get all search sources\r\n   * @internal\r\n   */\r\n  getSearchSources(): SearchSource[] {\r\n    const textSearchSources = this.searchSourceService\r\n      .getSources()\r\n      .filter(sourceCanSearch)\r\n      .filter(s => s.available && s.getId() !== 'map' && s.showInSettings);\r\n\r\n    const reverseSearchSources = this.searchSourceService\r\n      .getSources()\r\n      .filter(sourceCanReverseSearch)\r\n      .filter(s => s.available && s.getId() !== 'map' && s.showInSettings);\r\n    return textSearchSources.concat(reverseSearchSources);\r\n  }\r\n\r\n  /**\r\n   * Get all search sources usable for pointer summary\r\n   * @internal\r\n   */\r\n  hasReverseSearchSourcesForPointerSummary(): boolean {\r\n    if (this.searchSourceService.getEnabledSources().filter(sourceCanReverseSearchAsSummary).length) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggered when a setting is checked (checkbox style)\r\n   * @internal\r\n   */\r\n  settingsValueCheckedCheckbox(\r\n    event: MatCheckboxChange,\r\n    source: SearchSource,\r\n    setting: SearchSourceSettings,\r\n    settingValue: SettingOptions\r\n  ) {\r\n    settingValue.enabled = event.checked;\r\n    source.setParamFromSetting(setting);\r\n    this.searchSourceChange.emit(source);\r\n  }\r\n\r\n  /**\r\n   * Defining the action to do for check/uncheck checkboxes\r\n   * return true if all checkbox must be checked\r\n   * return false if all checkbox must be unchecked\r\n   * @internal\r\n   */\r\n  computeCheckAllBehavior(setting: SearchSourceSettings) {\r\n    if (setting.allEnabled === undefined) {\r\n      if (setting.values.find(settingValue => settingValue.enabled)) {\r\n        setting.allEnabled = false;\r\n      } else {\r\n        setting.allEnabled = true;\r\n      }\r\n    } else {\r\n      setting.allEnabled = !setting.allEnabled;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Triggered when the check all / uncheck all type is clicked,\r\n   * @internal\r\n   */\r\n  checkUncheckAll(event, source: SearchSource, setting: SearchSourceSettings) {\r\n    event.stopPropagation();\r\n    this.computeCheckAllBehavior(setting);\r\n    setting.values.forEach(settingValue => {\r\n      settingValue.enabled = setting.allEnabled;\r\n    });\r\n    source.setParamFromSetting(setting);\r\n    this.searchSourceChange.emit(source);\r\n  }\r\n\r\n  /**\r\n   * Triggered when a setting is checked (radiobutton style)\r\n   * @internal\r\n   */\r\n  settingsValueCheckedRadioButton(\r\n    event: MatRadioChange,\r\n    source: SearchSource,\r\n    setting: SearchSourceSettings,\r\n    settingValue: SettingOptions\r\n  ) {\r\n    setting.values.forEach(conf => {\r\n      if (conf.value !== settingValue.value) {\r\n        conf.enabled = !event.source.checked;\r\n      } else {\r\n        conf.enabled = event.source.checked;\r\n      }\r\n    });\r\n    source.setParamFromSetting(setting);\r\n    this.searchSourceChange.emit(source);\r\n  }\r\n\r\n  onCheckSearchSource(event: MatCheckboxChange, source: SearchSource) {\r\n    source.enabled = event.checked;\r\n    this.searchSourceChange.emit(source);\r\n  }\r\n\r\n  getAvailableValues(setting: SearchSourceSettings) {\r\n    return setting.values.filter(s => s.available !== false);\r\n  }\r\n\r\n  getAvailableHashtagsValues(setting: SettingOptions) {\r\n    if (setting.hashtags) {\r\n      const output: string[] = [];\r\n      for (let value of setting.hashtags) {\r\n        value = '#' + value;\r\n        output.push(value);\r\n      }\r\n      return output;\r\n    }\r\n    return;\r\n  }\r\n\r\n  stopPropagation(event) {\r\n    event.stopPropagation();\r\n  }\r\n\r\n  changePointerReverseSearch(event, fromTitleButton?: boolean) {\r\n    if (fromTitleButton) {\r\n      event.stopPropagation();\r\n      this.pointerSummaryEnabled = !this.pointerSummaryEnabled;\r\n    } else {\r\n      this.pointerSummaryEnabled = event.checked;\r\n    }\r\n\r\n    this.pointerSummaryStatus.emit(this.pointerSummaryEnabled);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SearchSettingsComponent } from './search-settings.component';\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatRadioModule,\r\n  MatCheckboxModule,\r\n  MatDividerModule,\r\n  MatSlideToggleModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  declarations: [SearchSettingsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    MatSlideToggleModule,\r\n    IgoLanguageModule\r\n  ],\r\n  exports: [SearchSettingsComponent]\r\n})\r\nexport class IgoSearchSettingsModule { }\r\n","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ChangeDetectionStrategy,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ViewChild,\r\n  ElementRef\r\n} from '@angular/core';\r\nimport { FloatLabelType } from '@angular/material';\r\n\r\nimport { BehaviorSubject, Subscription, EMPTY, timer } from 'rxjs';\r\nimport { debounce, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { LanguageService } from '@igo2/core';\r\nimport { EntityStore } from '@igo2/common';\r\n\r\nimport { SEARCH_TYPES } from '../shared/search.enums';\r\nimport { SearchResult, Research } from '../shared/search.interfaces';\r\nimport { SearchService } from '../shared/search.service';\r\n\r\n/**\r\n * Searchbar that triggers a research in all search sources enabled.\r\n * If the store input is defined, the search results will be loaded\r\n * into that store. An event is always emitted when a research is completed.\r\n */\r\n@Component({\r\n  selector: 'igo-search-bar',\r\n  templateUrl: './search-bar.component.html',\r\n  styleUrls: ['./search-bar.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchBarComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Invalid keys\r\n   */\r\n  static invalidKeys = [\r\n    'Control',\r\n    'Shift',\r\n    'Alt',\r\n    'ArrowDown',\r\n    'ArrowUp',\r\n    'ArrowRight',\r\n    'ArrowLeft'\r\n  ];\r\n\r\n  readonly placeholder$: BehaviorSubject<string> = new BehaviorSubject(\r\n    'igo.geo.search.placeholder'\r\n  );\r\n\r\n  readonly empty$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  /**\r\n   * Subscription to the ssearch bar term\r\n   */\r\n  private term$$: Subscription;\r\n\r\n  /**\r\n   * Search term stream\r\n   */\r\n  private stream$: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n  /**\r\n   * Subscription to the search term stream\r\n   */\r\n  private stream$$: Subscription;\r\n\r\n  /**\r\n   * Subscription to the search type\r\n   */\r\n  private searchType$$: Subscription;\r\n\r\n  /**\r\n   * List of available search types\r\n   */\r\n  @Input() searchTypes: string[] = SEARCH_TYPES;\r\n\r\n  /**\r\n   * Search term\r\n   */\r\n  @Input()\r\n  set searchType(value: string) {\r\n    this.setSearchType(value);\r\n  }\r\n  get searchType(): string {\r\n    return this.searchType$.value;\r\n  }\r\n  readonly searchType$: BehaviorSubject<string> = new BehaviorSubject(\r\n    undefined\r\n  );\r\n\r\n  /**\r\n   * Event emitted when the pointer summary is activated by the searchbar setting\r\n   */\r\n  @Output() pointerSummaryStatus = new EventEmitter<boolean>();\r\n\r\n  /**\r\n   * Search term\r\n   */\r\n  @Input()\r\n  set term(value: string) {\r\n    this.setTerm(value);\r\n  }\r\n  get term(): string {\r\n    return this.term$.value;\r\n  }\r\n  readonly term$: BehaviorSubject<string> = new BehaviorSubject('');\r\n\r\n  /**\r\n   * Whether this component is disabled\r\n   */\r\n  @Input()\r\n  set disabled(value: boolean) {\r\n    this.disabled$.next(value);\r\n  }\r\n  get disabled(): boolean {\r\n    return this.disabled$.value;\r\n  }\r\n  readonly disabled$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  @Input() pointerSummaryEnabled: boolean = false;\r\n  /**\r\n   * Whether a float label should be displayed\r\n   */\r\n  @Input() floatLabel: FloatLabelType = 'never';\r\n\r\n  /**\r\n   * Icons color (search and clear)\r\n   */\r\n  @Input() color = 'primary';\r\n\r\n  /**\r\n   * Debounce time between each keystroke\r\n   */\r\n  @Input() debounce = 200;\r\n\r\n  /**\r\n   * Minimum term length required to trigger a research\r\n   */\r\n  @Input() minLength = 2;\r\n\r\n  /**\r\n   * Search icon\r\n   */\r\n  @Input() searchIcon: string;\r\n\r\n  /**\r\n   * Search Selector\r\n   */\r\n  @Input() searchSelector = false;\r\n\r\n  /**\r\n   * Search Settings\r\n   */\r\n  @Input() searchSettings = false;\r\n\r\n  /**\r\n   * Force coordinates in north america\r\n   */\r\n  @Input() forceNA = false;\r\n\r\n  /**\r\n   * Search results store\r\n   */\r\n  @Input() store: EntityStore<SearchResult>;\r\n\r\n  /**\r\n   * Event emitted when the search term changes\r\n   */\r\n  @Output() searchTermChange = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Event emitted when a research is completed\r\n   */\r\n  @Output() search = new EventEmitter<{\r\n    research: Research;\r\n    results: SearchResult[];\r\n  }>();\r\n\r\n  /**\r\n   * Event emitted when the search type changes\r\n   */\r\n  @Output() searchTypeChange = new EventEmitter<string>();\r\n\r\n  /**\r\n   * Event emitted when the search type changes\r\n   */\r\n  @Output() clearFeature = new EventEmitter();\r\n\r\n  /**\r\n   * Event emitted when the search settings changes\r\n   */\r\n  @Output() searchSettingsChange = new EventEmitter();\r\n\r\n  /**\r\n   * Input element\r\n   * @internal\r\n   */\r\n  @ViewChild('input') input: ElementRef;\r\n\r\n  /**\r\n   * Whether the search bar is empty\r\n   * @internal\r\n   */\r\n  get empty(): boolean {\r\n    return this.term.length === 0;\r\n  }\r\n\r\n  constructor(\r\n    private languageService: LanguageService,\r\n    private searchService: SearchService\r\n  ) {}\r\n\r\n  /**\r\n   * Subscribe to the search term stream and trigger researches\r\n   * @internal\r\n   */\r\n  ngOnInit(): void {\r\n    this.term$$ = this.term$.subscribe((term: string) => {\r\n      this.empty$.next(term === undefined || term.length === 0);\r\n    });\r\n\r\n    this.stream$$ = this.stream$\r\n      .pipe(\r\n        debounce((term: string) => (term === '' ? EMPTY : timer(this.debounce)))\r\n      )\r\n      .subscribe((term: string) => this.onSetTerm(term));\r\n\r\n    this.searchType$$ = this.searchType$\r\n      .pipe(distinctUntilChanged())\r\n      .subscribe((searchType: string) => this.onSetSearchType(searchType));\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to the search term stream\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.term$$.unsubscribe();\r\n    this.stream$$.unsubscribe();\r\n    this.searchType$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * When a user types, validates the key and send it into the\r\n   * stream if it's valid\r\n   * @param event Keyboard event\r\n   * @internal\r\n   */\r\n  onKeyup(event: KeyboardEvent) {\r\n    const key = event.key;\r\n    if (!this.keyIsValid(key)) {\r\n      return;\r\n    }\r\n    const term = (event.target as HTMLInputElement).value;\r\n    this.setTerm(term);\r\n  }\r\n\r\n  /**\r\n   * Clear the stream and the input\r\n   * @internal\r\n   */\r\n  onClearButtonClick() {\r\n    this.clear();\r\n    this.clearFeature.emit();\r\n  }\r\n\r\n  /**\r\n   * Update search type\r\n   * @param searchType Enabled search type\r\n   * @internal\r\n   */\r\n  onSearchTypeChange(searchType: string) {\r\n    this.setSearchType(searchType);\r\n  }\r\n\r\n  /**\r\n   * Update the placeholder with the enabled search type. The placeholder\r\n   * for all availables search typers needs to be defined in the locale\r\n   * files or an error will be thrown.\r\n   * @param searchType Enabled search type\r\n   * @internal\r\n   */\r\n  setSearchType(searchType: string) {\r\n    this.searchType$.next(searchType);\r\n  }\r\n\r\n  onSearchSettingsChange() {\r\n    this.doSearch(this.term);\r\n    this.searchSettingsChange.emit();\r\n  }\r\n\r\n  /**\r\n   * Send the term into the stream only if this component is not disabled\r\n   * @param term Search term\r\n   */\r\n  setTerm(term: string) {\r\n    if (this.disabled) {\r\n      return;\r\n    }\r\n\r\n    term = term || '';\r\n\r\n    if (term !== this.term) {\r\n      this.term$.next(term);\r\n    }\r\n\r\n    const slug = term.replace(/(#[^\\s]*)/g, '').trim();\r\n    if (slug.length >= this.minLength || slug.length === 0) {\r\n      this.stream$.next(term);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear the stream and the input\r\n   */\r\n  private clear() {\r\n    this.term$.next('');\r\n    this.stream$.next('');\r\n    this.input.nativeElement.focus();\r\n  }\r\n\r\n  /**\r\n   * Validate if a given key stroke is a valid input\r\n   */\r\n  private keyIsValid(key: string) {\r\n    return SearchBarComponent.invalidKeys.indexOf(key) === -1;\r\n  }\r\n\r\n  /**\r\n   * When the search term changes, emit an event and trigger a\r\n   * research in every enabled search sources.\r\n   * @param term Search term\r\n   */\r\n  private onSetTerm(term: string | undefined) {\r\n    this.searchTermChange.emit(term);\r\n    this.doSearch(term);\r\n  }\r\n\r\n  private onSetSearchType(searchType: string) {\r\n    if (searchType === undefined || searchType === null) {\r\n      return;\r\n    }\r\n\r\n    this.searchTypeChange.emit(searchType);\r\n\r\n    const placeholder = `igo.geo.search.${searchType.toLowerCase()}.placeholder`;\r\n    this.placeholder$.next(placeholder);\r\n\r\n    this.setTerm(this.term);\r\n  }\r\n\r\n  /**\r\n   * Execute the search\r\n   * @param term Search term\r\n   */\r\n  private doSearch(term: string | undefined) {\r\n    const slug = term ? term.replace(/(#[^\\s]*)/g, '').trim() : '';\r\n    if (slug === '') {\r\n      if (this.store !== undefined) {\r\n        this.store.clear();\r\n      }\r\n      return;\r\n    }\r\n\r\n    if (this.store !== undefined) {\r\n      this.store.softClear();\r\n    }\r\n\r\n    const researches = this.searchService.search(term, {\r\n      forceNA: this.forceNA\r\n    });\r\n    researches.map(research => {\r\n      research.request.subscribe((results: SearchResult[]) => {\r\n        this.onResearchCompleted(research, results);\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * When a research  is completed, emit an event and update\r\n   * the store's items.\r\n   * @param research Research\r\n   * @param results Research results\r\n   */\r\n  private onResearchCompleted(research: Research, results: SearchResult[]) {\r\n    this.search.emit({ research, results });\r\n\r\n    if (this.store !== undefined) {\r\n      const newResults = this.store\r\n        .all()\r\n        .filter(result => result.source !== research.source)\r\n        .concat(results);\r\n      this.store.load(newResults);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Self,\r\n  OnInit,\r\n  Optional,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { RouteService } from '@igo2/core';\r\n\r\nimport { SearchBarComponent } from './search-bar.component';\r\n\r\n@Directive({\r\n  selector: '[igoSearchUrlParam]'\r\n})\r\nexport class SearchUrlParamDirective implements OnInit {\r\n  constructor(\r\n    @Self() private component: SearchBarComponent,\r\n    private ref: ChangeDetectorRef,\r\n    @Optional() private route: RouteService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.route && this.route.options.searchKey) {\r\n      this.route.queryParams.subscribe(params => {\r\n        const searchParams = params[this.route.options.searchKey as string];\r\n        if (searchParams) {\r\n          this.component.setTerm(searchParams);\r\n          this.ref.detectChanges();\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatRadioModule,\r\n  MatFormFieldModule,\r\n  MatInputModule\r\n} from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { IgoSearchSelectorModule } from '../search-selector/search-selector.module';\r\nimport { IgoSearchSettingsModule } from '../search-settings/search-settings.module';\r\nimport { SearchBarComponent } from './search-bar.component';\r\nimport { SearchUrlParamDirective } from './search-url-param.directive';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatRadioModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    IgoLanguageModule,\r\n    IgoSearchSelectorModule,\r\n    IgoSearchSettingsModule\r\n  ],\r\n  exports: [\r\n    SearchBarComponent,\r\n  ],\r\n  declarations: [\r\n    SearchBarComponent,\r\n    SearchUrlParamDirective\r\n  ]\r\n})\r\nexport class IgoSearchBarModule {}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ContentChild,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  OnInit,\r\n  TemplateRef,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { Observable, EMPTY, timer, BehaviorSubject } from 'rxjs';\r\nimport { debounce, map } from 'rxjs/operators';\r\n\r\nimport { EntityStore, EntityStoreWatcher } from '@igo2/common';\r\n\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { TextSearchOptions } from '../shared/sources/source.interfaces';\r\nimport { SearchService } from '../shared/search.service';\r\nimport { SearchResult, Research } from '../shared/search.interfaces';\r\nimport { SearchSource } from '../shared/sources/source';\r\n\r\nexport enum SearchResultMode {\r\n  Grouped = 'grouped',\r\n  Flat = 'flat'\r\n}\r\n\r\n/**\r\n * List of search results with focus and selection capabilities.\r\n * This component is dumb and only emits events.\r\n */\r\n@Component({\r\n  selector: 'igo-search-results',\r\n  templateUrl: './search-results.component.html',\r\n  styleUrls: ['./search-results.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchResultsComponent implements OnInit, OnDestroy {\r\n  /**\r\n   * Reference to the SearchResultMode enum\r\n   * @internal\r\n   */\r\n  public searchResultMode = SearchResultMode;\r\n\r\n  /**\r\n   * Search results store watcher\r\n   */\r\n  private watcher: EntityStoreWatcher<SearchResult>;\r\n\r\n  public pageIterator: {sourceId: string}[] = [];\r\n\r\n  public collapsed: {sourceId: string}[] = [];\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * Search results store\r\n   */\r\n  @Input() store: EntityStore<SearchResult>;\r\n\r\n  /**\r\n   * to show hide results icons\r\n   */\r\n  @Input() showIcons: boolean;\r\n\r\n  /**\r\n   * Search results display mode\r\n   */\r\n  @Input() mode: SearchResultMode = SearchResultMode.Grouped;\r\n\r\n  /**\r\n   * Whether there should be a zoom button\r\n   */\r\n  @Input() withZoomButton = false;\r\n\r\n  /**\r\n   * Search term\r\n   */\r\n  @Input()\r\n  get term(): string {\r\n    return this._term;\r\n  }\r\n  set term(value: string) {\r\n    this._term = value;\r\n    this.pageIterator = [];\r\n  }\r\n  public _term: string;\r\n\r\n  @Input() settingsChange$ = new BehaviorSubject<boolean>(undefined);\r\n\r\n  /**\r\n   * Event emitted when a result is focused\r\n   */\r\n  @Output() resultFocus = new EventEmitter<SearchResult>();\r\n\r\n  /**\r\n   * Event emitted when a result is unfocused\r\n   */\r\n  @Output() resultUnfocus = new EventEmitter<SearchResult>();\r\n\r\n  /**\r\n   * Event emitted when a result is selected\r\n   */\r\n  @Output() resultSelect = new EventEmitter<SearchResult>();\r\n\r\n  /**\r\n   * Event emitted when a research is completed after displaying more results is clicked\r\n   */\r\n  @Output() moreResults = new EventEmitter<{\r\n    research: Research;\r\n    results: SearchResult[];\r\n  }>();\r\n\r\n  /**\r\n   * Events emitted when a result is focus or unfocus by mouse event\r\n   */\r\n  @Output() resultMouseenter = new EventEmitter<SearchResult>();\r\n  @Output() resultMouseleave = new EventEmitter<SearchResult>();\r\n\r\n  @ContentChild('igoSearchItemToolbar') templateSearchToolbar: TemplateRef<any>;\r\n\r\n  get results$(): Observable<{source: SearchSource; results: SearchResult[]}[]> {\r\n    if (this._results$ === undefined) {\r\n      this._results$ = this.liftResults();\r\n    }\r\n    return this._results$;\r\n  }\r\n  private _results$: Observable<\r\n    {source: SearchSource; results: SearchResult[]}[]\r\n  >;\r\n\r\n  constructor(private cdRef: ChangeDetectorRef,\r\n              private searchService: SearchService) {}\r\n\r\n  /**\r\n   * Bind the search results store to the watcher\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.watcher = new EntityStoreWatcher(this.store, this.cdRef);\r\n\r\n    this.settingsChange$.subscribe(() => {\r\n      this.pageIterator = [];\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Unbind the search results store from the watcher\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.watcher.destroy();\r\n  }\r\n\r\n  /**\r\n   * When a result is focused, update it's state in the store and emit\r\n   * an event.\r\n   * @param result Search result\r\n   * @internal\r\n   */\r\n  onResultFocus(result: SearchResult) {\r\n    if (this.store.state.get(result)) {\r\n      if (this.store.state.get(result).focused === true) {\r\n        return;\r\n      }\r\n    }\r\n    this.store.state.update(result, {focused: true}, true);\r\n    this.resultFocus.emit(result);\r\n  }\r\n\r\n  onResultUnfocus(result: SearchResult) {\r\n    this.resultUnfocus.emit(result);\r\n  }\r\n\r\n  /**\r\n   * Compute a group title\r\n   * @param group Search results group\r\n   * @returns Group title\r\n   * @internal\r\n   */\r\n  computeGroupTitle(group: {source: SearchSource; results: SearchResult[]}): string {\r\n    const parts = [group.source.title];\r\n    const count = group.results.length;\r\n    if (count > 1) {\r\n      parts.push(`(${count})`);\r\n    }\r\n    return parts.join(' ');\r\n  }\r\n\r\n  /**\r\n   * When a result is selected, update it's state in the store and emit\r\n   * an event. A selected result is also considered focused\r\n   * @param result Search result\r\n   * @internal\r\n   */\r\n  onResultSelect(result: SearchResult) {\r\n    if (this.store.state.get(result)) {\r\n      if (this.store.state.get(result).selected === true) {\r\n        return;\r\n      }\r\n    }\r\n    this.store.state.update(result, {focused: true, selected: true}, true);\r\n    this.resultSelect.emit(result);\r\n  }\r\n\r\n  /**\r\n   * Return an observable of the search results, grouped by search source\r\n   * @returns Observable of grouped search results\r\n   * @internal\r\n   */\r\n  private liftResults(): Observable<{source: SearchSource; results: SearchResult[]}[]> {\r\n    return this.store.view.all$().pipe(\r\n      debounce((results: SearchResult[]) => {\r\n        return results.length === 0 ? EMPTY : timer(200);\r\n      }),\r\n      map((results: SearchResult[]) => {\r\n        return this.groupResults(results.sort(this.sortByOrder));\r\n      })\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Sort the results by display order.\r\n   * @param r1 First result\r\n   * @param r2 Second result\r\n   */\r\n  private sortByOrder(r1: SearchResult, r2: SearchResult) {\r\n    return r1.source.displayOrder - r2.source.displayOrder;\r\n  }\r\n\r\n  /**\r\n   * Group results by search source\r\n   * @param results Search results from all sources\r\n   * @returns Search results grouped by source\r\n   */\r\n  private groupResults(results: SearchResult[]): {source: SearchSource; results: SearchResult[]}[] {\r\n    const grouped = new Map<SearchSource, SearchResult[]>();\r\n    results.forEach((result: SearchResult) => {\r\n      const source = result.source;\r\n      let sourceResults = grouped.get(source);\r\n      if (sourceResults === undefined) {\r\n        sourceResults = [];\r\n        grouped.set(source, sourceResults);\r\n      }\r\n      sourceResults.push(result);\r\n    });\r\n\r\n    return Array.from(grouped.keys()).map((source: SearchSource) => {\r\n      if (this.pageIterator[source.getId()] === undefined) {\r\n        this.pageIterator[source.getId()] = 1;\r\n      }\r\n      return {source, results: grouped.get(source)};\r\n    });\r\n  }\r\n\r\n  isMoreResults(group: {source: SearchSource; results: SearchResult[]}) {\r\n    return group.results && group.results[group.results.length - 1].meta.nextPage === true;\r\n  }\r\n\r\n  displayMoreResults(group: {source: SearchSource; results: SearchResult[]}) {\r\n    const options: TextSearchOptions = {\r\n      sourceId: group.source.getId(),\r\n      page: ++this.pageIterator[group.source.getId()]\r\n    };\r\n\r\n    const researches = this.searchService.search(this.term, options);\r\n    researches.map(research => {\r\n      research.request.subscribe((results: SearchResult[]) => {\r\n        const newResults = group.results.concat(results);\r\n        if (!results.length) {\r\n          newResults[newResults.length - 1].meta.nextPage = false;\r\n        }\r\n        this.moreResults.emit({research, results: newResults});\r\n      });\r\n    });\r\n    return;\r\n  }\r\n}\r\n","import { Component, Input, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\n\r\nimport {\r\n  getEntityTitle,\r\n  getEntityTitleHtml,\r\n  getEntityIcon\r\n} from '@igo2/common';\r\n\r\nimport { SearchResult } from '../shared/search.interfaces';\r\nimport { FeatureMotion, moveToOlFeatures } from '../../feature';\r\nimport { IgoMap } from '../../map';\r\n\r\n/**\r\n * Search results list item\r\n */\r\n@Component({\r\n  selector: 'igo-search-results-item',\r\n  templateUrl: './search-results-item.component.html',\r\n  styleUrls: ['./search-results-item.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchResultsItemComponent {\r\n  /**\r\n   * Search result item\r\n   */\r\n  @Input() result: SearchResult;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * Search result title\r\n   * @internal\r\n   */\r\n\r\n  /**\r\n   * to show hide results icons\r\n   */\r\n  @Input() showIcons: boolean;\r\n\r\n  /**\r\n   * Whether there should be a zoom button\r\n   */\r\n  @Input() withZoomButton = false;\r\n\r\n  @Output() zoomEvent = new EventEmitter<boolean>();\r\n\r\n  private format = new olFormatGeoJSON();\r\n\r\n  get title(): string {\r\n    return getEntityTitle(this.result);\r\n  }\r\n\r\n  /**\r\n   * Search result HTML title\r\n   * @internal\r\n   */\r\n  get titleHtml(): string {\r\n    return getEntityTitleHtml(this.result);\r\n  }\r\n\r\n  /**\r\n   * Search result tooltip\r\n   * @internal\r\n   */\r\n  get tooltipHtml(): string {\r\n    return this.titleHtml\r\n      .replace(/<small?[^>]+(>|$)/g, '\\n')\r\n      .replace(/<\\/?[^>]+(>|$)/g, '');\r\n  }\r\n\r\n  /**\r\n   * Search result icon\r\n   * @internal\r\n   */\r\n  get icon(): string {\r\n    return getEntityIcon(this.result);\r\n  }\r\n\r\n  constructor() {}\r\n\r\n  onZoomHandler() {\r\n    const olFeature = this.format.readFeature(this.result.data, {\r\n      dataProjection: this.result.data.projection,\r\n      featureProjection: this.map.projection\r\n    });\r\n    moveToOlFeatures(this.map, [olFeature], FeatureMotion.Default);\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  OnInit,\r\n  OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { SearchResult } from '../shared/search.interfaces';\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { LayerOptions } from '../../layer/shared/layers/layer.interface';\r\nimport { LayerService } from '../../layer/shared/layer.service';\r\nimport { LAYER } from '../../layer/shared/layer.enums';\r\nimport { Subscription, BehaviorSubject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'igo-search-add-button',\r\n  templateUrl: './search-results-add-button.component.html',\r\n  styleUrls: ['./search-results-add-button.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SearchResultAddButtonComponent implements OnInit, OnDestroy {\r\n  public tooltip$: BehaviorSubject<string> = new BehaviorSubject(\r\n    'igo.geo.catalog.layer.addToMap'\r\n  );\r\n\r\n  private resolution$$: Subscription;\r\n\r\n  public inRange$: BehaviorSubject<boolean> = new BehaviorSubject(true);\r\n\r\n  public isPreview$: BehaviorSubject<boolean> = new BehaviorSubject(false);\r\n\r\n  private layersSubcriptions = [];\r\n\r\n  private lastTimeoutRequest;\r\n\r\n  @Input() layer: SearchResult;\r\n\r\n  /**\r\n   * Whether the layer is already added to the map\r\n   */\r\n  @Input() added: boolean;\r\n\r\n  /**\r\n   * The map to add the search result layer to\r\n   */\r\n  @Input() map: IgoMap;\r\n\r\n  @Input()\r\n  get color() {\r\n    return this._color;\r\n  }\r\n  set color(value: string) {\r\n    this._color = value;\r\n  }\r\n  private _color = 'primary';\r\n\r\n  constructor(private layerService: LayerService) {}\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  ngOnInit(): void {\r\n    if (this.layer.meta.dataType === 'Layer') {\r\n      this.added =\r\n        this.map.layers.findIndex(\r\n          lay => lay.id === this.layer.data.sourceOptions.id\r\n        ) !== -1;\r\n    }\r\n    this.resolution$$ = this.map.viewController.resolution$.subscribe(value => {\r\n      this.isInResolutionsRange(value);\r\n      this.tooltip$.next(this.computeTooltip());\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.resolution$$.unsubscribe();\r\n  }\r\n\r\n  /**\r\n   * On mouse event, mouseenter /mouseleave\r\n   * @internal\r\n   */\r\n  onMouseEvent(event) {\r\n    this.onToggleClick(event);\r\n  }\r\n\r\n  /**\r\n   * On toggle button click, emit the added change event\r\n   * @internal\r\n   */\r\n  onToggleClick(event) {\r\n    if (typeof this.lastTimeoutRequest !== 'undefined') {\r\n      clearTimeout(this.lastTimeoutRequest);\r\n    }\r\n\r\n    switch (event.type) {\r\n      case 'click':\r\n        if (!this.isPreview$.value) {\r\n          if (this.added) {\r\n            this.remove();\r\n          } else {\r\n            this.add();\r\n          }\r\n        }\r\n        this.isPreview$.next(false);\r\n        break;\r\n      case 'mouseenter':\r\n        if (!this.isPreview$.value && !this.added) {\r\n          this.lastTimeoutRequest = setTimeout(() => {\r\n            this.add();\r\n            this.isPreview$.next(true);\r\n          }, 500);\r\n        }\r\n        break;\r\n      case 'mouseleave':\r\n        if (this.isPreview$.value) {\r\n          this.remove();\r\n          this.isPreview$.next(false);\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  private add() {\r\n    if (!this.added) {\r\n      this.added = true;\r\n      this.addLayerToMap();\r\n    }\r\n  }\r\n\r\n  private remove() {\r\n    if (this.added) {\r\n      this.added = false;\r\n      this.removeLayerFromMap();\r\n      this.layersSubcriptions.map(s => s.unsubscribe());\r\n      this.layersSubcriptions = [];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = true\r\n   */\r\n  private addLayerToMap() {\r\n    if (this.map === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (this.layer.meta.dataType !== LAYER) {\r\n      return undefined;\r\n    }\r\n\r\n    const layerOptions = (this.layer as SearchResult<LayerOptions>).data;\r\n    this.layersSubcriptions.push(\r\n      this.layerService\r\n        .createAsyncLayer(layerOptions)\r\n        .subscribe(layer => this.map.addLayer(layer))\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Emit added change event with added = false\r\n   */\r\n  private removeLayerFromMap() {\r\n    if (this.map === undefined) {\r\n      return;\r\n    }\r\n\r\n    if (this.layer.meta.dataType !== LAYER) {\r\n      return undefined;\r\n    }\r\n\r\n    const oLayer = this.map.getLayerById(this.layer.data.sourceOptions.id);\r\n    this.map.removeLayer(oLayer);\r\n  }\r\n\r\n  isInResolutionsRange(resolution: number) {\r\n    const minResolution = this.layer.data.minResolution;\r\n    const maxResolution = this.layer.data.maxResolution;\r\n    this.inRange$.next(\r\n      resolution >= minResolution && resolution <= maxResolution\r\n    );\r\n  }\r\n\r\n  computeTooltip(): string {\r\n    if (this.added) {\r\n      return this.inRange$.value\r\n        ? 'igo.geo.catalog.layer.removeFromMap'\r\n        : 'igo.geo.catalog.layer.removeFromMapOutRange';\r\n    } else {\r\n      return this.inRange$.value\r\n        ? 'igo.geo.catalog.layer.addToMap'\r\n        : 'igo.geo.catalog.layer.addToMapOutRange';\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport {\r\n  MatTooltipModule,\r\n  MatIconModule,\r\n  MatListModule,\r\n  MatButtonModule,\r\n  MatBadgeModule\r\n} from '@angular/material';\r\n\r\nimport {\r\n  IgoCollapsibleModule,\r\n  IgoListModule,\r\n  IgoMatBadgeIconModule,\r\n  IgoStopPropagationModule\r\n} from '@igo2/common';\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { IgoMetadataModule } from './../../metadata/metadata.module';\r\nimport { SearchResultsComponent } from './search-results.component';\r\nimport { SearchResultsItemComponent } from './search-results-item.component';\r\nimport { SearchResultAddButtonComponent } from './search-results-add-button.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatBadgeModule,\r\n    MatTooltipModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatButtonModule,\r\n    IgoCollapsibleModule,\r\n    IgoListModule,\r\n    IgoStopPropagationModule,\r\n    IgoLanguageModule,\r\n    IgoMatBadgeIconModule,\r\n    IgoMetadataModule,\r\n  ],\r\n  exports: [\r\n    SearchResultsComponent,\r\n    SearchResultAddButtonComponent\r\n  ],\r\n  declarations: [\r\n    SearchResultsComponent,\r\n    SearchResultsItemComponent,\r\n    SearchResultAddButtonComponent\r\n  ]\r\n})\r\nexport class IgoSearchResultsModule {}\r\n","import {\r\n  Directive,\r\n  Input,\r\n  OnDestroy,\r\n  Self,\r\n  OnInit,\r\n  HostListener,\r\n  AfterContentChecked\r\n} from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { MapBrowserPointerEvent as OlMapBrowserPointerEvent } from 'ol/MapBrowserEvent';\r\nimport { ListenerFunction } from 'ol/events';\r\n\r\nimport { IgoMap } from '../../map/shared/map';\r\nimport { MapBrowserComponent } from '../../map/map-browser/map-browser.component';\r\nimport { Feature } from '../../feature/shared/feature.interfaces';\r\nimport { SearchService } from './search.service';\r\n\r\nimport olFeature from 'ol/Feature';\r\nimport { transform } from 'ol/proj';\r\nimport * as olstyle from 'ol/style';\r\nimport * as olgeom from 'ol/geom';\r\nimport OlGeoJSON from 'ol/format/GeoJSON';\r\n\r\nimport { SearchResult, Research } from './search.interfaces';\r\nimport { EntityStore } from '@igo2/common';\r\nimport { FeatureDataSource } from '../../datasource/shared/datasources/feature-datasource';\r\nimport { VectorLayer } from '../../layer/shared/layers/vector-layer';\r\nimport { take } from 'rxjs/operators';\r\nimport { tryBindStoreLayer } from '../../feature/shared/feature.utils';\r\nimport { FeatureStore } from '../../feature/shared/store';\r\nimport { FeatureMotion, FEATURE } from '../../feature/shared/feature.enums';\r\nimport { SearchSourceService } from './search-source.service';\r\nimport { sourceCanReverseSearchAsSummary } from './search.utils';\r\nimport { MediaService } from '@igo2/core';\r\n\r\n/**\r\n * This directive makes the mouse coordinate trigger a reverse search on available search sources.\r\n * The search results are placed into a label, on a cross icon, representing the mouse coordinate.\r\n * By default, no search sources. Config in config file must be defined.\r\n * the layer level.\r\n */\r\n@Directive({\r\n  selector: '[igoSearchPointerSummary]'\r\n})\r\nexport class SearchPointerSummaryDirective implements OnInit, OnDestroy, AfterContentChecked {\r\n\r\n  public store: FeatureStore<Feature>;\r\n  private lonLat: [number, number];\r\n  private pointerSearchStore: EntityStore<SearchResult> = new EntityStore<SearchResult>([]);\r\n  private lastTimeoutRequest;\r\n  private store$$: Subscription;\r\n  private reverseSearch$$: Subscription[] = [];\r\n  private hasPointerReverseSearchSource: boolean =  false;\r\n\r\n  /**\r\n   * Listener to the pointer move event\r\n   */\r\n  private pointerMoveListener: ListenerFunction;\r\n\r\n  private searchPointerSummaryFeatureId: string = 'searchPointerSummaryFeatureId';\r\n  /**\r\n   * The delay where the mouse must be motionless before trigger the reverse search\r\n   */\r\n  @Input() igoSearchPointerSummaryDelay: number = 1000;\r\n\r\n  /**\r\n   * If the user has enabled or not the directive\r\n   */\r\n  @Input() igoSearchPointerSummaryEnabled: boolean = false;\r\n\r\n  @HostListener('mouseout')\r\n  mouseout() {\r\n    clearTimeout(this.lastTimeoutRequest);\r\n    this.clearLayer();\r\n  }\r\n\r\n  /**\r\n   * IGO map\r\n   * @internal\r\n   */\r\n  get map(): IgoMap {\r\n    return this.component.map;\r\n  }\r\n\r\n  get mapProjection(): string {\r\n    return (this.component.map as IgoMap).projection;\r\n  }\r\n\r\n  constructor(\r\n    @Self() private component: MapBrowserComponent,\r\n    private searchService: SearchService,\r\n    private searchSourceService: SearchSourceService,\r\n    private mediaService: MediaService\r\n  ) { }\r\n\r\n  /**\r\n   * Start listening to pointermove and reverse search results.\r\n   * @internal\r\n   */\r\n  ngOnInit() {\r\n    this.listenToMapPointerMove();\r\n    this.subscribeToPointerStore();\r\n\r\n    this.map.status$.pipe(take(1)).subscribe(() => {\r\n      this.store = new FeatureStore<Feature>([], {map: this.map});\r\n      this.initStore();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initialize the pointer position store\r\n   * @internal\r\n   */\r\n  private initStore() {\r\n    const store = this.store;\r\n\r\n    const layer = new VectorLayer({\r\n      title: 'searchPointerSummary',\r\n      zIndex: 900,\r\n      source: new FeatureDataSource(),\r\n      showInLayerList: false,\r\n      exportable: false,\r\n      browsable: false,\r\n      style: pointerPositionSummaryMarker\r\n    });\r\n    tryBindStoreLayer(store, layer);\r\n  }\r\n\r\n  ngAfterContentChecked(): void {\r\n      if (!this.searchSourceService.getEnabledSources().filter(sourceCanReverseSearchAsSummary).length) {\r\n        this.hasPointerReverseSearchSource = false;\r\n      } else {\r\n        this.hasPointerReverseSearchSource = true;\r\n      }\r\n    }\r\n\r\n  /**\r\n   * Stop listening to pointermove and reverse search results.\r\n   * @internal\r\n   */\r\n  ngOnDestroy() {\r\n    this.unlistenToMapPointerMove();\r\n    this.unsubscribeToPointerStore();\r\n    this.unsubscribeReverseSearch();\r\n  }\r\n\r\n  /**\r\n   * Subscribe to pointermove result store\r\n   * @internal\r\n   */\r\n  subscribeToPointerStore() {\r\n    this.store$$ = this.pointerSearchStore.entities$.subscribe(resultsUnderPointerPosition => {\r\n      this.entitiesToPointerOverlay(resultsUnderPointerPosition);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Build an object based on the closest feature by type (base on type and distance properties )\r\n   * @param results SearchResult[]\r\n   * @returns OL style function\r\n   */\r\n  private computeSummaryClosestFeature(results: SearchResult[]): {} {\r\n    const closestResultByType = {};\r\n\r\n    results.map(result => {\r\n      if (result.data.properties.type && result.data.properties.distance >= 0) {\r\n        if (closestResultByType.hasOwnProperty(result.data.properties.type)) {\r\n          const prevDistance = closestResultByType[result.data.properties.type].distance;\r\n          if (result.data.properties.distance < prevDistance) {\r\n            closestResultByType[result.data.properties.type] = { distance: result.data.properties.distance, title: result.meta.title };\r\n          }\r\n        } else {\r\n          closestResultByType[result.data.properties.type] = { distance: result.data.properties.distance, title: result.meta.title };\r\n        }\r\n      }\r\n    });\r\n\r\n    return closestResultByType;\r\n  }\r\n\r\n  /**\r\n   * convert store entities to a pointer position overlay with label summary on.\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private entitiesToPointerOverlay(resultsUnderPointerPosition: SearchResult[]) {\r\n    const closestResultByType = this.computeSummaryClosestFeature(resultsUnderPointerPosition);\r\n    const summarizedClosestType = Object.keys(closestResultByType);\r\n    const processedSummarizedClosestType = [];\r\n    const summary = [];\r\n    resultsUnderPointerPosition.map(result => {\r\n      const typeIndex = summarizedClosestType.indexOf(result.data.properties.type);\r\n      if (typeIndex !== -1) {\r\n        summary.push(closestResultByType[result.data.properties.type].title);\r\n        summarizedClosestType.splice(typeIndex, 1);\r\n        processedSummarizedClosestType.push(result.data.properties.type);\r\n      } else {\r\n        if (processedSummarizedClosestType.indexOf(result.data.properties.type) === -1) {\r\n          summary.push(result.meta.title);\r\n        }\r\n      }\r\n    });\r\n    if (summary.length) {\r\n      this.addPointerOverlay(summary.join('\\n'));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * On map pointermove\r\n   */\r\n  private listenToMapPointerMove() {\r\n    this.pointerMoveListener = this.map.ol.on(\r\n      'pointermove',\r\n      (event: OlMapBrowserPointerEvent) => this.onMapEvent(event)\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Unsubscribe to pointer store.\r\n   * @internal\r\n   */\r\n  unsubscribeToPointerStore() {\r\n    this.store$$.unsubscribe();\r\n  }\r\n  /**\r\n   * Unsubscribe to reverse seatch store.\r\n   * @internal\r\n   */\r\n  unsubscribeReverseSearch() {\r\n    this.reverseSearch$$.map(s => s.unsubscribe());\r\n    this.reverseSearch$$ = [];\r\n  }\r\n\r\n  /**\r\n   * Stop listening for map pointermove\r\n   * @internal\r\n   */\r\n  private unlistenToMapPointerMove() {\r\n    this.map.ol.un(this.pointerMoveListener.type, this.pointerMoveListener.listener);\r\n    this.pointerMoveListener = undefined;\r\n  }\r\n\r\n  /**\r\n   * Trigger reverse search when the mouse is motionless during the defined delay (pointerMoveDelay).\r\n   * @param event OL map browser pointer event\r\n   */\r\n  private onMapEvent(event: OlMapBrowserPointerEvent) {\r\n    if (\r\n      event.dragging || !this.igoSearchPointerSummaryEnabled ||\r\n      !this.hasPointerReverseSearchSource || this.mediaService.isTouchScreen()) {\r\n      this.clearLayer();\r\n      return;\r\n    }\r\n    if (typeof this.lastTimeoutRequest !== 'undefined') { // cancel timeout when the mouse moves\r\n      clearTimeout(this.lastTimeoutRequest);\r\n      this.clearLayer();\r\n      this.unsubscribeReverseSearch();\r\n    }\r\n\r\n    this.lonLat = transform(event.coordinate, this.mapProjection, 'EPSG:4326');\r\n\r\n    this.lastTimeoutRequest = setTimeout(() => {\r\n      this.onSearchCoordinate();\r\n    }, this.igoSearchPointerSummaryDelay);\r\n  }\r\n\r\n  private onSearchCoordinate() {\r\n    this.pointerSearchStore.clear();\r\n    const results = this.searchService.reverseSearch(this.lonLat, { params: { geometry: 'false', icon: 'false' } }, true);\r\n\r\n    for (const i in results) {\r\n      if (results.length > 0) {\r\n        this.reverseSearch$$.push(\r\n          results[i].request.subscribe((_results: SearchResult<Feature>[]) => {\r\n            this.onSearch({ research: results[i], results: _results });\r\n          }));\r\n      }\r\n    }\r\n  }\r\n\r\n  private onSearch(event: { research: Research; results: SearchResult[] }) {\r\n    const results = event.results;\r\n    const newResults = this.pointerSearchStore.all()\r\n      .filter((result: SearchResult) => result.source !== event.research.source)\r\n      .concat(results);\r\n    this.pointerSearchStore.load(newResults);\r\n  }\r\n\r\n  /**\r\n   * Add a feature to the pointer store\r\n   * @param text string\r\n   */\r\n  private addPointerOverlay(text: string) {\r\n    this.clearLayer();\r\n\r\n    const geometry = new olgeom.Point(\r\n      transform(this.lonLat, 'EPSG:4326', this.mapProjection)\r\n    );\r\n    const feature = new olFeature({ geometry });\r\n    const geojsonGeom = new OlGeoJSON().writeGeometryObject(geometry, {\r\n      featureProjection: this.mapProjection,\r\n      dataProjection: this.mapProjection\r\n    });\r\n\r\n    const f: Feature = {\r\n      type: FEATURE,\r\n      geometry: geojsonGeom,\r\n      projection: this.mapProjection,\r\n      properties: {\r\n        id: this.searchPointerSummaryFeatureId,\r\n        pointerSummary: text\r\n      },\r\n      meta: {\r\n        id: this.searchPointerSummaryFeatureId\r\n      },\r\n      ol: feature\r\n    };\r\n    this.store.setLayerFeatures([f], FeatureMotion.None);\r\n  }\r\n\r\n/**\r\n * Clear the pointer store features\r\n */\r\nprivate clearLayer() {\r\n  if (this.store) {\r\n    this.store.clearLayer();\r\n  }\r\n}\r\n\r\n}\r\n\r\n/**\r\n * Create a default style for the pointer position and it's label summary.\r\n * @param feature OlFeature\r\n * @returns OL style function\r\n */\r\nexport function pointerPositionSummaryMarker(feature: olFeature, resolution: number): olstyle.Style {\r\n  return new olstyle.Style({\r\n    image: new olstyle.Icon({\r\n      src: './assets/igo2/geo/icons/cross_black_18px.svg',\r\n      imgSize: [18, 18], // for ie\r\n    }),\r\n\r\n    text: new olstyle.Text({\r\n      text: feature.get('pointerSummary'),\r\n      textAlign: 'left',\r\n      textBaseline: 'bottom',\r\n      font: '12px Calibri,sans-serif',\r\n      fill: new olstyle.Fill({ color: '#000' }),\r\n      backgroundFill: new olstyle.Fill({ color: 'rgba(255, 255, 255, 0.5)' }),\r\n      backgroundStroke: new olstyle.Stroke({ color: 'rgba(200, 200, 200, 0.75)', width: 2 }),\r\n      stroke: new olstyle.Stroke({ color: '#fff', width: 3 }),\r\n      overflow: true,\r\n      offsetX: 10,\r\n      offsetY: -10,\r\n      padding: [2.5, 2.5, 2.5, 2.5]\r\n    })\r\n  });\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { provideSearchSourceService } from './shared/search-source-service.providers';\r\nimport { provideDefaultIChercheSearchResultFormatter } from './shared/sources/icherche.providers';\r\nimport { provideDefaultCoordinatesSearchResultFormatter } from './shared/sources/coordinates.providers';\r\nimport { provideILayerSearchResultFormatter } from './shared/sources/ilayer.providers';\r\n\r\nimport { IgoSearchBarModule } from './search-bar/search-bar.module';\r\nimport { IgoSearchSelectorModule } from './search-selector/search-selector.module';\r\nimport { IgoSearchResultsModule } from './search-results/search-results.module';\r\nimport { IgoSearchSettingsModule } from './search-settings/search-settings.module';\r\nimport { SearchPointerSummaryDirective } from './shared/search-pointer-summary.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoSearchBarModule,\r\n    IgoSearchSelectorModule,\r\n    IgoSearchResultsModule,\r\n    IgoSearchSettingsModule\r\n  ],\r\n  exports: [\r\n    IgoSearchBarModule,\r\n    IgoSearchSelectorModule,\r\n    IgoSearchResultsModule,\r\n    IgoSearchSettingsModule,\r\n    SearchPointerSummaryDirective\r\n  ],\r\n  declarations: [SearchPointerSummaryDirective]\r\n})\r\nexport class IgoSearchModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoSearchModule,\r\n      providers: [\r\n        provideSearchSourceService(),\r\n        provideDefaultIChercheSearchResultFormatter(),\r\n        provideDefaultCoordinatesSearchResultFormatter(),\r\n        provideILayerSearchResultFormatter()\r\n      ]\r\n    };\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { FlexibleState, getEntityTitle } from '@igo2/common';\r\nimport olFormatGeoJSON from 'ol/format/GeoJSON';\r\nimport { Feature } from '../feature/shared/feature.interfaces';\r\nimport { FeatureMotion } from '../feature/shared/feature.enums';\r\nimport { moveToOlFeatures } from '../feature/shared/feature.utils';\r\nimport { IgoMap } from '../map/shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-toast',\r\n  templateUrl: './toast.component.html',\r\n  styleUrls: ['./toast.component.scss']\r\n})\r\nexport class ToastComponent {\r\n  static SWIPE_ACTION = {\r\n    UP: 'swipeup',\r\n    DOWN: 'swipedown'\r\n  };\r\n  private format = new olFormatGeoJSON();\r\n\r\n  @Input()\r\n  get expanded(): boolean {\r\n    return this._expanded;\r\n  }\r\n  set expanded(value: boolean) {\r\n    this.state = value ? 'expanded' : 'collapsed';\r\n    this._expanded = value;\r\n  }\r\n  private _expanded: boolean;\r\n\r\n  @Input()\r\n  get map(): IgoMap {\r\n    return this._map;\r\n  }\r\n  set map(value: IgoMap) {\r\n    this._map = value;\r\n  }\r\n  private _map: IgoMap;\r\n\r\n  @Input()\r\n  get feature(): Feature {\r\n    return this._feature;\r\n  }\r\n  set feature(value: Feature) {\r\n    this._feature = value;\r\n  }\r\n  private _feature: Feature;\r\n\r\n  @Output() opened = new EventEmitter<boolean>();\r\n\r\n  public state: FlexibleState;\r\n\r\n  /**\r\n   * @internal\r\n   */\r\n  get title(): string { return getEntityTitle(this.feature); }\r\n\r\n  constructor() {}\r\n\r\n  toggle() {\r\n    this.expanded = !this.expanded;\r\n    this.opened.emit(this.expanded);\r\n  }\r\n\r\n  zoomToFeatureExtent() {\r\n    if (this.feature.geometry) {\r\n      const olFeature = this.format.readFeature(this.feature, {\r\n        dataProjection: this.feature.projection,\r\n        featureProjection: this.map.projection\r\n      });\r\n      moveToOlFeatures(this.map, [olFeature], FeatureMotion.Zoom);\r\n    }\r\n  }\r\n\r\n  swipe(action: string) {\r\n    if (action === ToastComponent.SWIPE_ACTION.UP) {\r\n      if (!this.expanded) {\r\n        this.toggle();\r\n      }\r\n    } else if (action === ToastComponent.SWIPE_ACTION.DOWN) {\r\n      if (this.expanded) {\r\n        this.toggle();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatIconModule, MatButtonModule } from '@angular/material';\r\n\r\nimport { IgoPanelModule, IgoFlexibleModule } from '@igo2/common';\r\n\r\nimport { IgoFeatureModule } from '../feature/feature.module';\r\nimport { ToastComponent } from './toast.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    IgoPanelModule,\r\n    IgoFlexibleModule,\r\n    IgoFeatureModule\r\n  ],\r\n  exports: [ToastComponent],\r\n  declarations: [ToastComponent]\r\n})\r\nexport class IgoToastModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoToastModule\r\n    };\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  EventEmitter,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { OnUpdateInputs, WidgetComponent } from '@igo2/common';\r\n\r\nimport { Layer } from '../../../layer/shared/layers/layer';\r\nimport { IgoMap } from '../../../map/shared/map';\r\n\r\n@Component({\r\n  selector: 'igo-ogc-filter',\r\n  templateUrl: './ogc-filter.component.html',\r\n  styleUrls: ['./ogc-filter.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class OgcFilterComponent implements OnUpdateInputs, WidgetComponent {\r\n\r\n  @Input() layer: Layer;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  /**\r\n   * Event emitted on complete\r\n   */\r\n  @Output() complete = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted on cancel\r\n   */\r\n  @Output() cancel = new EventEmitter<void>();\r\n\r\n  constructor(private cdRef: ChangeDetectorRef) {}\r\n\r\n  /**\r\n   * Implemented as part of OnUpdateInputs\r\n   */\r\n  onUpdateInputs() {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  /**\r\n   * On close, emit the cancel event\r\n   */\r\n  onClose() {\r\n    this.cancel.emit();\r\n  }\r\n\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nimport { Widget, WidgetService } from '@igo2/common';\r\n\r\nimport { OgcFilterComponent } from './ogc-filter/ogc-filter.component';\r\n\r\nexport const OgcFilterWidget = new InjectionToken<Widget>('OgcFilterWidget');\r\n\r\nexport function ogcFilterWidgetFactory(widgetService: WidgetService): Widget {\r\n  return widgetService.create(OgcFilterComponent);\r\n}\r\n\r\nexport function provideOgcFilterWidget() {\r\n  return {\r\n    provide: OgcFilterWidget,\r\n    useFactory: ogcFilterWidgetFactory,\r\n    deps: [WidgetService]\r\n  };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatButtonModule } from '@angular/material';\r\n\r\nimport { IgoLanguageModule } from '@igo2/core';\r\n\r\nimport { IgoFilterModule } from '../../../filter/filter.module';\r\nimport { OgcFilterComponent } from './ogc-filter.component';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatButtonModule,\r\n    IgoLanguageModule,\r\n    IgoFilterModule\r\n  ],\r\n  exports: [OgcFilterComponent],\r\n  declarations: [OgcFilterComponent],\r\n  entryComponents: [OgcFilterComponent]\r\n})\r\nexport class IgoOgcFilterModule {}\r\n","import {\r\n  Workspace,\r\n  WorkspaceOptions\r\n} from '@igo2/common';\r\n\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nexport interface WfsWorkspaceOptions extends WorkspaceOptions {\r\n  layer: VectorLayer;\r\n  map: IgoMap;\r\n}\r\n\r\nexport class WfsWorkspace extends Workspace {\r\n\r\n  get layer(): VectorLayer { return this.options.layer; }\r\n\r\n  get map(): IgoMap { return this.options.map; }\r\n\r\n  constructor(protected options: WfsWorkspaceOptions) {\r\n    super(options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport {\r\n  ActionStore,\r\n  EntityTableTemplate\r\n} from '@igo2/common';\r\n\r\nimport {\r\n  FeatureStore,\r\n  FeatureStoreLoadingLayerStrategy,\r\n  FeatureStoreSelectionStrategy\r\n} from '../../feature';\r\nimport { VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\nimport { SourceFieldsOptionsParams } from '../../datasource';\r\n\r\nimport { WfsWorkspace } from './wfs-workspace';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WfsWorkspaceService {\r\n\r\n  constructor() {}\r\n\r\n  createWorkspace(layer: VectorLayer, map: IgoMap): WfsWorkspace {\r\n    return new WfsWorkspace({\r\n      id: layer.id,\r\n      title: layer.title,\r\n      layer,\r\n      map,\r\n      entityStore: this.createFeatureStore(layer, map),\r\n      actionStore: new ActionStore([]),\r\n      meta: {\r\n        tableTemplate: this.createTableTemplate(layer)\r\n      }\r\n    });\r\n  }\r\n\r\n  private createFeatureStore(layer: VectorLayer, map: IgoMap): FeatureStore {\r\n    const store = new FeatureStore([], {map});\r\n    store.bindLayer(layer);\r\n\r\n    const loadingStrategy = new FeatureStoreLoadingLayerStrategy({});\r\n    const selectionStrategy = new FeatureStoreSelectionStrategy({\r\n      map,\r\n      hitTolerance: 5\r\n    });\r\n    store.addStrategy(loadingStrategy, true);\r\n    store.addStrategy(selectionStrategy, true);\r\n\r\n    return store;\r\n  }\r\n\r\n  private createTableTemplate(layer: VectorLayer): EntityTableTemplate {\r\n    const fields = layer.dataSource.options.sourceFields || [];\r\n    const columns = fields.map((field: SourceFieldsOptionsParams) => {\r\n      return {\r\n        name: `properties.${field.name}`,\r\n        title: field.alias ? field.alias : field.name\r\n      };\r\n    });\r\n\r\n    return {\r\n      selection: true,\r\n      sort: true,\r\n      columns\r\n    };\r\n  }\r\n\r\n}\r\n","import {\r\n  Workspace,\r\n  WorkspaceOptions\r\n} from '@igo2/common';\r\n\r\nimport { ImageLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nexport interface WmsWorkspaceOptions extends WorkspaceOptions {\r\n  layer: ImageLayer;\r\n  map: IgoMap;\r\n}\r\n\r\nexport class WmsWorkspace extends Workspace {\r\n\r\n  get layer(): ImageLayer { return this.options.layer; }\r\n\r\n  get map(): IgoMap { return this.options.map; }\r\n\r\n  constructor(protected options: WmsWorkspaceOptions) {\r\n    super(options);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\nimport { ActionStore } from '@igo2/common';\r\n\r\nimport {\r\n  FeatureStore,\r\n  FeatureStoreLoadingLayerStrategy,\r\n  FeatureStoreSelectionStrategy\r\n} from '../../feature';\r\nimport { ImageLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\n\r\nimport { WmsWorkspace } from './wms-workspace';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WmsWorkspaceService {\r\n\r\n  constructor() {}\r\n\r\n  createWorkspace(layer: ImageLayer, map: IgoMap): WmsWorkspace {\r\n    return new WmsWorkspace({\r\n      id: layer.id,\r\n      title: layer.title,\r\n      layer,\r\n      map,\r\n      actionStore: new ActionStore([])\r\n    });\r\n  }\r\n\r\n}\r\n","import { Directive, Input, OnInit, OnDestroy } from '@angular/core';\r\n\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { Workspace, WorkspaceStore, WorkspaceSelectorComponent } from '@igo2/common';\r\n\r\nimport { Layer, ImageLayer, VectorLayer } from '../../layer';\r\nimport { IgoMap } from '../../map';\r\nimport { WFSDataSource, WMSDataSource } from '../../datasource';\r\nimport { OgcFilterableDataSourceOptions } from '../../filter';\r\n\r\nimport { WfsWorkspaceService } from '../shared/wfs-workspace.service';\r\nimport { WmsWorkspaceService } from '../shared/wms-workspace.service';\r\n\r\n@Directive({\r\n  selector: '[igoWorkspaceSelector]'\r\n})\r\nexport class WorkspaceSelectorDirective implements OnInit, OnDestroy {\r\n\r\n  private layers$$: Subscription;\r\n\r\n  @Input() map: IgoMap;\r\n\r\n  get workspaceStore(): WorkspaceStore {\r\n    return this.component.store;\r\n  }\r\n\r\n  constructor(\r\n    private component: WorkspaceSelectorComponent,\r\n    private wfsWorkspaceService: WfsWorkspaceService,\r\n    private wmsWorkspaceService: WmsWorkspaceService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.layers$$ = this.map.layers$\r\n      .pipe(debounceTime(50))\r\n      .subscribe((layers: Layer[]) =>\r\n        this.onLayersChange(layers)\r\n      );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.layers$$.unsubscribe();\r\n  }\r\n\r\n  private onLayersChange(layers: Layer[]) {\r\n    const editableLayers = layers.filter((layer: Layer) =>\r\n      this.layerIsEditable(layer)\r\n    );\r\n    const editableLayersIds = editableLayers.map((layer: Layer) => layer.id);\r\n\r\n    const workspacesToAdd = editableLayers\r\n      .map((layer: VectorLayer) => this.getOrCreateWorkspace(layer))\r\n      .filter((workspace: Workspace | undefined) => workspace !== undefined);\r\n\r\n    const workspacesToRemove = this.workspaceStore.all()\r\n      .filter((workspace: Workspace) => {\r\n        return editableLayersIds.indexOf(workspace.id) < 0;\r\n      });\r\n\r\n    if (workspacesToRemove.length > 0) {\r\n      workspacesToRemove.forEach((workspace: Workspace) => {\r\n        workspace.deactivate();\r\n      });\r\n      this.workspaceStore.state.updateMany(workspacesToRemove, {active: false, selected: false});\r\n      this.workspaceStore.deleteMany(workspacesToRemove);\r\n    }\r\n\r\n    if (workspacesToAdd.length > 0) {\r\n      this.workspaceStore.insertMany(workspacesToAdd);\r\n    }\r\n  }\r\n\r\n  private getOrCreateWorkspace(layer: VectorLayer | ImageLayer): Workspace | undefined {\r\n    const workspace = this.workspaceStore.get(layer.id);\r\n    if (workspace !== undefined) {\r\n      return;\r\n    }\r\n    if (layer.dataSource instanceof WFSDataSource) {\r\n      return this.wfsWorkspaceService.createWorkspace(layer as VectorLayer, this.map);\r\n    } else if (layer.dataSource instanceof WMSDataSource) {\r\n      return this.wmsWorkspaceService.createWorkspace(layer as ImageLayer, this.map);\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  private layerIsEditable(layer: Layer): boolean {\r\n    const dataSource = layer.dataSource;\r\n    if (dataSource instanceof WFSDataSource) {\r\n      return true;\r\n    }\r\n\r\n    if (dataSource instanceof WMSDataSource) {\r\n      const dataSourceOptions = (dataSource.options ||\r\n        {}) as OgcFilterableDataSourceOptions;\r\n      return (\r\n        dataSourceOptions.ogcFilters && dataSourceOptions.ogcFilters.enabled\r\n      );\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { WorkspaceSelectorDirective } from './workspace-selector.directive';\r\n\r\n/**\r\n * @ignore\r\n */\r\n@NgModule({\r\n  imports: [\r\n    CommonModule\r\n  ],\r\n  exports: [\r\n   WorkspaceSelectorDirective\r\n  ],\r\n  declarations: [\r\n    WorkspaceSelectorDirective\r\n  ]\r\n})\r\nexport class IgoWorkspaceSelectorModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IgoWidgetModule } from '@igo2/common';\r\n\r\nimport { provideOgcFilterWidget } from './widgets/widgets';\r\n\r\nimport { IgoOgcFilterModule } from './widgets/ogc-filter/ogc-filter.module';\r\nimport { IgoWorkspaceSelectorModule } from './workspace-selector/workspace-selector.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    IgoWidgetModule,\r\n    IgoWorkspaceSelectorModule,\r\n    IgoOgcFilterModule\r\n  ],\r\n  exports: [\r\n    IgoWorkspaceSelectorModule,\r\n    IgoOgcFilterModule\r\n  ],\r\n  declarations: [],\r\n  providers: [\r\n    provideOgcFilterWidget()\r\n  ]\r\n})\r\nexport class IgoGeoWorkspaceModule {}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  exports: [],\r\n  declarations: []\r\n})\r\nexport class IgoWktModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoWktModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { IgoCatalogModule } from './catalog/catalog.module';\r\nimport { IgoDataSourceModule } from './datasource/datasource.module';\r\nimport { IgoDownloadModule } from './download/download.module';\r\nimport { IgoFeatureModule } from './feature/feature.module';\r\nimport { IgoFilterModule } from './filter/filter.module';\r\nimport { IgoGeometryModule } from './geometry/geometry.module';\r\nimport { IgoImportExportModule } from './import-export/import-export.module';\r\nimport { IgoLayerModule } from './layer/layer.module';\r\nimport { IgoMapModule } from './map/map.module';\r\nimport { IgoMeasureModule } from './measure/measure.module';\r\nimport { IgoMetadataModule } from './metadata/metadata.module';\r\nimport { IgoOverlayModule } from './overlay/overlay.module';\r\nimport { IgoPrintModule } from './print/print.module';\r\nimport { IgoQueryModule } from './query/query.module';\r\nimport { IgoDirectionsModule } from './directions/directions.module';\r\nimport { IgoSearchModule } from './search/search.module';\r\nimport { IgoToastModule } from './toast/toast.module';\r\nimport { IgoGeoWorkspaceModule } from './workspace/workspace.module';\r\nimport { IgoWktModule } from './wkt/wkt.module';\r\n\r\n@NgModule({\r\n  imports: [],\r\n  declarations: [],\r\n  exports: [\r\n    IgoCatalogModule,\r\n    IgoDataSourceModule,\r\n    IgoDownloadModule,\r\n    IgoFeatureModule,\r\n    IgoFilterModule,\r\n    IgoGeometryModule,\r\n    IgoImportExportModule,\r\n    IgoLayerModule,\r\n    IgoMapModule,\r\n    IgoMeasureModule,\r\n    IgoMetadataModule,\r\n    IgoOverlayModule,\r\n    IgoPrintModule,\r\n    IgoQueryModule,\r\n    IgoDirectionsModule,\r\n    IgoSearchModule,\r\n    IgoToastModule,\r\n    IgoGeoWorkspaceModule,\r\n    IgoWktModule\r\n  ]\r\n})\r\nexport class IgoGeoModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n      ngModule: IgoGeoModule,\r\n      providers: []\r\n    };\r\n  }\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport olWKT from 'ol/format/WKT';\r\n\r\nimport { FEATURE, Feature, FeatureGeometry } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch } from './source';\r\nimport { SearchSourceOptions, TextSearchOptions } from './source.interfaces';\r\n\r\n/**\r\n * Cadastre search source\r\n */\r\n@Injectable()\r\nexport class CadastreSearchSource extends SearchSource implements TextSearch {\r\n  static id = 'cadastre';\r\n  static type = FEATURE;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return CadastreSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return CadastreSearchSource.type;\r\n  }\r\n\r\n  /*\r\n   * Source : https://wiki.openstreetmap.org/wiki/Key:amenity\r\n   */\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Cadastre (QuÃ©bec)',\r\n      searchUrl: 'https://carto.cptaq.gouv.qc.ca/php/find_lot_v1.php?'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a place by name\r\n   * @param term Place name\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  search(\r\n    term: string | undefined,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    term = term.endsWith(',') ? term.slice(0, -1) : term;\r\n    term = term.startsWith(',') ? term.substr(1) : term;\r\n    term = term.replace(/ /g, '');\r\n\r\n    const params = this.computeSearchRequestParams(term, options || {});\r\n    if (!params.get('numero') || !params.get('numero').match(/^[0-9,]+$/g)) {\r\n      return of([]);\r\n    }\r\n    return this.http\r\n      .get(this.searchUrl, { params, responseType: 'text' })\r\n      .pipe(map((response: string) => this.extractResults(response)));\r\n  }\r\n\r\n  private computeSearchRequestParams(\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          numero: term,\r\n          epsg: '4326'\r\n        },\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(response: string): SearchResult<Feature>[] {\r\n    return response\r\n      .split('<br />')\r\n      .filter((lot: string) => lot.length > 0)\r\n      .map((lot: string) => this.dataToResult(lot));\r\n  }\r\n\r\n  private dataToResult(data: string): SearchResult<Feature> {\r\n    const lot = data.split(';');\r\n    const numero = lot[0];\r\n    const wkt = lot[7];\r\n    const geometry = this.computeGeometry(wkt);\r\n    const properties = { NoLot: numero };\r\n    const id = [this.getId(), 'cadastre', numero].join('.');\r\n\r\n    return {\r\n      source: this,\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: numero,\r\n        icon: 'map-marker'\r\n      },\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: numero\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeGeometry(wkt: string): FeatureGeometry {\r\n    const feature = new olWKT().readFeature(wkt, {\r\n      dataProjection: 'EPSG:4326',\r\n      featureProjection: 'EPSG:4326'\r\n    });\r\n    return {\r\n      type: feature.getGeometry().getType(),\r\n      coordinates: feature.getGeometry().getCoordinates()\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport { CadastreSearchSource } from './cadastre';\r\n\r\n/**\r\n * Cadastre search source factory\r\n * @ignore\r\n */\r\nexport function cadastreSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new CadastreSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${CadastreSearchSource.id}`),\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the Cadastre search source\r\n */\r\nexport function provideCadastreSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: cadastreSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable, of } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { FEATURE, Feature, FeatureGeometry } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch } from './source';\r\nimport { SearchSourceOptions, TextSearchOptions } from './source.interfaces';\r\nimport { NominatimData } from './nominatim.interfaces';\r\n\r\n/**\r\n * Nominatim search source\r\n */\r\n@Injectable()\r\nexport class NominatimSearchSource extends SearchSource implements TextSearch {\r\n  static id = 'nominatim';\r\n  static type = FEATURE;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n  }\r\n\r\n  getId(): string {\r\n    return NominatimSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return NominatimSearchSource.type;\r\n  }\r\n\r\n  /*\r\n   * Source : https://wiki.openstreetmap.org/wiki/Key:amenity\r\n   */\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Nominatim (OSM)',\r\n      searchUrl: 'https://nominatim.openstreetmap.org/search',\r\n      settings: [\r\n        {\r\n          type: 'checkbox',\r\n          title: 'results type',\r\n          name: 'amenity',\r\n          values: [\r\n            {\r\n              title: 'igo.geo.search.nominatim.type.food',\r\n              value:\r\n                'bar,bbq,biergaten,cafe,drinking_water,fast_food,food_court,ice_cream,pub,restaurant',\r\n              enabled: false\r\n            },\r\n            {\r\n              title: 'igo.geo.search.nominatim.type.health',\r\n              value:\r\n                'baby_hatch,clinic,dentist,doctors,hospital,nursing_home,pharmacy,social_facility,veterinary',\r\n              enabled: false\r\n            },\r\n            {\r\n              title: 'igo.geo.search.nominatim.type.entertainment',\r\n              value:\r\n                'arts_centre,brothel,casino,cinema,community_center_fountain,gambling,nightclub,planetarium \\\r\n                          ,public_bookcase,social_centre,stripclub,studio,swingerclub,theatre,internet_cafe',\r\n              enabled: false\r\n            },\r\n            {\r\n              title: 'igo.geo.search.nominatim.type.finance',\r\n              value: 'atm,bank,bureau_de_change',\r\n              enabled: false\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'results limit',\r\n          name: 'limit',\r\n          values: [\r\n            {\r\n              title: '10',\r\n              value: 10,\r\n              enabled: true\r\n            },\r\n            {\r\n              title: '20',\r\n              value: 20,\r\n              enabled: false\r\n            },\r\n            {\r\n              title: '50',\r\n              value: 50,\r\n              enabled: false\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'restrictExtent',\r\n          name: 'countrycodes',\r\n          values: [\r\n            {\r\n              title: 'igo.geo.search.nominatim.country.canada',\r\n              value: 'CA',\r\n              enabled: true\r\n            },\r\n            {\r\n              title: 'igo.geo.search.nominatim.country.all',\r\n              value: null,\r\n              enabled: false\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          type: 'radiobutton',\r\n          title: 'multiple object',\r\n          name: 'dedupe',\r\n          values: [\r\n            {\r\n              title: 'igo.geo.search.searchSources.settings.true',\r\n              value: 0,\r\n              enabled: false\r\n            },\r\n            {\r\n              title: 'igo.geo.search.searchSources.settings.false',\r\n              value: 1,\r\n              enabled: true\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a place by name\r\n   * @param term Place name\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  search(\r\n    term: string | undefined,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeSearchRequestParams(term, options || {});\r\n    if (!params.get('q')) {\r\n      return of([]);\r\n    }\r\n    return this.http\r\n      .get(this.searchUrl, { params })\r\n      .pipe(map((response: NominatimData[]) => this.extractResults(response)));\r\n  }\r\n\r\n  private computeSearchRequestParams(\r\n    term: string,\r\n    options: TextSearchOptions\r\n  ): HttpParams {\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          q: this.computeTerm(term),\r\n          format: 'json'\r\n        },\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(response: NominatimData[]): SearchResult<Feature>[] {\r\n    return response.map((data: NominatimData) => this.dataToResult(data));\r\n  }\r\n\r\n  private dataToResult(data: NominatimData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const geometry = this.computeGeometry(data);\r\n    const extent = this.computeExtent(data);\r\n    const id = [this.getId(), 'place', data.place_id].join('.');\r\n\r\n    return {\r\n      source: this,\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.display_name,\r\n        icon: 'map-marker'\r\n      },\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry,\r\n        extent,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.display_name\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: NominatimData): { [key: string]: any } {\r\n    return {\r\n      display_name: data.display_name,\r\n      place_id: data.place_id,\r\n      osm_type: data.osm_type,\r\n      class: data.class,\r\n      type: data.type\r\n    };\r\n  }\r\n\r\n  private computeGeometry(data: NominatimData): FeatureGeometry {\r\n    return {\r\n      type: 'Point',\r\n      coordinates: [parseFloat(data.lon), parseFloat(data.lat)]\r\n    };\r\n  }\r\n\r\n  private computeExtent(data: NominatimData): [number, number, number, number] {\r\n    return [\r\n      parseFloat(data.boundingbox[2]),\r\n      parseFloat(data.boundingbox[0]),\r\n      parseFloat(data.boundingbox[3]),\r\n      parseFloat(data.boundingbox[1])\r\n    ];\r\n  }\r\n\r\n  private computeTerm(term: string): string {\r\n    return this.computeTermTags(term);\r\n  }\r\n\r\n  /**\r\n   * Add hashtag from query in Nominatim's format (+[])\r\n   * @param term Query with hashtag\r\n   */\r\n  private computeTermTags(term: string): string {\r\n    const hashtags = super.getHashtagsValid(term, 'amenity');\r\n    if (!hashtags) {\r\n      return this.computeTermSettings(term);\r\n    }\r\n\r\n    if (!hashtags.length) {\r\n      return null;\r\n    }\r\n\r\n    term = term.replace(/(#[^\\s]*)/g, '');\r\n    hashtags.forEach(tag => {\r\n      term += '+[' + tag + ']';\r\n    });\r\n\r\n    return term;\r\n  }\r\n\r\n  /**\r\n   * Add hashtag from settings in Nominatim's format (+[])\r\n   * @param term Query\r\n   */\r\n  private computeTermSettings(term: string): string {\r\n    this.options.settings.forEach(settings => {\r\n      if (settings.name === 'amenity') {\r\n        settings.values.forEach(conf => {\r\n          if (conf.enabled && typeof conf.value === 'string') {\r\n            const splitted = conf.value.split(',');\r\n            splitted.forEach(value => {\r\n              term += '+[' + value + ']';\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    return term;\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport { NominatimSearchSource } from './nominatim';\r\n\r\n/**\r\n * Nominatim search source factory\r\n * @ignore\r\n */\r\nexport function nominatimSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new NominatimSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${NominatimSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the Nominatim search source\r\n */\r\nexport function provideNominatimSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: nominatimSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n","import { Injectable, Inject } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { ObjectUtils } from '@igo2/utils';\r\nimport { FEATURE, Feature } from '../../../feature';\r\n\r\nimport { SearchResult } from '../search.interfaces';\r\nimport { SearchSource, TextSearch, ReverseSearch } from './source';\r\nimport {\r\n  SearchSourceOptions,\r\n  TextSearchOptions,\r\n  ReverseSearchOptions\r\n} from './source.interfaces';\r\nimport {\r\n  StoredQueriesData,\r\n  StoredQueriesResponse,\r\n  StoredQueriesReverseData,\r\n  StoredQueriesReverseResponse,\r\n  StoredQueriesSearchSourceOptions,\r\n  StoredQueriesFields,\r\n  StoredQueriesReverseSearchSourceOptions\r\n} from './storedqueries.interfaces';\r\n\r\nimport * as olformat from 'ol/format';\r\n\r\n/**\r\n * StoredQueries search source\r\n */\r\n@Injectable()\r\nexport class StoredQueriesSearchSource extends SearchSource\r\n  implements TextSearch {\r\n  static id = 'storedqueries';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = [\r\n    'boundedBy',\r\n    'id',\r\n    'coord_x',\r\n    'coord_y'\r\n  ];\r\n  public resultTitle: 'title';\r\n  public storedQueriesOptions: StoredQueriesSearchSourceOptions;\r\n  public multipleFieldsQuery: boolean;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n    this.storedQueriesOptions = options as StoredQueriesSearchSourceOptions;\r\n    if (this.storedQueriesOptions && !this.storedQueriesOptions.available) {\r\n      return;\r\n    }\r\n\r\n    const defaultStoredqueryId = 'rtss';\r\n    const defaultFieldSplitter: StoredQueriesFields[] = [\r\n      { name: 'rtss', defaultValue: '-99' },\r\n      { name: 'chainage', defaultValue: '0', splitPrefix: '\\\\+' }\r\n    ];\r\n    const defaultOutputformat = 'text/xml; subtype=gml/3.1.1';\r\n    const defaultSrsname = 'EPSG:4326';\r\n    const defaultResultTitle = 'title';\r\n\r\n    if (!this.storedQueriesOptions) {\r\n      console.log(\r\n        ' No configuration for this search source (storedqueries). You will use the default values'\r\n      );\r\n      this.storedQueriesOptions = {\r\n        storedquery_id: defaultStoredqueryId,\r\n        fields: defaultFieldSplitter,\r\n        outputformat: defaultOutputformat,\r\n        srsname: defaultSrsname,\r\n        resultTitle: defaultResultTitle\r\n      };\r\n      this.resultTitle = defaultResultTitle;\r\n      console.log('Default values', this.storedQueriesOptions);\r\n    }\r\n\r\n    if (!this.storedQueriesOptions.storedquery_id) {\r\n      const err =\r\n        'Stored Queries :You have to set \"storedquery_id\" into StoredQueries options. ex: storedquery_id: \"nameofstoredquerie\"';\r\n      throw new Error(err);\r\n    }\r\n    if (!this.storedQueriesOptions.fields) {\r\n      throw new Error(\r\n        'Stored Queries :You have to set \"fields\" into options. ex: fields: {\"name\": \"rtss\", \"defaultValue\": \"-99\"}'\r\n      );\r\n    }\r\n\r\n    this.storedQueriesOptions.outputformat =\r\n      this.storedQueriesOptions.outputformat || 'text/xml; subtype=gml/3.1.1';\r\n    this.storedQueriesOptions.srsname =\r\n      this.storedQueriesOptions.srsname || 'EPSG:4326';\r\n\r\n    const storedQueryId = this.storedQueriesOptions.storedquery_id.toLowerCase();\r\n    if (\r\n      storedQueryId.includes('getfeaturebyid') &&\r\n      this.storedQueriesOptions.outputformat\r\n        .toLowerCase()\r\n        .includes('getfeaturebyid')\r\n    ) {\r\n      let err =\r\n        'You must set a geojson format for your stored query. This is due to an openlayers issue)';\r\n      err += ' (wfs 1.1.0 & gml 3.1.1 limitation)';\r\n      throw new Error(err);\r\n    }\r\n\r\n    if (!(this.storedQueriesOptions.fields instanceof Array)) {\r\n      this.storedQueriesOptions.fields = [this.storedQueriesOptions.fields];\r\n    }\r\n\r\n    this.multipleFieldsQuery =\r\n      this.storedQueriesOptions.fields.length > 1 ? true : false;\r\n\r\n    this.storedQueriesOptions.fields.forEach((field, index) => {\r\n      if (this.multipleFieldsQuery && !field.splitPrefix && index !== 0) {\r\n        throw new Error(\r\n          'Stored Queries :You must set a field spliter into your field definition (optional for the first one!)'\r\n        );\r\n      }\r\n      if (!field.defaultValue) {\r\n        throw new Error(\r\n          'Stored Queries :You must set a field default value into your field definition'\r\n        );\r\n      }\r\n    });\r\n\r\n    this.storedQueriesOptions.resultTitle =\r\n      this.storedQueriesOptions.resultTitle || this.resultTitle;\r\n  }\r\n\r\n  getId(): string {\r\n    return StoredQueriesSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return StoredQueriesSearchSource.type;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Stored Queries',\r\n      searchUrl: 'https://geoegl.msp.gouv.qc.ca/apis/ws/swtq'\r\n    };\r\n  }\r\n\r\n  // URL CALL EXAMPLES:\r\n  //  GetFeatureById (mandatory storedquery for wfs server) (outputformat must be in geojson)\r\n  //  tslint:disable-next-line:max-line-length\r\n  //  https://geoegl.msp.gouv.qc.ca/apis/ws/swtq?service=wfs&version=2.0.0&request=GetFeature&storedquery_id=urn:ogc:def:query:OGC-WFS::GetFeatureById&srsname=epsg:4326&outputformat=geojson&ID=a_num_route.132\r\n  //  Custom StoredQuery\r\n  //  tslint:disable-next-line:max-line-length\r\n  //  https://geoegl.msp.gouv.qc.ca/apis/ws/swtq?service=wfs&version=1.1.0&request=GetFeature&storedquery_id=rtss&srsname=epsg:4326&outputformat=text/xml;%20subtype=gml/3.1.1&rtss=0013801110000c&chainage=12\r\n\r\n  /**\r\n   * Search a location by name or keyword\r\n   * @param term Location name or keyword\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  search(\r\n    term: string,\r\n    options?: TextSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const storedqueriesParams = this.termSplitter(\r\n      term,\r\n      this.storedQueriesOptions.fields\r\n    );\r\n    const params = this.computeRequestParams(\r\n      options || {},\r\n      storedqueriesParams\r\n    );\r\n\r\n    if (\r\n      new RegExp('.*?gml.*?', 'i').test(this.storedQueriesOptions.outputformat)\r\n    ) {\r\n      return this.http\r\n        .get(this.searchUrl, { params, responseType: 'text' })\r\n        .pipe(\r\n          map(response => {\r\n            return this.extractResults(this.extractWFSData(response));\r\n          })\r\n        );\r\n    } else {\r\n      return this.http.get(this.searchUrl, { params }).pipe(\r\n        map(response => {\r\n          return this.extractResults(this.extractWFSData(response));\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private getFormatFromOptions() {\r\n    let olFormatCls;\r\n\r\n    const outputFormat = this.storedQueriesOptions.outputformat;\r\n    const patternGml3 = new RegExp('.*?gml.*?', 'i');\r\n    const patternGeojson = new RegExp('.*?json.*?', 'i');\r\n\r\n    if (patternGeojson.test(outputFormat)) {\r\n      olFormatCls = olformat.GeoJSON;\r\n    }\r\n    if (patternGml3.test(outputFormat)) {\r\n      olFormatCls = olformat.WFS;\r\n    }\r\n\r\n    return new olFormatCls();\r\n  }\r\n\r\n  private extractWFSData(res) {\r\n    const olFormat = this.getFormatFromOptions();\r\n    const geojson = olformat.GeoJSON;\r\n    const wfsfeatures = olFormat.readFeatures(res);\r\n    const features = JSON.parse(new geojson().writeFeatures(wfsfeatures));\r\n    return features;\r\n  }\r\n\r\n  private termSplitter(term: string, fields: StoredQueriesFields[]): {} {\r\n    const splittedTerm = {};\r\n    let remainingTerm = term;\r\n    let cnt = 0;\r\n\r\n    // Used to build the default values\r\n    fields.forEach(field => {\r\n      splittedTerm[field.name] = field.defaultValue;\r\n      const splitterRegex = new RegExp(field.splitPrefix + '(.+)', 'i');\r\n      if (splitterRegex.test(remainingTerm)) {\r\n        cnt = field.splitPrefix ? (cnt += 1) : cnt;\r\n        remainingTerm = remainingTerm.split(splitterRegex)[1];\r\n      }\r\n    });\r\n    if (cnt === 0) {\r\n      splittedTerm[fields[0].name] = term;\r\n      return splittedTerm;\r\n    }\r\n    remainingTerm = term;\r\n    const localFields = [...fields].reverse();\r\n    localFields.forEach(field => {\r\n      const splitterRegex = new RegExp(field.splitPrefix || '' + '(.+)', 'i');\r\n      if (remainingTerm || remainingTerm !== '') {\r\n        const values = remainingTerm.split(splitterRegex);\r\n        remainingTerm = values[0];\r\n        if (values[1]) {\r\n          splittedTerm[field.name] = values[1].trim();\r\n        }\r\n      }\r\n    });\r\n    return splittedTerm;\r\n  }\r\n\r\n  private computeRequestParams(\r\n    options: TextSearchOptions,\r\n    queryParams\r\n  ): HttpParams {\r\n    const wfsversion = this.storedQueriesOptions.storedquery_id\r\n      .toLowerCase()\r\n      .includes('getfeaturebyid')\r\n      ? '2.0.0'\r\n      : '1.1.0';\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          service: 'wfs',\r\n          version: wfsversion,\r\n          request: 'GetFeature',\r\n          storedquery_id: this.storedQueriesOptions.storedquery_id,\r\n          srsname: this.storedQueriesOptions.srsname,\r\n          outputformat: this.storedQueriesOptions.outputformat\r\n        },\r\n        queryParams,\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(\r\n    response: StoredQueriesResponse\r\n  ): SearchResult<Feature>[] {\r\n    return response.features.map((data: StoredQueriesData) => {\r\n      return this.dataToResult(data);\r\n    });\r\n  }\r\n\r\n  private dataToResult(data: StoredQueriesData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const id = [this.getId(), properties.type, data.id].join('.');\r\n    const title = data.properties[this.storedQueriesOptions.resultTitle]\r\n      ? this.storedQueriesOptions.resultTitle\r\n      : this.resultTitle;\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        // extent: data.bbox,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties[title]\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties.title,\r\n        titleHtml: data.properties[title],\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(data: StoredQueriesData): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      StoredQueriesSearchSource.propertiesBlacklist\r\n    );\r\n    return properties;\r\n  }\r\n}\r\n\r\n/**\r\n * StoredQueriesReverse search source\r\n */\r\n\r\n// EXAMPLE CALLS\r\n// tslint:disable-next-line:max-line-length\r\n// https://ws.mapserver.transports.gouv.qc.ca/swtq?service=wfs&version=1.1.0&request=GetFeature&storedquery_id=lim_adm&srsname=epsg:4326&outputformat=text/xml;%20subtype=gml/3.1.1&long=-71.292469&lat=46.748107\r\n//\r\n\r\n@Injectable()\r\nexport class StoredQueriesReverseSearchSource extends SearchSource\r\n  implements ReverseSearch {\r\n  static id = 'storedqueriesreverse';\r\n  static type = FEATURE;\r\n  static propertiesBlacklist: string[] = [];\r\n  public resultTitle: 'title';\r\n  public storedQueriesOptions: StoredQueriesReverseSearchSourceOptions;\r\n  public multipleFieldsQuery: boolean;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    @Inject('options') options: SearchSourceOptions\r\n  ) {\r\n    super(options);\r\n    this.storedQueriesOptions = options as StoredQueriesReverseSearchSourceOptions;\r\n    if (!this.storedQueriesOptions.storedquery_id) {\r\n      const err =\r\n        'Stored Queries :You have to set \"storedquery_id\" into StoredQueries options. ex: storedquery_id: \"nameofstoredquerie\"';\r\n      throw new Error(err);\r\n    }\r\n    if (!this.storedQueriesOptions.longField) {\r\n      throw new Error(\r\n        'Stored Queries :You have to set \"longField\" to map the longitude coordinate to the query params.'\r\n      );\r\n    }\r\n    if (!this.storedQueriesOptions.latField) {\r\n      throw new Error(\r\n        'Stored Queries :You have to set \"latField\" to map the latitude coordinate to the query params.'\r\n      );\r\n    }\r\n\r\n    this.storedQueriesOptions.outputformat =\r\n      this.storedQueriesOptions.outputformat || 'text/xml; subtype=gml/3.1.1';\r\n    this.storedQueriesOptions.srsname =\r\n      this.storedQueriesOptions.srsname || 'EPSG:4326';\r\n    this.storedQueriesOptions.resultTitle =\r\n      this.storedQueriesOptions.resultTitle || this.resultTitle;\r\n  }\r\n\r\n  getId(): string {\r\n    return StoredQueriesReverseSearchSource.id;\r\n  }\r\n\r\n  getType(): string {\r\n    return StoredQueriesReverseSearchSource.type;\r\n  }\r\n\r\n  protected getDefaultOptions(): SearchSourceOptions {\r\n    return {\r\n      title: 'Stored Queries (reverse)',\r\n      searchUrl: 'https://ws.mapserver.transports.gouv.qc.ca/swtq'\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Search a location by coordinates\r\n   * @param lonLat Location coordinates\r\n   * @param distance Search raidus around lonLat\r\n   * @returns Observable of <SearchResult<Feature>[]\r\n   */\r\n  reverseSearch(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): Observable<SearchResult<Feature>[]> {\r\n    const params = this.computeRequestParams(lonLat, options || {});\r\n\r\n    if (\r\n      new RegExp('.*?gml.*?', 'i').test(this.storedQueriesOptions.outputformat)\r\n    ) {\r\n      return this.http\r\n        .get(this.searchUrl, { params, responseType: 'text' })\r\n        .pipe(\r\n          map(response => {\r\n            return this.extractResults(this.extractWFSData(response));\r\n          })\r\n        );\r\n    } else {\r\n      return this.http.get(this.searchUrl, { params }).pipe(\r\n        map(response => {\r\n          return this.extractResults(this.extractWFSData(response));\r\n        })\r\n      );\r\n    }\r\n  }\r\n\r\n  private getFormatFromOptions() {\r\n    let olFormatCls;\r\n\r\n    const outputFormat = this.storedQueriesOptions.outputformat;\r\n    const patternGml3 = new RegExp('.*?gml.*?', 'i');\r\n    const patternGeojson = new RegExp('.*?json.*?', 'i');\r\n\r\n    if (patternGeojson.test(outputFormat)) {\r\n      olFormatCls = olformat.GeoJSON;\r\n    }\r\n    if (patternGml3.test(outputFormat)) {\r\n      olFormatCls = olformat.WFS;\r\n    }\r\n\r\n    return new olFormatCls();\r\n  }\r\n\r\n  private extractWFSData(res) {\r\n    const olFormat = this.getFormatFromOptions();\r\n    const geojson = olformat.GeoJSON;\r\n    const wfsfeatures = olFormat.readFeatures(res);\r\n    const features = JSON.parse(new geojson().writeFeatures(wfsfeatures));\r\n    return features;\r\n  }\r\n\r\n  private computeRequestParams(\r\n    lonLat: [number, number],\r\n    options?: ReverseSearchOptions\r\n  ): HttpParams {\r\n    const longLatParams = {};\r\n    longLatParams[this.storedQueriesOptions.longField] = lonLat[0];\r\n    longLatParams[this.storedQueriesOptions.latField] = lonLat[1];\r\n\r\n    return new HttpParams({\r\n      fromObject: Object.assign(\r\n        {\r\n          service: 'WFS',\r\n          version: '1.1.0',\r\n          request: 'GetFeature',\r\n          storedquery_id: this.storedQueriesOptions.storedquery_id,\r\n          srsname: this.storedQueriesOptions.srsname,\r\n          outputformat: this.storedQueriesOptions.outputformat\r\n        },\r\n        longLatParams,\r\n        this.params,\r\n        options.params || {}\r\n      )\r\n    });\r\n  }\r\n\r\n  private extractResults(\r\n    response: StoredQueriesReverseResponse\r\n  ): SearchResult<Feature>[] {\r\n    return response.features.map((data: StoredQueriesReverseData) => {\r\n      return this.dataToResult(data);\r\n    });\r\n  }\r\n\r\n  private dataToResult(data: StoredQueriesReverseData): SearchResult<Feature> {\r\n    const properties = this.computeProperties(data);\r\n    const id = [this.getId(), properties.type, data.id].join('.');\r\n    const title = data.properties[this.storedQueriesOptions.resultTitle]\r\n      ? this.storedQueriesOptions.resultTitle\r\n      : this.resultTitle;\r\n\r\n    return {\r\n      source: this,\r\n      data: {\r\n        type: FEATURE,\r\n        projection: 'EPSG:4326',\r\n        geometry: data.geometry,\r\n        properties,\r\n        meta: {\r\n          id,\r\n          title: data.properties[title]\r\n        }\r\n      },\r\n      meta: {\r\n        dataType: FEATURE,\r\n        id,\r\n        title: data.properties[title],\r\n        icon: 'map-marker'\r\n      }\r\n    };\r\n  }\r\n\r\n  private computeProperties(\r\n    data: StoredQueriesReverseData\r\n  ): { [key: string]: any } {\r\n    const properties = ObjectUtils.removeKeys(\r\n      data.properties,\r\n      StoredQueriesReverseSearchSource.propertiesBlacklist\r\n    );\r\n    return Object.assign(properties, { type: data.properties.doc_type });\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { SearchSource } from './source';\r\nimport {\r\n  StoredQueriesSearchSource,\r\n  StoredQueriesReverseSearchSource\r\n} from './storedqueries';\r\n\r\n/**\r\n * StoredQueries search source factory\r\n * @ignore\r\n */\r\nexport function storedqueriesSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new StoredQueriesSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${StoredQueriesSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the StoredQueries search source\r\n */\r\nexport function provideStoredQueriesSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: storedqueriesSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n\r\n/**\r\n * StoredQueriesReverse search source factory\r\n * @ignore\r\n */\r\n\r\nexport function storedqueriesReverseSearchSourceFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new StoredQueriesReverseSearchSource(\r\n    http,\r\n    config.getConfig(`searchSources.${StoredQueriesReverseSearchSource.id}`)\r\n  );\r\n}\r\n\r\n/**\r\n * Function that returns a provider for the StoredQueriesReverse search source\r\n */\r\nexport function provideStoredQueriesReverseSearchSource() {\r\n  return {\r\n    provide: SearchSource,\r\n    useFactory: storedqueriesReverseSearchSourceFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n","export enum DirectionsFormat {\r\n  GeoJSON,\r\n  JSON\r\n}\r\nexport enum SourceDirectionsType {\r\n  Route = 'Route',\r\n  Trip = 'Trip'\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { uuid } from '@igo2/utils';\r\nimport { ConfigService, Message } from '@igo2/core';\r\n\r\nimport { Directions, DirectionsOptions } from '../shared/directions.interface';\r\nimport { DirectionsFormat, SourceDirectionsType } from '../shared/directions.enum';\r\n\r\nimport { DirectionsSource } from './directions-source';\r\nimport { DirectionsSourceOptions } from './directions-source.interface';\r\n\r\n@Injectable()\r\nexport class OsrmDirectionsSource extends DirectionsSource {\r\n  get enabled(): boolean {\r\n    return this.options.enabled !== false;\r\n  }\r\n  set enabled(value: boolean) {\r\n    this.options.enabled = value;\r\n  }\r\n  static _name = 'OSRM QuÃ©bec';\r\n  private directionsUrl =\r\n    'https://geoegl.msp.gouv.qc.ca/services/itineraire/route/v1/driving/';\r\n  private options: DirectionsSourceOptions;\r\n\r\n  constructor(private http: HttpClient, private config: ConfigService) {\r\n    super();\r\n    this.options = this.config.getConfig('directionsSources.osrm') || {};\r\n    this.directionsUrl = this.options.url || this.directionsUrl;\r\n  }\r\n\r\n  getName(): string {\r\n    return OsrmDirectionsSource._name;\r\n  }\r\n\r\n  route(coordinates: [number, number][], directionsOptions: DirectionsOptions = {}): Observable<Directions[]> {\r\n    const directionsParams = this.getRouteParams(directionsOptions);\r\n    return this.http\r\n      .get<JSON[]>(this.directionsUrl + coordinates.join(';'), {\r\n        params: directionsParams\r\n      })\r\n      .pipe(map(res => this.extractRoutesData(res)));\r\n  }\r\n\r\n  private extractRoutesData(response): Directions[] {\r\n    const routeResponse = [];\r\n    response.routes.forEach(route => {\r\n      routeResponse.push(this.formatRoute(route, response.waypoints));\r\n    });\r\n    return routeResponse;\r\n  }\r\n\r\n  private getRouteParams(directionsOptions: DirectionsOptions = {}): HttpParams {\r\n\r\n    directionsOptions.alternatives = directionsOptions.alternatives !== undefined ? directionsOptions.alternatives : true;\r\n    directionsOptions.steps = directionsOptions.steps !== undefined  ? directionsOptions.steps : true;\r\n    directionsOptions.geometries = directionsOptions.geometries !== undefined  ? directionsOptions.geometries : 'geojson';\r\n    directionsOptions.overview = directionsOptions.overview !== undefined  ? directionsOptions.overview : false;\r\n\r\n    return new HttpParams({\r\n      fromObject: {\r\n        alternatives: directionsOptions.alternatives ? 'true' : 'false',\r\n        overview: directionsOptions.overview ? 'simplified' : 'full',\r\n        steps: directionsOptions.steps ? 'true' : 'false',\r\n        geometries: directionsOptions.geometries ? directionsOptions.geometries : 'geojson',\r\n      }\r\n    });\r\n  }\r\n\r\n  private formatRoute(roadNetworkRoute: any, waypoints: any): Directions {\r\n    const stepsUI = [];\r\n    roadNetworkRoute.legs.forEach(leg => {\r\n      leg.steps.forEach(step => {\r\n        stepsUI.push(step);\r\n      });\r\n    });\r\n    return {\r\n      id: uuid(),\r\n      title: roadNetworkRoute.legs[0].summary,\r\n      source: OsrmDirectionsSource._name,\r\n      sourceType: SourceDirectionsType.Route,\r\n      order: 1,\r\n      format: DirectionsFormat.GeoJSON,\r\n      icon: 'directions',\r\n      projection: 'EPSG:4326',\r\n      waypoints,\r\n      distance: roadNetworkRoute.distance,\r\n      duration: roadNetworkRoute.duration,\r\n      geometry: roadNetworkRoute.geometry,\r\n      legs: roadNetworkRoute.legs,\r\n      steps: stepsUI,\r\n      weight: roadNetworkRoute.weight,\r\n      weight_name: roadNetworkRoute.weight_name\r\n    };\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\n\r\nimport { ConfigService } from '@igo2/core';\r\n\r\nimport { DirectionsSource } from './directions-source';\r\nimport { OsrmDirectionsSource } from './osrm-directions-source';\r\n\r\nexport function osrmDirectionsSourcesFactory(\r\n  http: HttpClient,\r\n  config: ConfigService\r\n) {\r\n  return new OsrmDirectionsSource(http, config);\r\n}\r\n\r\nexport function provideOsrmDirectionsSource() {\r\n  return {\r\n    provide: DirectionsSource,\r\n    useFactory: osrmDirectionsSourcesFactory,\r\n    multi: true,\r\n    deps: [HttpClient, ConfigService]\r\n  };\r\n}\r\n"],"names":["Injectable","Component","ChangeDetectionStrategy","Input","NgModule","CommonModule","MatIconModule","MatButtonModule","MatTooltipModule","IgoLanguageModule","Md5","uuid","tslib_1.__extends","olSourceVector","olformat.GeoJSON","olfilter.bbox","olfilter.and","olFormatWKT","olfilter.between","olfilter.contains","olfilter.during","olfilter.equalTo","olfilter.greaterThan","olfilter.greaterThanOrEqualTo","olfilter.intersects","olfilter.isNull","olfilter.lessThan","olfilter.lessThanOrEqualTo","olfilter.like","olfilter.notEqualTo","olfilter.within","olfilter.or","olfilter.not","ObjectUtils","OlFormat.WFS","OlFormat","OlFormat.TopoJSON","OlFormat.GeoJSON","OlFormat.EsriJSON","OlFormat.GPX","OlFormat.WKT","OlFormat.KML","OlLoadingStrategy.bbox","Observable","HttpClient","olproj.get","extentGetWidth","extentGetTopLeft","tslib_1.__values","color","olloadingstrategy.bbox","feature","BehaviorSubject","combineLatest","map","SubjectStatus","Watcher","olLayerVector","easeOut","ColorAsArray","unByKey","ActivityService","olFormatGeoJSON","Directive","Self","olFeature","olstyle.Stroke","olstyle.Fill","olstyle.Style","olstyle.Circle","olstyle.Text","olstyle.Icon","olstyle.RegularShape","OlFeature","NetworkService","of","LanguageService","ViewChildren","ReplaySubject","debounce","EMPTY","timer","ContentChild","debounceTime","RouteService","Optional","EntityStoreStrategy","getEntityId","EntityStore","skip","OlFormatGeoJSON","getEntityTitle","getEntityProperty","getEntityRevision","getEntityIcon","olextent.createEmpty","olproj.transformExtent","olextent.extend","olextent.containsExtent","olextent.getArea","EventEmitter","Output","ViewChild","distinctUntilChanged","olproj.transform","olproj.METERS_PER_UNIT","MAC","olMap","Subject","oleasing.easeOut","olView","olproj4.register","olControlAttribution","olinteraction.defaults","olproj.fromLonLat","MessageService","transform","MediaService","fromEvent","ConfigService","trigger","state","style","transition","animate","Media","ApplicationRef","WMSCapabilities","WMTSCapabilities","catchError","forkJoin","HttpParams","optionsFromCapabilities","tslib_1.__decorate","Cacheable","AuthInterceptor","mergeMap","olformat.WMSGetFeatureInfo","olgeom.MultiLineString","olgeom.MultiPolygon","olgeom.Point","olgeom.LineString","olgeom.Polygon","olformat.WKT","olextent.boundingExtent","olextent.buffer","zip","Inject","EntityStoreWatcher","ChangeDetectorRef","first","MatInputModule","MatFormFieldModule","FormsModule","MatSelectModule","MatListModule","MatSliderModule","MatBadgeModule","IgoListModule","IgoCollapsibleModule","IgoImageModule","IgoMatBadgeIconModule","Pipe","DomSanitizer","IgoKeyValueModule","IgoFormModule","FormFieldComponent","olGetLength","olGetArea","olGetCenter","lineString","MatDialogRef","MAT_DIALOG_DATA","MatDialog","Point","NgControl","ReactiveFormsModule","MatButtonToggleModule","moment.duration","MatSlider","FormControl","NestedTreeControl","MatTreeNestedDataSource","SelectionModel","MAT_DATE_LOCALE","MatAutocompleteModule","MatTabsModule","MatRadioModule","MatMenuModule","MatTableModule","MatTreeModule","MatCheckboxModule","MatSlideToggleModule","MatOptionModule","MatDatepickerModule","MatNativeDateModule","MatDatetimepickerModule","MatNativeDatetimeModule","downloadContent","EntityTableColumnRenderer","strEnum","olStyle.Stroke","olStyle.Fill","olStyle.Style","olStyle.Circle","HttpHeaders","olformat.KML","olformat.GML","olformat.GPX","throwError","Injector","Validators","FormBuilder","HostListener","DragAndDropDirective","InjectionToken","APP_INITIALIZER","IgoSpinnerModule","IgoDrapDropModule","IgoConfirmDialogModule","IgoEntityTableModule","saveAs","take","olinteraction.Select","olcondition.pointerMove","olinteraction.Translate","olcondition.click","olobservable.unByKey","Clipboard","MatDividerModule","AuthService","getEntityTitleHtml","IgoStopPropagationModule","IgoPanelModule","IgoFlexibleModule","WidgetService","Workspace","ActionStore","WorkspaceSelectorComponent","IgoWidgetModule","olformat.WFS","tslib_1.__spread"],"mappings":"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}
